{
  "swagger": "2.0",
  "info": {
    "title": "Azure connectedvmwarevsphere",
    "version": "2023-12-01",
    "description": "Azure connectedvmwarevsphere service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.ConnectedVMwarevSphere/operations": {
      "get": {
        "description": "Returns list of all operations.",
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "description": "Lists the operations available.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of operations.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of operations",
                  "type": "array",
                  "items": {
                    "description": "Operation.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the operation"
                      },
                      "isDataAction": {
                        "description": "Indicates whether the operation is data action or not.",
                        "type": "boolean"
                      },
                      "display": {
                        "type": "object",
                        "description": "Properties of the operation",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "Provider name"
                          },
                          "resource": {
                            "type": "string",
                            "description": "Resource name"
                          },
                          "operation": {
                            "type": "string",
                            "description": "Operation name"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the operation"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools/{resourcePoolName}": {
      "put": {
        "tags": [
          "ResourcePools"
        ],
        "operationId": "ResourcePools_Create",
        "description": "Create Or Update resourcePool.",
        "summary": "Implements resourcePool PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "resourcePoolName",
            "required": true,
            "type": "string",
            "description": "Name of the resourcePool."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "description": "Define the resourcePool.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the resource pool.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the resource pool.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cpuSharesLevel": {
                      "description": "Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cpuReservationMHz": {
                      "format": "int64",
                      "description": "Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed\r\nto be available.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuLimitMHz": {
                      "format": "int64",
                      "description": "Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.\r\nUtilization will not exceed this limit even if there are available resources.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memSharesLevel": {
                      "description": "Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                      "type": "string",
                      "readOnly": true
                    },
                    "memReservationMB": {
                      "format": "int64",
                      "description": "Gets or sets MemReservationMB which specifies the guaranteed available memory in\r\nmegabytes.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memLimitMB": {
                      "format": "int64",
                      "description": "Gets or sets MemLimitMB specifies a memory usage limit in megabytes.\r\nUtilization will not exceed the specified limit even if there are available resources.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memOverallUsageGB": {
                      "format": "int64",
                      "description": "Gets the used physical memory on the pool in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memCapacityGB": {
                      "format": "int64",
                      "description": "Gets the total amount of physical memory on the pool in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuOverallUsageMHz": {
                      "format": "int64",
                      "description": "Gets the used CPU usage across all cores on the pool in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuCapacityMHz": {
                      "format": "int64",
                      "description": "Gets the max CPU usage across all cores on the pool in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "datastoreIds": {
                      "description": "Gets the datastore ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "networkIds": {
                      "description": "Gets the network ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Define the resourcePool.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the resource pool.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the resource pool.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cpuSharesLevel": {
                      "description": "Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cpuReservationMHz": {
                      "format": "int64",
                      "description": "Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed\r\nto be available.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuLimitMHz": {
                      "format": "int64",
                      "description": "Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.\r\nUtilization will not exceed this limit even if there are available resources.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memSharesLevel": {
                      "description": "Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                      "type": "string",
                      "readOnly": true
                    },
                    "memReservationMB": {
                      "format": "int64",
                      "description": "Gets or sets MemReservationMB which specifies the guaranteed available memory in\r\nmegabytes.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memLimitMB": {
                      "format": "int64",
                      "description": "Gets or sets MemLimitMB specifies a memory usage limit in megabytes.\r\nUtilization will not exceed the specified limit even if there are available resources.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memOverallUsageGB": {
                      "format": "int64",
                      "description": "Gets the used physical memory on the pool in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memCapacityGB": {
                      "format": "int64",
                      "description": "Gets the total amount of physical memory on the pool in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuOverallUsageMHz": {
                      "format": "int64",
                      "description": "Gets the used CPU usage across all cores on the pool in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuCapacityMHz": {
                      "format": "int64",
                      "description": "Gets the max CPU usage across all cores on the pool in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "datastoreIds": {
                      "description": "Gets the datastore ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "networkIds": {
                      "description": "Gets the network ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Define the resourcePool.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the resource pool.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the resource pool.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cpuSharesLevel": {
                      "description": "Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cpuReservationMHz": {
                      "format": "int64",
                      "description": "Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed\r\nto be available.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuLimitMHz": {
                      "format": "int64",
                      "description": "Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.\r\nUtilization will not exceed this limit even if there are available resources.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memSharesLevel": {
                      "description": "Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                      "type": "string",
                      "readOnly": true
                    },
                    "memReservationMB": {
                      "format": "int64",
                      "description": "Gets or sets MemReservationMB which specifies the guaranteed available memory in\r\nmegabytes.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memLimitMB": {
                      "format": "int64",
                      "description": "Gets or sets MemLimitMB specifies a memory usage limit in megabytes.\r\nUtilization will not exceed the specified limit even if there are available resources.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memOverallUsageGB": {
                      "format": "int64",
                      "description": "Gets the used physical memory on the pool in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memCapacityGB": {
                      "format": "int64",
                      "description": "Gets the total amount of physical memory on the pool in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuOverallUsageMHz": {
                      "format": "int64",
                      "description": "Gets the used CPU usage across all cores on the pool in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuCapacityMHz": {
                      "format": "int64",
                      "description": "Gets the max CPU usage across all cores on the pool in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "datastoreIds": {
                      "description": "Gets the datastore ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "networkIds": {
                      "description": "Gets the network ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ResourcePools"
        ],
        "operationId": "ResourcePools_Get",
        "summary": "Gets a resourcePool.",
        "description": "Implements resourcePool GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "resourcePoolName",
            "description": "Name of the resourcePool.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Define the resourcePool.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the resource pool.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the resource pool.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cpuSharesLevel": {
                      "description": "Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cpuReservationMHz": {
                      "format": "int64",
                      "description": "Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed\r\nto be available.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuLimitMHz": {
                      "format": "int64",
                      "description": "Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.\r\nUtilization will not exceed this limit even if there are available resources.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memSharesLevel": {
                      "description": "Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                      "type": "string",
                      "readOnly": true
                    },
                    "memReservationMB": {
                      "format": "int64",
                      "description": "Gets or sets MemReservationMB which specifies the guaranteed available memory in\r\nmegabytes.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memLimitMB": {
                      "format": "int64",
                      "description": "Gets or sets MemLimitMB specifies a memory usage limit in megabytes.\r\nUtilization will not exceed the specified limit even if there are available resources.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memOverallUsageGB": {
                      "format": "int64",
                      "description": "Gets the used physical memory on the pool in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memCapacityGB": {
                      "format": "int64",
                      "description": "Gets the total amount of physical memory on the pool in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuOverallUsageMHz": {
                      "format": "int64",
                      "description": "Gets the used CPU usage across all cores on the pool in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuCapacityMHz": {
                      "format": "int64",
                      "description": "Gets the max CPU usage across all cores on the pool in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "datastoreIds": {
                      "description": "Gets the datastore ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "networkIds": {
                      "description": "Gets the network ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ResourcePools"
        ],
        "operationId": "ResourcePools_Update",
        "summary": "Updates a resourcePool.",
        "description": "API to update certain properties of the resourcePool resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "resourcePoolName",
            "required": true,
            "type": "string",
            "description": "Name of the resourcePool."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Resource properties to update.",
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                }
              },
              "description": "Object containing updates for patch operations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Define the resourcePool.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the resource pool.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the resource pool.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cpuSharesLevel": {
                      "description": "Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cpuReservationMHz": {
                      "format": "int64",
                      "description": "Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed\r\nto be available.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuLimitMHz": {
                      "format": "int64",
                      "description": "Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.\r\nUtilization will not exceed this limit even if there are available resources.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memSharesLevel": {
                      "description": "Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                      "type": "string",
                      "readOnly": true
                    },
                    "memReservationMB": {
                      "format": "int64",
                      "description": "Gets or sets MemReservationMB which specifies the guaranteed available memory in\r\nmegabytes.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memLimitMB": {
                      "format": "int64",
                      "description": "Gets or sets MemLimitMB specifies a memory usage limit in megabytes.\r\nUtilization will not exceed the specified limit even if there are available resources.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memOverallUsageGB": {
                      "format": "int64",
                      "description": "Gets the used physical memory on the pool in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memCapacityGB": {
                      "format": "int64",
                      "description": "Gets the total amount of physical memory on the pool in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuOverallUsageMHz": {
                      "format": "int64",
                      "description": "Gets the used CPU usage across all cores on the pool in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuCapacityMHz": {
                      "format": "int64",
                      "description": "Gets the max CPU usage across all cores on the pool in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "datastoreIds": {
                      "description": "Gets the datastore ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "networkIds": {
                      "description": "Gets the network ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ResourcePools"
        ],
        "operationId": "ResourcePools_Delete",
        "summary": "Deletes an resourcePool.",
        "description": "Implements resourcePool DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "resourcePoolName",
            "description": "Name of the resourcePool.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "Whether force delete was specified.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools": {
      "get": {
        "tags": [
          "ResourcePools"
        ],
        "operationId": "ResourcePools_List",
        "summary": "Implements GET resourcePools in a subscription.",
        "description": "List of resourcePools in a subscription.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of ResourcePools.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of ResourcePools.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of ResourcePools",
                  "type": "array",
                  "items": {
                    "description": "Define the resourcePool.",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Gets or sets a unique identifier for this resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "vCenterId": {
                            "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                            "type": "string"
                          },
                          "moRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.",
                            "type": "string"
                          },
                          "inventoryItemId": {
                            "description": "Gets or sets the inventory Item ID for the resource pool.",
                            "type": "string"
                          },
                          "moName": {
                            "description": "Gets or sets the vCenter Managed Object name for the resource pool.",
                            "type": "string",
                            "readOnly": true
                          },
                          "cpuSharesLevel": {
                            "description": "Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                            "type": "string",
                            "readOnly": true
                          },
                          "cpuReservationMHz": {
                            "format": "int64",
                            "description": "Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed\r\nto be available.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "cpuLimitMHz": {
                            "format": "int64",
                            "description": "Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.\r\nUtilization will not exceed this limit even if there are available resources.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "memSharesLevel": {
                            "description": "Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                            "type": "string",
                            "readOnly": true
                          },
                          "memReservationMB": {
                            "format": "int64",
                            "description": "Gets or sets MemReservationMB which specifies the guaranteed available memory in\r\nmegabytes.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "memLimitMB": {
                            "format": "int64",
                            "description": "Gets or sets MemLimitMB specifies a memory usage limit in megabytes.\r\nUtilization will not exceed the specified limit even if there are available resources.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "memOverallUsageGB": {
                            "format": "int64",
                            "description": "Gets the used physical memory on the pool in GB.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "memCapacityGB": {
                            "format": "int64",
                            "description": "Gets the total amount of physical memory on the pool in GB.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "cpuOverallUsageMHz": {
                            "format": "int64",
                            "description": "Gets the used CPU usage across all cores on the pool in MHz.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "cpuCapacityMHz": {
                            "format": "int64",
                            "description": "Gets the max CPU usage across all cores on the pool in MHz.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "customResourceName": {
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "type": "string",
                            "readOnly": true
                          },
                          "datastoreIds": {
                            "description": "Gets the datastore ARM ids.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "networkIds": {
                            "description": "Gets the network ARM ids.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets the location.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system data.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "description": "Gets or sets the Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Gets or sets the name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "id": {
                        "description": "Gets or sets the Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Gets or sets the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools": {
      "get": {
        "tags": [
          "ResourcePools"
        ],
        "operationId": "ResourcePools_ListByResourceGroup",
        "summary": "Implements GET resourcePools in a resource group.",
        "description": "List of resourcePools in a resource group.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of ResourcePools.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of ResourcePools.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of ResourcePools",
                  "type": "array",
                  "items": {
                    "description": "Define the resourcePool.",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Gets or sets a unique identifier for this resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "vCenterId": {
                            "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                            "type": "string"
                          },
                          "moRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.",
                            "type": "string"
                          },
                          "inventoryItemId": {
                            "description": "Gets or sets the inventory Item ID for the resource pool.",
                            "type": "string"
                          },
                          "moName": {
                            "description": "Gets or sets the vCenter Managed Object name for the resource pool.",
                            "type": "string",
                            "readOnly": true
                          },
                          "cpuSharesLevel": {
                            "description": "Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                            "type": "string",
                            "readOnly": true
                          },
                          "cpuReservationMHz": {
                            "format": "int64",
                            "description": "Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed\r\nto be available.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "cpuLimitMHz": {
                            "format": "int64",
                            "description": "Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.\r\nUtilization will not exceed this limit even if there are available resources.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "memSharesLevel": {
                            "description": "Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                            "type": "string",
                            "readOnly": true
                          },
                          "memReservationMB": {
                            "format": "int64",
                            "description": "Gets or sets MemReservationMB which specifies the guaranteed available memory in\r\nmegabytes.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "memLimitMB": {
                            "format": "int64",
                            "description": "Gets or sets MemLimitMB specifies a memory usage limit in megabytes.\r\nUtilization will not exceed the specified limit even if there are available resources.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "memOverallUsageGB": {
                            "format": "int64",
                            "description": "Gets the used physical memory on the pool in GB.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "memCapacityGB": {
                            "format": "int64",
                            "description": "Gets the total amount of physical memory on the pool in GB.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "cpuOverallUsageMHz": {
                            "format": "int64",
                            "description": "Gets the used CPU usage across all cores on the pool in MHz.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "cpuCapacityMHz": {
                            "format": "int64",
                            "description": "Gets the max CPU usage across all cores on the pool in MHz.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "customResourceName": {
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "type": "string",
                            "readOnly": true
                          },
                          "datastoreIds": {
                            "description": "Gets the datastore ARM ids.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "networkIds": {
                            "description": "Gets the network ARM ids.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets the location.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system data.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "description": "Gets or sets the Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Gets or sets the name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "id": {
                        "description": "Gets or sets the Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Gets or sets the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/clusters/{clusterName}": {
      "put": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Create",
        "description": "Create Or Update cluster.",
        "summary": "Implements cluster PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string",
            "description": "Name of the cluster."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "description": "Define the cluster.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the cluster.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the cluster.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "usedMemoryGB": {
                      "format": "int64",
                      "description": "Gets the used physical memory on the cluster in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "totalMemoryGB": {
                      "format": "int64",
                      "description": "Gets the total amount of physical memory on the cluster in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "usedCpuMHz": {
                      "format": "int64",
                      "description": "Gets the used CPU usage across all cores on the cluster in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "totalCpuMHz": {
                      "format": "int64",
                      "description": "Gets the max CPU usage across all cores on the cluster in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "datastoreIds": {
                      "description": "Gets the datastore ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "networkIds": {
                      "description": "Gets the network ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Define the cluster.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the cluster.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the cluster.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "usedMemoryGB": {
                      "format": "int64",
                      "description": "Gets the used physical memory on the cluster in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "totalMemoryGB": {
                      "format": "int64",
                      "description": "Gets the total amount of physical memory on the cluster in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "usedCpuMHz": {
                      "format": "int64",
                      "description": "Gets the used CPU usage across all cores on the cluster in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "totalCpuMHz": {
                      "format": "int64",
                      "description": "Gets the max CPU usage across all cores on the cluster in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "datastoreIds": {
                      "description": "Gets the datastore ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "networkIds": {
                      "description": "Gets the network ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Define the cluster.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the cluster.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the cluster.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "usedMemoryGB": {
                      "format": "int64",
                      "description": "Gets the used physical memory on the cluster in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "totalMemoryGB": {
                      "format": "int64",
                      "description": "Gets the total amount of physical memory on the cluster in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "usedCpuMHz": {
                      "format": "int64",
                      "description": "Gets the used CPU usage across all cores on the cluster in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "totalCpuMHz": {
                      "format": "int64",
                      "description": "Gets the max CPU usage across all cores on the cluster in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "datastoreIds": {
                      "description": "Gets the datastore ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "networkIds": {
                      "description": "Gets the network ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Get",
        "summary": "Gets a cluster.",
        "description": "Implements cluster GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "clusterName",
            "description": "Name of the cluster.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Define the cluster.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the cluster.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the cluster.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "usedMemoryGB": {
                      "format": "int64",
                      "description": "Gets the used physical memory on the cluster in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "totalMemoryGB": {
                      "format": "int64",
                      "description": "Gets the total amount of physical memory on the cluster in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "usedCpuMHz": {
                      "format": "int64",
                      "description": "Gets the used CPU usage across all cores on the cluster in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "totalCpuMHz": {
                      "format": "int64",
                      "description": "Gets the max CPU usage across all cores on the cluster in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "datastoreIds": {
                      "description": "Gets the datastore ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "networkIds": {
                      "description": "Gets the network ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Update",
        "summary": "Updates a cluster.",
        "description": "API to update certain properties of the cluster resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "clusterName",
            "required": true,
            "type": "string",
            "description": "Name of the cluster."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Resource properties to update.",
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                }
              },
              "description": "Object containing updates for patch operations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Define the cluster.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the cluster.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the cluster.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "usedMemoryGB": {
                      "format": "int64",
                      "description": "Gets the used physical memory on the cluster in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "totalMemoryGB": {
                      "format": "int64",
                      "description": "Gets the total amount of physical memory on the cluster in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "usedCpuMHz": {
                      "format": "int64",
                      "description": "Gets the used CPU usage across all cores on the cluster in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "totalCpuMHz": {
                      "format": "int64",
                      "description": "Gets the max CPU usage across all cores on the cluster in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "datastoreIds": {
                      "description": "Gets the datastore ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "networkIds": {
                      "description": "Gets the network ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Delete",
        "summary": "Deletes an cluster.",
        "description": "Implements cluster DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "clusterName",
            "description": "Name of the cluster.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "Whether force delete was specified.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/clusters": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_List",
        "summary": "Implements GET clusters in a subscription.",
        "description": "List of clusters in a subscription.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of Clusters.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of Clusters.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of Clusters",
                  "type": "array",
                  "items": {
                    "description": "Define the cluster.",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Gets or sets a unique identifier for this resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "vCenterId": {
                            "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
                            "type": "string"
                          },
                          "moRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
                            "type": "string"
                          },
                          "inventoryItemId": {
                            "description": "Gets or sets the inventory Item ID for the cluster.",
                            "type": "string"
                          },
                          "moName": {
                            "description": "Gets or sets the vCenter Managed Object name for the cluster.",
                            "type": "string",
                            "readOnly": true
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "customResourceName": {
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "type": "string",
                            "readOnly": true
                          },
                          "usedMemoryGB": {
                            "format": "int64",
                            "description": "Gets the used physical memory on the cluster in GB.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "totalMemoryGB": {
                            "format": "int64",
                            "description": "Gets the total amount of physical memory on the cluster in GB.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "usedCpuMHz": {
                            "format": "int64",
                            "description": "Gets the used CPU usage across all cores on the cluster in MHz.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "totalCpuMHz": {
                            "format": "int64",
                            "description": "Gets the max CPU usage across all cores on the cluster in MHz.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "datastoreIds": {
                            "description": "Gets the datastore ARM ids.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "networkIds": {
                            "description": "Gets the network ARM ids.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets the location.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system data.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "description": "Gets or sets the Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Gets or sets the name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "id": {
                        "description": "Gets or sets the Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Gets or sets the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/clusters": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_ListByResourceGroup",
        "summary": "Implements GET clusters in a resource group.",
        "description": "List of clusters in a resource group.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of Clusters.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of Clusters.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of Clusters",
                  "type": "array",
                  "items": {
                    "description": "Define the cluster.",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Gets or sets a unique identifier for this resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "vCenterId": {
                            "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
                            "type": "string"
                          },
                          "moRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
                            "type": "string"
                          },
                          "inventoryItemId": {
                            "description": "Gets or sets the inventory Item ID for the cluster.",
                            "type": "string"
                          },
                          "moName": {
                            "description": "Gets or sets the vCenter Managed Object name for the cluster.",
                            "type": "string",
                            "readOnly": true
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "customResourceName": {
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "type": "string",
                            "readOnly": true
                          },
                          "usedMemoryGB": {
                            "format": "int64",
                            "description": "Gets the used physical memory on the cluster in GB.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "totalMemoryGB": {
                            "format": "int64",
                            "description": "Gets the total amount of physical memory on the cluster in GB.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "usedCpuMHz": {
                            "format": "int64",
                            "description": "Gets the used CPU usage across all cores on the cluster in MHz.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "totalCpuMHz": {
                            "format": "int64",
                            "description": "Gets the max CPU usage across all cores on the cluster in MHz.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "datastoreIds": {
                            "description": "Gets the datastore ARM ids.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "networkIds": {
                            "description": "Gets the network ARM ids.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets the location.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system data.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "description": "Gets or sets the Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Gets or sets the name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "id": {
                        "description": "Gets or sets the Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Gets or sets the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/hosts/{hostName}": {
      "put": {
        "tags": [
          "Hosts"
        ],
        "operationId": "Hosts_Create",
        "description": "Create Or Update host.",
        "summary": "Implements host PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "hostName",
            "required": true,
            "type": "string",
            "description": "Name of the host."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "description": "Define the host.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this host resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the host.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the host.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "overallMemoryUsageGB": {
                      "format": "int64",
                      "description": "Gets the used physical memory on the host in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memorySizeGB": {
                      "format": "int64",
                      "description": "Gets the total amount of physical memory on the host in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "overallCpuUsageMHz": {
                      "format": "int64",
                      "description": "Gets the used CPU usage across all cores in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuMhz": {
                      "format": "int64",
                      "description": "Gets the max CPU usage across all cores in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "datastoreIds": {
                      "description": "Gets the datastore ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "networkIds": {
                      "description": "Gets the network ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Define the host.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this host resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the host.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the host.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "overallMemoryUsageGB": {
                      "format": "int64",
                      "description": "Gets the used physical memory on the host in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memorySizeGB": {
                      "format": "int64",
                      "description": "Gets the total amount of physical memory on the host in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "overallCpuUsageMHz": {
                      "format": "int64",
                      "description": "Gets the used CPU usage across all cores in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuMhz": {
                      "format": "int64",
                      "description": "Gets the max CPU usage across all cores in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "datastoreIds": {
                      "description": "Gets the datastore ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "networkIds": {
                      "description": "Gets the network ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Define the host.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this host resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the host.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the host.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "overallMemoryUsageGB": {
                      "format": "int64",
                      "description": "Gets the used physical memory on the host in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memorySizeGB": {
                      "format": "int64",
                      "description": "Gets the total amount of physical memory on the host in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "overallCpuUsageMHz": {
                      "format": "int64",
                      "description": "Gets the used CPU usage across all cores in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuMhz": {
                      "format": "int64",
                      "description": "Gets the max CPU usage across all cores in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "datastoreIds": {
                      "description": "Gets the datastore ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "networkIds": {
                      "description": "Gets the network ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Hosts"
        ],
        "operationId": "Hosts_Get",
        "summary": "Gets a host.",
        "description": "Implements host GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "hostName",
            "description": "Name of the host.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Define the host.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this host resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the host.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the host.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "overallMemoryUsageGB": {
                      "format": "int64",
                      "description": "Gets the used physical memory on the host in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memorySizeGB": {
                      "format": "int64",
                      "description": "Gets the total amount of physical memory on the host in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "overallCpuUsageMHz": {
                      "format": "int64",
                      "description": "Gets the used CPU usage across all cores in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuMhz": {
                      "format": "int64",
                      "description": "Gets the max CPU usage across all cores in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "datastoreIds": {
                      "description": "Gets the datastore ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "networkIds": {
                      "description": "Gets the network ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Hosts"
        ],
        "operationId": "Hosts_Update",
        "summary": "Updates a host.",
        "description": "API to update certain properties of the host resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "hostName",
            "required": true,
            "type": "string",
            "description": "Name of the host."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Resource properties to update.",
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                }
              },
              "description": "Object containing updates for patch operations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Define the host.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this host resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the host.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the host.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "overallMemoryUsageGB": {
                      "format": "int64",
                      "description": "Gets the used physical memory on the host in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "memorySizeGB": {
                      "format": "int64",
                      "description": "Gets the total amount of physical memory on the host in GB.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "overallCpuUsageMHz": {
                      "format": "int64",
                      "description": "Gets the used CPU usage across all cores in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "cpuMhz": {
                      "format": "int64",
                      "description": "Gets the max CPU usage across all cores in MHz.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "datastoreIds": {
                      "description": "Gets the datastore ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "networkIds": {
                      "description": "Gets the network ARM ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Hosts"
        ],
        "operationId": "Hosts_Delete",
        "summary": "Deletes an host.",
        "description": "Implements host DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "hostName",
            "description": "Name of the host.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "Whether force delete was specified.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/hosts": {
      "get": {
        "tags": [
          "Hosts"
        ],
        "operationId": "Hosts_List",
        "summary": "Implements GET hosts in a subscription.",
        "description": "List of hosts in a subscription.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of Hosts.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of Hosts.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of Hosts",
                  "type": "array",
                  "items": {
                    "description": "Define the host.",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Gets or sets a unique identifier for this resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "vCenterId": {
                            "description": "Gets or sets the ARM Id of the vCenter resource in which this host resides.",
                            "type": "string"
                          },
                          "moRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host.",
                            "type": "string"
                          },
                          "inventoryItemId": {
                            "description": "Gets or sets the inventory Item ID for the host.",
                            "type": "string"
                          },
                          "moName": {
                            "description": "Gets or sets the vCenter Managed Object name for the host.",
                            "type": "string",
                            "readOnly": true
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "customResourceName": {
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "type": "string",
                            "readOnly": true
                          },
                          "overallMemoryUsageGB": {
                            "format": "int64",
                            "description": "Gets the used physical memory on the host in GB.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "memorySizeGB": {
                            "format": "int64",
                            "description": "Gets the total amount of physical memory on the host in GB.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "overallCpuUsageMHz": {
                            "format": "int64",
                            "description": "Gets the used CPU usage across all cores in MHz.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "cpuMhz": {
                            "format": "int64",
                            "description": "Gets the max CPU usage across all cores in MHz.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "datastoreIds": {
                            "description": "Gets the datastore ARM ids.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "networkIds": {
                            "description": "Gets the network ARM ids.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets the location.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system data.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "description": "Gets or sets the Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Gets or sets the name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "id": {
                        "description": "Gets or sets the Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Gets or sets the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/hosts": {
      "get": {
        "tags": [
          "Hosts"
        ],
        "operationId": "Hosts_ListByResourceGroup",
        "summary": "Implements GET hosts in a resource group.",
        "description": "List of hosts in a resource group.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of Hosts.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of Hosts.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of Hosts",
                  "type": "array",
                  "items": {
                    "description": "Define the host.",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Gets or sets a unique identifier for this resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "vCenterId": {
                            "description": "Gets or sets the ARM Id of the vCenter resource in which this host resides.",
                            "type": "string"
                          },
                          "moRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host.",
                            "type": "string"
                          },
                          "inventoryItemId": {
                            "description": "Gets or sets the inventory Item ID for the host.",
                            "type": "string"
                          },
                          "moName": {
                            "description": "Gets or sets the vCenter Managed Object name for the host.",
                            "type": "string",
                            "readOnly": true
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "customResourceName": {
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "type": "string",
                            "readOnly": true
                          },
                          "overallMemoryUsageGB": {
                            "format": "int64",
                            "description": "Gets the used physical memory on the host in GB.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "memorySizeGB": {
                            "format": "int64",
                            "description": "Gets the total amount of physical memory on the host in GB.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "overallCpuUsageMHz": {
                            "format": "int64",
                            "description": "Gets the used CPU usage across all cores in MHz.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "cpuMhz": {
                            "format": "int64",
                            "description": "Gets the max CPU usage across all cores in MHz.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "datastoreIds": {
                            "description": "Gets the datastore ARM ids.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "networkIds": {
                            "description": "Gets the network ARM ids.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets the location.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system data.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "description": "Gets or sets the Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Gets or sets the name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "id": {
                        "description": "Gets or sets the Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Gets or sets the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/datastores/{datastoreName}": {
      "put": {
        "tags": [
          "Datastores"
        ],
        "operationId": "Datastores_Create",
        "description": "Create Or Update datastore.",
        "summary": "Implements datastore PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "datastoreName",
            "required": true,
            "type": "string",
            "description": "Name of the datastore."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "description": "Define the datastore.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this datastore resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the datastore.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the datastore.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "capacityGB": {
                      "description": "Gets or sets Maximum capacity of this datastore in GBs.",
                      "format": "int64",
                      "type": "integer",
                      "readOnly": true
                    },
                    "freeSpaceGB": {
                      "description": "Gets or sets Available space of this datastore in GBs.",
                      "format": "int64",
                      "type": "integer",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Define the datastore.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this datastore resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the datastore.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the datastore.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "capacityGB": {
                      "description": "Gets or sets Maximum capacity of this datastore in GBs.",
                      "format": "int64",
                      "type": "integer",
                      "readOnly": true
                    },
                    "freeSpaceGB": {
                      "description": "Gets or sets Available space of this datastore in GBs.",
                      "format": "int64",
                      "type": "integer",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Define the datastore.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this datastore resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the datastore.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the datastore.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "capacityGB": {
                      "description": "Gets or sets Maximum capacity of this datastore in GBs.",
                      "format": "int64",
                      "type": "integer",
                      "readOnly": true
                    },
                    "freeSpaceGB": {
                      "description": "Gets or sets Available space of this datastore in GBs.",
                      "format": "int64",
                      "type": "integer",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Datastores"
        ],
        "operationId": "Datastores_Get",
        "summary": "Gets a datastore.",
        "description": "Implements datastore GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "datastoreName",
            "description": "Name of the datastore.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Define the datastore.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this datastore resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the datastore.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the datastore.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "capacityGB": {
                      "description": "Gets or sets Maximum capacity of this datastore in GBs.",
                      "format": "int64",
                      "type": "integer",
                      "readOnly": true
                    },
                    "freeSpaceGB": {
                      "description": "Gets or sets Available space of this datastore in GBs.",
                      "format": "int64",
                      "type": "integer",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Datastores"
        ],
        "operationId": "Datastores_Update",
        "summary": "Updates a datastore.",
        "description": "API to update certain properties of the datastore resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "datastoreName",
            "required": true,
            "type": "string",
            "description": "Name of the datastore."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Resource properties to update.",
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                }
              },
              "description": "Object containing updates for patch operations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Define the datastore.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this datastore resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the datastore.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the datastore.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "capacityGB": {
                      "description": "Gets or sets Maximum capacity of this datastore in GBs.",
                      "format": "int64",
                      "type": "integer",
                      "readOnly": true
                    },
                    "freeSpaceGB": {
                      "description": "Gets or sets Available space of this datastore in GBs.",
                      "format": "int64",
                      "type": "integer",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the resource.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Datastores"
        ],
        "operationId": "Datastores_Delete",
        "summary": "Deletes an datastore.",
        "description": "Implements datastore DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "datastoreName",
            "description": "Name of the datastore.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "Whether force delete was specified.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/datastores": {
      "get": {
        "tags": [
          "Datastores"
        ],
        "operationId": "Datastores_List",
        "summary": "Implements GET datastores in a subscription.",
        "description": "List of datastores in a subscription.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of Datastores.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of Datastores.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of Datastores",
                  "type": "array",
                  "items": {
                    "description": "Define the datastore.",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Gets or sets a unique identifier for this resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "vCenterId": {
                            "description": "Gets or sets the ARM Id of the vCenter resource in which this datastore resides.",
                            "type": "string"
                          },
                          "moRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.",
                            "type": "string"
                          },
                          "inventoryItemId": {
                            "description": "Gets or sets the inventory Item ID for the datastore.",
                            "type": "string"
                          },
                          "moName": {
                            "description": "Gets or sets the vCenter Managed Object name for the datastore.",
                            "type": "string",
                            "readOnly": true
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "customResourceName": {
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "type": "string",
                            "readOnly": true
                          },
                          "capacityGB": {
                            "description": "Gets or sets Maximum capacity of this datastore in GBs.",
                            "format": "int64",
                            "type": "integer",
                            "readOnly": true
                          },
                          "freeSpaceGB": {
                            "description": "Gets or sets Available space of this datastore in GBs.",
                            "format": "int64",
                            "type": "integer",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets the location.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system data.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "description": "Gets or sets the Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Gets or sets the name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "id": {
                        "description": "Gets or sets the Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Gets or sets the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/datastores": {
      "get": {
        "tags": [
          "Datastores"
        ],
        "operationId": "Datastores_ListByResourceGroup",
        "summary": "Implements GET datastores in a resource group.",
        "description": "List of datastores in a resource group.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of Datastores.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of Datastores.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of Datastores",
                  "type": "array",
                  "items": {
                    "description": "Define the datastore.",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Gets or sets a unique identifier for this resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "vCenterId": {
                            "description": "Gets or sets the ARM Id of the vCenter resource in which this datastore resides.",
                            "type": "string"
                          },
                          "moRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.",
                            "type": "string"
                          },
                          "inventoryItemId": {
                            "description": "Gets or sets the inventory Item ID for the datastore.",
                            "type": "string"
                          },
                          "moName": {
                            "description": "Gets or sets the vCenter Managed Object name for the datastore.",
                            "type": "string",
                            "readOnly": true
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "customResourceName": {
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "type": "string",
                            "readOnly": true
                          },
                          "capacityGB": {
                            "description": "Gets or sets Maximum capacity of this datastore in GBs.",
                            "format": "int64",
                            "type": "integer",
                            "readOnly": true
                          },
                          "freeSpaceGB": {
                            "description": "Gets or sets Available space of this datastore in GBs.",
                            "format": "int64",
                            "type": "integer",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the resource.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets the location.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system data.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "description": "Gets or sets the Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Gets or sets the name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "id": {
                        "description": "Gets or sets the Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Gets or sets the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/{vcenterName}": {
      "put": {
        "tags": [
          "VCenters"
        ],
        "operationId": "VCenters_Create",
        "description": "Create Or Update vCenter.",
        "summary": "Implements vCenter PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "vcenterName",
            "required": true,
            "type": "string",
            "description": "Name of the vCenter."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "description": "Defines the vCenter.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "required": [
                    "fqdn"
                  ],
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "fqdn": {
                      "description": "Gets or sets the FQDN/IPAddress of the vCenter.",
                      "type": "string"
                    },
                    "port": {
                      "format": "int32",
                      "description": "Gets or sets the port of the vCenter.",
                      "maximum": 65535,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "version": {
                      "description": "Gets or sets the version of the vCenter.",
                      "type": "string",
                      "readOnly": true
                    },
                    "instanceUuid": {
                      "description": "Gets or sets the instance UUID of the vCenter.",
                      "type": "string",
                      "readOnly": true
                    },
                    "connectionStatus": {
                      "description": "Gets or sets the connection status to the vCenter.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "credentials": {
                      "description": "Username / Password Credentials to connect to vcenter.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "description": "Gets or sets username to connect with the vCenter.",
                          "type": "string"
                        },
                        "password": {
                          "description": "Gets or sets the password to connect with the vCenter.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Defines the vCenter.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "required": [
                    "fqdn"
                  ],
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "fqdn": {
                      "description": "Gets or sets the FQDN/IPAddress of the vCenter.",
                      "type": "string"
                    },
                    "port": {
                      "format": "int32",
                      "description": "Gets or sets the port of the vCenter.",
                      "maximum": 65535,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "version": {
                      "description": "Gets or sets the version of the vCenter.",
                      "type": "string",
                      "readOnly": true
                    },
                    "instanceUuid": {
                      "description": "Gets or sets the instance UUID of the vCenter.",
                      "type": "string",
                      "readOnly": true
                    },
                    "connectionStatus": {
                      "description": "Gets or sets the connection status to the vCenter.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "credentials": {
                      "description": "Username / Password Credentials to connect to vcenter.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "description": "Gets or sets username to connect with the vCenter.",
                          "type": "string"
                        },
                        "password": {
                          "description": "Gets or sets the password to connect with the vCenter.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Defines the vCenter.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "required": [
                    "fqdn"
                  ],
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "fqdn": {
                      "description": "Gets or sets the FQDN/IPAddress of the vCenter.",
                      "type": "string"
                    },
                    "port": {
                      "format": "int32",
                      "description": "Gets or sets the port of the vCenter.",
                      "maximum": 65535,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "version": {
                      "description": "Gets or sets the version of the vCenter.",
                      "type": "string",
                      "readOnly": true
                    },
                    "instanceUuid": {
                      "description": "Gets or sets the instance UUID of the vCenter.",
                      "type": "string",
                      "readOnly": true
                    },
                    "connectionStatus": {
                      "description": "Gets or sets the connection status to the vCenter.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "credentials": {
                      "description": "Username / Password Credentials to connect to vcenter.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "description": "Gets or sets username to connect with the vCenter.",
                          "type": "string"
                        },
                        "password": {
                          "description": "Gets or sets the password to connect with the vCenter.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "VCenters"
        ],
        "operationId": "VCenters_Get",
        "summary": "Gets a vCenter.",
        "description": "Implements vCenter GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "vcenterName",
            "required": true,
            "type": "string",
            "description": "Name of the vCenter."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Defines the vCenter.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "required": [
                    "fqdn"
                  ],
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "fqdn": {
                      "description": "Gets or sets the FQDN/IPAddress of the vCenter.",
                      "type": "string"
                    },
                    "port": {
                      "format": "int32",
                      "description": "Gets or sets the port of the vCenter.",
                      "maximum": 65535,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "version": {
                      "description": "Gets or sets the version of the vCenter.",
                      "type": "string",
                      "readOnly": true
                    },
                    "instanceUuid": {
                      "description": "Gets or sets the instance UUID of the vCenter.",
                      "type": "string",
                      "readOnly": true
                    },
                    "connectionStatus": {
                      "description": "Gets or sets the connection status to the vCenter.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "credentials": {
                      "description": "Username / Password Credentials to connect to vcenter.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "description": "Gets or sets username to connect with the vCenter.",
                          "type": "string"
                        },
                        "password": {
                          "description": "Gets or sets the password to connect with the vCenter.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "VCenters"
        ],
        "operationId": "VCenters_Update",
        "summary": "Updates a vCenter.",
        "description": "API to update certain properties of the vCenter resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "vcenterName",
            "required": true,
            "type": "string",
            "description": "Name of the vCenter."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Resource properties to update.",
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                }
              },
              "description": "Object containing updates for patch operations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Defines the vCenter.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "required": [
                    "fqdn"
                  ],
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "fqdn": {
                      "description": "Gets or sets the FQDN/IPAddress of the vCenter.",
                      "type": "string"
                    },
                    "port": {
                      "format": "int32",
                      "description": "Gets or sets the port of the vCenter.",
                      "maximum": 65535,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "version": {
                      "description": "Gets or sets the version of the vCenter.",
                      "type": "string",
                      "readOnly": true
                    },
                    "instanceUuid": {
                      "description": "Gets or sets the instance UUID of the vCenter.",
                      "type": "string",
                      "readOnly": true
                    },
                    "connectionStatus": {
                      "description": "Gets or sets the connection status to the vCenter.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "credentials": {
                      "description": "Username / Password Credentials to connect to vcenter.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "description": "Gets or sets username to connect with the vCenter.",
                          "type": "string"
                        },
                        "password": {
                          "description": "Gets or sets the password to connect with the vCenter.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VCenters"
        ],
        "operationId": "VCenters_Delete",
        "summary": "Deletes an vCenter.",
        "description": "Implements vCenter DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "vcenterName",
            "required": true,
            "type": "string",
            "description": "Name of the vCenter."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "Whether force delete was specified.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/vcenters": {
      "get": {
        "tags": [
          "VCenters"
        ],
        "operationId": "VCenters_List",
        "summary": "Implements GET vCenters in a subscription.",
        "description": "List of vCenters in a subscription.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of VCenters.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of VCenters.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of VCenters",
                  "type": "array",
                  "items": {
                    "description": "Defines the vCenter.",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "required": [
                          "fqdn"
                        ],
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Gets or sets a unique identifier for this resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "fqdn": {
                            "description": "Gets or sets the FQDN/IPAddress of the vCenter.",
                            "type": "string"
                          },
                          "port": {
                            "format": "int32",
                            "description": "Gets or sets the port of the vCenter.",
                            "maximum": 65535,
                            "minimum": 1,
                            "type": "integer"
                          },
                          "version": {
                            "description": "Gets or sets the version of the vCenter.",
                            "type": "string",
                            "readOnly": true
                          },
                          "instanceUuid": {
                            "description": "Gets or sets the instance UUID of the vCenter.",
                            "type": "string",
                            "readOnly": true
                          },
                          "connectionStatus": {
                            "description": "Gets or sets the connection status to the vCenter.",
                            "type": "string",
                            "readOnly": true
                          },
                          "customResourceName": {
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "type": "string",
                            "readOnly": true
                          },
                          "credentials": {
                            "description": "Username / Password Credentials to connect to vcenter.",
                            "type": "object",
                            "properties": {
                              "username": {
                                "description": "Gets or sets username to connect with the vCenter.",
                                "type": "string"
                              },
                              "password": {
                                "description": "Gets or sets the password to connect with the vCenter.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              }
                            }
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets the location.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system data.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "description": "Gets or sets the Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Gets or sets the name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "id": {
                        "description": "Gets or sets the Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Gets or sets the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters": {
      "get": {
        "tags": [
          "VCenters"
        ],
        "operationId": "VCenters_ListByResourceGroup",
        "summary": "Implements GET vCenters in a resource group.",
        "description": "List of vCenters in a resource group.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of VCenters.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of VCenters.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of VCenters",
                  "type": "array",
                  "items": {
                    "description": "Defines the vCenter.",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "required": [
                          "fqdn"
                        ],
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Gets or sets a unique identifier for this resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "fqdn": {
                            "description": "Gets or sets the FQDN/IPAddress of the vCenter.",
                            "type": "string"
                          },
                          "port": {
                            "format": "int32",
                            "description": "Gets or sets the port of the vCenter.",
                            "maximum": 65535,
                            "minimum": 1,
                            "type": "integer"
                          },
                          "version": {
                            "description": "Gets or sets the version of the vCenter.",
                            "type": "string",
                            "readOnly": true
                          },
                          "instanceUuid": {
                            "description": "Gets or sets the instance UUID of the vCenter.",
                            "type": "string",
                            "readOnly": true
                          },
                          "connectionStatus": {
                            "description": "Gets or sets the connection status to the vCenter.",
                            "type": "string",
                            "readOnly": true
                          },
                          "customResourceName": {
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "type": "string",
                            "readOnly": true
                          },
                          "credentials": {
                            "description": "Username / Password Credentials to connect to vcenter.",
                            "type": "object",
                            "properties": {
                              "username": {
                                "description": "Gets or sets username to connect with the vCenter.",
                                "type": "string"
                              },
                              "password": {
                                "description": "Gets or sets the password to connect with the vCenter.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              }
                            }
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets the location.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system data.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "description": "Gets or sets the Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Gets or sets the name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "id": {
                        "description": "Gets or sets the Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Gets or sets the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates/{virtualMachineTemplateName}": {
      "put": {
        "tags": [
          "VirtualMachineTemplates"
        ],
        "operationId": "VirtualMachineTemplates_Create",
        "description": "Create Or Update virtual machine template.",
        "summary": "Implements virtual machine template PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "virtualMachineTemplateName",
            "description": "Name of the virtual machine template resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "description": "Define the virtualMachineTemplate.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the virtual machine template.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the virtual machine template.",
                      "type": "string",
                      "readOnly": true
                    },
                    "memorySizeMB": {
                      "format": "int32",
                      "description": "Gets or sets memory size in MBs for the template.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "numCPUs": {
                      "format": "int32",
                      "description": "Gets or sets the number of vCPUs for the template.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "numCoresPerSocket": {
                      "format": "int32",
                      "description": "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "osType": {
                      "description": "Gets or sets the type of the os.",
                      "readOnly": true,
                      "enum": [
                        "Windows",
                        "Linux",
                        "Other"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "OsType"
                      }
                    },
                    "osName": {
                      "description": "Gets or sets os name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "folderPath": {
                      "description": "Gets or sets the folder path of the template.",
                      "type": "string",
                      "readOnly": true
                    },
                    "networkInterfaces": {
                      "description": "Gets or sets the network interfaces of the template.",
                      "type": "array",
                      "items": {
                        "description": "Network Interface model",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Gets or sets the name of the network interface.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                            "type": "string",
                            "readOnly": true
                          },
                          "ipAddresses": {
                            "description": "Gets or sets the nic ip addresses.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "macAddress": {
                            "description": "Gets or sets the NIC MAC address.",
                            "type": "string",
                            "readOnly": true
                          },
                          "networkId": {
                            "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                            "type": "string"
                          },
                          "nicType": {
                            "description": "NIC type",
                            "type": "string",
                            "enum": [
                              "vmxnet3",
                              "vmxnet2",
                              "vmxnet",
                              "e1000",
                              "e1000e",
                              "pcnet32"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "NICType"
                            }
                          },
                          "powerOnBoot": {
                            "description": "Gets or sets the power on boot.",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PowerOnBootOption"
                            }
                          },
                          "networkMoRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                            "type": "string",
                            "readOnly": true
                          },
                          "networkMoName": {
                            "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                            "type": "string",
                            "readOnly": true
                          },
                          "deviceKey": {
                            "format": "int32",
                            "description": "Gets or sets the device key value.",
                            "type": "integer"
                          },
                          "ipSettings": {
                            "description": "Gets or sets the ipsettings.",
                            "type": "object",
                            "properties": {
                              "allocationMethod": {
                                "description": "Gets or sets the nic allocation method.",
                                "enum": [
                                  "unset",
                                  "dynamic",
                                  "static",
                                  "linklayer",
                                  "random",
                                  "other"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "IPAddressAllocationMethod"
                                }
                              },
                              "dnsServers": {
                                "description": "Gets or sets the dns servers.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "gateway": {
                                "description": "Gets or sets the gateway.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "ipAddress": {
                                "description": "Gets or sets the ip address for the nic.",
                                "type": "string"
                              },
                              "subnetMask": {
                                "description": "Gets or sets the mask.",
                                "type": "string"
                              },
                              "primaryWinsServer": {
                                "description": "Gets or sets the primary server.",
                                "type": "string",
                                "readOnly": true
                              },
                              "secondaryWinsServer": {
                                "description": "Gets or sets the secondary server.",
                                "type": "string",
                                "readOnly": true
                              },
                              "ipAddressInfo": {
                                "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                                "type": "array",
                                "items": {
                                  "description": "IP address information for a virtual network adapter reported by the fabric.",
                                  "type": "object",
                                  "properties": {
                                    "allocationMethod": {
                                      "description": "Gets the ip address allocation method.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "ipAddress": {
                                      "description": "Gets the ip address for the nic.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "subnetMask": {
                                      "description": "Gets the mask.",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "disks": {
                      "description": "Gets or sets the disks the template.",
                      "type": "array",
                      "items": {
                        "description": "Virtual disk model",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Gets or sets the name of the virtual disk.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Gets or sets the label of the virtual disk in vCenter.",
                            "type": "string",
                            "readOnly": true
                          },
                          "diskObjectId": {
                            "description": "Gets or sets the disk object id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "diskSizeGB": {
                            "format": "int32",
                            "description": "Gets or sets the disk total size.",
                            "type": "integer"
                          },
                          "deviceKey": {
                            "format": "int32",
                            "description": "Gets or sets the device key value.",
                            "type": "integer"
                          },
                          "diskMode": {
                            "description": "Gets or sets the disk mode.",
                            "enum": [
                              "persistent",
                              "independent_persistent",
                              "independent_nonpersistent"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "DiskMode"
                            }
                          },
                          "controllerKey": {
                            "description": "Gets or sets the controller id.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "unitNumber": {
                            "description": "Gets or sets the unit number of the disk on the controller.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "deviceName": {
                            "description": "Gets or sets the device name.",
                            "type": "string"
                          },
                          "diskType": {
                            "description": "Gets or sets the disk backing type.",
                            "enum": [
                              "flat",
                              "pmem",
                              "rawphysical",
                              "rawvirtual",
                              "sparse",
                              "sesparse",
                              "unknown"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "DiskType"
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "toolsVersionStatus": {
                      "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                      "type": "string",
                      "readOnly": true
                    },
                    "toolsVersion": {
                      "description": "Gets or sets the current version of VMware Tools.",
                      "type": "string",
                      "readOnly": true
                    },
                    "firmwareType": {
                      "description": "Firmware type",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "bios",
                        "efi"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "FirmwareType"
                      }
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Define the virtualMachineTemplate.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the virtual machine template.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the virtual machine template.",
                      "type": "string",
                      "readOnly": true
                    },
                    "memorySizeMB": {
                      "format": "int32",
                      "description": "Gets or sets memory size in MBs for the template.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "numCPUs": {
                      "format": "int32",
                      "description": "Gets or sets the number of vCPUs for the template.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "numCoresPerSocket": {
                      "format": "int32",
                      "description": "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "osType": {
                      "description": "Gets or sets the type of the os.",
                      "readOnly": true,
                      "enum": [
                        "Windows",
                        "Linux",
                        "Other"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "OsType"
                      }
                    },
                    "osName": {
                      "description": "Gets or sets os name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "folderPath": {
                      "description": "Gets or sets the folder path of the template.",
                      "type": "string",
                      "readOnly": true
                    },
                    "networkInterfaces": {
                      "description": "Gets or sets the network interfaces of the template.",
                      "type": "array",
                      "items": {
                        "description": "Network Interface model",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Gets or sets the name of the network interface.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                            "type": "string",
                            "readOnly": true
                          },
                          "ipAddresses": {
                            "description": "Gets or sets the nic ip addresses.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "macAddress": {
                            "description": "Gets or sets the NIC MAC address.",
                            "type": "string",
                            "readOnly": true
                          },
                          "networkId": {
                            "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                            "type": "string"
                          },
                          "nicType": {
                            "description": "NIC type",
                            "type": "string",
                            "enum": [
                              "vmxnet3",
                              "vmxnet2",
                              "vmxnet",
                              "e1000",
                              "e1000e",
                              "pcnet32"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "NICType"
                            }
                          },
                          "powerOnBoot": {
                            "description": "Gets or sets the power on boot.",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PowerOnBootOption"
                            }
                          },
                          "networkMoRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                            "type": "string",
                            "readOnly": true
                          },
                          "networkMoName": {
                            "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                            "type": "string",
                            "readOnly": true
                          },
                          "deviceKey": {
                            "format": "int32",
                            "description": "Gets or sets the device key value.",
                            "type": "integer"
                          },
                          "ipSettings": {
                            "description": "Gets or sets the ipsettings.",
                            "type": "object",
                            "properties": {
                              "allocationMethod": {
                                "description": "Gets or sets the nic allocation method.",
                                "enum": [
                                  "unset",
                                  "dynamic",
                                  "static",
                                  "linklayer",
                                  "random",
                                  "other"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "IPAddressAllocationMethod"
                                }
                              },
                              "dnsServers": {
                                "description": "Gets or sets the dns servers.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "gateway": {
                                "description": "Gets or sets the gateway.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "ipAddress": {
                                "description": "Gets or sets the ip address for the nic.",
                                "type": "string"
                              },
                              "subnetMask": {
                                "description": "Gets or sets the mask.",
                                "type": "string"
                              },
                              "primaryWinsServer": {
                                "description": "Gets or sets the primary server.",
                                "type": "string",
                                "readOnly": true
                              },
                              "secondaryWinsServer": {
                                "description": "Gets or sets the secondary server.",
                                "type": "string",
                                "readOnly": true
                              },
                              "ipAddressInfo": {
                                "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                                "type": "array",
                                "items": {
                                  "description": "IP address information for a virtual network adapter reported by the fabric.",
                                  "type": "object",
                                  "properties": {
                                    "allocationMethod": {
                                      "description": "Gets the ip address allocation method.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "ipAddress": {
                                      "description": "Gets the ip address for the nic.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "subnetMask": {
                                      "description": "Gets the mask.",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "disks": {
                      "description": "Gets or sets the disks the template.",
                      "type": "array",
                      "items": {
                        "description": "Virtual disk model",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Gets or sets the name of the virtual disk.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Gets or sets the label of the virtual disk in vCenter.",
                            "type": "string",
                            "readOnly": true
                          },
                          "diskObjectId": {
                            "description": "Gets or sets the disk object id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "diskSizeGB": {
                            "format": "int32",
                            "description": "Gets or sets the disk total size.",
                            "type": "integer"
                          },
                          "deviceKey": {
                            "format": "int32",
                            "description": "Gets or sets the device key value.",
                            "type": "integer"
                          },
                          "diskMode": {
                            "description": "Gets or sets the disk mode.",
                            "enum": [
                              "persistent",
                              "independent_persistent",
                              "independent_nonpersistent"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "DiskMode"
                            }
                          },
                          "controllerKey": {
                            "description": "Gets or sets the controller id.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "unitNumber": {
                            "description": "Gets or sets the unit number of the disk on the controller.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "deviceName": {
                            "description": "Gets or sets the device name.",
                            "type": "string"
                          },
                          "diskType": {
                            "description": "Gets or sets the disk backing type.",
                            "enum": [
                              "flat",
                              "pmem",
                              "rawphysical",
                              "rawvirtual",
                              "sparse",
                              "sesparse",
                              "unknown"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "DiskType"
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "toolsVersionStatus": {
                      "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                      "type": "string",
                      "readOnly": true
                    },
                    "toolsVersion": {
                      "description": "Gets or sets the current version of VMware Tools.",
                      "type": "string",
                      "readOnly": true
                    },
                    "firmwareType": {
                      "description": "Firmware type",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "bios",
                        "efi"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "FirmwareType"
                      }
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Define the virtualMachineTemplate.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the virtual machine template.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the virtual machine template.",
                      "type": "string",
                      "readOnly": true
                    },
                    "memorySizeMB": {
                      "format": "int32",
                      "description": "Gets or sets memory size in MBs for the template.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "numCPUs": {
                      "format": "int32",
                      "description": "Gets or sets the number of vCPUs for the template.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "numCoresPerSocket": {
                      "format": "int32",
                      "description": "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "osType": {
                      "description": "Gets or sets the type of the os.",
                      "readOnly": true,
                      "enum": [
                        "Windows",
                        "Linux",
                        "Other"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "OsType"
                      }
                    },
                    "osName": {
                      "description": "Gets or sets os name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "folderPath": {
                      "description": "Gets or sets the folder path of the template.",
                      "type": "string",
                      "readOnly": true
                    },
                    "networkInterfaces": {
                      "description": "Gets or sets the network interfaces of the template.",
                      "type": "array",
                      "items": {
                        "description": "Network Interface model",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Gets or sets the name of the network interface.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                            "type": "string",
                            "readOnly": true
                          },
                          "ipAddresses": {
                            "description": "Gets or sets the nic ip addresses.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "macAddress": {
                            "description": "Gets or sets the NIC MAC address.",
                            "type": "string",
                            "readOnly": true
                          },
                          "networkId": {
                            "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                            "type": "string"
                          },
                          "nicType": {
                            "description": "NIC type",
                            "type": "string",
                            "enum": [
                              "vmxnet3",
                              "vmxnet2",
                              "vmxnet",
                              "e1000",
                              "e1000e",
                              "pcnet32"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "NICType"
                            }
                          },
                          "powerOnBoot": {
                            "description": "Gets or sets the power on boot.",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PowerOnBootOption"
                            }
                          },
                          "networkMoRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                            "type": "string",
                            "readOnly": true
                          },
                          "networkMoName": {
                            "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                            "type": "string",
                            "readOnly": true
                          },
                          "deviceKey": {
                            "format": "int32",
                            "description": "Gets or sets the device key value.",
                            "type": "integer"
                          },
                          "ipSettings": {
                            "description": "Gets or sets the ipsettings.",
                            "type": "object",
                            "properties": {
                              "allocationMethod": {
                                "description": "Gets or sets the nic allocation method.",
                                "enum": [
                                  "unset",
                                  "dynamic",
                                  "static",
                                  "linklayer",
                                  "random",
                                  "other"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "IPAddressAllocationMethod"
                                }
                              },
                              "dnsServers": {
                                "description": "Gets or sets the dns servers.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "gateway": {
                                "description": "Gets or sets the gateway.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "ipAddress": {
                                "description": "Gets or sets the ip address for the nic.",
                                "type": "string"
                              },
                              "subnetMask": {
                                "description": "Gets or sets the mask.",
                                "type": "string"
                              },
                              "primaryWinsServer": {
                                "description": "Gets or sets the primary server.",
                                "type": "string",
                                "readOnly": true
                              },
                              "secondaryWinsServer": {
                                "description": "Gets or sets the secondary server.",
                                "type": "string",
                                "readOnly": true
                              },
                              "ipAddressInfo": {
                                "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                                "type": "array",
                                "items": {
                                  "description": "IP address information for a virtual network adapter reported by the fabric.",
                                  "type": "object",
                                  "properties": {
                                    "allocationMethod": {
                                      "description": "Gets the ip address allocation method.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "ipAddress": {
                                      "description": "Gets the ip address for the nic.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "subnetMask": {
                                      "description": "Gets the mask.",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "disks": {
                      "description": "Gets or sets the disks the template.",
                      "type": "array",
                      "items": {
                        "description": "Virtual disk model",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Gets or sets the name of the virtual disk.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Gets or sets the label of the virtual disk in vCenter.",
                            "type": "string",
                            "readOnly": true
                          },
                          "diskObjectId": {
                            "description": "Gets or sets the disk object id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "diskSizeGB": {
                            "format": "int32",
                            "description": "Gets or sets the disk total size.",
                            "type": "integer"
                          },
                          "deviceKey": {
                            "format": "int32",
                            "description": "Gets or sets the device key value.",
                            "type": "integer"
                          },
                          "diskMode": {
                            "description": "Gets or sets the disk mode.",
                            "enum": [
                              "persistent",
                              "independent_persistent",
                              "independent_nonpersistent"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "DiskMode"
                            }
                          },
                          "controllerKey": {
                            "description": "Gets or sets the controller id.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "unitNumber": {
                            "description": "Gets or sets the unit number of the disk on the controller.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "deviceName": {
                            "description": "Gets or sets the device name.",
                            "type": "string"
                          },
                          "diskType": {
                            "description": "Gets or sets the disk backing type.",
                            "enum": [
                              "flat",
                              "pmem",
                              "rawphysical",
                              "rawvirtual",
                              "sparse",
                              "sesparse",
                              "unknown"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "DiskType"
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "toolsVersionStatus": {
                      "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                      "type": "string",
                      "readOnly": true
                    },
                    "toolsVersion": {
                      "description": "Gets or sets the current version of VMware Tools.",
                      "type": "string",
                      "readOnly": true
                    },
                    "firmwareType": {
                      "description": "Firmware type",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "bios",
                        "efi"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "FirmwareType"
                      }
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "VirtualMachineTemplates"
        ],
        "operationId": "VirtualMachineTemplates_Get",
        "summary": "Gets a virtual machine template.",
        "description": "Implements virtual machine template GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "virtualMachineTemplateName",
            "description": "Name of the virtual machine template resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Define the virtualMachineTemplate.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the virtual machine template.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the virtual machine template.",
                      "type": "string",
                      "readOnly": true
                    },
                    "memorySizeMB": {
                      "format": "int32",
                      "description": "Gets or sets memory size in MBs for the template.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "numCPUs": {
                      "format": "int32",
                      "description": "Gets or sets the number of vCPUs for the template.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "numCoresPerSocket": {
                      "format": "int32",
                      "description": "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "osType": {
                      "description": "Gets or sets the type of the os.",
                      "readOnly": true,
                      "enum": [
                        "Windows",
                        "Linux",
                        "Other"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "OsType"
                      }
                    },
                    "osName": {
                      "description": "Gets or sets os name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "folderPath": {
                      "description": "Gets or sets the folder path of the template.",
                      "type": "string",
                      "readOnly": true
                    },
                    "networkInterfaces": {
                      "description": "Gets or sets the network interfaces of the template.",
                      "type": "array",
                      "items": {
                        "description": "Network Interface model",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Gets or sets the name of the network interface.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                            "type": "string",
                            "readOnly": true
                          },
                          "ipAddresses": {
                            "description": "Gets or sets the nic ip addresses.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "macAddress": {
                            "description": "Gets or sets the NIC MAC address.",
                            "type": "string",
                            "readOnly": true
                          },
                          "networkId": {
                            "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                            "type": "string"
                          },
                          "nicType": {
                            "description": "NIC type",
                            "type": "string",
                            "enum": [
                              "vmxnet3",
                              "vmxnet2",
                              "vmxnet",
                              "e1000",
                              "e1000e",
                              "pcnet32"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "NICType"
                            }
                          },
                          "powerOnBoot": {
                            "description": "Gets or sets the power on boot.",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PowerOnBootOption"
                            }
                          },
                          "networkMoRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                            "type": "string",
                            "readOnly": true
                          },
                          "networkMoName": {
                            "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                            "type": "string",
                            "readOnly": true
                          },
                          "deviceKey": {
                            "format": "int32",
                            "description": "Gets or sets the device key value.",
                            "type": "integer"
                          },
                          "ipSettings": {
                            "description": "Gets or sets the ipsettings.",
                            "type": "object",
                            "properties": {
                              "allocationMethod": {
                                "description": "Gets or sets the nic allocation method.",
                                "enum": [
                                  "unset",
                                  "dynamic",
                                  "static",
                                  "linklayer",
                                  "random",
                                  "other"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "IPAddressAllocationMethod"
                                }
                              },
                              "dnsServers": {
                                "description": "Gets or sets the dns servers.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "gateway": {
                                "description": "Gets or sets the gateway.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "ipAddress": {
                                "description": "Gets or sets the ip address for the nic.",
                                "type": "string"
                              },
                              "subnetMask": {
                                "description": "Gets or sets the mask.",
                                "type": "string"
                              },
                              "primaryWinsServer": {
                                "description": "Gets or sets the primary server.",
                                "type": "string",
                                "readOnly": true
                              },
                              "secondaryWinsServer": {
                                "description": "Gets or sets the secondary server.",
                                "type": "string",
                                "readOnly": true
                              },
                              "ipAddressInfo": {
                                "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                                "type": "array",
                                "items": {
                                  "description": "IP address information for a virtual network adapter reported by the fabric.",
                                  "type": "object",
                                  "properties": {
                                    "allocationMethod": {
                                      "description": "Gets the ip address allocation method.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "ipAddress": {
                                      "description": "Gets the ip address for the nic.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "subnetMask": {
                                      "description": "Gets the mask.",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "disks": {
                      "description": "Gets or sets the disks the template.",
                      "type": "array",
                      "items": {
                        "description": "Virtual disk model",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Gets or sets the name of the virtual disk.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Gets or sets the label of the virtual disk in vCenter.",
                            "type": "string",
                            "readOnly": true
                          },
                          "diskObjectId": {
                            "description": "Gets or sets the disk object id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "diskSizeGB": {
                            "format": "int32",
                            "description": "Gets or sets the disk total size.",
                            "type": "integer"
                          },
                          "deviceKey": {
                            "format": "int32",
                            "description": "Gets or sets the device key value.",
                            "type": "integer"
                          },
                          "diskMode": {
                            "description": "Gets or sets the disk mode.",
                            "enum": [
                              "persistent",
                              "independent_persistent",
                              "independent_nonpersistent"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "DiskMode"
                            }
                          },
                          "controllerKey": {
                            "description": "Gets or sets the controller id.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "unitNumber": {
                            "description": "Gets or sets the unit number of the disk on the controller.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "deviceName": {
                            "description": "Gets or sets the device name.",
                            "type": "string"
                          },
                          "diskType": {
                            "description": "Gets or sets the disk backing type.",
                            "enum": [
                              "flat",
                              "pmem",
                              "rawphysical",
                              "rawvirtual",
                              "sparse",
                              "sesparse",
                              "unknown"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "DiskType"
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "toolsVersionStatus": {
                      "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                      "type": "string",
                      "readOnly": true
                    },
                    "toolsVersion": {
                      "description": "Gets or sets the current version of VMware Tools.",
                      "type": "string",
                      "readOnly": true
                    },
                    "firmwareType": {
                      "description": "Firmware type",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "bios",
                        "efi"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "FirmwareType"
                      }
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "VirtualMachineTemplates"
        ],
        "operationId": "VirtualMachineTemplates_Update",
        "summary": "Updates a virtual machine template.",
        "description": "API to update certain properties of the virtual machine template resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "virtualMachineTemplateName",
            "required": true,
            "type": "string",
            "description": "Name of the virtual machine template resource."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Resource properties to update.",
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                }
              },
              "description": "Object containing updates for patch operations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Define the virtualMachineTemplate.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the virtual machine template.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the virtual machine template.",
                      "type": "string",
                      "readOnly": true
                    },
                    "memorySizeMB": {
                      "format": "int32",
                      "description": "Gets or sets memory size in MBs for the template.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "numCPUs": {
                      "format": "int32",
                      "description": "Gets or sets the number of vCPUs for the template.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "numCoresPerSocket": {
                      "format": "int32",
                      "description": "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified.",
                      "type": "integer",
                      "readOnly": true
                    },
                    "osType": {
                      "description": "Gets or sets the type of the os.",
                      "readOnly": true,
                      "enum": [
                        "Windows",
                        "Linux",
                        "Other"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "OsType"
                      }
                    },
                    "osName": {
                      "description": "Gets or sets os name.",
                      "type": "string",
                      "readOnly": true
                    },
                    "folderPath": {
                      "description": "Gets or sets the folder path of the template.",
                      "type": "string",
                      "readOnly": true
                    },
                    "networkInterfaces": {
                      "description": "Gets or sets the network interfaces of the template.",
                      "type": "array",
                      "items": {
                        "description": "Network Interface model",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Gets or sets the name of the network interface.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                            "type": "string",
                            "readOnly": true
                          },
                          "ipAddresses": {
                            "description": "Gets or sets the nic ip addresses.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "macAddress": {
                            "description": "Gets or sets the NIC MAC address.",
                            "type": "string",
                            "readOnly": true
                          },
                          "networkId": {
                            "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                            "type": "string"
                          },
                          "nicType": {
                            "description": "NIC type",
                            "type": "string",
                            "enum": [
                              "vmxnet3",
                              "vmxnet2",
                              "vmxnet",
                              "e1000",
                              "e1000e",
                              "pcnet32"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "NICType"
                            }
                          },
                          "powerOnBoot": {
                            "description": "Gets or sets the power on boot.",
                            "enum": [
                              "enabled",
                              "disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PowerOnBootOption"
                            }
                          },
                          "networkMoRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                            "type": "string",
                            "readOnly": true
                          },
                          "networkMoName": {
                            "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                            "type": "string",
                            "readOnly": true
                          },
                          "deviceKey": {
                            "format": "int32",
                            "description": "Gets or sets the device key value.",
                            "type": "integer"
                          },
                          "ipSettings": {
                            "description": "Gets or sets the ipsettings.",
                            "type": "object",
                            "properties": {
                              "allocationMethod": {
                                "description": "Gets or sets the nic allocation method.",
                                "enum": [
                                  "unset",
                                  "dynamic",
                                  "static",
                                  "linklayer",
                                  "random",
                                  "other"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "IPAddressAllocationMethod"
                                }
                              },
                              "dnsServers": {
                                "description": "Gets or sets the dns servers.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "gateway": {
                                "description": "Gets or sets the gateway.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "ipAddress": {
                                "description": "Gets or sets the ip address for the nic.",
                                "type": "string"
                              },
                              "subnetMask": {
                                "description": "Gets or sets the mask.",
                                "type": "string"
                              },
                              "primaryWinsServer": {
                                "description": "Gets or sets the primary server.",
                                "type": "string",
                                "readOnly": true
                              },
                              "secondaryWinsServer": {
                                "description": "Gets or sets the secondary server.",
                                "type": "string",
                                "readOnly": true
                              },
                              "ipAddressInfo": {
                                "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                                "type": "array",
                                "items": {
                                  "description": "IP address information for a virtual network adapter reported by the fabric.",
                                  "type": "object",
                                  "properties": {
                                    "allocationMethod": {
                                      "description": "Gets the ip address allocation method.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "ipAddress": {
                                      "description": "Gets the ip address for the nic.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "subnetMask": {
                                      "description": "Gets the mask.",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "disks": {
                      "description": "Gets or sets the disks the template.",
                      "type": "array",
                      "items": {
                        "description": "Virtual disk model",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Gets or sets the name of the virtual disk.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Gets or sets the label of the virtual disk in vCenter.",
                            "type": "string",
                            "readOnly": true
                          },
                          "diskObjectId": {
                            "description": "Gets or sets the disk object id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "diskSizeGB": {
                            "format": "int32",
                            "description": "Gets or sets the disk total size.",
                            "type": "integer"
                          },
                          "deviceKey": {
                            "format": "int32",
                            "description": "Gets or sets the device key value.",
                            "type": "integer"
                          },
                          "diskMode": {
                            "description": "Gets or sets the disk mode.",
                            "enum": [
                              "persistent",
                              "independent_persistent",
                              "independent_nonpersistent"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "DiskMode"
                            }
                          },
                          "controllerKey": {
                            "description": "Gets or sets the controller id.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "unitNumber": {
                            "description": "Gets or sets the unit number of the disk on the controller.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "deviceName": {
                            "description": "Gets or sets the device name.",
                            "type": "string"
                          },
                          "diskType": {
                            "description": "Gets or sets the disk backing type.",
                            "enum": [
                              "flat",
                              "pmem",
                              "rawphysical",
                              "rawvirtual",
                              "sparse",
                              "sesparse",
                              "unknown"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "DiskType"
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "toolsVersionStatus": {
                      "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                      "type": "string",
                      "readOnly": true
                    },
                    "toolsVersion": {
                      "description": "Gets or sets the current version of VMware Tools.",
                      "type": "string",
                      "readOnly": true
                    },
                    "firmwareType": {
                      "description": "Firmware type",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "bios",
                        "efi"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "FirmwareType"
                      }
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualMachineTemplates"
        ],
        "operationId": "VirtualMachineTemplates_Delete",
        "summary": "Deletes an virtual machine template.",
        "description": "Implements virtual machine template DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "virtualMachineTemplateName",
            "required": true,
            "type": "string",
            "description": "Name of the virtual machine template resource."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "Whether force delete was specified.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates": {
      "get": {
        "tags": [
          "VirtualMachineTemplates"
        ],
        "operationId": "VirtualMachineTemplates_List",
        "summary": "Implements GET virtualMachineTemplates in a subscription.",
        "description": "List of virtualMachineTemplates in a subscription.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of VirtualMachineTemplates.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of VirtualMachineTemplates.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of VirtualMachineTemplates",
                  "type": "array",
                  "items": {
                    "description": "Define the virtualMachineTemplate.",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Gets or sets a unique identifier for this resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "vCenterId": {
                            "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                            "type": "string"
                          },
                          "moRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate.",
                            "type": "string"
                          },
                          "inventoryItemId": {
                            "description": "Gets or sets the inventory Item ID for the virtual machine template.",
                            "type": "string"
                          },
                          "moName": {
                            "description": "Gets or sets the vCenter Managed Object name for the virtual machine template.",
                            "type": "string",
                            "readOnly": true
                          },
                          "memorySizeMB": {
                            "format": "int32",
                            "description": "Gets or sets memory size in MBs for the template.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "numCPUs": {
                            "format": "int32",
                            "description": "Gets or sets the number of vCPUs for the template.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "numCoresPerSocket": {
                            "format": "int32",
                            "description": "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "osType": {
                            "description": "Gets or sets the type of the os.",
                            "readOnly": true,
                            "enum": [
                              "Windows",
                              "Linux",
                              "Other"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "OsType"
                            }
                          },
                          "osName": {
                            "description": "Gets or sets os name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "folderPath": {
                            "description": "Gets or sets the folder path of the template.",
                            "type": "string",
                            "readOnly": true
                          },
                          "networkInterfaces": {
                            "description": "Gets or sets the network interfaces of the template.",
                            "type": "array",
                            "items": {
                              "description": "Network Interface model",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Gets or sets the name of the network interface.",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "ipAddresses": {
                                  "description": "Gets or sets the nic ip addresses.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "readOnly": true
                                },
                                "macAddress": {
                                  "description": "Gets or sets the NIC MAC address.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "networkId": {
                                  "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                                  "type": "string"
                                },
                                "nicType": {
                                  "description": "NIC type",
                                  "type": "string",
                                  "enum": [
                                    "vmxnet3",
                                    "vmxnet2",
                                    "vmxnet",
                                    "e1000",
                                    "e1000e",
                                    "pcnet32"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "NICType"
                                  }
                                },
                                "powerOnBoot": {
                                  "description": "Gets or sets the power on boot.",
                                  "enum": [
                                    "enabled",
                                    "disabled"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "PowerOnBootOption"
                                  }
                                },
                                "networkMoRefId": {
                                  "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "networkMoName": {
                                  "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "deviceKey": {
                                  "format": "int32",
                                  "description": "Gets or sets the device key value.",
                                  "type": "integer"
                                },
                                "ipSettings": {
                                  "description": "Gets or sets the ipsettings.",
                                  "type": "object",
                                  "properties": {
                                    "allocationMethod": {
                                      "description": "Gets or sets the nic allocation method.",
                                      "enum": [
                                        "unset",
                                        "dynamic",
                                        "static",
                                        "linklayer",
                                        "random",
                                        "other"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "IPAddressAllocationMethod"
                                      }
                                    },
                                    "dnsServers": {
                                      "description": "Gets or sets the dns servers.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "gateway": {
                                      "description": "Gets or sets the gateway.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "ipAddress": {
                                      "description": "Gets or sets the ip address for the nic.",
                                      "type": "string"
                                    },
                                    "subnetMask": {
                                      "description": "Gets or sets the mask.",
                                      "type": "string"
                                    },
                                    "primaryWinsServer": {
                                      "description": "Gets or sets the primary server.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "secondaryWinsServer": {
                                      "description": "Gets or sets the secondary server.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "ipAddressInfo": {
                                      "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                                      "type": "array",
                                      "items": {
                                        "description": "IP address information for a virtual network adapter reported by the fabric.",
                                        "type": "object",
                                        "properties": {
                                          "allocationMethod": {
                                            "description": "Gets the ip address allocation method.",
                                            "type": "string",
                                            "readOnly": true
                                          },
                                          "ipAddress": {
                                            "description": "Gets the ip address for the nic.",
                                            "type": "string",
                                            "readOnly": true
                                          },
                                          "subnetMask": {
                                            "description": "Gets the mask.",
                                            "type": "string",
                                            "readOnly": true
                                          }
                                        }
                                      },
                                      "readOnly": true
                                    }
                                  }
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "disks": {
                            "description": "Gets or sets the disks the template.",
                            "type": "array",
                            "items": {
                              "description": "Virtual disk model",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Gets or sets the name of the virtual disk.",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Gets or sets the label of the virtual disk in vCenter.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "diskObjectId": {
                                  "description": "Gets or sets the disk object id.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "diskSizeGB": {
                                  "format": "int32",
                                  "description": "Gets or sets the disk total size.",
                                  "type": "integer"
                                },
                                "deviceKey": {
                                  "format": "int32",
                                  "description": "Gets or sets the device key value.",
                                  "type": "integer"
                                },
                                "diskMode": {
                                  "description": "Gets or sets the disk mode.",
                                  "enum": [
                                    "persistent",
                                    "independent_persistent",
                                    "independent_nonpersistent"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "DiskMode"
                                  }
                                },
                                "controllerKey": {
                                  "description": "Gets or sets the controller id.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "unitNumber": {
                                  "description": "Gets or sets the unit number of the disk on the controller.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "deviceName": {
                                  "description": "Gets or sets the device name.",
                                  "type": "string"
                                },
                                "diskType": {
                                  "description": "Gets or sets the disk backing type.",
                                  "enum": [
                                    "flat",
                                    "pmem",
                                    "rawphysical",
                                    "rawvirtual",
                                    "sparse",
                                    "sesparse",
                                    "unknown"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "DiskType"
                                  }
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "customResourceName": {
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "type": "string",
                            "readOnly": true
                          },
                          "toolsVersionStatus": {
                            "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                            "type": "string",
                            "readOnly": true
                          },
                          "toolsVersion": {
                            "description": "Gets or sets the current version of VMware Tools.",
                            "type": "string",
                            "readOnly": true
                          },
                          "firmwareType": {
                            "description": "Firmware type",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "bios",
                              "efi"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "FirmwareType"
                            }
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets the location.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system data.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "description": "Gets or sets the Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Gets or sets the name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "id": {
                        "description": "Gets or sets the Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Gets or sets the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates": {
      "get": {
        "tags": [
          "VirtualMachineTemplates"
        ],
        "operationId": "VirtualMachineTemplates_ListByResourceGroup",
        "summary": "Implements GET virtualMachineTemplates in a resource group.",
        "description": "List of virtualMachineTemplates in a resource group.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of VirtualMachineTemplates.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of VirtualMachineTemplates.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of VirtualMachineTemplates",
                  "type": "array",
                  "items": {
                    "description": "Define the virtualMachineTemplate.",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Gets or sets a unique identifier for this resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "vCenterId": {
                            "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                            "type": "string"
                          },
                          "moRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate.",
                            "type": "string"
                          },
                          "inventoryItemId": {
                            "description": "Gets or sets the inventory Item ID for the virtual machine template.",
                            "type": "string"
                          },
                          "moName": {
                            "description": "Gets or sets the vCenter Managed Object name for the virtual machine template.",
                            "type": "string",
                            "readOnly": true
                          },
                          "memorySizeMB": {
                            "format": "int32",
                            "description": "Gets or sets memory size in MBs for the template.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "numCPUs": {
                            "format": "int32",
                            "description": "Gets or sets the number of vCPUs for the template.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "numCoresPerSocket": {
                            "format": "int32",
                            "description": "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified.",
                            "type": "integer",
                            "readOnly": true
                          },
                          "osType": {
                            "description": "Gets or sets the type of the os.",
                            "readOnly": true,
                            "enum": [
                              "Windows",
                              "Linux",
                              "Other"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "OsType"
                            }
                          },
                          "osName": {
                            "description": "Gets or sets os name.",
                            "type": "string",
                            "readOnly": true
                          },
                          "folderPath": {
                            "description": "Gets or sets the folder path of the template.",
                            "type": "string",
                            "readOnly": true
                          },
                          "networkInterfaces": {
                            "description": "Gets or sets the network interfaces of the template.",
                            "type": "array",
                            "items": {
                              "description": "Network Interface model",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Gets or sets the name of the network interface.",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "ipAddresses": {
                                  "description": "Gets or sets the nic ip addresses.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "readOnly": true
                                },
                                "macAddress": {
                                  "description": "Gets or sets the NIC MAC address.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "networkId": {
                                  "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                                  "type": "string"
                                },
                                "nicType": {
                                  "description": "NIC type",
                                  "type": "string",
                                  "enum": [
                                    "vmxnet3",
                                    "vmxnet2",
                                    "vmxnet",
                                    "e1000",
                                    "e1000e",
                                    "pcnet32"
                                  ],
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "NICType"
                                  }
                                },
                                "powerOnBoot": {
                                  "description": "Gets or sets the power on boot.",
                                  "enum": [
                                    "enabled",
                                    "disabled"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "PowerOnBootOption"
                                  }
                                },
                                "networkMoRefId": {
                                  "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "networkMoName": {
                                  "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "deviceKey": {
                                  "format": "int32",
                                  "description": "Gets or sets the device key value.",
                                  "type": "integer"
                                },
                                "ipSettings": {
                                  "description": "Gets or sets the ipsettings.",
                                  "type": "object",
                                  "properties": {
                                    "allocationMethod": {
                                      "description": "Gets or sets the nic allocation method.",
                                      "enum": [
                                        "unset",
                                        "dynamic",
                                        "static",
                                        "linklayer",
                                        "random",
                                        "other"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "IPAddressAllocationMethod"
                                      }
                                    },
                                    "dnsServers": {
                                      "description": "Gets or sets the dns servers.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "gateway": {
                                      "description": "Gets or sets the gateway.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "ipAddress": {
                                      "description": "Gets or sets the ip address for the nic.",
                                      "type": "string"
                                    },
                                    "subnetMask": {
                                      "description": "Gets or sets the mask.",
                                      "type": "string"
                                    },
                                    "primaryWinsServer": {
                                      "description": "Gets or sets the primary server.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "secondaryWinsServer": {
                                      "description": "Gets or sets the secondary server.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "ipAddressInfo": {
                                      "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                                      "type": "array",
                                      "items": {
                                        "description": "IP address information for a virtual network adapter reported by the fabric.",
                                        "type": "object",
                                        "properties": {
                                          "allocationMethod": {
                                            "description": "Gets the ip address allocation method.",
                                            "type": "string",
                                            "readOnly": true
                                          },
                                          "ipAddress": {
                                            "description": "Gets the ip address for the nic.",
                                            "type": "string",
                                            "readOnly": true
                                          },
                                          "subnetMask": {
                                            "description": "Gets the mask.",
                                            "type": "string",
                                            "readOnly": true
                                          }
                                        }
                                      },
                                      "readOnly": true
                                    }
                                  }
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "disks": {
                            "description": "Gets or sets the disks the template.",
                            "type": "array",
                            "items": {
                              "description": "Virtual disk model",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Gets or sets the name of the virtual disk.",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Gets or sets the label of the virtual disk in vCenter.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "diskObjectId": {
                                  "description": "Gets or sets the disk object id.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "diskSizeGB": {
                                  "format": "int32",
                                  "description": "Gets or sets the disk total size.",
                                  "type": "integer"
                                },
                                "deviceKey": {
                                  "format": "int32",
                                  "description": "Gets or sets the device key value.",
                                  "type": "integer"
                                },
                                "diskMode": {
                                  "description": "Gets or sets the disk mode.",
                                  "enum": [
                                    "persistent",
                                    "independent_persistent",
                                    "independent_nonpersistent"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "DiskMode"
                                  }
                                },
                                "controllerKey": {
                                  "description": "Gets or sets the controller id.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "unitNumber": {
                                  "description": "Gets or sets the unit number of the disk on the controller.",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "deviceName": {
                                  "description": "Gets or sets the device name.",
                                  "type": "string"
                                },
                                "diskType": {
                                  "description": "Gets or sets the disk backing type.",
                                  "enum": [
                                    "flat",
                                    "pmem",
                                    "rawphysical",
                                    "rawvirtual",
                                    "sparse",
                                    "sesparse",
                                    "unknown"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "DiskType"
                                  }
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "customResourceName": {
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "type": "string",
                            "readOnly": true
                          },
                          "toolsVersionStatus": {
                            "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                            "type": "string",
                            "readOnly": true
                          },
                          "toolsVersion": {
                            "description": "Gets or sets the current version of VMware Tools.",
                            "type": "string",
                            "readOnly": true
                          },
                          "firmwareType": {
                            "description": "Firmware type",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "bios",
                              "efi"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "FirmwareType"
                            }
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets the location.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system data.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "description": "Gets or sets the Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Gets or sets the name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "id": {
                        "description": "Gets or sets the Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Gets or sets the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks/{virtualNetworkName}": {
      "put": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_Create",
        "description": "Create Or Update virtual network.",
        "summary": "Implements virtual network PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "virtualNetworkName",
            "description": "Name of the virtual network resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "description": "Define the virtualNetwork.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the virtual network.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the virtual network.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Define the virtualNetwork.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the virtual network.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the virtual network.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Define the virtualNetwork.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the virtual network.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the virtual network.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_Get",
        "summary": "Gets a virtual network.",
        "description": "Implements virtual network GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "virtualNetworkName",
            "required": true,
            "type": "string",
            "description": "Name of the virtual network resource."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Define the virtualNetwork.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the virtual network.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the virtual network.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_Update",
        "summary": "Updates a virtual network.",
        "description": "API to update certain properties of the virtual network resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "virtualNetworkName",
            "description": "Name of the virtual network resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Resource properties to update.",
            "schema": {
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Resource tags."
                }
              },
              "description": "Object containing updates for patch operations."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Define the virtualNetwork.",
              "required": [
                "location",
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "vCenterId": {
                      "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network.",
                      "type": "string"
                    },
                    "inventoryItemId": {
                      "description": "Gets or sets the inventory Item ID for the virtual network.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the virtual network.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "location": {
                  "description": "Gets or sets the location.",
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                },
                "systemData": {
                  "description": "The system data.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "description": "Gets or sets the Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "description": "Gets or sets the name.",
                  "type": "string",
                  "readOnly": true
                },
                "id": {
                  "description": "Gets or sets the Id.",
                  "type": "string",
                  "readOnly": true
                },
                "type": {
                  "description": "Gets or sets the type of the resource.",
                  "type": "string",
                  "readOnly": true
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_Delete",
        "summary": "Deletes an virtual network.",
        "description": "Implements virtual network DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "virtualNetworkName",
            "description": "Name of the virtual network resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "description": "Whether force delete was specified.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks": {
      "get": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_List",
        "summary": "Implements GET virtualNetworks in a subscription.",
        "description": "List of virtualNetworks in a subscription.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of VirtualNetworks.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of VirtualNetworks.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of VirtualNetworks",
                  "type": "array",
                  "items": {
                    "description": "Define the virtualNetwork.",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Gets or sets a unique identifier for this resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "vCenterId": {
                            "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                            "type": "string"
                          },
                          "moRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network.",
                            "type": "string"
                          },
                          "inventoryItemId": {
                            "description": "Gets or sets the inventory Item ID for the virtual network.",
                            "type": "string"
                          },
                          "moName": {
                            "description": "Gets or sets the vCenter Managed Object name for the virtual network.",
                            "type": "string",
                            "readOnly": true
                          },
                          "customResourceName": {
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "type": "string",
                            "readOnly": true
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets the location.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system data.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "description": "Gets or sets the Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Gets or sets the name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "id": {
                        "description": "Gets or sets the Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Gets or sets the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks": {
      "get": {
        "tags": [
          "VirtualNetworks"
        ],
        "operationId": "VirtualNetworks_ListByResourceGroup",
        "summary": "Implements GET virtualNetworks in a resource group.",
        "description": "List of virtualNetworks in a resource group.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of VirtualNetworks.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of VirtualNetworks.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of VirtualNetworks",
                  "type": "array",
                  "items": {
                    "description": "Define the virtualNetwork.",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Gets or sets a unique identifier for this resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "vCenterId": {
                            "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                            "type": "string"
                          },
                          "moRefId": {
                            "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network.",
                            "type": "string"
                          },
                          "inventoryItemId": {
                            "description": "Gets or sets the inventory Item ID for the virtual network.",
                            "type": "string"
                          },
                          "moName": {
                            "description": "Gets or sets the vCenter Managed Object name for the virtual network.",
                            "type": "string",
                            "readOnly": true
                          },
                          "customResourceName": {
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "type": "string",
                            "readOnly": true
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Gets or sets the location.",
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      },
                      "systemData": {
                        "description": "The system data.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "description": "Gets or sets the Resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Gets or sets the name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "id": {
                        "description": "Gets or sets the Id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "type": {
                        "description": "Gets or sets the type of the resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/{vcenterName}/inventoryItems/{inventoryItemName}": {
      "put": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_Create",
        "description": "Create Or Update InventoryItem.",
        "summary": "Implements InventoryItem PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "vcenterName",
            "required": true,
            "type": "string",
            "description": "Name of the vCenter."
          },
          {
            "in": "path",
            "name": "inventoryItemName",
            "required": true,
            "type": "string",
            "description": "Name of the inventoryItem."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "description": "Defines the inventory item.",
              "required": [
                "properties"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "required": [
                    "inventoryType"
                  ],
                  "discriminator": "inventoryType",
                  "type": "object",
                  "properties": {
                    "inventoryType": {
                      "description": "They inventory type.",
                      "type": "string",
                      "enum": [
                        "ResourcePool",
                        "VirtualMachine",
                        "VirtualMachineTemplate",
                        "VirtualNetwork",
                        "Cluster",
                        "Datastore",
                        "Host"
                      ],
                      "x-ms-enum": {
                        "name": "InventoryType",
                        "modelAsString": true
                      }
                    },
                    "managedResourceId": {
                      "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              },
              "x-ms-azure-resource": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Defines the inventory item.",
              "required": [
                "properties"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "required": [
                    "inventoryType"
                  ],
                  "discriminator": "inventoryType",
                  "type": "object",
                  "properties": {
                    "inventoryType": {
                      "description": "They inventory type.",
                      "type": "string",
                      "enum": [
                        "ResourcePool",
                        "VirtualMachine",
                        "VirtualMachineTemplate",
                        "VirtualNetwork",
                        "Cluster",
                        "Datastore",
                        "Host"
                      ],
                      "x-ms-enum": {
                        "name": "InventoryType",
                        "modelAsString": true
                      }
                    },
                    "managedResourceId": {
                      "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              },
              "x-ms-azure-resource": true
            }
          }
        }
      },
      "get": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_Get",
        "summary": "Gets InventoryItem.",
        "description": "Implements InventoryItem GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "vcenterName",
            "required": true,
            "type": "string",
            "description": "Name of the vCenter."
          },
          {
            "in": "path",
            "name": "inventoryItemName",
            "required": true,
            "type": "string",
            "description": "Name of the inventoryItem."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Defines the inventory item.",
              "required": [
                "properties"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "required": [
                    "inventoryType"
                  ],
                  "discriminator": "inventoryType",
                  "type": "object",
                  "properties": {
                    "inventoryType": {
                      "description": "They inventory type.",
                      "type": "string",
                      "enum": [
                        "ResourcePool",
                        "VirtualMachine",
                        "VirtualMachineTemplate",
                        "VirtualNetwork",
                        "Cluster",
                        "Datastore",
                        "Host"
                      ],
                      "x-ms-enum": {
                        "name": "InventoryType",
                        "modelAsString": true
                      }
                    },
                    "managedResourceId": {
                      "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
                      "type": "string"
                    },
                    "moRefId": {
                      "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
                      "type": "string"
                    },
                    "moName": {
                      "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                }
              },
              "x-ms-azure-resource": true
            }
          }
        }
      },
      "delete": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_Delete",
        "summary": "Deletes an inventoryItem.",
        "description": "Implements inventoryItem DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "vcenterName",
            "required": true,
            "type": "string",
            "description": "Name of the vCenter."
          },
          {
            "in": "path",
            "name": "inventoryItemName",
            "required": true,
            "type": "string",
            "description": "Name of the inventoryItem."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/{vcenterName}/inventoryItems": {
      "get": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_ListByVCenter",
        "summary": "Implements GET inventoryItems in a vCenter.",
        "description": "Returns the list of inventoryItems of the given vCenter.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "description": "The Subscription ID.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroupName",
            "description": "The Resource Group Name.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "path",
            "name": "vcenterName",
            "required": true,
            "type": "string",
            "description": "Name of the vCenter."
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of InventoryItems.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of InventoryItems.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of InventoryItems",
                  "type": "array",
                  "items": {
                    "description": "Defines the inventory item.",
                    "required": [
                      "properties"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "required": [
                          "inventoryType"
                        ],
                        "discriminator": "inventoryType",
                        "type": "object",
                        "properties": {
                          "inventoryType": {
                            "description": "They inventory type.",
                            "type": "string",
                            "enum": [
                              "ResourcePool",
                              "VirtualMachine",
                              "VirtualMachineTemplate",
                              "VirtualNetwork",
                              "Cluster",
                              "Datastore",
                              "Host"
                            ],
                            "x-ms-enum": {
                              "name": "InventoryType",
                              "modelAsString": true
                            }
                          },
                          "managedResourceId": {
                            "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
                            "type": "string"
                          },
                          "moRefId": {
                            "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
                            "type": "string"
                          },
                          "moName": {
                            "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "kind": {
                        "type": "string",
                        "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineInstances/default": {
      "put": {
        "tags": [
          "VirtualMachineInstances"
        ],
        "operationId": "VirtualMachineInstances_CreateOrUpdate",
        "description": "The operation to create or update a virtual machine instance. Please note some properties can be set only during virtual machine instance creation.",
        "summary": "Implements virtual machine PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceUri",
            "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "description": "Define the virtualMachineInstance.",
              "required": [
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "placementProfile": {
                      "description": "Placement properties.",
                      "type": "object",
                      "properties": {
                        "resourcePoolId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will deploy."
                        },
                        "clusterId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the cluster resource on which this virtual machine will deploy."
                        },
                        "hostId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the host resource on which this virtual machine will deploy."
                        },
                        "datastoreId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the datastore resource on which the data for the virtual machine will be kept."
                        }
                      }
                    },
                    "osProfile": {
                      "description": "OS properties.",
                      "type": "object",
                      "properties": {
                        "computerName": {
                          "description": "Gets or sets computer name.",
                          "type": "string"
                        },
                        "adminUsername": {
                          "description": "Gets or sets administrator username.",
                          "type": "string"
                        },
                        "adminPassword": {
                          "description": "Sets administrator password.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        },
                        "guestId": {
                          "description": "Gets or sets the guestId.",
                          "type": "string"
                        },
                        "osType": {
                          "description": "Gets or sets the type of the os.",
                          "enum": [
                            "Windows",
                            "Linux",
                            "Other"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "OsType"
                          }
                        },
                        "osSku": {
                          "description": "Gets or sets os sku.",
                          "type": "string",
                          "readOnly": true
                        },
                        "toolsRunningStatus": {
                          "description": "Gets or sets the current running status of VMware Tools running in the guest operating system.",
                          "type": "string",
                          "readOnly": true
                        },
                        "toolsVersionStatus": {
                          "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                          "type": "string",
                          "readOnly": true
                        },
                        "toolsVersion": {
                          "description": "Gets or sets the current version of VMware Tools.",
                          "type": "string",
                          "readOnly": true
                        },
                        "windowsConfiguration": {
                          "description": "Windows Configuration.",
                          "type": "object",
                          "properties": {
                            "fullName": {
                              "description": "Sets full name of the owner of the vm.",
                              "type": "string"
                            },
                            "orgName": {
                              "description": "Sets org name to which the owner of the vm belongs.",
                              "type": "string"
                            },
                            "domainName": {
                              "description": "Sets domain name that vm should join.",
                              "type": "string"
                            },
                            "domainUsername": {
                              "description": "Sets domain username.",
                              "type": "string"
                            },
                            "domainUserPassword": {
                              "description": "Sets domain user password.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "workGroupName": {
                              "description": "Sets work group name that vm should join.",
                              "type": "string"
                            },
                            "productId": {
                              "description": "Sets product id of the vm.",
                              "type": "string"
                            },
                            "autoLogon": {
                              "description": "Sets a value indicating whether auto logon is enabled.",
                              "type": "boolean"
                            },
                            "autoLogonCount": {
                              "format": "int32",
                              "description": "Sets auto logon count.",
                              "type": "integer"
                            },
                            "timeZone": {
                              "type": "string",
                              "description": "Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\". Time zone name correspond to time zones listed at Microsoft Time Zone name values(https://learn.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11))."
                            },
                            "firstLogonCommands": {
                              "description": "Sets first logon commands",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "hardwareProfile": {
                      "description": "Hardware properties.",
                      "type": "object",
                      "properties": {
                        "memorySizeMB": {
                          "format": "int32",
                          "description": "Gets or sets memory size in MBs for the vm.",
                          "type": "integer"
                        },
                        "numCPUs": {
                          "format": "int32",
                          "description": "Gets or sets the number of vCPUs for the vm.",
                          "type": "integer"
                        },
                        "numCoresPerSocket": {
                          "format": "int32",
                          "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.",
                          "type": "integer"
                        },
                        "cpuHotAddEnabled": {
                          "description": "Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "cpuHotRemoveEnabled": {
                          "description": "Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "memoryHotAddEnabled": {
                          "description": "Gets or sets a value indicating whether memory can be added while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        }
                      }
                    },
                    "networkProfile": {
                      "description": "Network properties.",
                      "type": "object",
                      "properties": {
                        "networkInterfaces": {
                          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "Network Interface model",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Gets or sets the name of the network interface.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "ipAddresses": {
                                "description": "Gets or sets the nic ip addresses.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "macAddress": {
                                "description": "Gets or sets the NIC MAC address.",
                                "type": "string",
                                "readOnly": true
                              },
                              "networkId": {
                                "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                                "type": "string"
                              },
                              "nicType": {
                                "description": "NIC type",
                                "type": "string",
                                "enum": [
                                  "vmxnet3",
                                  "vmxnet2",
                                  "vmxnet",
                                  "e1000",
                                  "e1000e",
                                  "pcnet32"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "NICType"
                                }
                              },
                              "powerOnBoot": {
                                "description": "Gets or sets the power on boot.",
                                "enum": [
                                  "enabled",
                                  "disabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "PowerOnBootOption"
                                }
                              },
                              "networkMoRefId": {
                                "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "networkMoName": {
                                "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "deviceKey": {
                                "format": "int32",
                                "description": "Gets or sets the device key value.",
                                "type": "integer"
                              },
                              "ipSettings": {
                                "description": "Gets or sets the ipsettings.",
                                "type": "object",
                                "properties": {
                                  "allocationMethod": {
                                    "description": "Gets or sets the nic allocation method.",
                                    "enum": [
                                      "unset",
                                      "dynamic",
                                      "static",
                                      "linklayer",
                                      "random",
                                      "other"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "IPAddressAllocationMethod"
                                    }
                                  },
                                  "dnsServers": {
                                    "description": "Gets or sets the dns servers.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "gateway": {
                                    "description": "Gets or sets the gateway.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "ipAddress": {
                                    "description": "Gets or sets the ip address for the nic.",
                                    "type": "string"
                                  },
                                  "subnetMask": {
                                    "description": "Gets or sets the mask.",
                                    "type": "string"
                                  },
                                  "primaryWinsServer": {
                                    "description": "Gets or sets the primary server.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "secondaryWinsServer": {
                                    "description": "Gets or sets the secondary server.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "ipAddressInfo": {
                                    "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                                    "type": "array",
                                    "items": {
                                      "description": "IP address information for a virtual network adapter reported by the fabric.",
                                      "type": "object",
                                      "properties": {
                                        "allocationMethod": {
                                          "description": "Gets the ip address allocation method.",
                                          "type": "string",
                                          "readOnly": true
                                        },
                                        "ipAddress": {
                                          "description": "Gets the ip address for the nic.",
                                          "type": "string",
                                          "readOnly": true
                                        },
                                        "subnetMask": {
                                          "description": "Gets the mask.",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "Storage properties.",
                      "type": "object",
                      "properties": {
                        "disks": {
                          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "Virtual disk model",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Gets or sets the name of the virtual disk.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Gets or sets the label of the virtual disk in vCenter.",
                                "type": "string",
                                "readOnly": true
                              },
                              "diskObjectId": {
                                "description": "Gets or sets the disk object id.",
                                "type": "string",
                                "readOnly": true
                              },
                              "diskSizeGB": {
                                "format": "int32",
                                "description": "Gets or sets the disk total size.",
                                "type": "integer"
                              },
                              "deviceKey": {
                                "format": "int32",
                                "description": "Gets or sets the device key value.",
                                "type": "integer"
                              },
                              "diskMode": {
                                "description": "Gets or sets the disk mode.",
                                "enum": [
                                  "persistent",
                                  "independent_persistent",
                                  "independent_nonpersistent"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "DiskMode"
                                }
                              },
                              "controllerKey": {
                                "description": "Gets or sets the controller id.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "unitNumber": {
                                "description": "Gets or sets the unit number of the disk on the controller.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "deviceName": {
                                "description": "Gets or sets the device name.",
                                "type": "string"
                              },
                              "diskType": {
                                "description": "Gets or sets the disk backing type.",
                                "enum": [
                                  "flat",
                                  "pmem",
                                  "rawphysical",
                                  "rawvirtual",
                                  "sparse",
                                  "sesparse",
                                  "unknown"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "DiskType"
                                }
                              }
                            }
                          }
                        },
                        "scsiControllers": {
                          "description": "Gets or sets the list of virtual SCSI controllers associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "This data object type contains the properties of a SCSI controller device attached to a virtual machine that is reported by the controller.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Gets or sets the controller type.",
                                "enum": [
                                  "lsilogic",
                                  "buslogic",
                                  "pvscsi",
                                  "lsilogicsas"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "SCSIControllerType"
                                }
                              },
                              "controllerKey": {
                                "format": "int32",
                                "description": "Gets or sets the key of the controller.",
                                "type": "integer"
                              },
                              "busNumber": {
                                "format": "int32",
                                "description": "Gets or sets the bus number of the controller.",
                                "type": "integer"
                              },
                              "scsiCtlrUnitNumber": {
                                "format": "int32",
                                "description": "Gets or sets the SCSI controller unit number.",
                                "type": "integer"
                              },
                              "sharing": {
                                "description": "Gets or sets the sharing mode.",
                                "enum": [
                                  "noSharing",
                                  "physicalSharing",
                                  "virtualSharing"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "VirtualSCSISharing"
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "securityProfile": {
                      "description": "Gets the security profile.",
                      "type": "object",
                      "properties": {
                        "uefiSettings": {
                          "description": "Specifies the security settings like secure boot used while creating the virtual machine.",
                          "type": "object",
                          "properties": {
                            "secureBootEnabled": {
                              "type": "boolean",
                              "description": "Specifies whether secure boot should be enabled on the virtual machine."
                            }
                          }
                        }
                      }
                    },
                    "infrastructureProfile": {
                      "description": "Gets the infrastructure profile.",
                      "type": "object",
                      "properties": {
                        "templateId": {
                          "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine.",
                          "type": "string"
                        },
                        "vCenterId": {
                          "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                          "type": "string"
                        },
                        "moRefId": {
                          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.",
                          "type": "string",
                          "readOnly": true
                        },
                        "inventoryItemId": {
                          "description": "Gets or sets the inventory Item ID for the virtual machine.",
                          "type": "string"
                        },
                        "moName": {
                          "description": "Gets or sets the vCenter Managed Object name for the virtual machine.",
                          "type": "string",
                          "readOnly": true
                        },
                        "folderPath": {
                          "description": "Gets or sets the folder path of the vm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "instanceUuid": {
                          "description": "Gets or sets the instance uuid of the vm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "smbiosUuid": {
                          "type": "string",
                          "description": "Gets or sets the SMBIOS UUID of the vm."
                        },
                        "firmwareType": {
                          "description": "Firmware type",
                          "type": "string",
                          "enum": [
                            "bios",
                            "efi"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "FirmwareType"
                          }
                        },
                        "customResourceName": {
                          "description": "Gets the name of the corresponding resource in Kubernetes.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "powerState": {
                      "description": "Gets the power state of the virtual machine.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceUid": {
                      "description": "Gets or sets a unique identifier for the vm resource.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Define the virtualMachineInstance.",
              "required": [
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "placementProfile": {
                      "description": "Placement properties.",
                      "type": "object",
                      "properties": {
                        "resourcePoolId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will deploy."
                        },
                        "clusterId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the cluster resource on which this virtual machine will deploy."
                        },
                        "hostId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the host resource on which this virtual machine will deploy."
                        },
                        "datastoreId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the datastore resource on which the data for the virtual machine will be kept."
                        }
                      }
                    },
                    "osProfile": {
                      "description": "OS properties.",
                      "type": "object",
                      "properties": {
                        "computerName": {
                          "description": "Gets or sets computer name.",
                          "type": "string"
                        },
                        "adminUsername": {
                          "description": "Gets or sets administrator username.",
                          "type": "string"
                        },
                        "adminPassword": {
                          "description": "Sets administrator password.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        },
                        "guestId": {
                          "description": "Gets or sets the guestId.",
                          "type": "string"
                        },
                        "osType": {
                          "description": "Gets or sets the type of the os.",
                          "enum": [
                            "Windows",
                            "Linux",
                            "Other"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "OsType"
                          }
                        },
                        "osSku": {
                          "description": "Gets or sets os sku.",
                          "type": "string",
                          "readOnly": true
                        },
                        "toolsRunningStatus": {
                          "description": "Gets or sets the current running status of VMware Tools running in the guest operating system.",
                          "type": "string",
                          "readOnly": true
                        },
                        "toolsVersionStatus": {
                          "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                          "type": "string",
                          "readOnly": true
                        },
                        "toolsVersion": {
                          "description": "Gets or sets the current version of VMware Tools.",
                          "type": "string",
                          "readOnly": true
                        },
                        "windowsConfiguration": {
                          "description": "Windows Configuration.",
                          "type": "object",
                          "properties": {
                            "fullName": {
                              "description": "Sets full name of the owner of the vm.",
                              "type": "string"
                            },
                            "orgName": {
                              "description": "Sets org name to which the owner of the vm belongs.",
                              "type": "string"
                            },
                            "domainName": {
                              "description": "Sets domain name that vm should join.",
                              "type": "string"
                            },
                            "domainUsername": {
                              "description": "Sets domain username.",
                              "type": "string"
                            },
                            "domainUserPassword": {
                              "description": "Sets domain user password.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "workGroupName": {
                              "description": "Sets work group name that vm should join.",
                              "type": "string"
                            },
                            "productId": {
                              "description": "Sets product id of the vm.",
                              "type": "string"
                            },
                            "autoLogon": {
                              "description": "Sets a value indicating whether auto logon is enabled.",
                              "type": "boolean"
                            },
                            "autoLogonCount": {
                              "format": "int32",
                              "description": "Sets auto logon count.",
                              "type": "integer"
                            },
                            "timeZone": {
                              "type": "string",
                              "description": "Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\". Time zone name correspond to time zones listed at Microsoft Time Zone name values(https://learn.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11))."
                            },
                            "firstLogonCommands": {
                              "description": "Sets first logon commands",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "hardwareProfile": {
                      "description": "Hardware properties.",
                      "type": "object",
                      "properties": {
                        "memorySizeMB": {
                          "format": "int32",
                          "description": "Gets or sets memory size in MBs for the vm.",
                          "type": "integer"
                        },
                        "numCPUs": {
                          "format": "int32",
                          "description": "Gets or sets the number of vCPUs for the vm.",
                          "type": "integer"
                        },
                        "numCoresPerSocket": {
                          "format": "int32",
                          "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.",
                          "type": "integer"
                        },
                        "cpuHotAddEnabled": {
                          "description": "Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "cpuHotRemoveEnabled": {
                          "description": "Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "memoryHotAddEnabled": {
                          "description": "Gets or sets a value indicating whether memory can be added while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        }
                      }
                    },
                    "networkProfile": {
                      "description": "Network properties.",
                      "type": "object",
                      "properties": {
                        "networkInterfaces": {
                          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "Network Interface model",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Gets or sets the name of the network interface.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "ipAddresses": {
                                "description": "Gets or sets the nic ip addresses.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "macAddress": {
                                "description": "Gets or sets the NIC MAC address.",
                                "type": "string",
                                "readOnly": true
                              },
                              "networkId": {
                                "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                                "type": "string"
                              },
                              "nicType": {
                                "description": "NIC type",
                                "type": "string",
                                "enum": [
                                  "vmxnet3",
                                  "vmxnet2",
                                  "vmxnet",
                                  "e1000",
                                  "e1000e",
                                  "pcnet32"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "NICType"
                                }
                              },
                              "powerOnBoot": {
                                "description": "Gets or sets the power on boot.",
                                "enum": [
                                  "enabled",
                                  "disabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "PowerOnBootOption"
                                }
                              },
                              "networkMoRefId": {
                                "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "networkMoName": {
                                "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "deviceKey": {
                                "format": "int32",
                                "description": "Gets or sets the device key value.",
                                "type": "integer"
                              },
                              "ipSettings": {
                                "description": "Gets or sets the ipsettings.",
                                "type": "object",
                                "properties": {
                                  "allocationMethod": {
                                    "description": "Gets or sets the nic allocation method.",
                                    "enum": [
                                      "unset",
                                      "dynamic",
                                      "static",
                                      "linklayer",
                                      "random",
                                      "other"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "IPAddressAllocationMethod"
                                    }
                                  },
                                  "dnsServers": {
                                    "description": "Gets or sets the dns servers.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "gateway": {
                                    "description": "Gets or sets the gateway.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "ipAddress": {
                                    "description": "Gets or sets the ip address for the nic.",
                                    "type": "string"
                                  },
                                  "subnetMask": {
                                    "description": "Gets or sets the mask.",
                                    "type": "string"
                                  },
                                  "primaryWinsServer": {
                                    "description": "Gets or sets the primary server.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "secondaryWinsServer": {
                                    "description": "Gets or sets the secondary server.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "ipAddressInfo": {
                                    "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                                    "type": "array",
                                    "items": {
                                      "description": "IP address information for a virtual network adapter reported by the fabric.",
                                      "type": "object",
                                      "properties": {
                                        "allocationMethod": {
                                          "description": "Gets the ip address allocation method.",
                                          "type": "string",
                                          "readOnly": true
                                        },
                                        "ipAddress": {
                                          "description": "Gets the ip address for the nic.",
                                          "type": "string",
                                          "readOnly": true
                                        },
                                        "subnetMask": {
                                          "description": "Gets the mask.",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "Storage properties.",
                      "type": "object",
                      "properties": {
                        "disks": {
                          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "Virtual disk model",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Gets or sets the name of the virtual disk.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Gets or sets the label of the virtual disk in vCenter.",
                                "type": "string",
                                "readOnly": true
                              },
                              "diskObjectId": {
                                "description": "Gets or sets the disk object id.",
                                "type": "string",
                                "readOnly": true
                              },
                              "diskSizeGB": {
                                "format": "int32",
                                "description": "Gets or sets the disk total size.",
                                "type": "integer"
                              },
                              "deviceKey": {
                                "format": "int32",
                                "description": "Gets or sets the device key value.",
                                "type": "integer"
                              },
                              "diskMode": {
                                "description": "Gets or sets the disk mode.",
                                "enum": [
                                  "persistent",
                                  "independent_persistent",
                                  "independent_nonpersistent"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "DiskMode"
                                }
                              },
                              "controllerKey": {
                                "description": "Gets or sets the controller id.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "unitNumber": {
                                "description": "Gets or sets the unit number of the disk on the controller.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "deviceName": {
                                "description": "Gets or sets the device name.",
                                "type": "string"
                              },
                              "diskType": {
                                "description": "Gets or sets the disk backing type.",
                                "enum": [
                                  "flat",
                                  "pmem",
                                  "rawphysical",
                                  "rawvirtual",
                                  "sparse",
                                  "sesparse",
                                  "unknown"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "DiskType"
                                }
                              }
                            }
                          }
                        },
                        "scsiControllers": {
                          "description": "Gets or sets the list of virtual SCSI controllers associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "This data object type contains the properties of a SCSI controller device attached to a virtual machine that is reported by the controller.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Gets or sets the controller type.",
                                "enum": [
                                  "lsilogic",
                                  "buslogic",
                                  "pvscsi",
                                  "lsilogicsas"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "SCSIControllerType"
                                }
                              },
                              "controllerKey": {
                                "format": "int32",
                                "description": "Gets or sets the key of the controller.",
                                "type": "integer"
                              },
                              "busNumber": {
                                "format": "int32",
                                "description": "Gets or sets the bus number of the controller.",
                                "type": "integer"
                              },
                              "scsiCtlrUnitNumber": {
                                "format": "int32",
                                "description": "Gets or sets the SCSI controller unit number.",
                                "type": "integer"
                              },
                              "sharing": {
                                "description": "Gets or sets the sharing mode.",
                                "enum": [
                                  "noSharing",
                                  "physicalSharing",
                                  "virtualSharing"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "VirtualSCSISharing"
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "securityProfile": {
                      "description": "Gets the security profile.",
                      "type": "object",
                      "properties": {
                        "uefiSettings": {
                          "description": "Specifies the security settings like secure boot used while creating the virtual machine.",
                          "type": "object",
                          "properties": {
                            "secureBootEnabled": {
                              "type": "boolean",
                              "description": "Specifies whether secure boot should be enabled on the virtual machine."
                            }
                          }
                        }
                      }
                    },
                    "infrastructureProfile": {
                      "description": "Gets the infrastructure profile.",
                      "type": "object",
                      "properties": {
                        "templateId": {
                          "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine.",
                          "type": "string"
                        },
                        "vCenterId": {
                          "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                          "type": "string"
                        },
                        "moRefId": {
                          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.",
                          "type": "string",
                          "readOnly": true
                        },
                        "inventoryItemId": {
                          "description": "Gets or sets the inventory Item ID for the virtual machine.",
                          "type": "string"
                        },
                        "moName": {
                          "description": "Gets or sets the vCenter Managed Object name for the virtual machine.",
                          "type": "string",
                          "readOnly": true
                        },
                        "folderPath": {
                          "description": "Gets or sets the folder path of the vm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "instanceUuid": {
                          "description": "Gets or sets the instance uuid of the vm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "smbiosUuid": {
                          "type": "string",
                          "description": "Gets or sets the SMBIOS UUID of the vm."
                        },
                        "firmwareType": {
                          "description": "Firmware type",
                          "type": "string",
                          "enum": [
                            "bios",
                            "efi"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "FirmwareType"
                          }
                        },
                        "customResourceName": {
                          "description": "Gets the name of the corresponding resource in Kubernetes.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "powerState": {
                      "description": "Gets the power state of the virtual machine.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceUid": {
                      "description": "Gets or sets a unique identifier for the vm resource.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Define the virtualMachineInstance.",
              "required": [
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "placementProfile": {
                      "description": "Placement properties.",
                      "type": "object",
                      "properties": {
                        "resourcePoolId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will deploy."
                        },
                        "clusterId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the cluster resource on which this virtual machine will deploy."
                        },
                        "hostId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the host resource on which this virtual machine will deploy."
                        },
                        "datastoreId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the datastore resource on which the data for the virtual machine will be kept."
                        }
                      }
                    },
                    "osProfile": {
                      "description": "OS properties.",
                      "type": "object",
                      "properties": {
                        "computerName": {
                          "description": "Gets or sets computer name.",
                          "type": "string"
                        },
                        "adminUsername": {
                          "description": "Gets or sets administrator username.",
                          "type": "string"
                        },
                        "adminPassword": {
                          "description": "Sets administrator password.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        },
                        "guestId": {
                          "description": "Gets or sets the guestId.",
                          "type": "string"
                        },
                        "osType": {
                          "description": "Gets or sets the type of the os.",
                          "enum": [
                            "Windows",
                            "Linux",
                            "Other"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "OsType"
                          }
                        },
                        "osSku": {
                          "description": "Gets or sets os sku.",
                          "type": "string",
                          "readOnly": true
                        },
                        "toolsRunningStatus": {
                          "description": "Gets or sets the current running status of VMware Tools running in the guest operating system.",
                          "type": "string",
                          "readOnly": true
                        },
                        "toolsVersionStatus": {
                          "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                          "type": "string",
                          "readOnly": true
                        },
                        "toolsVersion": {
                          "description": "Gets or sets the current version of VMware Tools.",
                          "type": "string",
                          "readOnly": true
                        },
                        "windowsConfiguration": {
                          "description": "Windows Configuration.",
                          "type": "object",
                          "properties": {
                            "fullName": {
                              "description": "Sets full name of the owner of the vm.",
                              "type": "string"
                            },
                            "orgName": {
                              "description": "Sets org name to which the owner of the vm belongs.",
                              "type": "string"
                            },
                            "domainName": {
                              "description": "Sets domain name that vm should join.",
                              "type": "string"
                            },
                            "domainUsername": {
                              "description": "Sets domain username.",
                              "type": "string"
                            },
                            "domainUserPassword": {
                              "description": "Sets domain user password.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "workGroupName": {
                              "description": "Sets work group name that vm should join.",
                              "type": "string"
                            },
                            "productId": {
                              "description": "Sets product id of the vm.",
                              "type": "string"
                            },
                            "autoLogon": {
                              "description": "Sets a value indicating whether auto logon is enabled.",
                              "type": "boolean"
                            },
                            "autoLogonCount": {
                              "format": "int32",
                              "description": "Sets auto logon count.",
                              "type": "integer"
                            },
                            "timeZone": {
                              "type": "string",
                              "description": "Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\". Time zone name correspond to time zones listed at Microsoft Time Zone name values(https://learn.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11))."
                            },
                            "firstLogonCommands": {
                              "description": "Sets first logon commands",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "hardwareProfile": {
                      "description": "Hardware properties.",
                      "type": "object",
                      "properties": {
                        "memorySizeMB": {
                          "format": "int32",
                          "description": "Gets or sets memory size in MBs for the vm.",
                          "type": "integer"
                        },
                        "numCPUs": {
                          "format": "int32",
                          "description": "Gets or sets the number of vCPUs for the vm.",
                          "type": "integer"
                        },
                        "numCoresPerSocket": {
                          "format": "int32",
                          "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.",
                          "type": "integer"
                        },
                        "cpuHotAddEnabled": {
                          "description": "Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "cpuHotRemoveEnabled": {
                          "description": "Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "memoryHotAddEnabled": {
                          "description": "Gets or sets a value indicating whether memory can be added while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        }
                      }
                    },
                    "networkProfile": {
                      "description": "Network properties.",
                      "type": "object",
                      "properties": {
                        "networkInterfaces": {
                          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "Network Interface model",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Gets or sets the name of the network interface.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "ipAddresses": {
                                "description": "Gets or sets the nic ip addresses.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "macAddress": {
                                "description": "Gets or sets the NIC MAC address.",
                                "type": "string",
                                "readOnly": true
                              },
                              "networkId": {
                                "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                                "type": "string"
                              },
                              "nicType": {
                                "description": "NIC type",
                                "type": "string",
                                "enum": [
                                  "vmxnet3",
                                  "vmxnet2",
                                  "vmxnet",
                                  "e1000",
                                  "e1000e",
                                  "pcnet32"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "NICType"
                                }
                              },
                              "powerOnBoot": {
                                "description": "Gets or sets the power on boot.",
                                "enum": [
                                  "enabled",
                                  "disabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "PowerOnBootOption"
                                }
                              },
                              "networkMoRefId": {
                                "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "networkMoName": {
                                "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "deviceKey": {
                                "format": "int32",
                                "description": "Gets or sets the device key value.",
                                "type": "integer"
                              },
                              "ipSettings": {
                                "description": "Gets or sets the ipsettings.",
                                "type": "object",
                                "properties": {
                                  "allocationMethod": {
                                    "description": "Gets or sets the nic allocation method.",
                                    "enum": [
                                      "unset",
                                      "dynamic",
                                      "static",
                                      "linklayer",
                                      "random",
                                      "other"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "IPAddressAllocationMethod"
                                    }
                                  },
                                  "dnsServers": {
                                    "description": "Gets or sets the dns servers.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "gateway": {
                                    "description": "Gets or sets the gateway.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "ipAddress": {
                                    "description": "Gets or sets the ip address for the nic.",
                                    "type": "string"
                                  },
                                  "subnetMask": {
                                    "description": "Gets or sets the mask.",
                                    "type": "string"
                                  },
                                  "primaryWinsServer": {
                                    "description": "Gets or sets the primary server.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "secondaryWinsServer": {
                                    "description": "Gets or sets the secondary server.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "ipAddressInfo": {
                                    "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                                    "type": "array",
                                    "items": {
                                      "description": "IP address information for a virtual network adapter reported by the fabric.",
                                      "type": "object",
                                      "properties": {
                                        "allocationMethod": {
                                          "description": "Gets the ip address allocation method.",
                                          "type": "string",
                                          "readOnly": true
                                        },
                                        "ipAddress": {
                                          "description": "Gets the ip address for the nic.",
                                          "type": "string",
                                          "readOnly": true
                                        },
                                        "subnetMask": {
                                          "description": "Gets the mask.",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "Storage properties.",
                      "type": "object",
                      "properties": {
                        "disks": {
                          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "Virtual disk model",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Gets or sets the name of the virtual disk.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Gets or sets the label of the virtual disk in vCenter.",
                                "type": "string",
                                "readOnly": true
                              },
                              "diskObjectId": {
                                "description": "Gets or sets the disk object id.",
                                "type": "string",
                                "readOnly": true
                              },
                              "diskSizeGB": {
                                "format": "int32",
                                "description": "Gets or sets the disk total size.",
                                "type": "integer"
                              },
                              "deviceKey": {
                                "format": "int32",
                                "description": "Gets or sets the device key value.",
                                "type": "integer"
                              },
                              "diskMode": {
                                "description": "Gets or sets the disk mode.",
                                "enum": [
                                  "persistent",
                                  "independent_persistent",
                                  "independent_nonpersistent"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "DiskMode"
                                }
                              },
                              "controllerKey": {
                                "description": "Gets or sets the controller id.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "unitNumber": {
                                "description": "Gets or sets the unit number of the disk on the controller.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "deviceName": {
                                "description": "Gets or sets the device name.",
                                "type": "string"
                              },
                              "diskType": {
                                "description": "Gets or sets the disk backing type.",
                                "enum": [
                                  "flat",
                                  "pmem",
                                  "rawphysical",
                                  "rawvirtual",
                                  "sparse",
                                  "sesparse",
                                  "unknown"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "DiskType"
                                }
                              }
                            }
                          }
                        },
                        "scsiControllers": {
                          "description": "Gets or sets the list of virtual SCSI controllers associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "This data object type contains the properties of a SCSI controller device attached to a virtual machine that is reported by the controller.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Gets or sets the controller type.",
                                "enum": [
                                  "lsilogic",
                                  "buslogic",
                                  "pvscsi",
                                  "lsilogicsas"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "SCSIControllerType"
                                }
                              },
                              "controllerKey": {
                                "format": "int32",
                                "description": "Gets or sets the key of the controller.",
                                "type": "integer"
                              },
                              "busNumber": {
                                "format": "int32",
                                "description": "Gets or sets the bus number of the controller.",
                                "type": "integer"
                              },
                              "scsiCtlrUnitNumber": {
                                "format": "int32",
                                "description": "Gets or sets the SCSI controller unit number.",
                                "type": "integer"
                              },
                              "sharing": {
                                "description": "Gets or sets the sharing mode.",
                                "enum": [
                                  "noSharing",
                                  "physicalSharing",
                                  "virtualSharing"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "VirtualSCSISharing"
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "securityProfile": {
                      "description": "Gets the security profile.",
                      "type": "object",
                      "properties": {
                        "uefiSettings": {
                          "description": "Specifies the security settings like secure boot used while creating the virtual machine.",
                          "type": "object",
                          "properties": {
                            "secureBootEnabled": {
                              "type": "boolean",
                              "description": "Specifies whether secure boot should be enabled on the virtual machine."
                            }
                          }
                        }
                      }
                    },
                    "infrastructureProfile": {
                      "description": "Gets the infrastructure profile.",
                      "type": "object",
                      "properties": {
                        "templateId": {
                          "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine.",
                          "type": "string"
                        },
                        "vCenterId": {
                          "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                          "type": "string"
                        },
                        "moRefId": {
                          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.",
                          "type": "string",
                          "readOnly": true
                        },
                        "inventoryItemId": {
                          "description": "Gets or sets the inventory Item ID for the virtual machine.",
                          "type": "string"
                        },
                        "moName": {
                          "description": "Gets or sets the vCenter Managed Object name for the virtual machine.",
                          "type": "string",
                          "readOnly": true
                        },
                        "folderPath": {
                          "description": "Gets or sets the folder path of the vm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "instanceUuid": {
                          "description": "Gets or sets the instance uuid of the vm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "smbiosUuid": {
                          "type": "string",
                          "description": "Gets or sets the SMBIOS UUID of the vm."
                        },
                        "firmwareType": {
                          "description": "Firmware type",
                          "type": "string",
                          "enum": [
                            "bios",
                            "efi"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "FirmwareType"
                          }
                        },
                        "customResourceName": {
                          "description": "Gets the name of the corresponding resource in Kubernetes.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "powerState": {
                      "description": "Gets the power state of the virtual machine.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceUid": {
                      "description": "Gets or sets a unique identifier for the vm resource.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "VirtualMachineInstances"
        ],
        "operationId": "VirtualMachineInstances_Get",
        "summary": "Gets a virtual machine.",
        "description": "Retrieves information about a virtual machine instance.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceUri",
            "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Define the virtualMachineInstance.",
              "required": [
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "placementProfile": {
                      "description": "Placement properties.",
                      "type": "object",
                      "properties": {
                        "resourcePoolId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will deploy."
                        },
                        "clusterId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the cluster resource on which this virtual machine will deploy."
                        },
                        "hostId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the host resource on which this virtual machine will deploy."
                        },
                        "datastoreId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the datastore resource on which the data for the virtual machine will be kept."
                        }
                      }
                    },
                    "osProfile": {
                      "description": "OS properties.",
                      "type": "object",
                      "properties": {
                        "computerName": {
                          "description": "Gets or sets computer name.",
                          "type": "string"
                        },
                        "adminUsername": {
                          "description": "Gets or sets administrator username.",
                          "type": "string"
                        },
                        "adminPassword": {
                          "description": "Sets administrator password.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        },
                        "guestId": {
                          "description": "Gets or sets the guestId.",
                          "type": "string"
                        },
                        "osType": {
                          "description": "Gets or sets the type of the os.",
                          "enum": [
                            "Windows",
                            "Linux",
                            "Other"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "OsType"
                          }
                        },
                        "osSku": {
                          "description": "Gets or sets os sku.",
                          "type": "string",
                          "readOnly": true
                        },
                        "toolsRunningStatus": {
                          "description": "Gets or sets the current running status of VMware Tools running in the guest operating system.",
                          "type": "string",
                          "readOnly": true
                        },
                        "toolsVersionStatus": {
                          "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                          "type": "string",
                          "readOnly": true
                        },
                        "toolsVersion": {
                          "description": "Gets or sets the current version of VMware Tools.",
                          "type": "string",
                          "readOnly": true
                        },
                        "windowsConfiguration": {
                          "description": "Windows Configuration.",
                          "type": "object",
                          "properties": {
                            "fullName": {
                              "description": "Sets full name of the owner of the vm.",
                              "type": "string"
                            },
                            "orgName": {
                              "description": "Sets org name to which the owner of the vm belongs.",
                              "type": "string"
                            },
                            "domainName": {
                              "description": "Sets domain name that vm should join.",
                              "type": "string"
                            },
                            "domainUsername": {
                              "description": "Sets domain username.",
                              "type": "string"
                            },
                            "domainUserPassword": {
                              "description": "Sets domain user password.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "workGroupName": {
                              "description": "Sets work group name that vm should join.",
                              "type": "string"
                            },
                            "productId": {
                              "description": "Sets product id of the vm.",
                              "type": "string"
                            },
                            "autoLogon": {
                              "description": "Sets a value indicating whether auto logon is enabled.",
                              "type": "boolean"
                            },
                            "autoLogonCount": {
                              "format": "int32",
                              "description": "Sets auto logon count.",
                              "type": "integer"
                            },
                            "timeZone": {
                              "type": "string",
                              "description": "Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\". Time zone name correspond to time zones listed at Microsoft Time Zone name values(https://learn.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11))."
                            },
                            "firstLogonCommands": {
                              "description": "Sets first logon commands",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "hardwareProfile": {
                      "description": "Hardware properties.",
                      "type": "object",
                      "properties": {
                        "memorySizeMB": {
                          "format": "int32",
                          "description": "Gets or sets memory size in MBs for the vm.",
                          "type": "integer"
                        },
                        "numCPUs": {
                          "format": "int32",
                          "description": "Gets or sets the number of vCPUs for the vm.",
                          "type": "integer"
                        },
                        "numCoresPerSocket": {
                          "format": "int32",
                          "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.",
                          "type": "integer"
                        },
                        "cpuHotAddEnabled": {
                          "description": "Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "cpuHotRemoveEnabled": {
                          "description": "Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "memoryHotAddEnabled": {
                          "description": "Gets or sets a value indicating whether memory can be added while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        }
                      }
                    },
                    "networkProfile": {
                      "description": "Network properties.",
                      "type": "object",
                      "properties": {
                        "networkInterfaces": {
                          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "Network Interface model",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Gets or sets the name of the network interface.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "ipAddresses": {
                                "description": "Gets or sets the nic ip addresses.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "macAddress": {
                                "description": "Gets or sets the NIC MAC address.",
                                "type": "string",
                                "readOnly": true
                              },
                              "networkId": {
                                "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                                "type": "string"
                              },
                              "nicType": {
                                "description": "NIC type",
                                "type": "string",
                                "enum": [
                                  "vmxnet3",
                                  "vmxnet2",
                                  "vmxnet",
                                  "e1000",
                                  "e1000e",
                                  "pcnet32"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "NICType"
                                }
                              },
                              "powerOnBoot": {
                                "description": "Gets or sets the power on boot.",
                                "enum": [
                                  "enabled",
                                  "disabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "PowerOnBootOption"
                                }
                              },
                              "networkMoRefId": {
                                "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "networkMoName": {
                                "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "deviceKey": {
                                "format": "int32",
                                "description": "Gets or sets the device key value.",
                                "type": "integer"
                              },
                              "ipSettings": {
                                "description": "Gets or sets the ipsettings.",
                                "type": "object",
                                "properties": {
                                  "allocationMethod": {
                                    "description": "Gets or sets the nic allocation method.",
                                    "enum": [
                                      "unset",
                                      "dynamic",
                                      "static",
                                      "linklayer",
                                      "random",
                                      "other"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "IPAddressAllocationMethod"
                                    }
                                  },
                                  "dnsServers": {
                                    "description": "Gets or sets the dns servers.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "gateway": {
                                    "description": "Gets or sets the gateway.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "ipAddress": {
                                    "description": "Gets or sets the ip address for the nic.",
                                    "type": "string"
                                  },
                                  "subnetMask": {
                                    "description": "Gets or sets the mask.",
                                    "type": "string"
                                  },
                                  "primaryWinsServer": {
                                    "description": "Gets or sets the primary server.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "secondaryWinsServer": {
                                    "description": "Gets or sets the secondary server.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "ipAddressInfo": {
                                    "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                                    "type": "array",
                                    "items": {
                                      "description": "IP address information for a virtual network adapter reported by the fabric.",
                                      "type": "object",
                                      "properties": {
                                        "allocationMethod": {
                                          "description": "Gets the ip address allocation method.",
                                          "type": "string",
                                          "readOnly": true
                                        },
                                        "ipAddress": {
                                          "description": "Gets the ip address for the nic.",
                                          "type": "string",
                                          "readOnly": true
                                        },
                                        "subnetMask": {
                                          "description": "Gets the mask.",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "Storage properties.",
                      "type": "object",
                      "properties": {
                        "disks": {
                          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "Virtual disk model",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Gets or sets the name of the virtual disk.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Gets or sets the label of the virtual disk in vCenter.",
                                "type": "string",
                                "readOnly": true
                              },
                              "diskObjectId": {
                                "description": "Gets or sets the disk object id.",
                                "type": "string",
                                "readOnly": true
                              },
                              "diskSizeGB": {
                                "format": "int32",
                                "description": "Gets or sets the disk total size.",
                                "type": "integer"
                              },
                              "deviceKey": {
                                "format": "int32",
                                "description": "Gets or sets the device key value.",
                                "type": "integer"
                              },
                              "diskMode": {
                                "description": "Gets or sets the disk mode.",
                                "enum": [
                                  "persistent",
                                  "independent_persistent",
                                  "independent_nonpersistent"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "DiskMode"
                                }
                              },
                              "controllerKey": {
                                "description": "Gets or sets the controller id.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "unitNumber": {
                                "description": "Gets or sets the unit number of the disk on the controller.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "deviceName": {
                                "description": "Gets or sets the device name.",
                                "type": "string"
                              },
                              "diskType": {
                                "description": "Gets or sets the disk backing type.",
                                "enum": [
                                  "flat",
                                  "pmem",
                                  "rawphysical",
                                  "rawvirtual",
                                  "sparse",
                                  "sesparse",
                                  "unknown"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "DiskType"
                                }
                              }
                            }
                          }
                        },
                        "scsiControllers": {
                          "description": "Gets or sets the list of virtual SCSI controllers associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "This data object type contains the properties of a SCSI controller device attached to a virtual machine that is reported by the controller.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Gets or sets the controller type.",
                                "enum": [
                                  "lsilogic",
                                  "buslogic",
                                  "pvscsi",
                                  "lsilogicsas"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "SCSIControllerType"
                                }
                              },
                              "controllerKey": {
                                "format": "int32",
                                "description": "Gets or sets the key of the controller.",
                                "type": "integer"
                              },
                              "busNumber": {
                                "format": "int32",
                                "description": "Gets or sets the bus number of the controller.",
                                "type": "integer"
                              },
                              "scsiCtlrUnitNumber": {
                                "format": "int32",
                                "description": "Gets or sets the SCSI controller unit number.",
                                "type": "integer"
                              },
                              "sharing": {
                                "description": "Gets or sets the sharing mode.",
                                "enum": [
                                  "noSharing",
                                  "physicalSharing",
                                  "virtualSharing"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "VirtualSCSISharing"
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "securityProfile": {
                      "description": "Gets the security profile.",
                      "type": "object",
                      "properties": {
                        "uefiSettings": {
                          "description": "Specifies the security settings like secure boot used while creating the virtual machine.",
                          "type": "object",
                          "properties": {
                            "secureBootEnabled": {
                              "type": "boolean",
                              "description": "Specifies whether secure boot should be enabled on the virtual machine."
                            }
                          }
                        }
                      }
                    },
                    "infrastructureProfile": {
                      "description": "Gets the infrastructure profile.",
                      "type": "object",
                      "properties": {
                        "templateId": {
                          "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine.",
                          "type": "string"
                        },
                        "vCenterId": {
                          "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                          "type": "string"
                        },
                        "moRefId": {
                          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.",
                          "type": "string",
                          "readOnly": true
                        },
                        "inventoryItemId": {
                          "description": "Gets or sets the inventory Item ID for the virtual machine.",
                          "type": "string"
                        },
                        "moName": {
                          "description": "Gets or sets the vCenter Managed Object name for the virtual machine.",
                          "type": "string",
                          "readOnly": true
                        },
                        "folderPath": {
                          "description": "Gets or sets the folder path of the vm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "instanceUuid": {
                          "description": "Gets or sets the instance uuid of the vm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "smbiosUuid": {
                          "type": "string",
                          "description": "Gets or sets the SMBIOS UUID of the vm."
                        },
                        "firmwareType": {
                          "description": "Firmware type",
                          "type": "string",
                          "enum": [
                            "bios",
                            "efi"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "FirmwareType"
                          }
                        },
                        "customResourceName": {
                          "description": "Gets the name of the corresponding resource in Kubernetes.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "powerState": {
                      "description": "Gets the power state of the virtual machine.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceUid": {
                      "description": "Gets or sets a unique identifier for the vm resource.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "VirtualMachineInstances"
        ],
        "operationId": "VirtualMachineInstances_Update",
        "summary": "Updates a virtual machine.",
        "description": "The operation to update a virtual machine instance.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceUri",
            "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Resource properties to update.",
            "schema": {
              "description": "Defines the virtualMachineInstanceUpdate.",
              "type": "object",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "hardwareProfile": {
                      "description": "Specifies the hardware settings for the virtual machine.",
                      "type": "object",
                      "properties": {
                        "memorySizeMB": {
                          "format": "int32",
                          "description": "Gets or sets memory size in MBs for the vm.",
                          "type": "integer"
                        },
                        "numCPUs": {
                          "format": "int32",
                          "description": "Gets or sets the number of vCPUs for the vm.",
                          "type": "integer"
                        },
                        "numCoresPerSocket": {
                          "format": "int32",
                          "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.",
                          "type": "integer"
                        },
                        "cpuHotAddEnabled": {
                          "description": "Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "cpuHotRemoveEnabled": {
                          "description": "Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "memoryHotAddEnabled": {
                          "description": "Gets or sets a value indicating whether memory can be added while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "Specifies the storage settings for the virtual machine disks.",
                      "type": "object",
                      "properties": {
                        "disks": {
                          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "Defines the virtual disk update.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Gets or sets the name of the virtual disk.",
                                "type": "string"
                              },
                              "diskSizeGB": {
                                "format": "int32",
                                "description": "Gets or sets the disk total size.",
                                "type": "integer"
                              },
                              "deviceKey": {
                                "format": "int32",
                                "description": "Gets or sets the device key value.",
                                "type": "integer"
                              },
                              "diskMode": {
                                "description": "Gets or sets the disk mode.",
                                "enum": [
                                  "persistent",
                                  "independent_persistent",
                                  "independent_nonpersistent"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "DiskMode"
                                }
                              },
                              "controllerKey": {
                                "description": "Gets or sets the controller id.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "unitNumber": {
                                "description": "Gets or sets the unit number of the disk on the controller.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "deviceName": {
                                "description": "Gets or sets the device name.",
                                "type": "string"
                              },
                              "diskType": {
                                "description": "Gets or sets the disk backing type.",
                                "enum": [
                                  "flat",
                                  "pmem",
                                  "rawphysical",
                                  "rawvirtual",
                                  "sparse",
                                  "sesparse",
                                  "unknown"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "DiskType"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "networkProfile": {
                      "description": "Specifies the network interfaces of the virtual machine.",
                      "type": "object",
                      "properties": {
                        "networkInterfaces": {
                          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "Defines the network interface update.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Gets or sets the name of the network interface.",
                                "type": "string"
                              },
                              "networkId": {
                                "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                                "type": "string"
                              },
                              "nicType": {
                                "description": "NIC type",
                                "type": "string",
                                "enum": [
                                  "vmxnet3",
                                  "vmxnet2",
                                  "vmxnet",
                                  "e1000",
                                  "e1000e",
                                  "pcnet32"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "NICType"
                                }
                              },
                              "powerOnBoot": {
                                "description": "Gets or sets the power on boot.",
                                "enum": [
                                  "enabled",
                                  "disabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "PowerOnBootOption"
                                }
                              },
                              "deviceKey": {
                                "format": "int32",
                                "description": "Gets or sets the device key value.",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Define the virtualMachineInstance.",
              "required": [
                "properties"
              ],
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "placementProfile": {
                      "description": "Placement properties.",
                      "type": "object",
                      "properties": {
                        "resourcePoolId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will deploy."
                        },
                        "clusterId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the cluster resource on which this virtual machine will deploy."
                        },
                        "hostId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the host resource on which this virtual machine will deploy."
                        },
                        "datastoreId": {
                          "type": "string",
                          "description": "Gets or sets the ARM Id of the datastore resource on which the data for the virtual machine will be kept."
                        }
                      }
                    },
                    "osProfile": {
                      "description": "OS properties.",
                      "type": "object",
                      "properties": {
                        "computerName": {
                          "description": "Gets or sets computer name.",
                          "type": "string"
                        },
                        "adminUsername": {
                          "description": "Gets or sets administrator username.",
                          "type": "string"
                        },
                        "adminPassword": {
                          "description": "Sets administrator password.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        },
                        "guestId": {
                          "description": "Gets or sets the guestId.",
                          "type": "string"
                        },
                        "osType": {
                          "description": "Gets or sets the type of the os.",
                          "enum": [
                            "Windows",
                            "Linux",
                            "Other"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "OsType"
                          }
                        },
                        "osSku": {
                          "description": "Gets or sets os sku.",
                          "type": "string",
                          "readOnly": true
                        },
                        "toolsRunningStatus": {
                          "description": "Gets or sets the current running status of VMware Tools running in the guest operating system.",
                          "type": "string",
                          "readOnly": true
                        },
                        "toolsVersionStatus": {
                          "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                          "type": "string",
                          "readOnly": true
                        },
                        "toolsVersion": {
                          "description": "Gets or sets the current version of VMware Tools.",
                          "type": "string",
                          "readOnly": true
                        },
                        "windowsConfiguration": {
                          "description": "Windows Configuration.",
                          "type": "object",
                          "properties": {
                            "fullName": {
                              "description": "Sets full name of the owner of the vm.",
                              "type": "string"
                            },
                            "orgName": {
                              "description": "Sets org name to which the owner of the vm belongs.",
                              "type": "string"
                            },
                            "domainName": {
                              "description": "Sets domain name that vm should join.",
                              "type": "string"
                            },
                            "domainUsername": {
                              "description": "Sets domain username.",
                              "type": "string"
                            },
                            "domainUserPassword": {
                              "description": "Sets domain user password.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "workGroupName": {
                              "description": "Sets work group name that vm should join.",
                              "type": "string"
                            },
                            "productId": {
                              "description": "Sets product id of the vm.",
                              "type": "string"
                            },
                            "autoLogon": {
                              "description": "Sets a value indicating whether auto logon is enabled.",
                              "type": "boolean"
                            },
                            "autoLogonCount": {
                              "format": "int32",
                              "description": "Sets auto logon count.",
                              "type": "integer"
                            },
                            "timeZone": {
                              "type": "string",
                              "description": "Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\". Time zone name correspond to time zones listed at Microsoft Time Zone name values(https://learn.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11))."
                            },
                            "firstLogonCommands": {
                              "description": "Sets first logon commands",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "hardwareProfile": {
                      "description": "Hardware properties.",
                      "type": "object",
                      "properties": {
                        "memorySizeMB": {
                          "format": "int32",
                          "description": "Gets or sets memory size in MBs for the vm.",
                          "type": "integer"
                        },
                        "numCPUs": {
                          "format": "int32",
                          "description": "Gets or sets the number of vCPUs for the vm.",
                          "type": "integer"
                        },
                        "numCoresPerSocket": {
                          "format": "int32",
                          "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.",
                          "type": "integer"
                        },
                        "cpuHotAddEnabled": {
                          "description": "Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "cpuHotRemoveEnabled": {
                          "description": "Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        },
                        "memoryHotAddEnabled": {
                          "description": "Gets or sets a value indicating whether memory can be added while this virtual machine is running.",
                          "type": "boolean",
                          "readOnly": true
                        }
                      }
                    },
                    "networkProfile": {
                      "description": "Network properties.",
                      "type": "object",
                      "properties": {
                        "networkInterfaces": {
                          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "Network Interface model",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Gets or sets the name of the network interface.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "ipAddresses": {
                                "description": "Gets or sets the nic ip addresses.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "macAddress": {
                                "description": "Gets or sets the NIC MAC address.",
                                "type": "string",
                                "readOnly": true
                              },
                              "networkId": {
                                "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                                "type": "string"
                              },
                              "nicType": {
                                "description": "NIC type",
                                "type": "string",
                                "enum": [
                                  "vmxnet3",
                                  "vmxnet2",
                                  "vmxnet",
                                  "e1000",
                                  "e1000e",
                                  "pcnet32"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "NICType"
                                }
                              },
                              "powerOnBoot": {
                                "description": "Gets or sets the power on boot.",
                                "enum": [
                                  "enabled",
                                  "disabled"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "PowerOnBootOption"
                                }
                              },
                              "networkMoRefId": {
                                "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "networkMoName": {
                                "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                                "type": "string",
                                "readOnly": true
                              },
                              "deviceKey": {
                                "format": "int32",
                                "description": "Gets or sets the device key value.",
                                "type": "integer"
                              },
                              "ipSettings": {
                                "description": "Gets or sets the ipsettings.",
                                "type": "object",
                                "properties": {
                                  "allocationMethod": {
                                    "description": "Gets or sets the nic allocation method.",
                                    "enum": [
                                      "unset",
                                      "dynamic",
                                      "static",
                                      "linklayer",
                                      "random",
                                      "other"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "IPAddressAllocationMethod"
                                    }
                                  },
                                  "dnsServers": {
                                    "description": "Gets or sets the dns servers.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "gateway": {
                                    "description": "Gets or sets the gateway.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "ipAddress": {
                                    "description": "Gets or sets the ip address for the nic.",
                                    "type": "string"
                                  },
                                  "subnetMask": {
                                    "description": "Gets or sets the mask.",
                                    "type": "string"
                                  },
                                  "primaryWinsServer": {
                                    "description": "Gets or sets the primary server.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "secondaryWinsServer": {
                                    "description": "Gets or sets the secondary server.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "ipAddressInfo": {
                                    "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                                    "type": "array",
                                    "items": {
                                      "description": "IP address information for a virtual network adapter reported by the fabric.",
                                      "type": "object",
                                      "properties": {
                                        "allocationMethod": {
                                          "description": "Gets the ip address allocation method.",
                                          "type": "string",
                                          "readOnly": true
                                        },
                                        "ipAddress": {
                                          "description": "Gets the ip address for the nic.",
                                          "type": "string",
                                          "readOnly": true
                                        },
                                        "subnetMask": {
                                          "description": "Gets the mask.",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "storageProfile": {
                      "description": "Storage properties.",
                      "type": "object",
                      "properties": {
                        "disks": {
                          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "Virtual disk model",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Gets or sets the name of the virtual disk.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Gets or sets the label of the virtual disk in vCenter.",
                                "type": "string",
                                "readOnly": true
                              },
                              "diskObjectId": {
                                "description": "Gets or sets the disk object id.",
                                "type": "string",
                                "readOnly": true
                              },
                              "diskSizeGB": {
                                "format": "int32",
                                "description": "Gets or sets the disk total size.",
                                "type": "integer"
                              },
                              "deviceKey": {
                                "format": "int32",
                                "description": "Gets or sets the device key value.",
                                "type": "integer"
                              },
                              "diskMode": {
                                "description": "Gets or sets the disk mode.",
                                "enum": [
                                  "persistent",
                                  "independent_persistent",
                                  "independent_nonpersistent"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "DiskMode"
                                }
                              },
                              "controllerKey": {
                                "description": "Gets or sets the controller id.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "unitNumber": {
                                "description": "Gets or sets the unit number of the disk on the controller.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "deviceName": {
                                "description": "Gets or sets the device name.",
                                "type": "string"
                              },
                              "diskType": {
                                "description": "Gets or sets the disk backing type.",
                                "enum": [
                                  "flat",
                                  "pmem",
                                  "rawphysical",
                                  "rawvirtual",
                                  "sparse",
                                  "sesparse",
                                  "unknown"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "DiskType"
                                }
                              }
                            }
                          }
                        },
                        "scsiControllers": {
                          "description": "Gets or sets the list of virtual SCSI controllers associated with the virtual machine.",
                          "type": "array",
                          "items": {
                            "description": "This data object type contains the properties of a SCSI controller device attached to a virtual machine that is reported by the controller.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Gets or sets the controller type.",
                                "enum": [
                                  "lsilogic",
                                  "buslogic",
                                  "pvscsi",
                                  "lsilogicsas"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "SCSIControllerType"
                                }
                              },
                              "controllerKey": {
                                "format": "int32",
                                "description": "Gets or sets the key of the controller.",
                                "type": "integer"
                              },
                              "busNumber": {
                                "format": "int32",
                                "description": "Gets or sets the bus number of the controller.",
                                "type": "integer"
                              },
                              "scsiCtlrUnitNumber": {
                                "format": "int32",
                                "description": "Gets or sets the SCSI controller unit number.",
                                "type": "integer"
                              },
                              "sharing": {
                                "description": "Gets or sets the sharing mode.",
                                "enum": [
                                  "noSharing",
                                  "physicalSharing",
                                  "virtualSharing"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "VirtualSCSISharing"
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "securityProfile": {
                      "description": "Gets the security profile.",
                      "type": "object",
                      "properties": {
                        "uefiSettings": {
                          "description": "Specifies the security settings like secure boot used while creating the virtual machine.",
                          "type": "object",
                          "properties": {
                            "secureBootEnabled": {
                              "type": "boolean",
                              "description": "Specifies whether secure boot should be enabled on the virtual machine."
                            }
                          }
                        }
                      }
                    },
                    "infrastructureProfile": {
                      "description": "Gets the infrastructure profile.",
                      "type": "object",
                      "properties": {
                        "templateId": {
                          "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine.",
                          "type": "string"
                        },
                        "vCenterId": {
                          "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                          "type": "string"
                        },
                        "moRefId": {
                          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.",
                          "type": "string",
                          "readOnly": true
                        },
                        "inventoryItemId": {
                          "description": "Gets or sets the inventory Item ID for the virtual machine.",
                          "type": "string"
                        },
                        "moName": {
                          "description": "Gets or sets the vCenter Managed Object name for the virtual machine.",
                          "type": "string",
                          "readOnly": true
                        },
                        "folderPath": {
                          "description": "Gets or sets the folder path of the vm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "instanceUuid": {
                          "description": "Gets or sets the instance uuid of the vm.",
                          "type": "string",
                          "readOnly": true
                        },
                        "smbiosUuid": {
                          "type": "string",
                          "description": "Gets or sets the SMBIOS UUID of the vm."
                        },
                        "firmwareType": {
                          "description": "Firmware type",
                          "type": "string",
                          "enum": [
                            "bios",
                            "efi"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "FirmwareType"
                          }
                        },
                        "customResourceName": {
                          "description": "Gets the name of the corresponding resource in Kubernetes.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "powerState": {
                      "description": "Gets the power state of the virtual machine.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "resourceUid": {
                      "description": "Gets or sets a unique identifier for the vm resource.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                },
                "extendedLocation": {
                  "description": "Gets or sets the extended location.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The extended location type."
                    },
                    "name": {
                      "type": "string",
                      "description": "The extended location name."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualMachineInstances"
        ],
        "operationId": "VirtualMachineInstances_Delete",
        "summary": "Deletes an virtual machine.",
        "description": "The operation to delete a virtual machine instance.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceUri",
            "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "deleteFromHost",
            "description": "Whether to delete the VM from the vCenter.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "force",
            "description": "Whether force delete was specified.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineInstances": {
      "get": {
        "tags": [
          "VirtualMachineInstances"
        ],
        "operationId": "VirtualMachineInstances_List",
        "summary": "Implements List virtual machine instances.",
        "description": "Lists all of the virtual machine instances within the specified parent resource.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceUri",
            "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of VirtualMachineInstances.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of VirtualMachines.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of VirtualMachines",
                  "type": "array",
                  "items": {
                    "description": "Define the virtualMachineInstance.",
                    "required": [
                      "properties"
                    ],
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "placementProfile": {
                            "description": "Placement properties.",
                            "type": "object",
                            "properties": {
                              "resourcePoolId": {
                                "type": "string",
                                "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will deploy."
                              },
                              "clusterId": {
                                "type": "string",
                                "description": "Gets or sets the ARM Id of the cluster resource on which this virtual machine will deploy."
                              },
                              "hostId": {
                                "type": "string",
                                "description": "Gets or sets the ARM Id of the host resource on which this virtual machine will deploy."
                              },
                              "datastoreId": {
                                "type": "string",
                                "description": "Gets or sets the ARM Id of the datastore resource on which the data for the virtual machine will be kept."
                              }
                            }
                          },
                          "osProfile": {
                            "description": "OS properties.",
                            "type": "object",
                            "properties": {
                              "computerName": {
                                "description": "Gets or sets computer name.",
                                "type": "string"
                              },
                              "adminUsername": {
                                "description": "Gets or sets administrator username.",
                                "type": "string"
                              },
                              "adminPassword": {
                                "description": "Sets administrator password.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "guestId": {
                                "description": "Gets or sets the guestId.",
                                "type": "string"
                              },
                              "osType": {
                                "description": "Gets or sets the type of the os.",
                                "enum": [
                                  "Windows",
                                  "Linux",
                                  "Other"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "OsType"
                                }
                              },
                              "osSku": {
                                "description": "Gets or sets os sku.",
                                "type": "string",
                                "readOnly": true
                              },
                              "toolsRunningStatus": {
                                "description": "Gets or sets the current running status of VMware Tools running in the guest operating system.",
                                "type": "string",
                                "readOnly": true
                              },
                              "toolsVersionStatus": {
                                "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                                "type": "string",
                                "readOnly": true
                              },
                              "toolsVersion": {
                                "description": "Gets or sets the current version of VMware Tools.",
                                "type": "string",
                                "readOnly": true
                              },
                              "windowsConfiguration": {
                                "description": "Windows Configuration.",
                                "type": "object",
                                "properties": {
                                  "fullName": {
                                    "description": "Sets full name of the owner of the vm.",
                                    "type": "string"
                                  },
                                  "orgName": {
                                    "description": "Sets org name to which the owner of the vm belongs.",
                                    "type": "string"
                                  },
                                  "domainName": {
                                    "description": "Sets domain name that vm should join.",
                                    "type": "string"
                                  },
                                  "domainUsername": {
                                    "description": "Sets domain username.",
                                    "type": "string"
                                  },
                                  "domainUserPassword": {
                                    "description": "Sets domain user password.",
                                    "type": "string",
                                    "x-ms-mutability": [
                                      "create",
                                      "update"
                                    ],
                                    "x-ms-secret": true
                                  },
                                  "workGroupName": {
                                    "description": "Sets work group name that vm should join.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "description": "Sets product id of the vm.",
                                    "type": "string"
                                  },
                                  "autoLogon": {
                                    "description": "Sets a value indicating whether auto logon is enabled.",
                                    "type": "boolean"
                                  },
                                  "autoLogonCount": {
                                    "format": "int32",
                                    "description": "Sets auto logon count.",
                                    "type": "integer"
                                  },
                                  "timeZone": {
                                    "type": "string",
                                    "description": "Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\". Time zone name correspond to time zones listed at Microsoft Time Zone name values(https://learn.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11))."
                                  },
                                  "firstLogonCommands": {
                                    "description": "Sets first logon commands",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "hardwareProfile": {
                            "description": "Hardware properties.",
                            "type": "object",
                            "properties": {
                              "memorySizeMB": {
                                "format": "int32",
                                "description": "Gets or sets memory size in MBs for the vm.",
                                "type": "integer"
                              },
                              "numCPUs": {
                                "format": "int32",
                                "description": "Gets or sets the number of vCPUs for the vm.",
                                "type": "integer"
                              },
                              "numCoresPerSocket": {
                                "format": "int32",
                                "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.",
                                "type": "integer"
                              },
                              "cpuHotAddEnabled": {
                                "description": "Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.",
                                "type": "boolean",
                                "readOnly": true
                              },
                              "cpuHotRemoveEnabled": {
                                "description": "Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.",
                                "type": "boolean",
                                "readOnly": true
                              },
                              "memoryHotAddEnabled": {
                                "description": "Gets or sets a value indicating whether memory can be added while this virtual machine is running.",
                                "type": "boolean",
                                "readOnly": true
                              }
                            }
                          },
                          "networkProfile": {
                            "description": "Network properties.",
                            "type": "object",
                            "properties": {
                              "networkInterfaces": {
                                "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                                "type": "array",
                                "items": {
                                  "description": "Network Interface model",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Gets or sets the name of the network interface.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "ipAddresses": {
                                      "description": "Gets or sets the nic ip addresses.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "macAddress": {
                                      "description": "Gets or sets the NIC MAC address.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "networkId": {
                                      "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                                      "type": "string"
                                    },
                                    "nicType": {
                                      "description": "NIC type",
                                      "type": "string",
                                      "enum": [
                                        "vmxnet3",
                                        "vmxnet2",
                                        "vmxnet",
                                        "e1000",
                                        "e1000e",
                                        "pcnet32"
                                      ],
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "NICType"
                                      }
                                    },
                                    "powerOnBoot": {
                                      "description": "Gets or sets the power on boot.",
                                      "enum": [
                                        "enabled",
                                        "disabled"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "PowerOnBootOption"
                                      }
                                    },
                                    "networkMoRefId": {
                                      "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "networkMoName": {
                                      "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "deviceKey": {
                                      "format": "int32",
                                      "description": "Gets or sets the device key value.",
                                      "type": "integer"
                                    },
                                    "ipSettings": {
                                      "description": "Gets or sets the ipsettings.",
                                      "type": "object",
                                      "properties": {
                                        "allocationMethod": {
                                          "description": "Gets or sets the nic allocation method.",
                                          "enum": [
                                            "unset",
                                            "dynamic",
                                            "static",
                                            "linklayer",
                                            "random",
                                            "other"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "modelAsString": true,
                                            "name": "IPAddressAllocationMethod"
                                          }
                                        },
                                        "dnsServers": {
                                          "description": "Gets or sets the dns servers.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "gateway": {
                                          "description": "Gets or sets the gateway.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "ipAddress": {
                                          "description": "Gets or sets the ip address for the nic.",
                                          "type": "string"
                                        },
                                        "subnetMask": {
                                          "description": "Gets or sets the mask.",
                                          "type": "string"
                                        },
                                        "primaryWinsServer": {
                                          "description": "Gets or sets the primary server.",
                                          "type": "string",
                                          "readOnly": true
                                        },
                                        "secondaryWinsServer": {
                                          "description": "Gets or sets the secondary server.",
                                          "type": "string",
                                          "readOnly": true
                                        },
                                        "ipAddressInfo": {
                                          "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                                          "type": "array",
                                          "items": {
                                            "description": "IP address information for a virtual network adapter reported by the fabric.",
                                            "type": "object",
                                            "properties": {
                                              "allocationMethod": {
                                                "description": "Gets the ip address allocation method.",
                                                "type": "string",
                                                "readOnly": true
                                              },
                                              "ipAddress": {
                                                "description": "Gets the ip address for the nic.",
                                                "type": "string",
                                                "readOnly": true
                                              },
                                              "subnetMask": {
                                                "description": "Gets the mask.",
                                                "type": "string",
                                                "readOnly": true
                                              }
                                            }
                                          },
                                          "readOnly": true
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "storageProfile": {
                            "description": "Storage properties.",
                            "type": "object",
                            "properties": {
                              "disks": {
                                "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                                "type": "array",
                                "items": {
                                  "description": "Virtual disk model",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Gets or sets the name of the virtual disk.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Gets or sets the label of the virtual disk in vCenter.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "diskObjectId": {
                                      "description": "Gets or sets the disk object id.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "diskSizeGB": {
                                      "format": "int32",
                                      "description": "Gets or sets the disk total size.",
                                      "type": "integer"
                                    },
                                    "deviceKey": {
                                      "format": "int32",
                                      "description": "Gets or sets the device key value.",
                                      "type": "integer"
                                    },
                                    "diskMode": {
                                      "description": "Gets or sets the disk mode.",
                                      "enum": [
                                        "persistent",
                                        "independent_persistent",
                                        "independent_nonpersistent"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "DiskMode"
                                      }
                                    },
                                    "controllerKey": {
                                      "description": "Gets or sets the controller id.",
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "unitNumber": {
                                      "description": "Gets or sets the unit number of the disk on the controller.",
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "deviceName": {
                                      "description": "Gets or sets the device name.",
                                      "type": "string"
                                    },
                                    "diskType": {
                                      "description": "Gets or sets the disk backing type.",
                                      "enum": [
                                        "flat",
                                        "pmem",
                                        "rawphysical",
                                        "rawvirtual",
                                        "sparse",
                                        "sesparse",
                                        "unknown"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "DiskType"
                                      }
                                    }
                                  }
                                }
                              },
                              "scsiControllers": {
                                "description": "Gets or sets the list of virtual SCSI controllers associated with the virtual machine.",
                                "type": "array",
                                "items": {
                                  "description": "This data object type contains the properties of a SCSI controller device attached to a virtual machine that is reported by the controller.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "Gets or sets the controller type.",
                                      "enum": [
                                        "lsilogic",
                                        "buslogic",
                                        "pvscsi",
                                        "lsilogicsas"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "SCSIControllerType"
                                      }
                                    },
                                    "controllerKey": {
                                      "format": "int32",
                                      "description": "Gets or sets the key of the controller.",
                                      "type": "integer"
                                    },
                                    "busNumber": {
                                      "format": "int32",
                                      "description": "Gets or sets the bus number of the controller.",
                                      "type": "integer"
                                    },
                                    "scsiCtlrUnitNumber": {
                                      "format": "int32",
                                      "description": "Gets or sets the SCSI controller unit number.",
                                      "type": "integer"
                                    },
                                    "sharing": {
                                      "description": "Gets or sets the sharing mode.",
                                      "enum": [
                                        "noSharing",
                                        "physicalSharing",
                                        "virtualSharing"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "modelAsString": true,
                                        "name": "VirtualSCSISharing"
                                      }
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "securityProfile": {
                            "description": "Gets the security profile.",
                            "type": "object",
                            "properties": {
                              "uefiSettings": {
                                "description": "Specifies the security settings like secure boot used while creating the virtual machine.",
                                "type": "object",
                                "properties": {
                                  "secureBootEnabled": {
                                    "type": "boolean",
                                    "description": "Specifies whether secure boot should be enabled on the virtual machine."
                                  }
                                }
                              }
                            }
                          },
                          "infrastructureProfile": {
                            "description": "Gets the infrastructure profile.",
                            "type": "object",
                            "properties": {
                              "templateId": {
                                "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine.",
                                "type": "string"
                              },
                              "vCenterId": {
                                "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                                "type": "string"
                              },
                              "moRefId": {
                                "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.",
                                "type": "string",
                                "readOnly": true
                              },
                              "inventoryItemId": {
                                "description": "Gets or sets the inventory Item ID for the virtual machine.",
                                "type": "string"
                              },
                              "moName": {
                                "description": "Gets or sets the vCenter Managed Object name for the virtual machine.",
                                "type": "string",
                                "readOnly": true
                              },
                              "folderPath": {
                                "description": "Gets or sets the folder path of the vm.",
                                "type": "string",
                                "readOnly": true
                              },
                              "instanceUuid": {
                                "description": "Gets or sets the instance uuid of the vm.",
                                "type": "string",
                                "readOnly": true
                              },
                              "smbiosUuid": {
                                "type": "string",
                                "description": "Gets or sets the SMBIOS UUID of the vm."
                              },
                              "firmwareType": {
                                "description": "Firmware type",
                                "type": "string",
                                "enum": [
                                  "bios",
                                  "efi"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "FirmwareType"
                                }
                              },
                              "customResourceName": {
                                "description": "Gets the name of the corresponding resource in Kubernetes.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "powerState": {
                            "description": "Gets the power state of the virtual machine.",
                            "type": "string",
                            "readOnly": true
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "resourceUid": {
                            "description": "Gets or sets a unique identifier for the vm resource.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "extendedLocation": {
                        "description": "Gets or sets the extended location.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The extended location type."
                          },
                          "name": {
                            "type": "string",
                            "description": "The extended location name."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineInstances/default/stop": {
      "post": {
        "tags": [
          "VirtualMachineInstances"
        ],
        "operationId": "VirtualMachineInstances_Stop",
        "description": "The operation to power off (stop) a virtual machine instance.",
        "summary": "Implements the operation to stop a virtual machine.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceUri",
            "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Virtualmachine stop action payload.",
            "schema": {
              "description": "Defines the stop action properties.",
              "type": "object",
              "properties": {
                "skipShutdown": {
                  "description": "Gets or sets a value indicating whether to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Defaults to false.",
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineInstances/default/start": {
      "post": {
        "tags": [
          "VirtualMachineInstances"
        ],
        "operationId": "VirtualMachineInstances_Start",
        "description": "The operation to start a virtual machine instance.",
        "summary": "Implements the operation to start a virtual machine.",
        "parameters": [
          {
            "in": "path",
            "name": "resourceUri",
            "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineInstances/default/restart": {
      "post": {
        "tags": [
          "VirtualMachineInstances"
        ],
        "operationId": "VirtualMachineInstances_Restart",
        "description": "The operation to restart a virtual machine instance.",
        "summary": "Implements the operation to restart a virtual machine.",
        "parameters": [
          {
            "in": "path",
            "name": "resourceUri",
            "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineInstances/default/hybridIdentityMetadata/default": {
      "get": {
        "tags": [
          "VmInstanceHybridIdentityMetadata"
        ],
        "operationId": "VmInstanceHybridIdentityMetadata_Get",
        "summary": "Gets HybridIdentityMetadata.",
        "description": "Implements HybridIdentityMetadata GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceUri",
            "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Defines the HybridIdentityMetadata.",
              "required": [
                "properties"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "resourceUid": {
                      "description": "The unique identifier for the resource.",
                      "type": "string"
                    },
                    "publicKey": {
                      "description": "Gets or sets the Public Key.",
                      "type": "string"
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineInstances/default/hybridIdentityMetadata": {
      "get": {
        "tags": [
          "VmInstanceHybridIdentityMetadata"
        ],
        "operationId": "VmInstanceHybridIdentityMetadata_List",
        "summary": "Implements GET HybridIdentityMetadata in a vm.",
        "description": "Returns the list of HybridIdentityMetadata of the given vm.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceUri",
            "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of HybridIdentityMetadata.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of HybridIdentityMetadata.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of HybridIdentityMetadata",
                  "type": "array",
                  "items": {
                    "description": "Defines the HybridIdentityMetadata.",
                    "required": [
                      "properties"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "resourceUid": {
                            "description": "The unique identifier for the resource.",
                            "type": "string"
                          },
                          "publicKey": {
                            "description": "Gets or sets the Public Key.",
                            "type": "string"
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineInstances/default/guestAgents/default": {
      "put": {
        "tags": [
          "VMInstanceGuestAgents"
        ],
        "operationId": "VMInstanceGuestAgents_Create",
        "description": "Create Or Update GuestAgent.",
        "summary": "Implements GuestAgent PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceUri",
            "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "description": "Defines the GuestAgent.",
              "required": [
                "properties"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "credentials": {
                      "description": "Username / Password Credentials to provision guest agent.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "description": "Gets or sets username to connect with the guest.",
                          "type": "string"
                        },
                        "password": {
                          "description": "Gets or sets the password to connect with the guest.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        },
                        "privateKey": {
                          "type": "string",
                          "description": "Private key used to authenticate to a virtual machine through ssh.",
                          "x-ms-secret": true
                        }
                      }
                    },
                    "privateLinkScopeResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The resource id of the private link scope this machine is assigned to, if any."
                    },
                    "httpProxyConfig": {
                      "description": "HTTP Proxy configuration for the VM.",
                      "type": "object",
                      "properties": {
                        "httpsProxy": {
                          "description": "Gets or sets httpsProxy url.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningAction": {
                      "description": "Gets or sets the guest agent provisioning action.",
                      "type": "string",
                      "enum": [
                        "install",
                        "uninstall",
                        "repair"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ProvisioningAction"
                      }
                    },
                    "status": {
                      "description": "Gets or sets the guest agent status.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Arm resource update successful.",
            "schema": {
              "description": "Defines the GuestAgent.",
              "required": [
                "properties"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "credentials": {
                      "description": "Username / Password Credentials to provision guest agent.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "description": "Gets or sets username to connect with the guest.",
                          "type": "string"
                        },
                        "password": {
                          "description": "Gets or sets the password to connect with the guest.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        },
                        "privateKey": {
                          "type": "string",
                          "description": "Private key used to authenticate to a virtual machine through ssh.",
                          "x-ms-secret": true
                        }
                      }
                    },
                    "privateLinkScopeResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The resource id of the private link scope this machine is assigned to, if any."
                    },
                    "httpProxyConfig": {
                      "description": "HTTP Proxy configuration for the VM.",
                      "type": "object",
                      "properties": {
                        "httpsProxy": {
                          "description": "Gets or sets httpsProxy url.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningAction": {
                      "description": "Gets or sets the guest agent provisioning action.",
                      "type": "string",
                      "enum": [
                        "install",
                        "uninstall",
                        "repair"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ProvisioningAction"
                      }
                    },
                    "status": {
                      "description": "Gets or sets the guest agent status.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Defines the GuestAgent.",
              "required": [
                "properties"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "credentials": {
                      "description": "Username / Password Credentials to provision guest agent.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "description": "Gets or sets username to connect with the guest.",
                          "type": "string"
                        },
                        "password": {
                          "description": "Gets or sets the password to connect with the guest.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        },
                        "privateKey": {
                          "type": "string",
                          "description": "Private key used to authenticate to a virtual machine through ssh.",
                          "x-ms-secret": true
                        }
                      }
                    },
                    "privateLinkScopeResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The resource id of the private link scope this machine is assigned to, if any."
                    },
                    "httpProxyConfig": {
                      "description": "HTTP Proxy configuration for the VM.",
                      "type": "object",
                      "properties": {
                        "httpsProxy": {
                          "description": "Gets or sets httpsProxy url.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningAction": {
                      "description": "Gets or sets the guest agent provisioning action.",
                      "type": "string",
                      "enum": [
                        "install",
                        "uninstall",
                        "repair"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ProvisioningAction"
                      }
                    },
                    "status": {
                      "description": "Gets or sets the guest agent status.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          }
        }
      },
      "get": {
        "tags": [
          "VMInstanceGuestAgents"
        ],
        "operationId": "VMInstanceGuestAgents_Get",
        "summary": "Gets GuestAgent.",
        "description": "Implements GuestAgent GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceUri",
            "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "Defines the GuestAgent.",
              "required": [
                "properties"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Gets or sets a unique identifier for this resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "credentials": {
                      "description": "Username / Password Credentials to provision guest agent.",
                      "type": "object",
                      "properties": {
                        "username": {
                          "description": "Gets or sets username to connect with the guest.",
                          "type": "string"
                        },
                        "password": {
                          "description": "Gets or sets the password to connect with the guest.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        },
                        "privateKey": {
                          "type": "string",
                          "description": "Private key used to authenticate to a virtual machine through ssh.",
                          "x-ms-secret": true
                        }
                      }
                    },
                    "privateLinkScopeResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "The resource id of the private link scope this machine is assigned to, if any."
                    },
                    "httpProxyConfig": {
                      "description": "HTTP Proxy configuration for the VM.",
                      "type": "object",
                      "properties": {
                        "httpsProxy": {
                          "description": "Gets or sets httpsProxy url.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningAction": {
                      "description": "Gets or sets the guest agent provisioning action.",
                      "type": "string",
                      "enum": [
                        "install",
                        "uninstall",
                        "repair"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ProvisioningAction"
                      }
                    },
                    "status": {
                      "description": "Gets or sets the guest agent status.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customResourceName": {
                      "description": "Gets the name of the corresponding resource in Kubernetes.",
                      "type": "string",
                      "readOnly": true
                    },
                    "statuses": {
                      "description": "The resource status information.",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "The resource status information.",
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The type of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "reason": {
                            "description": "The reason for the condition's status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "A human readable message indicating details about the status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "severity": {
                            "description": "Severity with which to treat failures of this type of condition.",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastUpdatedAt": {
                            "description": "The last update time for this condition.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "type"
                      ]
                    },
                    "provisioningState": {
                      "description": "Gets the provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted",
                        "Created"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true
                      }
                    }
                  }
                }
              },
              "x-ms-azure-resource": true
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VMInstanceGuestAgents"
        ],
        "operationId": "VMInstanceGuestAgents_Delete",
        "summary": "Deletes an GuestAgent.",
        "description": "Implements GuestAgent DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceUri",
            "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineInstances/default/guestAgents": {
      "get": {
        "tags": [
          "VMInstanceGuestAgents"
        ],
        "operationId": "VMInstanceGuestAgents_List",
        "summary": "Implements GET GuestAgent in a vm.",
        "description": "Returns the list of GuestAgent of the given vm.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "resourceUri",
            "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
            "required": true,
            "type": "string",
            "x-ms-skip-url-encoding": true,
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "Client Api Version.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "description": "List of GuestAgent.",
              "type": "object",
              "properties": {
                "nextLink": {
                  "description": "Url to follow for getting next page of GuestAgent.",
                  "type": "string"
                },
                "value": {
                  "description": "Array of GuestAgent",
                  "type": "array",
                  "items": {
                    "description": "Defines the GuestAgent.",
                    "required": [
                      "properties"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Gets or sets a unique identifier for this resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "credentials": {
                            "description": "Username / Password Credentials to provision guest agent.",
                            "type": "object",
                            "properties": {
                              "username": {
                                "description": "Gets or sets username to connect with the guest.",
                                "type": "string"
                              },
                              "password": {
                                "description": "Gets or sets the password to connect with the guest.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "privateKey": {
                                "type": "string",
                                "description": "Private key used to authenticate to a virtual machine through ssh.",
                                "x-ms-secret": true
                              }
                            }
                          },
                          "privateLinkScopeResourceId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "The resource id of the private link scope this machine is assigned to, if any."
                          },
                          "httpProxyConfig": {
                            "description": "HTTP Proxy configuration for the VM.",
                            "type": "object",
                            "properties": {
                              "httpsProxy": {
                                "description": "Gets or sets httpsProxy url.",
                                "type": "string"
                              }
                            }
                          },
                          "provisioningAction": {
                            "description": "Gets or sets the guest agent provisioning action.",
                            "type": "string",
                            "enum": [
                              "install",
                              "uninstall",
                              "repair"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ProvisioningAction"
                            }
                          },
                          "status": {
                            "description": "Gets or sets the guest agent status.",
                            "type": "string",
                            "readOnly": true
                          },
                          "customResourceName": {
                            "description": "Gets the name of the corresponding resource in Kubernetes.",
                            "type": "string",
                            "readOnly": true
                          },
                          "statuses": {
                            "description": "The resource status information.",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "The resource status information.",
                              "type": "object",
                              "properties": {
                                "type": {
                                  "description": "The type of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "status": {
                                  "description": "Status of the condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "reason": {
                                  "description": "The reason for the condition's status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "A human readable message indicating details about the status.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "severity": {
                                  "description": "Severity with which to treat failures of this type of condition.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "lastUpdatedAt": {
                                  "description": "The last update time for this condition.",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "type"
                            ]
                          },
                          "provisioningState": {
                            "description": "Gets the provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted",
                              "Created"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    },
                    "x-ms-azure-resource": true
                  }
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ResourcePatch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Object containing updates for patch operations."
    },
    "ResourcePoolProperties": {
      "description": "Describes the properties of a Resource Pool.",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Gets or sets a unique identifier for this resource.",
          "type": "string",
          "readOnly": true
        },
        "vCenterId": {
          "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
          "type": "string"
        },
        "moRefId": {
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.",
          "type": "string"
        },
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the resource pool.",
          "type": "string"
        },
        "moName": {
          "description": "Gets or sets the vCenter Managed Object name for the resource pool.",
          "type": "string",
          "readOnly": true
        },
        "cpuSharesLevel": {
          "description": "Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
          "type": "string",
          "readOnly": true
        },
        "cpuReservationMHz": {
          "format": "int64",
          "description": "Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed\r\nto be available.",
          "type": "integer",
          "readOnly": true
        },
        "cpuLimitMHz": {
          "format": "int64",
          "description": "Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.\r\nUtilization will not exceed this limit even if there are available resources.",
          "type": "integer",
          "readOnly": true
        },
        "memSharesLevel": {
          "description": "Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
          "type": "string",
          "readOnly": true
        },
        "memReservationMB": {
          "format": "int64",
          "description": "Gets or sets MemReservationMB which specifies the guaranteed available memory in\r\nmegabytes.",
          "type": "integer",
          "readOnly": true
        },
        "memLimitMB": {
          "format": "int64",
          "description": "Gets or sets MemLimitMB specifies a memory usage limit in megabytes.\r\nUtilization will not exceed the specified limit even if there are available resources.",
          "type": "integer",
          "readOnly": true
        },
        "memOverallUsageGB": {
          "format": "int64",
          "description": "Gets the used physical memory on the pool in GB.",
          "type": "integer",
          "readOnly": true
        },
        "memCapacityGB": {
          "format": "int64",
          "description": "Gets the total amount of physical memory on the pool in GB.",
          "type": "integer",
          "readOnly": true
        },
        "cpuOverallUsageMHz": {
          "format": "int64",
          "description": "Gets the used CPU usage across all cores on the pool in MHz.",
          "type": "integer",
          "readOnly": true
        },
        "cpuCapacityMHz": {
          "format": "int64",
          "description": "Gets the max CPU usage across all cores on the pool in MHz.",
          "type": "integer",
          "readOnly": true
        },
        "customResourceName": {
          "description": "Gets the name of the corresponding resource in Kubernetes.",
          "type": "string",
          "readOnly": true
        },
        "datastoreIds": {
          "description": "Gets the datastore ARM ids.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "networkIds": {
          "description": "Gets the network ARM ids.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "statuses": {
          "description": "The resource status information.",
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "The resource status information.",
            "type": "object",
            "properties": {
              "type": {
                "description": "The type of the condition.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the condition.",
                "type": "string",
                "readOnly": true
              },
              "reason": {
                "description": "The reason for the condition's status.",
                "type": "string",
                "readOnly": true
              },
              "message": {
                "description": "A human readable message indicating details about the status.",
                "type": "string",
                "readOnly": true
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.",
                "type": "string",
                "readOnly": true
              },
              "lastUpdatedAt": {
                "description": "The last update time for this condition.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "type"
          ]
        },
        "provisioningState": {
          "description": "Gets the provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "ResourcePool": {
      "description": "Define the resourcePool.",
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "type": "object",
          "properties": {
            "uuid": {
              "description": "Gets or sets a unique identifier for this resource.",
              "type": "string",
              "readOnly": true
            },
            "vCenterId": {
              "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
              "type": "string"
            },
            "moRefId": {
              "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.",
              "type": "string"
            },
            "inventoryItemId": {
              "description": "Gets or sets the inventory Item ID for the resource pool.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the resource pool.",
              "type": "string",
              "readOnly": true
            },
            "cpuSharesLevel": {
              "description": "Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
              "type": "string",
              "readOnly": true
            },
            "cpuReservationMHz": {
              "format": "int64",
              "description": "Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed\r\nto be available.",
              "type": "integer",
              "readOnly": true
            },
            "cpuLimitMHz": {
              "format": "int64",
              "description": "Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.\r\nUtilization will not exceed this limit even if there are available resources.",
              "type": "integer",
              "readOnly": true
            },
            "memSharesLevel": {
              "description": "Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
              "type": "string",
              "readOnly": true
            },
            "memReservationMB": {
              "format": "int64",
              "description": "Gets or sets MemReservationMB which specifies the guaranteed available memory in\r\nmegabytes.",
              "type": "integer",
              "readOnly": true
            },
            "memLimitMB": {
              "format": "int64",
              "description": "Gets or sets MemLimitMB specifies a memory usage limit in megabytes.\r\nUtilization will not exceed the specified limit even if there are available resources.",
              "type": "integer",
              "readOnly": true
            },
            "memOverallUsageGB": {
              "format": "int64",
              "description": "Gets the used physical memory on the pool in GB.",
              "type": "integer",
              "readOnly": true
            },
            "memCapacityGB": {
              "format": "int64",
              "description": "Gets the total amount of physical memory on the pool in GB.",
              "type": "integer",
              "readOnly": true
            },
            "cpuOverallUsageMHz": {
              "format": "int64",
              "description": "Gets the used CPU usage across all cores on the pool in MHz.",
              "type": "integer",
              "readOnly": true
            },
            "cpuCapacityMHz": {
              "format": "int64",
              "description": "Gets the max CPU usage across all cores on the pool in MHz.",
              "type": "integer",
              "readOnly": true
            },
            "customResourceName": {
              "description": "Gets the name of the corresponding resource in Kubernetes.",
              "type": "string",
              "readOnly": true
            },
            "datastoreIds": {
              "description": "Gets the datastore ARM ids.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "networkIds": {
              "description": "Gets the network ARM ids.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "statuses": {
              "description": "The resource status information.",
              "readOnly": true,
              "type": "array",
              "items": {
                "description": "The resource status information.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "reason": {
                    "description": "The reason for the condition's status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "A human readable message indicating details about the status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "severity": {
                    "description": "Severity with which to treat failures of this type of condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "lastUpdatedAt": {
                    "description": "The last update time for this condition.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "type"
              ]
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        },
        "systemData": {
          "description": "The system data.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Gets or sets the Id.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        }
      }
    },
    "ResourcePoolsList": {
      "description": "List of ResourcePools.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of ResourcePools.",
          "type": "string"
        },
        "value": {
          "description": "Array of ResourcePools",
          "type": "array",
          "items": {
            "description": "Define the resourcePool.",
            "required": [
              "location",
              "properties"
            ],
            "type": "object",
            "x-ms-azure-resource": true,
            "properties": {
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "uuid": {
                    "description": "Gets or sets a unique identifier for this resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "vCenterId": {
                    "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                    "type": "string"
                  },
                  "moRefId": {
                    "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.",
                    "type": "string"
                  },
                  "inventoryItemId": {
                    "description": "Gets or sets the inventory Item ID for the resource pool.",
                    "type": "string"
                  },
                  "moName": {
                    "description": "Gets or sets the vCenter Managed Object name for the resource pool.",
                    "type": "string",
                    "readOnly": true
                  },
                  "cpuSharesLevel": {
                    "description": "Gets or sets CPUSharesLevel which specifies the CPU allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                    "type": "string",
                    "readOnly": true
                  },
                  "cpuReservationMHz": {
                    "format": "int64",
                    "description": "Gets or sets CPUReservationMHz which specifies the CPU size in MHz that is guaranteed\r\nto be available.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "cpuLimitMHz": {
                    "format": "int64",
                    "description": "Gets or sets CPULimitMHz which specifies a CPU usage limit in MHz.\r\nUtilization will not exceed this limit even if there are available resources.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "memSharesLevel": {
                    "description": "Gets or sets CPUSharesLevel which specifies the memory allocation level for this pool.\r\nThis property is used in relative allocation between resource consumers.",
                    "type": "string",
                    "readOnly": true
                  },
                  "memReservationMB": {
                    "format": "int64",
                    "description": "Gets or sets MemReservationMB which specifies the guaranteed available memory in\r\nmegabytes.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "memLimitMB": {
                    "format": "int64",
                    "description": "Gets or sets MemLimitMB specifies a memory usage limit in megabytes.\r\nUtilization will not exceed the specified limit even if there are available resources.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "memOverallUsageGB": {
                    "format": "int64",
                    "description": "Gets the used physical memory on the pool in GB.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "memCapacityGB": {
                    "format": "int64",
                    "description": "Gets the total amount of physical memory on the pool in GB.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "cpuOverallUsageMHz": {
                    "format": "int64",
                    "description": "Gets the used CPU usage across all cores on the pool in MHz.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "cpuCapacityMHz": {
                    "format": "int64",
                    "description": "Gets the max CPU usage across all cores on the pool in MHz.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "customResourceName": {
                    "description": "Gets the name of the corresponding resource in Kubernetes.",
                    "type": "string",
                    "readOnly": true
                  },
                  "datastoreIds": {
                    "description": "Gets the datastore ARM ids.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "networkIds": {
                    "description": "Gets the network ARM ids.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "statuses": {
                    "description": "The resource status information.",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "description": "The resource status information.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "reason": {
                          "description": "The reason for the condition's status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "description": "A human readable message indicating details about the status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "severity": {
                          "description": "Severity with which to treat failures of this type of condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "lastUpdatedAt": {
                          "description": "The last update time for this condition.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "type"
                    ]
                  },
                  "provisioningState": {
                    "description": "Gets the provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "location": {
                "description": "Gets or sets the location.",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "extendedLocation": {
                "description": "Gets or sets the extended location.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type."
                  },
                  "name": {
                    "type": "string",
                    "description": "The extended location name."
                  }
                }
              },
              "systemData": {
                "description": "The system data.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "description": "Gets or sets the Resource tags.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "name": {
                "description": "Gets or sets the name.",
                "type": "string",
                "readOnly": true
              },
              "id": {
                "description": "Gets or sets the Id.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Gets or sets the type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "kind": {
                "type": "string",
                "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
              }
            }
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "VICredential": {
      "description": "Username / Password Credentials to connect to vcenter.",
      "type": "object",
      "properties": {
        "username": {
          "description": "Gets or sets username to connect with the vCenter.",
          "type": "string"
        },
        "password": {
          "description": "Gets or sets the password to connect with the vCenter.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      }
    },
    "ResourceStatus": {
      "description": "The resource status information.",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the condition.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the condition.",
          "type": "string",
          "readOnly": true
        },
        "reason": {
          "description": "The reason for the condition's status.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "A human readable message indicating details about the status.",
          "type": "string",
          "readOnly": true
        },
        "severity": {
          "description": "Severity with which to treat failures of this type of condition.",
          "type": "string",
          "readOnly": true
        },
        "lastUpdatedAt": {
          "description": "The last update time for this condition.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "VCenterProperties": {
      "description": "Describes the properties of a VCenter.",
      "required": [
        "fqdn"
      ],
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Gets or sets a unique identifier for this resource.",
          "type": "string",
          "readOnly": true
        },
        "fqdn": {
          "description": "Gets or sets the FQDN/IPAddress of the vCenter.",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "description": "Gets or sets the port of the vCenter.",
          "maximum": 65535,
          "minimum": 1,
          "type": "integer"
        },
        "version": {
          "description": "Gets or sets the version of the vCenter.",
          "type": "string",
          "readOnly": true
        },
        "instanceUuid": {
          "description": "Gets or sets the instance UUID of the vCenter.",
          "type": "string",
          "readOnly": true
        },
        "connectionStatus": {
          "description": "Gets or sets the connection status to the vCenter.",
          "type": "string",
          "readOnly": true
        },
        "customResourceName": {
          "description": "Gets the name of the corresponding resource in Kubernetes.",
          "type": "string",
          "readOnly": true
        },
        "credentials": {
          "description": "Username / Password Credentials to connect to vcenter.",
          "type": "object",
          "properties": {
            "username": {
              "description": "Gets or sets username to connect with the vCenter.",
              "type": "string"
            },
            "password": {
              "description": "Gets or sets the password to connect with the vCenter.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "x-ms-secret": true
            }
          }
        },
        "statuses": {
          "description": "The resource status information.",
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "The resource status information.",
            "type": "object",
            "properties": {
              "type": {
                "description": "The type of the condition.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the condition.",
                "type": "string",
                "readOnly": true
              },
              "reason": {
                "description": "The reason for the condition's status.",
                "type": "string",
                "readOnly": true
              },
              "message": {
                "description": "A human readable message indicating details about the status.",
                "type": "string",
                "readOnly": true
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.",
                "type": "string",
                "readOnly": true
              },
              "lastUpdatedAt": {
                "description": "The last update time for this condition.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "type"
          ]
        },
        "provisioningState": {
          "description": "Gets the provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "VirtualDiskUpdate": {
      "description": "Defines the virtual disk update.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the name of the virtual disk.",
          "type": "string"
        },
        "diskSizeGB": {
          "format": "int32",
          "description": "Gets or sets the disk total size.",
          "type": "integer"
        },
        "deviceKey": {
          "format": "int32",
          "description": "Gets or sets the device key value.",
          "type": "integer"
        },
        "diskMode": {
          "description": "Gets or sets the disk mode.",
          "enum": [
            "persistent",
            "independent_persistent",
            "independent_nonpersistent"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DiskMode"
          }
        },
        "controllerKey": {
          "description": "Gets or sets the controller id.",
          "format": "int32",
          "type": "integer"
        },
        "unitNumber": {
          "description": "Gets or sets the unit number of the disk on the controller.",
          "format": "int32",
          "type": "integer"
        },
        "deviceName": {
          "description": "Gets or sets the device name.",
          "type": "string"
        },
        "diskType": {
          "description": "Gets or sets the disk backing type.",
          "enum": [
            "flat",
            "pmem",
            "rawphysical",
            "rawvirtual",
            "sparse",
            "sesparse",
            "unknown"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DiskType"
          }
        }
      }
    },
    "VirtualDisk": {
      "description": "Virtual disk model",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the name of the virtual disk.",
          "type": "string"
        },
        "label": {
          "description": "Gets or sets the label of the virtual disk in vCenter.",
          "type": "string",
          "readOnly": true
        },
        "diskObjectId": {
          "description": "Gets or sets the disk object id.",
          "type": "string",
          "readOnly": true
        },
        "diskSizeGB": {
          "format": "int32",
          "description": "Gets or sets the disk total size.",
          "type": "integer"
        },
        "deviceKey": {
          "format": "int32",
          "description": "Gets or sets the device key value.",
          "type": "integer"
        },
        "diskMode": {
          "description": "Gets or sets the disk mode.",
          "enum": [
            "persistent",
            "independent_persistent",
            "independent_nonpersistent"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DiskMode"
          }
        },
        "controllerKey": {
          "description": "Gets or sets the controller id.",
          "format": "int32",
          "type": "integer"
        },
        "unitNumber": {
          "description": "Gets or sets the unit number of the disk on the controller.",
          "format": "int32",
          "type": "integer"
        },
        "deviceName": {
          "description": "Gets or sets the device name.",
          "type": "string"
        },
        "diskType": {
          "description": "Gets or sets the disk backing type.",
          "enum": [
            "flat",
            "pmem",
            "rawphysical",
            "rawvirtual",
            "sparse",
            "sesparse",
            "unknown"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DiskType"
          }
        }
      }
    },
    "VirtualDiskInventory": {
      "description": "Virtual disk model",
      "type": "object",
      "properties": {
        "diskName": {
          "description": "Gets or sets the name of the virtual disk.",
          "type": "string"
        },
        "label": {
          "description": "Gets or sets the label of the virtual disk in vCenter.",
          "type": "string",
          "readOnly": true
        },
        "diskSizeGB": {
          "format": "int32",
          "description": "Gets or sets the disk total size.",
          "type": "integer",
          "readOnly": true
        },
        "deviceKey": {
          "format": "int32",
          "description": "Gets or sets the device key value.",
          "type": "integer",
          "readOnly": true
        },
        "diskMode": {
          "description": "Gets or sets the disk mode.",
          "readOnly": true,
          "enum": [
            "persistent",
            "independent_persistent",
            "independent_nonpersistent"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DiskMode"
          }
        },
        "controllerKey": {
          "description": "Gets or sets the controller id.",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "unitNumber": {
          "description": "Gets or sets the unit number of the disk on the controller.",
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "deviceName": {
          "description": "Gets or sets the device name.",
          "type": "string",
          "readOnly": true
        },
        "fileName": {
          "description": "Gets or sets the disk file name.",
          "type": "string",
          "readOnly": true
        },
        "diskType": {
          "description": "Gets or sets the disk backing type.",
          "readOnly": true,
          "enum": [
            "flat",
            "pmem",
            "rawphysical",
            "rawvirtual",
            "sparse",
            "sesparse",
            "unknown"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DiskType"
          }
        },
        "eagerlyScrub": {
          "description": "Gets or sets the eagerly scrub property of disk.",
          "type": "boolean",
          "readOnly": true
        },
        "thinProvisioned": {
          "description": "Gets or sets the thin provisioning property of disk.",
          "type": "boolean",
          "readOnly": true
        },
        "controllerType": {
          "description": "Gets or sets the controller type.",
          "type": "string",
          "readOnly": true
        },
        "uuid": {
          "description": "Gets or sets a unique identifier for this resource.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Condition": {
      "description": "Condition defines an extension to status.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the condition.",
          "type": "string",
          "readOnly": true
        },
        "reason": {
          "description": "The reason for the condition's status.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "A human readable message indicating details about the status.",
          "type": "string",
          "readOnly": true
        },
        "severity": {
          "description": "Severity with which to treat failures of this type of condition.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VCenter": {
      "description": "Defines the vCenter.",
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "required": [
            "fqdn"
          ],
          "type": "object",
          "properties": {
            "uuid": {
              "description": "Gets or sets a unique identifier for this resource.",
              "type": "string",
              "readOnly": true
            },
            "fqdn": {
              "description": "Gets or sets the FQDN/IPAddress of the vCenter.",
              "type": "string"
            },
            "port": {
              "format": "int32",
              "description": "Gets or sets the port of the vCenter.",
              "maximum": 65535,
              "minimum": 1,
              "type": "integer"
            },
            "version": {
              "description": "Gets or sets the version of the vCenter.",
              "type": "string",
              "readOnly": true
            },
            "instanceUuid": {
              "description": "Gets or sets the instance UUID of the vCenter.",
              "type": "string",
              "readOnly": true
            },
            "connectionStatus": {
              "description": "Gets or sets the connection status to the vCenter.",
              "type": "string",
              "readOnly": true
            },
            "customResourceName": {
              "description": "Gets the name of the corresponding resource in Kubernetes.",
              "type": "string",
              "readOnly": true
            },
            "credentials": {
              "description": "Username / Password Credentials to connect to vcenter.",
              "type": "object",
              "properties": {
                "username": {
                  "description": "Gets or sets username to connect with the vCenter.",
                  "type": "string"
                },
                "password": {
                  "description": "Gets or sets the password to connect with the vCenter.",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "update"
                  ],
                  "x-ms-secret": true
                }
              }
            },
            "statuses": {
              "description": "The resource status information.",
              "readOnly": true,
              "type": "array",
              "items": {
                "description": "The resource status information.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "reason": {
                    "description": "The reason for the condition's status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "A human readable message indicating details about the status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "severity": {
                    "description": "Severity with which to treat failures of this type of condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "lastUpdatedAt": {
                    "description": "The last update time for this condition.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "type"
              ]
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        },
        "systemData": {
          "description": "The system data.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Gets or sets the Id.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        }
      }
    },
    "VCentersList": {
      "description": "List of VCenters.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of VCenters.",
          "type": "string"
        },
        "value": {
          "description": "Array of VCenters",
          "type": "array",
          "items": {
            "description": "Defines the vCenter.",
            "required": [
              "location",
              "properties"
            ],
            "type": "object",
            "x-ms-azure-resource": true,
            "properties": {
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "required": [
                  "fqdn"
                ],
                "type": "object",
                "properties": {
                  "uuid": {
                    "description": "Gets or sets a unique identifier for this resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "fqdn": {
                    "description": "Gets or sets the FQDN/IPAddress of the vCenter.",
                    "type": "string"
                  },
                  "port": {
                    "format": "int32",
                    "description": "Gets or sets the port of the vCenter.",
                    "maximum": 65535,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "version": {
                    "description": "Gets or sets the version of the vCenter.",
                    "type": "string",
                    "readOnly": true
                  },
                  "instanceUuid": {
                    "description": "Gets or sets the instance UUID of the vCenter.",
                    "type": "string",
                    "readOnly": true
                  },
                  "connectionStatus": {
                    "description": "Gets or sets the connection status to the vCenter.",
                    "type": "string",
                    "readOnly": true
                  },
                  "customResourceName": {
                    "description": "Gets the name of the corresponding resource in Kubernetes.",
                    "type": "string",
                    "readOnly": true
                  },
                  "credentials": {
                    "description": "Username / Password Credentials to connect to vcenter.",
                    "type": "object",
                    "properties": {
                      "username": {
                        "description": "Gets or sets username to connect with the vCenter.",
                        "type": "string"
                      },
                      "password": {
                        "description": "Gets or sets the password to connect with the vCenter.",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "update"
                        ],
                        "x-ms-secret": true
                      }
                    }
                  },
                  "statuses": {
                    "description": "The resource status information.",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "description": "The resource status information.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "reason": {
                          "description": "The reason for the condition's status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "description": "A human readable message indicating details about the status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "severity": {
                          "description": "Severity with which to treat failures of this type of condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "lastUpdatedAt": {
                          "description": "The last update time for this condition.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "type"
                    ]
                  },
                  "provisioningState": {
                    "description": "Gets the provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "location": {
                "description": "Gets or sets the location.",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "extendedLocation": {
                "description": "Gets or sets the extended location.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type."
                  },
                  "name": {
                    "type": "string",
                    "description": "The extended location name."
                  }
                }
              },
              "systemData": {
                "description": "The system data.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "description": "Gets or sets the Resource tags.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "name": {
                "description": "Gets or sets the name.",
                "type": "string",
                "readOnly": true
              },
              "id": {
                "description": "Gets or sets the Id.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Gets or sets the type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "kind": {
                "type": "string",
                "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
              }
            }
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "OsType": {
      "description": "Defines the different types of VM guest operating systems.",
      "enum": [
        "Windows",
        "Linux",
        "Other"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "OsType"
      }
    },
    "OsProfileForVMInstance": {
      "description": "Specifies the operating system settings for the virtual machine.",
      "type": "object",
      "properties": {
        "computerName": {
          "description": "Gets or sets computer name.",
          "type": "string"
        },
        "adminUsername": {
          "description": "Gets or sets administrator username.",
          "type": "string"
        },
        "adminPassword": {
          "description": "Sets administrator password.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "guestId": {
          "description": "Gets or sets the guestId.",
          "type": "string"
        },
        "osType": {
          "description": "Gets or sets the type of the os.",
          "enum": [
            "Windows",
            "Linux",
            "Other"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "OsType"
          }
        },
        "osSku": {
          "description": "Gets or sets os sku.",
          "type": "string",
          "readOnly": true
        },
        "toolsRunningStatus": {
          "description": "Gets or sets the current running status of VMware Tools running in the guest operating system.",
          "type": "string",
          "readOnly": true
        },
        "toolsVersionStatus": {
          "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
          "type": "string",
          "readOnly": true
        },
        "toolsVersion": {
          "description": "Gets or sets the current version of VMware Tools.",
          "type": "string",
          "readOnly": true
        },
        "windowsConfiguration": {
          "description": "Windows Configuration.",
          "type": "object",
          "properties": {
            "fullName": {
              "description": "Sets full name of the owner of the vm.",
              "type": "string"
            },
            "orgName": {
              "description": "Sets org name to which the owner of the vm belongs.",
              "type": "string"
            },
            "domainName": {
              "description": "Sets domain name that vm should join.",
              "type": "string"
            },
            "domainUsername": {
              "description": "Sets domain username.",
              "type": "string"
            },
            "domainUserPassword": {
              "description": "Sets domain user password.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "x-ms-secret": true
            },
            "workGroupName": {
              "description": "Sets work group name that vm should join.",
              "type": "string"
            },
            "productId": {
              "description": "Sets product id of the vm.",
              "type": "string"
            },
            "autoLogon": {
              "description": "Sets a value indicating whether auto logon is enabled.",
              "type": "boolean"
            },
            "autoLogonCount": {
              "format": "int32",
              "description": "Sets auto logon count.",
              "type": "integer"
            },
            "timeZone": {
              "type": "string",
              "description": "Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\". Time zone name correspond to time zones listed at Microsoft Time Zone name values(https://learn.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11))."
            },
            "firstLogonCommands": {
              "description": "Sets first logon commands",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "WindowsConfiguration": {
      "description": "Specifies the Windows Configuration settings for the virtual machine.",
      "type": "object",
      "properties": {
        "fullName": {
          "description": "Sets full name of the owner of the vm.",
          "type": "string"
        },
        "orgName": {
          "description": "Sets org name to which the owner of the vm belongs.",
          "type": "string"
        },
        "domainName": {
          "description": "Sets domain name that vm should join.",
          "type": "string"
        },
        "domainUsername": {
          "description": "Sets domain username.",
          "type": "string"
        },
        "domainUserPassword": {
          "description": "Sets domain user password.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "workGroupName": {
          "description": "Sets work group name that vm should join.",
          "type": "string"
        },
        "productId": {
          "description": "Sets product id of the vm.",
          "type": "string"
        },
        "autoLogon": {
          "description": "Sets a value indicating whether auto logon is enabled.",
          "type": "boolean"
        },
        "autoLogonCount": {
          "format": "int32",
          "description": "Sets auto logon count.",
          "type": "integer"
        },
        "timeZone": {
          "type": "string",
          "description": "Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\". Time zone name correspond to time zones listed at Microsoft Time Zone name values(https://learn.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11))."
        },
        "firstLogonCommands": {
          "description": "Sets first logon commands",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "HardwareProfile": {
      "description": "Specifies the hardware settings for the virtual machine.",
      "type": "object",
      "properties": {
        "memorySizeMB": {
          "format": "int32",
          "description": "Gets or sets memory size in MBs for the vm.",
          "type": "integer"
        },
        "numCPUs": {
          "format": "int32",
          "description": "Gets or sets the number of vCPUs for the vm.",
          "type": "integer"
        },
        "numCoresPerSocket": {
          "format": "int32",
          "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.",
          "type": "integer"
        },
        "cpuHotAddEnabled": {
          "description": "Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.",
          "type": "boolean",
          "readOnly": true
        },
        "cpuHotRemoveEnabled": {
          "description": "Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.",
          "type": "boolean",
          "readOnly": true
        },
        "memoryHotAddEnabled": {
          "description": "Gets or sets a value indicating whether memory can be added while this virtual machine is running.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "NetworkProfileUpdate": {
      "description": "Specifies the network interfaces of the virtual machine.",
      "type": "object",
      "properties": {
        "networkInterfaces": {
          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
          "type": "array",
          "items": {
            "description": "Defines the network interface update.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Gets or sets the name of the network interface.",
                "type": "string"
              },
              "networkId": {
                "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                "type": "string"
              },
              "nicType": {
                "description": "NIC type",
                "type": "string",
                "enum": [
                  "vmxnet3",
                  "vmxnet2",
                  "vmxnet",
                  "e1000",
                  "e1000e",
                  "pcnet32"
                ],
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "NICType"
                }
              },
              "powerOnBoot": {
                "description": "Gets or sets the power on boot.",
                "enum": [
                  "enabled",
                  "disabled"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "PowerOnBootOption"
                }
              },
              "deviceKey": {
                "format": "int32",
                "description": "Gets or sets the device key value.",
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "NetworkProfile": {
      "description": "Specifies the network interfaces of the virtual machine.",
      "type": "object",
      "properties": {
        "networkInterfaces": {
          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
          "type": "array",
          "items": {
            "description": "Network Interface model",
            "type": "object",
            "properties": {
              "name": {
                "description": "Gets or sets the name of the network interface.",
                "type": "string"
              },
              "label": {
                "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                "type": "string",
                "readOnly": true
              },
              "ipAddresses": {
                "description": "Gets or sets the nic ip addresses.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "macAddress": {
                "description": "Gets or sets the NIC MAC address.",
                "type": "string",
                "readOnly": true
              },
              "networkId": {
                "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                "type": "string"
              },
              "nicType": {
                "description": "NIC type",
                "type": "string",
                "enum": [
                  "vmxnet3",
                  "vmxnet2",
                  "vmxnet",
                  "e1000",
                  "e1000e",
                  "pcnet32"
                ],
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "NICType"
                }
              },
              "powerOnBoot": {
                "description": "Gets or sets the power on boot.",
                "enum": [
                  "enabled",
                  "disabled"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "PowerOnBootOption"
                }
              },
              "networkMoRefId": {
                "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                "type": "string",
                "readOnly": true
              },
              "networkMoName": {
                "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                "type": "string",
                "readOnly": true
              },
              "deviceKey": {
                "format": "int32",
                "description": "Gets or sets the device key value.",
                "type": "integer"
              },
              "ipSettings": {
                "description": "Gets or sets the ipsettings.",
                "type": "object",
                "properties": {
                  "allocationMethod": {
                    "description": "Gets or sets the nic allocation method.",
                    "enum": [
                      "unset",
                      "dynamic",
                      "static",
                      "linklayer",
                      "random",
                      "other"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "IPAddressAllocationMethod"
                    }
                  },
                  "dnsServers": {
                    "description": "Gets or sets the dns servers.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "gateway": {
                    "description": "Gets or sets the gateway.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "ipAddress": {
                    "description": "Gets or sets the ip address for the nic.",
                    "type": "string"
                  },
                  "subnetMask": {
                    "description": "Gets or sets the mask.",
                    "type": "string"
                  },
                  "primaryWinsServer": {
                    "description": "Gets or sets the primary server.",
                    "type": "string",
                    "readOnly": true
                  },
                  "secondaryWinsServer": {
                    "description": "Gets or sets the secondary server.",
                    "type": "string",
                    "readOnly": true
                  },
                  "ipAddressInfo": {
                    "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                    "type": "array",
                    "items": {
                      "description": "IP address information for a virtual network adapter reported by the fabric.",
                      "type": "object",
                      "properties": {
                        "allocationMethod": {
                          "description": "Gets the ip address allocation method.",
                          "type": "string",
                          "readOnly": true
                        },
                        "ipAddress": {
                          "description": "Gets the ip address for the nic.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subnetMask": {
                          "description": "Gets the mask.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "NetworkProfileInventory": {
      "description": "Specifies the network interfaces of the virtual machine.",
      "type": "object",
      "properties": {
        "networkInterfaces": {
          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
          "type": "array",
          "items": {
            "description": "Inventory Network Interface model",
            "type": "object",
            "properties": {
              "label": {
                "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                "type": "string",
                "readOnly": true
              },
              "ipAddresses": {
                "description": "Gets or sets the nic ip addresses.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "macAddress": {
                "description": "Gets or sets the NIC MAC address.",
                "type": "string",
                "readOnly": true
              },
              "nicType": {
                "description": "NIC type",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "vmxnet3",
                  "vmxnet2",
                  "vmxnet",
                  "e1000",
                  "e1000e",
                  "pcnet32"
                ],
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "NICType"
                }
              },
              "networkMoRefId": {
                "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                "type": "string",
                "readOnly": true
              },
              "networkMoName": {
                "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                "type": "string",
                "readOnly": true
              },
              "deviceKey": {
                "format": "int32",
                "description": "Gets or sets the device key value.",
                "type": "integer",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "networkMoRefId"
          ]
        }
      }
    },
    "SCSIControllerType": {
      "description": "Defines the different types of SCSI controllers.",
      "enum": [
        "lsilogic",
        "buslogic",
        "pvscsi",
        "lsilogicsas"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "SCSIControllerType"
      }
    },
    "VirtualSCSISharing": {
      "description": "Defines the sharing mode for sharing the SCSI bus.",
      "enum": [
        "noSharing",
        "physicalSharing",
        "virtualSharing"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "VirtualSCSISharing"
      }
    },
    "VirtualSCSIController": {
      "description": "This data object type contains the properties of a SCSI controller device attached to a virtual machine that is reported by the controller.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Gets or sets the controller type.",
          "enum": [
            "lsilogic",
            "buslogic",
            "pvscsi",
            "lsilogicsas"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "SCSIControllerType"
          }
        },
        "controllerKey": {
          "format": "int32",
          "description": "Gets or sets the key of the controller.",
          "type": "integer"
        },
        "busNumber": {
          "format": "int32",
          "description": "Gets or sets the bus number of the controller.",
          "type": "integer"
        },
        "scsiCtlrUnitNumber": {
          "format": "int32",
          "description": "Gets or sets the SCSI controller unit number.",
          "type": "integer"
        },
        "sharing": {
          "description": "Gets or sets the sharing mode.",
          "enum": [
            "noSharing",
            "physicalSharing",
            "virtualSharing"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "VirtualSCSISharing"
          }
        }
      }
    },
    "StorageProfile": {
      "description": "Specifies the storage settings for the virtual machine disks.",
      "type": "object",
      "properties": {
        "disks": {
          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
          "type": "array",
          "items": {
            "description": "Virtual disk model",
            "type": "object",
            "properties": {
              "name": {
                "description": "Gets or sets the name of the virtual disk.",
                "type": "string"
              },
              "label": {
                "description": "Gets or sets the label of the virtual disk in vCenter.",
                "type": "string",
                "readOnly": true
              },
              "diskObjectId": {
                "description": "Gets or sets the disk object id.",
                "type": "string",
                "readOnly": true
              },
              "diskSizeGB": {
                "format": "int32",
                "description": "Gets or sets the disk total size.",
                "type": "integer"
              },
              "deviceKey": {
                "format": "int32",
                "description": "Gets or sets the device key value.",
                "type": "integer"
              },
              "diskMode": {
                "description": "Gets or sets the disk mode.",
                "enum": [
                  "persistent",
                  "independent_persistent",
                  "independent_nonpersistent"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "DiskMode"
                }
              },
              "controllerKey": {
                "description": "Gets or sets the controller id.",
                "format": "int32",
                "type": "integer"
              },
              "unitNumber": {
                "description": "Gets or sets the unit number of the disk on the controller.",
                "format": "int32",
                "type": "integer"
              },
              "deviceName": {
                "description": "Gets or sets the device name.",
                "type": "string"
              },
              "diskType": {
                "description": "Gets or sets the disk backing type.",
                "enum": [
                  "flat",
                  "pmem",
                  "rawphysical",
                  "rawvirtual",
                  "sparse",
                  "sesparse",
                  "unknown"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "DiskType"
                }
              }
            }
          }
        },
        "scsiControllers": {
          "description": "Gets or sets the list of virtual SCSI controllers associated with the virtual machine.",
          "type": "array",
          "items": {
            "description": "This data object type contains the properties of a SCSI controller device attached to a virtual machine that is reported by the controller.",
            "type": "object",
            "properties": {
              "type": {
                "description": "Gets or sets the controller type.",
                "enum": [
                  "lsilogic",
                  "buslogic",
                  "pvscsi",
                  "lsilogicsas"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "SCSIControllerType"
                }
              },
              "controllerKey": {
                "format": "int32",
                "description": "Gets or sets the key of the controller.",
                "type": "integer"
              },
              "busNumber": {
                "format": "int32",
                "description": "Gets or sets the bus number of the controller.",
                "type": "integer"
              },
              "scsiCtlrUnitNumber": {
                "format": "int32",
                "description": "Gets or sets the SCSI controller unit number.",
                "type": "integer"
              },
              "sharing": {
                "description": "Gets or sets the sharing mode.",
                "enum": [
                  "noSharing",
                  "physicalSharing",
                  "virtualSharing"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "VirtualSCSISharing"
                }
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "StorageProfileInventory": {
      "description": "Specifies the storage settings for the virtual machine disks.",
      "type": "object",
      "properties": {
        "disks": {
          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
          "type": "array",
          "items": {
            "description": "Virtual disk model",
            "type": "object",
            "properties": {
              "diskName": {
                "description": "Gets or sets the name of the virtual disk.",
                "type": "string"
              },
              "label": {
                "description": "Gets or sets the label of the virtual disk in vCenter.",
                "type": "string",
                "readOnly": true
              },
              "diskSizeGB": {
                "format": "int32",
                "description": "Gets or sets the disk total size.",
                "type": "integer",
                "readOnly": true
              },
              "deviceKey": {
                "format": "int32",
                "description": "Gets or sets the device key value.",
                "type": "integer",
                "readOnly": true
              },
              "diskMode": {
                "description": "Gets or sets the disk mode.",
                "readOnly": true,
                "enum": [
                  "persistent",
                  "independent_persistent",
                  "independent_nonpersistent"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "DiskMode"
                }
              },
              "controllerKey": {
                "description": "Gets or sets the controller id.",
                "format": "int32",
                "type": "integer",
                "readOnly": true
              },
              "unitNumber": {
                "description": "Gets or sets the unit number of the disk on the controller.",
                "format": "int32",
                "type": "integer",
                "readOnly": true
              },
              "deviceName": {
                "description": "Gets or sets the device name.",
                "type": "string",
                "readOnly": true
              },
              "fileName": {
                "description": "Gets or sets the disk file name.",
                "type": "string",
                "readOnly": true
              },
              "diskType": {
                "description": "Gets or sets the disk backing type.",
                "readOnly": true,
                "enum": [
                  "flat",
                  "pmem",
                  "rawphysical",
                  "rawvirtual",
                  "sparse",
                  "sesparse",
                  "unknown"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "DiskType"
                }
              },
              "eagerlyScrub": {
                "description": "Gets or sets the eagerly scrub property of disk.",
                "type": "boolean",
                "readOnly": true
              },
              "thinProvisioned": {
                "description": "Gets or sets the thin provisioning property of disk.",
                "type": "boolean",
                "readOnly": true
              },
              "controllerType": {
                "description": "Gets or sets the controller type.",
                "type": "string",
                "readOnly": true
              },
              "uuid": {
                "description": "Gets or sets a unique identifier for this resource.",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "uuid"
          ]
        }
      }
    },
    "StorageProfileUpdate": {
      "description": "Specifies the storage settings for the virtual machine disks.",
      "type": "object",
      "properties": {
        "disks": {
          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
          "type": "array",
          "items": {
            "description": "Defines the virtual disk update.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Gets or sets the name of the virtual disk.",
                "type": "string"
              },
              "diskSizeGB": {
                "format": "int32",
                "description": "Gets or sets the disk total size.",
                "type": "integer"
              },
              "deviceKey": {
                "format": "int32",
                "description": "Gets or sets the device key value.",
                "type": "integer"
              },
              "diskMode": {
                "description": "Gets or sets the disk mode.",
                "enum": [
                  "persistent",
                  "independent_persistent",
                  "independent_nonpersistent"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "DiskMode"
                }
              },
              "controllerKey": {
                "description": "Gets or sets the controller id.",
                "format": "int32",
                "type": "integer"
              },
              "unitNumber": {
                "description": "Gets or sets the unit number of the disk on the controller.",
                "format": "int32",
                "type": "integer"
              },
              "deviceName": {
                "description": "Gets or sets the device name.",
                "type": "string"
              },
              "diskType": {
                "description": "Gets or sets the disk backing type.",
                "enum": [
                  "flat",
                  "pmem",
                  "rawphysical",
                  "rawvirtual",
                  "sparse",
                  "sesparse",
                  "unknown"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "DiskType"
                }
              }
            }
          }
        }
      }
    },
    "PlacementProfile": {
      "description": "Specifies the compute and storage placement settings for the virtual machine.",
      "type": "object",
      "properties": {
        "resourcePoolId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will deploy."
        },
        "clusterId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the cluster resource on which this virtual machine will deploy."
        },
        "hostId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the host resource on which this virtual machine will deploy."
        },
        "datastoreId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the datastore resource on which the data for the virtual machine will be kept."
        }
      }
    },
    "UefiSettings": {
      "type": "object",
      "properties": {
        "secureBootEnabled": {
          "type": "boolean",
          "description": "Specifies whether secure boot should be enabled on the virtual machine."
        }
      },
      "description": "Specifies the security settings like secure boot used while creating the virtual machine."
    },
    "SecurityProfile": {
      "type": "object",
      "properties": {
        "uefiSettings": {
          "description": "Specifies the security settings like secure boot used while creating the virtual machine.",
          "type": "object",
          "properties": {
            "secureBootEnabled": {
              "type": "boolean",
              "description": "Specifies whether secure boot should be enabled on the virtual machine."
            }
          }
        }
      },
      "description": "Specifies the Security profile settings for the virtual machine."
    },
    "InfrastructureProfile": {
      "type": "object",
      "properties": {
        "templateId": {
          "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine.",
          "type": "string"
        },
        "vCenterId": {
          "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
          "type": "string"
        },
        "moRefId": {
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.",
          "type": "string",
          "readOnly": true
        },
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the virtual machine.",
          "type": "string"
        },
        "moName": {
          "description": "Gets or sets the vCenter Managed Object name for the virtual machine.",
          "type": "string",
          "readOnly": true
        },
        "folderPath": {
          "description": "Gets or sets the folder path of the vm.",
          "type": "string",
          "readOnly": true
        },
        "instanceUuid": {
          "description": "Gets or sets the instance uuid of the vm.",
          "type": "string",
          "readOnly": true
        },
        "smbiosUuid": {
          "type": "string",
          "description": "Gets or sets the SMBIOS UUID of the vm."
        },
        "firmwareType": {
          "description": "Firmware type",
          "type": "string",
          "enum": [
            "bios",
            "efi"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "FirmwareType"
          }
        },
        "customResourceName": {
          "description": "Gets the name of the corresponding resource in Kubernetes.",
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Specifies the vCenter infrastructure specific settings for the virtual machine."
    },
    "ExtendedLocation": {
      "type": "object",
      "description": "The extended location.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The extended location type."
        },
        "name": {
          "type": "string",
          "description": "The extended location name."
        }
      }
    },
    "VirtualMachineInstanceProperties": {
      "description": "Describes the properties of a Virtual Machine Instance.",
      "type": "object",
      "properties": {
        "placementProfile": {
          "description": "Placement properties.",
          "type": "object",
          "properties": {
            "resourcePoolId": {
              "type": "string",
              "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will deploy."
            },
            "clusterId": {
              "type": "string",
              "description": "Gets or sets the ARM Id of the cluster resource on which this virtual machine will deploy."
            },
            "hostId": {
              "type": "string",
              "description": "Gets or sets the ARM Id of the host resource on which this virtual machine will deploy."
            },
            "datastoreId": {
              "type": "string",
              "description": "Gets or sets the ARM Id of the datastore resource on which the data for the virtual machine will be kept."
            }
          }
        },
        "osProfile": {
          "description": "OS properties.",
          "type": "object",
          "properties": {
            "computerName": {
              "description": "Gets or sets computer name.",
              "type": "string"
            },
            "adminUsername": {
              "description": "Gets or sets administrator username.",
              "type": "string"
            },
            "adminPassword": {
              "description": "Sets administrator password.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "x-ms-secret": true
            },
            "guestId": {
              "description": "Gets or sets the guestId.",
              "type": "string"
            },
            "osType": {
              "description": "Gets or sets the type of the os.",
              "enum": [
                "Windows",
                "Linux",
                "Other"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "OsType"
              }
            },
            "osSku": {
              "description": "Gets or sets os sku.",
              "type": "string",
              "readOnly": true
            },
            "toolsRunningStatus": {
              "description": "Gets or sets the current running status of VMware Tools running in the guest operating system.",
              "type": "string",
              "readOnly": true
            },
            "toolsVersionStatus": {
              "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
              "type": "string",
              "readOnly": true
            },
            "toolsVersion": {
              "description": "Gets or sets the current version of VMware Tools.",
              "type": "string",
              "readOnly": true
            },
            "windowsConfiguration": {
              "description": "Windows Configuration.",
              "type": "object",
              "properties": {
                "fullName": {
                  "description": "Sets full name of the owner of the vm.",
                  "type": "string"
                },
                "orgName": {
                  "description": "Sets org name to which the owner of the vm belongs.",
                  "type": "string"
                },
                "domainName": {
                  "description": "Sets domain name that vm should join.",
                  "type": "string"
                },
                "domainUsername": {
                  "description": "Sets domain username.",
                  "type": "string"
                },
                "domainUserPassword": {
                  "description": "Sets domain user password.",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "update"
                  ],
                  "x-ms-secret": true
                },
                "workGroupName": {
                  "description": "Sets work group name that vm should join.",
                  "type": "string"
                },
                "productId": {
                  "description": "Sets product id of the vm.",
                  "type": "string"
                },
                "autoLogon": {
                  "description": "Sets a value indicating whether auto logon is enabled.",
                  "type": "boolean"
                },
                "autoLogonCount": {
                  "format": "int32",
                  "description": "Sets auto logon count.",
                  "type": "integer"
                },
                "timeZone": {
                  "type": "string",
                  "description": "Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\". Time zone name correspond to time zones listed at Microsoft Time Zone name values(https://learn.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11))."
                },
                "firstLogonCommands": {
                  "description": "Sets first logon commands",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "hardwareProfile": {
          "description": "Hardware properties.",
          "type": "object",
          "properties": {
            "memorySizeMB": {
              "format": "int32",
              "description": "Gets or sets memory size in MBs for the vm.",
              "type": "integer"
            },
            "numCPUs": {
              "format": "int32",
              "description": "Gets or sets the number of vCPUs for the vm.",
              "type": "integer"
            },
            "numCoresPerSocket": {
              "format": "int32",
              "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.",
              "type": "integer"
            },
            "cpuHotAddEnabled": {
              "description": "Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.",
              "type": "boolean",
              "readOnly": true
            },
            "cpuHotRemoveEnabled": {
              "description": "Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.",
              "type": "boolean",
              "readOnly": true
            },
            "memoryHotAddEnabled": {
              "description": "Gets or sets a value indicating whether memory can be added while this virtual machine is running.",
              "type": "boolean",
              "readOnly": true
            }
          }
        },
        "networkProfile": {
          "description": "Network properties.",
          "type": "object",
          "properties": {
            "networkInterfaces": {
              "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
              "type": "array",
              "items": {
                "description": "Network Interface model",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Gets or sets the name of the network interface.",
                    "type": "string"
                  },
                  "label": {
                    "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                    "type": "string",
                    "readOnly": true
                  },
                  "ipAddresses": {
                    "description": "Gets or sets the nic ip addresses.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "macAddress": {
                    "description": "Gets or sets the NIC MAC address.",
                    "type": "string",
                    "readOnly": true
                  },
                  "networkId": {
                    "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                    "type": "string"
                  },
                  "nicType": {
                    "description": "NIC type",
                    "type": "string",
                    "enum": [
                      "vmxnet3",
                      "vmxnet2",
                      "vmxnet",
                      "e1000",
                      "e1000e",
                      "pcnet32"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "NICType"
                    }
                  },
                  "powerOnBoot": {
                    "description": "Gets or sets the power on boot.",
                    "enum": [
                      "enabled",
                      "disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "PowerOnBootOption"
                    }
                  },
                  "networkMoRefId": {
                    "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                    "type": "string",
                    "readOnly": true
                  },
                  "networkMoName": {
                    "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                    "type": "string",
                    "readOnly": true
                  },
                  "deviceKey": {
                    "format": "int32",
                    "description": "Gets or sets the device key value.",
                    "type": "integer"
                  },
                  "ipSettings": {
                    "description": "Gets or sets the ipsettings.",
                    "type": "object",
                    "properties": {
                      "allocationMethod": {
                        "description": "Gets or sets the nic allocation method.",
                        "enum": [
                          "unset",
                          "dynamic",
                          "static",
                          "linklayer",
                          "random",
                          "other"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "IPAddressAllocationMethod"
                        }
                      },
                      "dnsServers": {
                        "description": "Gets or sets the dns servers.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "gateway": {
                        "description": "Gets or sets the gateway.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "ipAddress": {
                        "description": "Gets or sets the ip address for the nic.",
                        "type": "string"
                      },
                      "subnetMask": {
                        "description": "Gets or sets the mask.",
                        "type": "string"
                      },
                      "primaryWinsServer": {
                        "description": "Gets or sets the primary server.",
                        "type": "string",
                        "readOnly": true
                      },
                      "secondaryWinsServer": {
                        "description": "Gets or sets the secondary server.",
                        "type": "string",
                        "readOnly": true
                      },
                      "ipAddressInfo": {
                        "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                        "type": "array",
                        "items": {
                          "description": "IP address information for a virtual network adapter reported by the fabric.",
                          "type": "object",
                          "properties": {
                            "allocationMethod": {
                              "description": "Gets the ip address allocation method.",
                              "type": "string",
                              "readOnly": true
                            },
                            "ipAddress": {
                              "description": "Gets the ip address for the nic.",
                              "type": "string",
                              "readOnly": true
                            },
                            "subnetMask": {
                              "description": "Gets the mask.",
                              "type": "string",
                              "readOnly": true
                            }
                          }
                        },
                        "readOnly": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "storageProfile": {
          "description": "Storage properties.",
          "type": "object",
          "properties": {
            "disks": {
              "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
              "type": "array",
              "items": {
                "description": "Virtual disk model",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Gets or sets the name of the virtual disk.",
                    "type": "string"
                  },
                  "label": {
                    "description": "Gets or sets the label of the virtual disk in vCenter.",
                    "type": "string",
                    "readOnly": true
                  },
                  "diskObjectId": {
                    "description": "Gets or sets the disk object id.",
                    "type": "string",
                    "readOnly": true
                  },
                  "diskSizeGB": {
                    "format": "int32",
                    "description": "Gets or sets the disk total size.",
                    "type": "integer"
                  },
                  "deviceKey": {
                    "format": "int32",
                    "description": "Gets or sets the device key value.",
                    "type": "integer"
                  },
                  "diskMode": {
                    "description": "Gets or sets the disk mode.",
                    "enum": [
                      "persistent",
                      "independent_persistent",
                      "independent_nonpersistent"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DiskMode"
                    }
                  },
                  "controllerKey": {
                    "description": "Gets or sets the controller id.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "unitNumber": {
                    "description": "Gets or sets the unit number of the disk on the controller.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "deviceName": {
                    "description": "Gets or sets the device name.",
                    "type": "string"
                  },
                  "diskType": {
                    "description": "Gets or sets the disk backing type.",
                    "enum": [
                      "flat",
                      "pmem",
                      "rawphysical",
                      "rawvirtual",
                      "sparse",
                      "sesparse",
                      "unknown"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DiskType"
                    }
                  }
                }
              }
            },
            "scsiControllers": {
              "description": "Gets or sets the list of virtual SCSI controllers associated with the virtual machine.",
              "type": "array",
              "items": {
                "description": "This data object type contains the properties of a SCSI controller device attached to a virtual machine that is reported by the controller.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Gets or sets the controller type.",
                    "enum": [
                      "lsilogic",
                      "buslogic",
                      "pvscsi",
                      "lsilogicsas"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "SCSIControllerType"
                    }
                  },
                  "controllerKey": {
                    "format": "int32",
                    "description": "Gets or sets the key of the controller.",
                    "type": "integer"
                  },
                  "busNumber": {
                    "format": "int32",
                    "description": "Gets or sets the bus number of the controller.",
                    "type": "integer"
                  },
                  "scsiCtlrUnitNumber": {
                    "format": "int32",
                    "description": "Gets or sets the SCSI controller unit number.",
                    "type": "integer"
                  },
                  "sharing": {
                    "description": "Gets or sets the sharing mode.",
                    "enum": [
                      "noSharing",
                      "physicalSharing",
                      "virtualSharing"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "VirtualSCSISharing"
                    }
                  }
                }
              },
              "readOnly": true
            }
          }
        },
        "securityProfile": {
          "description": "Gets the security profile.",
          "type": "object",
          "properties": {
            "uefiSettings": {
              "description": "Specifies the security settings like secure boot used while creating the virtual machine.",
              "type": "object",
              "properties": {
                "secureBootEnabled": {
                  "type": "boolean",
                  "description": "Specifies whether secure boot should be enabled on the virtual machine."
                }
              }
            }
          }
        },
        "infrastructureProfile": {
          "description": "Gets the infrastructure profile.",
          "type": "object",
          "properties": {
            "templateId": {
              "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine.",
              "type": "string"
            },
            "vCenterId": {
              "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
              "type": "string"
            },
            "moRefId": {
              "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.",
              "type": "string",
              "readOnly": true
            },
            "inventoryItemId": {
              "description": "Gets or sets the inventory Item ID for the virtual machine.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the virtual machine.",
              "type": "string",
              "readOnly": true
            },
            "folderPath": {
              "description": "Gets or sets the folder path of the vm.",
              "type": "string",
              "readOnly": true
            },
            "instanceUuid": {
              "description": "Gets or sets the instance uuid of the vm.",
              "type": "string",
              "readOnly": true
            },
            "smbiosUuid": {
              "type": "string",
              "description": "Gets or sets the SMBIOS UUID of the vm."
            },
            "firmwareType": {
              "description": "Firmware type",
              "type": "string",
              "enum": [
                "bios",
                "efi"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "FirmwareType"
              }
            },
            "customResourceName": {
              "description": "Gets the name of the corresponding resource in Kubernetes.",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "powerState": {
          "description": "Gets the power state of the virtual machine.",
          "type": "string",
          "readOnly": true
        },
        "statuses": {
          "description": "The resource status information.",
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "The resource status information.",
            "type": "object",
            "properties": {
              "type": {
                "description": "The type of the condition.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the condition.",
                "type": "string",
                "readOnly": true
              },
              "reason": {
                "description": "The reason for the condition's status.",
                "type": "string",
                "readOnly": true
              },
              "message": {
                "description": "A human readable message indicating details about the status.",
                "type": "string",
                "readOnly": true
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.",
                "type": "string",
                "readOnly": true
              },
              "lastUpdatedAt": {
                "description": "The last update time for this condition.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "type"
          ]
        },
        "provisioningState": {
          "description": "Gets the provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "resourceUid": {
          "description": "Gets or sets a unique identifier for the vm resource.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VirtualMachineInstance": {
      "description": "Define the virtualMachineInstance.",
      "required": [
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "type": "object",
          "properties": {
            "placementProfile": {
              "description": "Placement properties.",
              "type": "object",
              "properties": {
                "resourcePoolId": {
                  "type": "string",
                  "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will deploy."
                },
                "clusterId": {
                  "type": "string",
                  "description": "Gets or sets the ARM Id of the cluster resource on which this virtual machine will deploy."
                },
                "hostId": {
                  "type": "string",
                  "description": "Gets or sets the ARM Id of the host resource on which this virtual machine will deploy."
                },
                "datastoreId": {
                  "type": "string",
                  "description": "Gets or sets the ARM Id of the datastore resource on which the data for the virtual machine will be kept."
                }
              }
            },
            "osProfile": {
              "description": "OS properties.",
              "type": "object",
              "properties": {
                "computerName": {
                  "description": "Gets or sets computer name.",
                  "type": "string"
                },
                "adminUsername": {
                  "description": "Gets or sets administrator username.",
                  "type": "string"
                },
                "adminPassword": {
                  "description": "Sets administrator password.",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "update"
                  ],
                  "x-ms-secret": true
                },
                "guestId": {
                  "description": "Gets or sets the guestId.",
                  "type": "string"
                },
                "osType": {
                  "description": "Gets or sets the type of the os.",
                  "enum": [
                    "Windows",
                    "Linux",
                    "Other"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "OsType"
                  }
                },
                "osSku": {
                  "description": "Gets or sets os sku.",
                  "type": "string",
                  "readOnly": true
                },
                "toolsRunningStatus": {
                  "description": "Gets or sets the current running status of VMware Tools running in the guest operating system.",
                  "type": "string",
                  "readOnly": true
                },
                "toolsVersionStatus": {
                  "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                  "type": "string",
                  "readOnly": true
                },
                "toolsVersion": {
                  "description": "Gets or sets the current version of VMware Tools.",
                  "type": "string",
                  "readOnly": true
                },
                "windowsConfiguration": {
                  "description": "Windows Configuration.",
                  "type": "object",
                  "properties": {
                    "fullName": {
                      "description": "Sets full name of the owner of the vm.",
                      "type": "string"
                    },
                    "orgName": {
                      "description": "Sets org name to which the owner of the vm belongs.",
                      "type": "string"
                    },
                    "domainName": {
                      "description": "Sets domain name that vm should join.",
                      "type": "string"
                    },
                    "domainUsername": {
                      "description": "Sets domain username.",
                      "type": "string"
                    },
                    "domainUserPassword": {
                      "description": "Sets domain user password.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "x-ms-secret": true
                    },
                    "workGroupName": {
                      "description": "Sets work group name that vm should join.",
                      "type": "string"
                    },
                    "productId": {
                      "description": "Sets product id of the vm.",
                      "type": "string"
                    },
                    "autoLogon": {
                      "description": "Sets a value indicating whether auto logon is enabled.",
                      "type": "boolean"
                    },
                    "autoLogonCount": {
                      "format": "int32",
                      "description": "Sets auto logon count.",
                      "type": "integer"
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\". Time zone name correspond to time zones listed at Microsoft Time Zone name values(https://learn.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11))."
                    },
                    "firstLogonCommands": {
                      "description": "Sets first logon commands",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "hardwareProfile": {
              "description": "Hardware properties.",
              "type": "object",
              "properties": {
                "memorySizeMB": {
                  "format": "int32",
                  "description": "Gets or sets memory size in MBs for the vm.",
                  "type": "integer"
                },
                "numCPUs": {
                  "format": "int32",
                  "description": "Gets or sets the number of vCPUs for the vm.",
                  "type": "integer"
                },
                "numCoresPerSocket": {
                  "format": "int32",
                  "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.",
                  "type": "integer"
                },
                "cpuHotAddEnabled": {
                  "description": "Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.",
                  "type": "boolean",
                  "readOnly": true
                },
                "cpuHotRemoveEnabled": {
                  "description": "Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.",
                  "type": "boolean",
                  "readOnly": true
                },
                "memoryHotAddEnabled": {
                  "description": "Gets or sets a value indicating whether memory can be added while this virtual machine is running.",
                  "type": "boolean",
                  "readOnly": true
                }
              }
            },
            "networkProfile": {
              "description": "Network properties.",
              "type": "object",
              "properties": {
                "networkInterfaces": {
                  "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                  "type": "array",
                  "items": {
                    "description": "Network Interface model",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Gets or sets the name of the network interface.",
                        "type": "string"
                      },
                      "label": {
                        "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                        "type": "string",
                        "readOnly": true
                      },
                      "ipAddresses": {
                        "description": "Gets or sets the nic ip addresses.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "macAddress": {
                        "description": "Gets or sets the NIC MAC address.",
                        "type": "string",
                        "readOnly": true
                      },
                      "networkId": {
                        "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                        "type": "string"
                      },
                      "nicType": {
                        "description": "NIC type",
                        "type": "string",
                        "enum": [
                          "vmxnet3",
                          "vmxnet2",
                          "vmxnet",
                          "e1000",
                          "e1000e",
                          "pcnet32"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "NICType"
                        }
                      },
                      "powerOnBoot": {
                        "description": "Gets or sets the power on boot.",
                        "enum": [
                          "enabled",
                          "disabled"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "PowerOnBootOption"
                        }
                      },
                      "networkMoRefId": {
                        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                        "type": "string",
                        "readOnly": true
                      },
                      "networkMoName": {
                        "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                        "type": "string",
                        "readOnly": true
                      },
                      "deviceKey": {
                        "format": "int32",
                        "description": "Gets or sets the device key value.",
                        "type": "integer"
                      },
                      "ipSettings": {
                        "description": "Gets or sets the ipsettings.",
                        "type": "object",
                        "properties": {
                          "allocationMethod": {
                            "description": "Gets or sets the nic allocation method.",
                            "enum": [
                              "unset",
                              "dynamic",
                              "static",
                              "linklayer",
                              "random",
                              "other"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "IPAddressAllocationMethod"
                            }
                          },
                          "dnsServers": {
                            "description": "Gets or sets the dns servers.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "gateway": {
                            "description": "Gets or sets the gateway.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "ipAddress": {
                            "description": "Gets or sets the ip address for the nic.",
                            "type": "string"
                          },
                          "subnetMask": {
                            "description": "Gets or sets the mask.",
                            "type": "string"
                          },
                          "primaryWinsServer": {
                            "description": "Gets or sets the primary server.",
                            "type": "string",
                            "readOnly": true
                          },
                          "secondaryWinsServer": {
                            "description": "Gets or sets the secondary server.",
                            "type": "string",
                            "readOnly": true
                          },
                          "ipAddressInfo": {
                            "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                            "type": "array",
                            "items": {
                              "description": "IP address information for a virtual network adapter reported by the fabric.",
                              "type": "object",
                              "properties": {
                                "allocationMethod": {
                                  "description": "Gets the ip address allocation method.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "ipAddress": {
                                  "description": "Gets the ip address for the nic.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "subnetMask": {
                                  "description": "Gets the mask.",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "storageProfile": {
              "description": "Storage properties.",
              "type": "object",
              "properties": {
                "disks": {
                  "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                  "type": "array",
                  "items": {
                    "description": "Virtual disk model",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Gets or sets the name of the virtual disk.",
                        "type": "string"
                      },
                      "label": {
                        "description": "Gets or sets the label of the virtual disk in vCenter.",
                        "type": "string",
                        "readOnly": true
                      },
                      "diskObjectId": {
                        "description": "Gets or sets the disk object id.",
                        "type": "string",
                        "readOnly": true
                      },
                      "diskSizeGB": {
                        "format": "int32",
                        "description": "Gets or sets the disk total size.",
                        "type": "integer"
                      },
                      "deviceKey": {
                        "format": "int32",
                        "description": "Gets or sets the device key value.",
                        "type": "integer"
                      },
                      "diskMode": {
                        "description": "Gets or sets the disk mode.",
                        "enum": [
                          "persistent",
                          "independent_persistent",
                          "independent_nonpersistent"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "DiskMode"
                        }
                      },
                      "controllerKey": {
                        "description": "Gets or sets the controller id.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "unitNumber": {
                        "description": "Gets or sets the unit number of the disk on the controller.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "deviceName": {
                        "description": "Gets or sets the device name.",
                        "type": "string"
                      },
                      "diskType": {
                        "description": "Gets or sets the disk backing type.",
                        "enum": [
                          "flat",
                          "pmem",
                          "rawphysical",
                          "rawvirtual",
                          "sparse",
                          "sesparse",
                          "unknown"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "DiskType"
                        }
                      }
                    }
                  }
                },
                "scsiControllers": {
                  "description": "Gets or sets the list of virtual SCSI controllers associated with the virtual machine.",
                  "type": "array",
                  "items": {
                    "description": "This data object type contains the properties of a SCSI controller device attached to a virtual machine that is reported by the controller.",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Gets or sets the controller type.",
                        "enum": [
                          "lsilogic",
                          "buslogic",
                          "pvscsi",
                          "lsilogicsas"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "SCSIControllerType"
                        }
                      },
                      "controllerKey": {
                        "format": "int32",
                        "description": "Gets or sets the key of the controller.",
                        "type": "integer"
                      },
                      "busNumber": {
                        "format": "int32",
                        "description": "Gets or sets the bus number of the controller.",
                        "type": "integer"
                      },
                      "scsiCtlrUnitNumber": {
                        "format": "int32",
                        "description": "Gets or sets the SCSI controller unit number.",
                        "type": "integer"
                      },
                      "sharing": {
                        "description": "Gets or sets the sharing mode.",
                        "enum": [
                          "noSharing",
                          "physicalSharing",
                          "virtualSharing"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "VirtualSCSISharing"
                        }
                      }
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "securityProfile": {
              "description": "Gets the security profile.",
              "type": "object",
              "properties": {
                "uefiSettings": {
                  "description": "Specifies the security settings like secure boot used while creating the virtual machine.",
                  "type": "object",
                  "properties": {
                    "secureBootEnabled": {
                      "type": "boolean",
                      "description": "Specifies whether secure boot should be enabled on the virtual machine."
                    }
                  }
                }
              }
            },
            "infrastructureProfile": {
              "description": "Gets the infrastructure profile.",
              "type": "object",
              "properties": {
                "templateId": {
                  "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine.",
                  "type": "string"
                },
                "vCenterId": {
                  "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                  "type": "string"
                },
                "moRefId": {
                  "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.",
                  "type": "string",
                  "readOnly": true
                },
                "inventoryItemId": {
                  "description": "Gets or sets the inventory Item ID for the virtual machine.",
                  "type": "string"
                },
                "moName": {
                  "description": "Gets or sets the vCenter Managed Object name for the virtual machine.",
                  "type": "string",
                  "readOnly": true
                },
                "folderPath": {
                  "description": "Gets or sets the folder path of the vm.",
                  "type": "string",
                  "readOnly": true
                },
                "instanceUuid": {
                  "description": "Gets or sets the instance uuid of the vm.",
                  "type": "string",
                  "readOnly": true
                },
                "smbiosUuid": {
                  "type": "string",
                  "description": "Gets or sets the SMBIOS UUID of the vm."
                },
                "firmwareType": {
                  "description": "Firmware type",
                  "type": "string",
                  "enum": [
                    "bios",
                    "efi"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "FirmwareType"
                  }
                },
                "customResourceName": {
                  "description": "Gets the name of the corresponding resource in Kubernetes.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "powerState": {
              "description": "Gets the power state of the virtual machine.",
              "type": "string",
              "readOnly": true
            },
            "statuses": {
              "description": "The resource status information.",
              "readOnly": true,
              "type": "array",
              "items": {
                "description": "The resource status information.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "reason": {
                    "description": "The reason for the condition's status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "A human readable message indicating details about the status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "severity": {
                    "description": "Severity with which to treat failures of this type of condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "lastUpdatedAt": {
                    "description": "The last update time for this condition.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "type"
              ]
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            },
            "resourceUid": {
              "description": "Gets or sets a unique identifier for the vm resource.",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        }
      }
    },
    "VirtualMachineInstanceUpdateProperties": {
      "description": "Describes the properties of a Virtual Machine.",
      "type": "object",
      "properties": {
        "hardwareProfile": {
          "description": "Specifies the hardware settings for the virtual machine.",
          "type": "object",
          "properties": {
            "memorySizeMB": {
              "format": "int32",
              "description": "Gets or sets memory size in MBs for the vm.",
              "type": "integer"
            },
            "numCPUs": {
              "format": "int32",
              "description": "Gets or sets the number of vCPUs for the vm.",
              "type": "integer"
            },
            "numCoresPerSocket": {
              "format": "int32",
              "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.",
              "type": "integer"
            },
            "cpuHotAddEnabled": {
              "description": "Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.",
              "type": "boolean",
              "readOnly": true
            },
            "cpuHotRemoveEnabled": {
              "description": "Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.",
              "type": "boolean",
              "readOnly": true
            },
            "memoryHotAddEnabled": {
              "description": "Gets or sets a value indicating whether memory can be added while this virtual machine is running.",
              "type": "boolean",
              "readOnly": true
            }
          }
        },
        "storageProfile": {
          "description": "Specifies the storage settings for the virtual machine disks.",
          "type": "object",
          "properties": {
            "disks": {
              "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
              "type": "array",
              "items": {
                "description": "Defines the virtual disk update.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Gets or sets the name of the virtual disk.",
                    "type": "string"
                  },
                  "diskSizeGB": {
                    "format": "int32",
                    "description": "Gets or sets the disk total size.",
                    "type": "integer"
                  },
                  "deviceKey": {
                    "format": "int32",
                    "description": "Gets or sets the device key value.",
                    "type": "integer"
                  },
                  "diskMode": {
                    "description": "Gets or sets the disk mode.",
                    "enum": [
                      "persistent",
                      "independent_persistent",
                      "independent_nonpersistent"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DiskMode"
                    }
                  },
                  "controllerKey": {
                    "description": "Gets or sets the controller id.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "unitNumber": {
                    "description": "Gets or sets the unit number of the disk on the controller.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "deviceName": {
                    "description": "Gets or sets the device name.",
                    "type": "string"
                  },
                  "diskType": {
                    "description": "Gets or sets the disk backing type.",
                    "enum": [
                      "flat",
                      "pmem",
                      "rawphysical",
                      "rawvirtual",
                      "sparse",
                      "sesparse",
                      "unknown"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DiskType"
                    }
                  }
                }
              }
            }
          }
        },
        "networkProfile": {
          "description": "Specifies the network interfaces of the virtual machine.",
          "type": "object",
          "properties": {
            "networkInterfaces": {
              "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
              "type": "array",
              "items": {
                "description": "Defines the network interface update.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Gets or sets the name of the network interface.",
                    "type": "string"
                  },
                  "networkId": {
                    "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                    "type": "string"
                  },
                  "nicType": {
                    "description": "NIC type",
                    "type": "string",
                    "enum": [
                      "vmxnet3",
                      "vmxnet2",
                      "vmxnet",
                      "e1000",
                      "e1000e",
                      "pcnet32"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "NICType"
                    }
                  },
                  "powerOnBoot": {
                    "description": "Gets or sets the power on boot.",
                    "enum": [
                      "enabled",
                      "disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "PowerOnBootOption"
                    }
                  },
                  "deviceKey": {
                    "format": "int32",
                    "description": "Gets or sets the device key value.",
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "VirtualMachineInstanceUpdate": {
      "description": "Defines the virtualMachineInstanceUpdate.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "type": "object",
          "properties": {
            "hardwareProfile": {
              "description": "Specifies the hardware settings for the virtual machine.",
              "type": "object",
              "properties": {
                "memorySizeMB": {
                  "format": "int32",
                  "description": "Gets or sets memory size in MBs for the vm.",
                  "type": "integer"
                },
                "numCPUs": {
                  "format": "int32",
                  "description": "Gets or sets the number of vCPUs for the vm.",
                  "type": "integer"
                },
                "numCoresPerSocket": {
                  "format": "int32",
                  "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.",
                  "type": "integer"
                },
                "cpuHotAddEnabled": {
                  "description": "Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.",
                  "type": "boolean",
                  "readOnly": true
                },
                "cpuHotRemoveEnabled": {
                  "description": "Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.",
                  "type": "boolean",
                  "readOnly": true
                },
                "memoryHotAddEnabled": {
                  "description": "Gets or sets a value indicating whether memory can be added while this virtual machine is running.",
                  "type": "boolean",
                  "readOnly": true
                }
              }
            },
            "storageProfile": {
              "description": "Specifies the storage settings for the virtual machine disks.",
              "type": "object",
              "properties": {
                "disks": {
                  "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                  "type": "array",
                  "items": {
                    "description": "Defines the virtual disk update.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Gets or sets the name of the virtual disk.",
                        "type": "string"
                      },
                      "diskSizeGB": {
                        "format": "int32",
                        "description": "Gets or sets the disk total size.",
                        "type": "integer"
                      },
                      "deviceKey": {
                        "format": "int32",
                        "description": "Gets or sets the device key value.",
                        "type": "integer"
                      },
                      "diskMode": {
                        "description": "Gets or sets the disk mode.",
                        "enum": [
                          "persistent",
                          "independent_persistent",
                          "independent_nonpersistent"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "DiskMode"
                        }
                      },
                      "controllerKey": {
                        "description": "Gets or sets the controller id.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "unitNumber": {
                        "description": "Gets or sets the unit number of the disk on the controller.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "deviceName": {
                        "description": "Gets or sets the device name.",
                        "type": "string"
                      },
                      "diskType": {
                        "description": "Gets or sets the disk backing type.",
                        "enum": [
                          "flat",
                          "pmem",
                          "rawphysical",
                          "rawvirtual",
                          "sparse",
                          "sesparse",
                          "unknown"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "DiskType"
                        }
                      }
                    }
                  }
                }
              }
            },
            "networkProfile": {
              "description": "Specifies the network interfaces of the virtual machine.",
              "type": "object",
              "properties": {
                "networkInterfaces": {
                  "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                  "type": "array",
                  "items": {
                    "description": "Defines the network interface update.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Gets or sets the name of the network interface.",
                        "type": "string"
                      },
                      "networkId": {
                        "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                        "type": "string"
                      },
                      "nicType": {
                        "description": "NIC type",
                        "type": "string",
                        "enum": [
                          "vmxnet3",
                          "vmxnet2",
                          "vmxnet",
                          "e1000",
                          "e1000e",
                          "pcnet32"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "NICType"
                        }
                      },
                      "powerOnBoot": {
                        "description": "Gets or sets the power on boot.",
                        "enum": [
                          "enabled",
                          "disabled"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "PowerOnBootOption"
                        }
                      },
                      "deviceKey": {
                        "format": "int32",
                        "description": "Gets or sets the device key value.",
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "VirtualMachineInstancesList": {
      "description": "List of VirtualMachineInstances.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of VirtualMachines.",
          "type": "string"
        },
        "value": {
          "description": "Array of VirtualMachines",
          "type": "array",
          "items": {
            "description": "Define the virtualMachineInstance.",
            "required": [
              "properties"
            ],
            "type": "object",
            "x-ms-azure-resource": true,
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "placementProfile": {
                    "description": "Placement properties.",
                    "type": "object",
                    "properties": {
                      "resourcePoolId": {
                        "type": "string",
                        "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will deploy."
                      },
                      "clusterId": {
                        "type": "string",
                        "description": "Gets or sets the ARM Id of the cluster resource on which this virtual machine will deploy."
                      },
                      "hostId": {
                        "type": "string",
                        "description": "Gets or sets the ARM Id of the host resource on which this virtual machine will deploy."
                      },
                      "datastoreId": {
                        "type": "string",
                        "description": "Gets or sets the ARM Id of the datastore resource on which the data for the virtual machine will be kept."
                      }
                    }
                  },
                  "osProfile": {
                    "description": "OS properties.",
                    "type": "object",
                    "properties": {
                      "computerName": {
                        "description": "Gets or sets computer name.",
                        "type": "string"
                      },
                      "adminUsername": {
                        "description": "Gets or sets administrator username.",
                        "type": "string"
                      },
                      "adminPassword": {
                        "description": "Sets administrator password.",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "update"
                        ],
                        "x-ms-secret": true
                      },
                      "guestId": {
                        "description": "Gets or sets the guestId.",
                        "type": "string"
                      },
                      "osType": {
                        "description": "Gets or sets the type of the os.",
                        "enum": [
                          "Windows",
                          "Linux",
                          "Other"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "OsType"
                        }
                      },
                      "osSku": {
                        "description": "Gets or sets os sku.",
                        "type": "string",
                        "readOnly": true
                      },
                      "toolsRunningStatus": {
                        "description": "Gets or sets the current running status of VMware Tools running in the guest operating system.",
                        "type": "string",
                        "readOnly": true
                      },
                      "toolsVersionStatus": {
                        "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                        "type": "string",
                        "readOnly": true
                      },
                      "toolsVersion": {
                        "description": "Gets or sets the current version of VMware Tools.",
                        "type": "string",
                        "readOnly": true
                      },
                      "windowsConfiguration": {
                        "description": "Windows Configuration.",
                        "type": "object",
                        "properties": {
                          "fullName": {
                            "description": "Sets full name of the owner of the vm.",
                            "type": "string"
                          },
                          "orgName": {
                            "description": "Sets org name to which the owner of the vm belongs.",
                            "type": "string"
                          },
                          "domainName": {
                            "description": "Sets domain name that vm should join.",
                            "type": "string"
                          },
                          "domainUsername": {
                            "description": "Sets domain username.",
                            "type": "string"
                          },
                          "domainUserPassword": {
                            "description": "Sets domain user password.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          },
                          "workGroupName": {
                            "description": "Sets work group name that vm should join.",
                            "type": "string"
                          },
                          "productId": {
                            "description": "Sets product id of the vm.",
                            "type": "string"
                          },
                          "autoLogon": {
                            "description": "Sets a value indicating whether auto logon is enabled.",
                            "type": "boolean"
                          },
                          "autoLogonCount": {
                            "format": "int32",
                            "description": "Sets auto logon count.",
                            "type": "integer"
                          },
                          "timeZone": {
                            "type": "string",
                            "description": "Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\". Time zone name correspond to time zones listed at Microsoft Time Zone name values(https://learn.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11))."
                          },
                          "firstLogonCommands": {
                            "description": "Sets first logon commands",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "hardwareProfile": {
                    "description": "Hardware properties.",
                    "type": "object",
                    "properties": {
                      "memorySizeMB": {
                        "format": "int32",
                        "description": "Gets or sets memory size in MBs for the vm.",
                        "type": "integer"
                      },
                      "numCPUs": {
                        "format": "int32",
                        "description": "Gets or sets the number of vCPUs for the vm.",
                        "type": "integer"
                      },
                      "numCoresPerSocket": {
                        "format": "int32",
                        "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.",
                        "type": "integer"
                      },
                      "cpuHotAddEnabled": {
                        "description": "Gets or sets a value indicating whether virtual processors can be added while this virtual machine is running.",
                        "type": "boolean",
                        "readOnly": true
                      },
                      "cpuHotRemoveEnabled": {
                        "description": "Gets or sets a value indicating whether virtual processors can be removed while this virtual machine is running.",
                        "type": "boolean",
                        "readOnly": true
                      },
                      "memoryHotAddEnabled": {
                        "description": "Gets or sets a value indicating whether memory can be added while this virtual machine is running.",
                        "type": "boolean",
                        "readOnly": true
                      }
                    }
                  },
                  "networkProfile": {
                    "description": "Network properties.",
                    "type": "object",
                    "properties": {
                      "networkInterfaces": {
                        "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
                        "type": "array",
                        "items": {
                          "description": "Network Interface model",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Gets or sets the name of the network interface.",
                              "type": "string"
                            },
                            "label": {
                              "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                              "type": "string",
                              "readOnly": true
                            },
                            "ipAddresses": {
                              "description": "Gets or sets the nic ip addresses.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "readOnly": true
                            },
                            "macAddress": {
                              "description": "Gets or sets the NIC MAC address.",
                              "type": "string",
                              "readOnly": true
                            },
                            "networkId": {
                              "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                              "type": "string"
                            },
                            "nicType": {
                              "description": "NIC type",
                              "type": "string",
                              "enum": [
                                "vmxnet3",
                                "vmxnet2",
                                "vmxnet",
                                "e1000",
                                "e1000e",
                                "pcnet32"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "NICType"
                              }
                            },
                            "powerOnBoot": {
                              "description": "Gets or sets the power on boot.",
                              "enum": [
                                "enabled",
                                "disabled"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "PowerOnBootOption"
                              }
                            },
                            "networkMoRefId": {
                              "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                              "type": "string",
                              "readOnly": true
                            },
                            "networkMoName": {
                              "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                              "type": "string",
                              "readOnly": true
                            },
                            "deviceKey": {
                              "format": "int32",
                              "description": "Gets or sets the device key value.",
                              "type": "integer"
                            },
                            "ipSettings": {
                              "description": "Gets or sets the ipsettings.",
                              "type": "object",
                              "properties": {
                                "allocationMethod": {
                                  "description": "Gets or sets the nic allocation method.",
                                  "enum": [
                                    "unset",
                                    "dynamic",
                                    "static",
                                    "linklayer",
                                    "random",
                                    "other"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "modelAsString": true,
                                    "name": "IPAddressAllocationMethod"
                                  }
                                },
                                "dnsServers": {
                                  "description": "Gets or sets the dns servers.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "gateway": {
                                  "description": "Gets or sets the gateway.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "ipAddress": {
                                  "description": "Gets or sets the ip address for the nic.",
                                  "type": "string"
                                },
                                "subnetMask": {
                                  "description": "Gets or sets the mask.",
                                  "type": "string"
                                },
                                "primaryWinsServer": {
                                  "description": "Gets or sets the primary server.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "secondaryWinsServer": {
                                  "description": "Gets or sets the secondary server.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "ipAddressInfo": {
                                  "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                                  "type": "array",
                                  "items": {
                                    "description": "IP address information for a virtual network adapter reported by the fabric.",
                                    "type": "object",
                                    "properties": {
                                      "allocationMethod": {
                                        "description": "Gets the ip address allocation method.",
                                        "type": "string",
                                        "readOnly": true
                                      },
                                      "ipAddress": {
                                        "description": "Gets the ip address for the nic.",
                                        "type": "string",
                                        "readOnly": true
                                      },
                                      "subnetMask": {
                                        "description": "Gets the mask.",
                                        "type": "string",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "storageProfile": {
                    "description": "Storage properties.",
                    "type": "object",
                    "properties": {
                      "disks": {
                        "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
                        "type": "array",
                        "items": {
                          "description": "Virtual disk model",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Gets or sets the name of the virtual disk.",
                              "type": "string"
                            },
                            "label": {
                              "description": "Gets or sets the label of the virtual disk in vCenter.",
                              "type": "string",
                              "readOnly": true
                            },
                            "diskObjectId": {
                              "description": "Gets or sets the disk object id.",
                              "type": "string",
                              "readOnly": true
                            },
                            "diskSizeGB": {
                              "format": "int32",
                              "description": "Gets or sets the disk total size.",
                              "type": "integer"
                            },
                            "deviceKey": {
                              "format": "int32",
                              "description": "Gets or sets the device key value.",
                              "type": "integer"
                            },
                            "diskMode": {
                              "description": "Gets or sets the disk mode.",
                              "enum": [
                                "persistent",
                                "independent_persistent",
                                "independent_nonpersistent"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "DiskMode"
                              }
                            },
                            "controllerKey": {
                              "description": "Gets or sets the controller id.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "unitNumber": {
                              "description": "Gets or sets the unit number of the disk on the controller.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "deviceName": {
                              "description": "Gets or sets the device name.",
                              "type": "string"
                            },
                            "diskType": {
                              "description": "Gets or sets the disk backing type.",
                              "enum": [
                                "flat",
                                "pmem",
                                "rawphysical",
                                "rawvirtual",
                                "sparse",
                                "sesparse",
                                "unknown"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "DiskType"
                              }
                            }
                          }
                        }
                      },
                      "scsiControllers": {
                        "description": "Gets or sets the list of virtual SCSI controllers associated with the virtual machine.",
                        "type": "array",
                        "items": {
                          "description": "This data object type contains the properties of a SCSI controller device attached to a virtual machine that is reported by the controller.",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Gets or sets the controller type.",
                              "enum": [
                                "lsilogic",
                                "buslogic",
                                "pvscsi",
                                "lsilogicsas"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "SCSIControllerType"
                              }
                            },
                            "controllerKey": {
                              "format": "int32",
                              "description": "Gets or sets the key of the controller.",
                              "type": "integer"
                            },
                            "busNumber": {
                              "format": "int32",
                              "description": "Gets or sets the bus number of the controller.",
                              "type": "integer"
                            },
                            "scsiCtlrUnitNumber": {
                              "format": "int32",
                              "description": "Gets or sets the SCSI controller unit number.",
                              "type": "integer"
                            },
                            "sharing": {
                              "description": "Gets or sets the sharing mode.",
                              "enum": [
                                "noSharing",
                                "physicalSharing",
                                "virtualSharing"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "VirtualSCSISharing"
                              }
                            }
                          }
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "securityProfile": {
                    "description": "Gets the security profile.",
                    "type": "object",
                    "properties": {
                      "uefiSettings": {
                        "description": "Specifies the security settings like secure boot used while creating the virtual machine.",
                        "type": "object",
                        "properties": {
                          "secureBootEnabled": {
                            "type": "boolean",
                            "description": "Specifies whether secure boot should be enabled on the virtual machine."
                          }
                        }
                      }
                    }
                  },
                  "infrastructureProfile": {
                    "description": "Gets the infrastructure profile.",
                    "type": "object",
                    "properties": {
                      "templateId": {
                        "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine.",
                        "type": "string"
                      },
                      "vCenterId": {
                        "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
                        "type": "string"
                      },
                      "moRefId": {
                        "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine.",
                        "type": "string",
                        "readOnly": true
                      },
                      "inventoryItemId": {
                        "description": "Gets or sets the inventory Item ID for the virtual machine.",
                        "type": "string"
                      },
                      "moName": {
                        "description": "Gets or sets the vCenter Managed Object name for the virtual machine.",
                        "type": "string",
                        "readOnly": true
                      },
                      "folderPath": {
                        "description": "Gets or sets the folder path of the vm.",
                        "type": "string",
                        "readOnly": true
                      },
                      "instanceUuid": {
                        "description": "Gets or sets the instance uuid of the vm.",
                        "type": "string",
                        "readOnly": true
                      },
                      "smbiosUuid": {
                        "type": "string",
                        "description": "Gets or sets the SMBIOS UUID of the vm."
                      },
                      "firmwareType": {
                        "description": "Firmware type",
                        "type": "string",
                        "enum": [
                          "bios",
                          "efi"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "FirmwareType"
                        }
                      },
                      "customResourceName": {
                        "description": "Gets the name of the corresponding resource in Kubernetes.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "powerState": {
                    "description": "Gets the power state of the virtual machine.",
                    "type": "string",
                    "readOnly": true
                  },
                  "statuses": {
                    "description": "The resource status information.",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "description": "The resource status information.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "reason": {
                          "description": "The reason for the condition's status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "description": "A human readable message indicating details about the status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "severity": {
                          "description": "Severity with which to treat failures of this type of condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "lastUpdatedAt": {
                          "description": "The last update time for this condition.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "type"
                    ]
                  },
                  "provisioningState": {
                    "description": "Gets the provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "resourceUid": {
                    "description": "Gets or sets a unique identifier for the vm resource.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "extendedLocation": {
                "description": "Gets or sets the extended location.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type."
                  },
                  "name": {
                    "type": "string",
                    "description": "The extended location name."
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "StopVirtualMachineOptions": {
      "description": "Defines the stop action properties.",
      "type": "object",
      "properties": {
        "skipShutdown": {
          "description": "Gets or sets a value indicating whether to request non-graceful VM shutdown. True value for this flag indicates non-graceful shutdown whereas false indicates otherwise. Defaults to false.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "VirtualMachineTemplateProperties": {
      "description": "Describes the properties of a Virtual Machine Template.",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Gets or sets a unique identifier for this resource.",
          "type": "string",
          "readOnly": true
        },
        "vCenterId": {
          "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
          "type": "string"
        },
        "moRefId": {
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate.",
          "type": "string"
        },
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the virtual machine template.",
          "type": "string"
        },
        "moName": {
          "description": "Gets or sets the vCenter Managed Object name for the virtual machine template.",
          "type": "string",
          "readOnly": true
        },
        "memorySizeMB": {
          "format": "int32",
          "description": "Gets or sets memory size in MBs for the template.",
          "type": "integer",
          "readOnly": true
        },
        "numCPUs": {
          "format": "int32",
          "description": "Gets or sets the number of vCPUs for the template.",
          "type": "integer",
          "readOnly": true
        },
        "numCoresPerSocket": {
          "format": "int32",
          "description": "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified.",
          "type": "integer",
          "readOnly": true
        },
        "osType": {
          "description": "Gets or sets the type of the os.",
          "readOnly": true,
          "enum": [
            "Windows",
            "Linux",
            "Other"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "OsType"
          }
        },
        "osName": {
          "description": "Gets or sets os name.",
          "type": "string",
          "readOnly": true
        },
        "folderPath": {
          "description": "Gets or sets the folder path of the template.",
          "type": "string",
          "readOnly": true
        },
        "networkInterfaces": {
          "description": "Gets or sets the network interfaces of the template.",
          "type": "array",
          "items": {
            "description": "Network Interface model",
            "type": "object",
            "properties": {
              "name": {
                "description": "Gets or sets the name of the network interface.",
                "type": "string"
              },
              "label": {
                "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                "type": "string",
                "readOnly": true
              },
              "ipAddresses": {
                "description": "Gets or sets the nic ip addresses.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "macAddress": {
                "description": "Gets or sets the NIC MAC address.",
                "type": "string",
                "readOnly": true
              },
              "networkId": {
                "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                "type": "string"
              },
              "nicType": {
                "description": "NIC type",
                "type": "string",
                "enum": [
                  "vmxnet3",
                  "vmxnet2",
                  "vmxnet",
                  "e1000",
                  "e1000e",
                  "pcnet32"
                ],
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "NICType"
                }
              },
              "powerOnBoot": {
                "description": "Gets or sets the power on boot.",
                "enum": [
                  "enabled",
                  "disabled"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "PowerOnBootOption"
                }
              },
              "networkMoRefId": {
                "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                "type": "string",
                "readOnly": true
              },
              "networkMoName": {
                "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                "type": "string",
                "readOnly": true
              },
              "deviceKey": {
                "format": "int32",
                "description": "Gets or sets the device key value.",
                "type": "integer"
              },
              "ipSettings": {
                "description": "Gets or sets the ipsettings.",
                "type": "object",
                "properties": {
                  "allocationMethod": {
                    "description": "Gets or sets the nic allocation method.",
                    "enum": [
                      "unset",
                      "dynamic",
                      "static",
                      "linklayer",
                      "random",
                      "other"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "IPAddressAllocationMethod"
                    }
                  },
                  "dnsServers": {
                    "description": "Gets or sets the dns servers.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "gateway": {
                    "description": "Gets or sets the gateway.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "ipAddress": {
                    "description": "Gets or sets the ip address for the nic.",
                    "type": "string"
                  },
                  "subnetMask": {
                    "description": "Gets or sets the mask.",
                    "type": "string"
                  },
                  "primaryWinsServer": {
                    "description": "Gets or sets the primary server.",
                    "type": "string",
                    "readOnly": true
                  },
                  "secondaryWinsServer": {
                    "description": "Gets or sets the secondary server.",
                    "type": "string",
                    "readOnly": true
                  },
                  "ipAddressInfo": {
                    "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                    "type": "array",
                    "items": {
                      "description": "IP address information for a virtual network adapter reported by the fabric.",
                      "type": "object",
                      "properties": {
                        "allocationMethod": {
                          "description": "Gets the ip address allocation method.",
                          "type": "string",
                          "readOnly": true
                        },
                        "ipAddress": {
                          "description": "Gets the ip address for the nic.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subnetMask": {
                          "description": "Gets the mask.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "disks": {
          "description": "Gets or sets the disks the template.",
          "type": "array",
          "items": {
            "description": "Virtual disk model",
            "type": "object",
            "properties": {
              "name": {
                "description": "Gets or sets the name of the virtual disk.",
                "type": "string"
              },
              "label": {
                "description": "Gets or sets the label of the virtual disk in vCenter.",
                "type": "string",
                "readOnly": true
              },
              "diskObjectId": {
                "description": "Gets or sets the disk object id.",
                "type": "string",
                "readOnly": true
              },
              "diskSizeGB": {
                "format": "int32",
                "description": "Gets or sets the disk total size.",
                "type": "integer"
              },
              "deviceKey": {
                "format": "int32",
                "description": "Gets or sets the device key value.",
                "type": "integer"
              },
              "diskMode": {
                "description": "Gets or sets the disk mode.",
                "enum": [
                  "persistent",
                  "independent_persistent",
                  "independent_nonpersistent"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "DiskMode"
                }
              },
              "controllerKey": {
                "description": "Gets or sets the controller id.",
                "format": "int32",
                "type": "integer"
              },
              "unitNumber": {
                "description": "Gets or sets the unit number of the disk on the controller.",
                "format": "int32",
                "type": "integer"
              },
              "deviceName": {
                "description": "Gets or sets the device name.",
                "type": "string"
              },
              "diskType": {
                "description": "Gets or sets the disk backing type.",
                "enum": [
                  "flat",
                  "pmem",
                  "rawphysical",
                  "rawvirtual",
                  "sparse",
                  "sesparse",
                  "unknown"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "DiskType"
                }
              }
            }
          },
          "readOnly": true
        },
        "customResourceName": {
          "description": "Gets the name of the corresponding resource in Kubernetes.",
          "type": "string",
          "readOnly": true
        },
        "toolsVersionStatus": {
          "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
          "type": "string",
          "readOnly": true
        },
        "toolsVersion": {
          "description": "Gets or sets the current version of VMware Tools.",
          "type": "string",
          "readOnly": true
        },
        "firmwareType": {
          "description": "Firmware type",
          "readOnly": true,
          "type": "string",
          "enum": [
            "bios",
            "efi"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "FirmwareType"
          }
        },
        "statuses": {
          "description": "The resource status information.",
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "The resource status information.",
            "type": "object",
            "properties": {
              "type": {
                "description": "The type of the condition.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the condition.",
                "type": "string",
                "readOnly": true
              },
              "reason": {
                "description": "The reason for the condition's status.",
                "type": "string",
                "readOnly": true
              },
              "message": {
                "description": "A human readable message indicating details about the status.",
                "type": "string",
                "readOnly": true
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.",
                "type": "string",
                "readOnly": true
              },
              "lastUpdatedAt": {
                "description": "The last update time for this condition.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "type"
          ]
        },
        "provisioningState": {
          "description": "Gets the provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "ClusterProperties": {
      "description": "Describes the properties of a Cluster.",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Gets or sets a unique identifier for this resource.",
          "type": "string",
          "readOnly": true
        },
        "vCenterId": {
          "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
          "type": "string"
        },
        "moRefId": {
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
          "type": "string"
        },
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the cluster.",
          "type": "string"
        },
        "moName": {
          "description": "Gets or sets the vCenter Managed Object name for the cluster.",
          "type": "string",
          "readOnly": true
        },
        "statuses": {
          "description": "The resource status information.",
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "The resource status information.",
            "type": "object",
            "properties": {
              "type": {
                "description": "The type of the condition.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the condition.",
                "type": "string",
                "readOnly": true
              },
              "reason": {
                "description": "The reason for the condition's status.",
                "type": "string",
                "readOnly": true
              },
              "message": {
                "description": "A human readable message indicating details about the status.",
                "type": "string",
                "readOnly": true
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.",
                "type": "string",
                "readOnly": true
              },
              "lastUpdatedAt": {
                "description": "The last update time for this condition.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "type"
          ]
        },
        "customResourceName": {
          "description": "Gets the name of the corresponding resource in Kubernetes.",
          "type": "string",
          "readOnly": true
        },
        "usedMemoryGB": {
          "format": "int64",
          "description": "Gets the used physical memory on the cluster in GB.",
          "type": "integer",
          "readOnly": true
        },
        "totalMemoryGB": {
          "format": "int64",
          "description": "Gets the total amount of physical memory on the cluster in GB.",
          "type": "integer",
          "readOnly": true
        },
        "usedCpuMHz": {
          "format": "int64",
          "description": "Gets the used CPU usage across all cores on the cluster in MHz.",
          "type": "integer",
          "readOnly": true
        },
        "totalCpuMHz": {
          "format": "int64",
          "description": "Gets the max CPU usage across all cores on the cluster in MHz.",
          "type": "integer",
          "readOnly": true
        },
        "datastoreIds": {
          "description": "Gets the datastore ARM ids.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "networkIds": {
          "description": "Gets the network ARM ids.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "Gets the provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "Cluster": {
      "description": "Define the cluster.",
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "type": "object",
          "properties": {
            "uuid": {
              "description": "Gets or sets a unique identifier for this resource.",
              "type": "string",
              "readOnly": true
            },
            "vCenterId": {
              "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
              "type": "string"
            },
            "moRefId": {
              "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
              "type": "string"
            },
            "inventoryItemId": {
              "description": "Gets or sets the inventory Item ID for the cluster.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the cluster.",
              "type": "string",
              "readOnly": true
            },
            "statuses": {
              "description": "The resource status information.",
              "readOnly": true,
              "type": "array",
              "items": {
                "description": "The resource status information.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "reason": {
                    "description": "The reason for the condition's status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "A human readable message indicating details about the status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "severity": {
                    "description": "Severity with which to treat failures of this type of condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "lastUpdatedAt": {
                    "description": "The last update time for this condition.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "type"
              ]
            },
            "customResourceName": {
              "description": "Gets the name of the corresponding resource in Kubernetes.",
              "type": "string",
              "readOnly": true
            },
            "usedMemoryGB": {
              "format": "int64",
              "description": "Gets the used physical memory on the cluster in GB.",
              "type": "integer",
              "readOnly": true
            },
            "totalMemoryGB": {
              "format": "int64",
              "description": "Gets the total amount of physical memory on the cluster in GB.",
              "type": "integer",
              "readOnly": true
            },
            "usedCpuMHz": {
              "format": "int64",
              "description": "Gets the used CPU usage across all cores on the cluster in MHz.",
              "type": "integer",
              "readOnly": true
            },
            "totalCpuMHz": {
              "format": "int64",
              "description": "Gets the max CPU usage across all cores on the cluster in MHz.",
              "type": "integer",
              "readOnly": true
            },
            "datastoreIds": {
              "description": "Gets the datastore ARM ids.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "networkIds": {
              "description": "Gets the network ARM ids.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        },
        "systemData": {
          "description": "The system data.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Gets or sets the Id.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        }
      }
    },
    "ClustersList": {
      "description": "List of Clusters.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of Clusters.",
          "type": "string"
        },
        "value": {
          "description": "Array of Clusters",
          "type": "array",
          "items": {
            "description": "Define the cluster.",
            "required": [
              "location",
              "properties"
            ],
            "type": "object",
            "x-ms-azure-resource": true,
            "properties": {
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "uuid": {
                    "description": "Gets or sets a unique identifier for this resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "vCenterId": {
                    "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
                    "type": "string"
                  },
                  "moRefId": {
                    "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
                    "type": "string"
                  },
                  "inventoryItemId": {
                    "description": "Gets or sets the inventory Item ID for the cluster.",
                    "type": "string"
                  },
                  "moName": {
                    "description": "Gets or sets the vCenter Managed Object name for the cluster.",
                    "type": "string",
                    "readOnly": true
                  },
                  "statuses": {
                    "description": "The resource status information.",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "description": "The resource status information.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "reason": {
                          "description": "The reason for the condition's status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "description": "A human readable message indicating details about the status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "severity": {
                          "description": "Severity with which to treat failures of this type of condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "lastUpdatedAt": {
                          "description": "The last update time for this condition.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "type"
                    ]
                  },
                  "customResourceName": {
                    "description": "Gets the name of the corresponding resource in Kubernetes.",
                    "type": "string",
                    "readOnly": true
                  },
                  "usedMemoryGB": {
                    "format": "int64",
                    "description": "Gets the used physical memory on the cluster in GB.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "totalMemoryGB": {
                    "format": "int64",
                    "description": "Gets the total amount of physical memory on the cluster in GB.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "usedCpuMHz": {
                    "format": "int64",
                    "description": "Gets the used CPU usage across all cores on the cluster in MHz.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "totalCpuMHz": {
                    "format": "int64",
                    "description": "Gets the max CPU usage across all cores on the cluster in MHz.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "datastoreIds": {
                    "description": "Gets the datastore ARM ids.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "networkIds": {
                    "description": "Gets the network ARM ids.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Gets the provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "location": {
                "description": "Gets or sets the location.",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "extendedLocation": {
                "description": "Gets or sets the extended location.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type."
                  },
                  "name": {
                    "type": "string",
                    "description": "The extended location name."
                  }
                }
              },
              "systemData": {
                "description": "The system data.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "description": "Gets or sets the Resource tags.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "name": {
                "description": "Gets or sets the name.",
                "type": "string",
                "readOnly": true
              },
              "id": {
                "description": "Gets or sets the Id.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Gets or sets the type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "kind": {
                "type": "string",
                "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
              }
            }
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "HostProperties": {
      "description": "Describes the properties of a Host.",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Gets or sets a unique identifier for this resource.",
          "type": "string",
          "readOnly": true
        },
        "vCenterId": {
          "description": "Gets or sets the ARM Id of the vCenter resource in which this host resides.",
          "type": "string"
        },
        "moRefId": {
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host.",
          "type": "string"
        },
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the host.",
          "type": "string"
        },
        "moName": {
          "description": "Gets or sets the vCenter Managed Object name for the host.",
          "type": "string",
          "readOnly": true
        },
        "statuses": {
          "description": "The resource status information.",
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "The resource status information.",
            "type": "object",
            "properties": {
              "type": {
                "description": "The type of the condition.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the condition.",
                "type": "string",
                "readOnly": true
              },
              "reason": {
                "description": "The reason for the condition's status.",
                "type": "string",
                "readOnly": true
              },
              "message": {
                "description": "A human readable message indicating details about the status.",
                "type": "string",
                "readOnly": true
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.",
                "type": "string",
                "readOnly": true
              },
              "lastUpdatedAt": {
                "description": "The last update time for this condition.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "type"
          ]
        },
        "customResourceName": {
          "description": "Gets the name of the corresponding resource in Kubernetes.",
          "type": "string",
          "readOnly": true
        },
        "overallMemoryUsageGB": {
          "format": "int64",
          "description": "Gets the used physical memory on the host in GB.",
          "type": "integer",
          "readOnly": true
        },
        "memorySizeGB": {
          "format": "int64",
          "description": "Gets the total amount of physical memory on the host in GB.",
          "type": "integer",
          "readOnly": true
        },
        "overallCpuUsageMHz": {
          "format": "int64",
          "description": "Gets the used CPU usage across all cores in MHz.",
          "type": "integer",
          "readOnly": true
        },
        "cpuMhz": {
          "format": "int64",
          "description": "Gets the max CPU usage across all cores in MHz.",
          "type": "integer",
          "readOnly": true
        },
        "datastoreIds": {
          "description": "Gets the datastore ARM ids.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "networkIds": {
          "description": "Gets the network ARM ids.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "Gets the provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "Host": {
      "description": "Define the host.",
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "type": "object",
          "properties": {
            "uuid": {
              "description": "Gets or sets a unique identifier for this resource.",
              "type": "string",
              "readOnly": true
            },
            "vCenterId": {
              "description": "Gets or sets the ARM Id of the vCenter resource in which this host resides.",
              "type": "string"
            },
            "moRefId": {
              "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host.",
              "type": "string"
            },
            "inventoryItemId": {
              "description": "Gets or sets the inventory Item ID for the host.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the host.",
              "type": "string",
              "readOnly": true
            },
            "statuses": {
              "description": "The resource status information.",
              "readOnly": true,
              "type": "array",
              "items": {
                "description": "The resource status information.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "reason": {
                    "description": "The reason for the condition's status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "A human readable message indicating details about the status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "severity": {
                    "description": "Severity with which to treat failures of this type of condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "lastUpdatedAt": {
                    "description": "The last update time for this condition.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "type"
              ]
            },
            "customResourceName": {
              "description": "Gets the name of the corresponding resource in Kubernetes.",
              "type": "string",
              "readOnly": true
            },
            "overallMemoryUsageGB": {
              "format": "int64",
              "description": "Gets the used physical memory on the host in GB.",
              "type": "integer",
              "readOnly": true
            },
            "memorySizeGB": {
              "format": "int64",
              "description": "Gets the total amount of physical memory on the host in GB.",
              "type": "integer",
              "readOnly": true
            },
            "overallCpuUsageMHz": {
              "format": "int64",
              "description": "Gets the used CPU usage across all cores in MHz.",
              "type": "integer",
              "readOnly": true
            },
            "cpuMhz": {
              "format": "int64",
              "description": "Gets the max CPU usage across all cores in MHz.",
              "type": "integer",
              "readOnly": true
            },
            "datastoreIds": {
              "description": "Gets the datastore ARM ids.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "networkIds": {
              "description": "Gets the network ARM ids.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        },
        "systemData": {
          "description": "The system data.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Gets or sets the Id.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        }
      }
    },
    "HostsList": {
      "description": "List of Hosts.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of Hosts.",
          "type": "string"
        },
        "value": {
          "description": "Array of Hosts",
          "type": "array",
          "items": {
            "description": "Define the host.",
            "required": [
              "location",
              "properties"
            ],
            "type": "object",
            "x-ms-azure-resource": true,
            "properties": {
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "uuid": {
                    "description": "Gets or sets a unique identifier for this resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "vCenterId": {
                    "description": "Gets or sets the ARM Id of the vCenter resource in which this host resides.",
                    "type": "string"
                  },
                  "moRefId": {
                    "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host.",
                    "type": "string"
                  },
                  "inventoryItemId": {
                    "description": "Gets or sets the inventory Item ID for the host.",
                    "type": "string"
                  },
                  "moName": {
                    "description": "Gets or sets the vCenter Managed Object name for the host.",
                    "type": "string",
                    "readOnly": true
                  },
                  "statuses": {
                    "description": "The resource status information.",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "description": "The resource status information.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "reason": {
                          "description": "The reason for the condition's status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "description": "A human readable message indicating details about the status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "severity": {
                          "description": "Severity with which to treat failures of this type of condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "lastUpdatedAt": {
                          "description": "The last update time for this condition.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "type"
                    ]
                  },
                  "customResourceName": {
                    "description": "Gets the name of the corresponding resource in Kubernetes.",
                    "type": "string",
                    "readOnly": true
                  },
                  "overallMemoryUsageGB": {
                    "format": "int64",
                    "description": "Gets the used physical memory on the host in GB.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "memorySizeGB": {
                    "format": "int64",
                    "description": "Gets the total amount of physical memory on the host in GB.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "overallCpuUsageMHz": {
                    "format": "int64",
                    "description": "Gets the used CPU usage across all cores in MHz.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "cpuMhz": {
                    "format": "int64",
                    "description": "Gets the max CPU usage across all cores in MHz.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "datastoreIds": {
                    "description": "Gets the datastore ARM ids.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "networkIds": {
                    "description": "Gets the network ARM ids.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Gets the provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "location": {
                "description": "Gets or sets the location.",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "extendedLocation": {
                "description": "Gets or sets the extended location.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type."
                  },
                  "name": {
                    "type": "string",
                    "description": "The extended location name."
                  }
                }
              },
              "systemData": {
                "description": "The system data.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "description": "Gets or sets the Resource tags.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "name": {
                "description": "Gets or sets the name.",
                "type": "string",
                "readOnly": true
              },
              "id": {
                "description": "Gets or sets the Id.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Gets or sets the type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "kind": {
                "type": "string",
                "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
              }
            }
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "DatastoreProperties": {
      "description": "Describes the properties of a Datastore.",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Gets or sets a unique identifier for this resource.",
          "type": "string",
          "readOnly": true
        },
        "vCenterId": {
          "description": "Gets or sets the ARM Id of the vCenter resource in which this datastore resides.",
          "type": "string"
        },
        "moRefId": {
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.",
          "type": "string"
        },
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the datastore.",
          "type": "string"
        },
        "moName": {
          "description": "Gets or sets the vCenter Managed Object name for the datastore.",
          "type": "string",
          "readOnly": true
        },
        "statuses": {
          "description": "The resource status information.",
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "The resource status information.",
            "type": "object",
            "properties": {
              "type": {
                "description": "The type of the condition.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the condition.",
                "type": "string",
                "readOnly": true
              },
              "reason": {
                "description": "The reason for the condition's status.",
                "type": "string",
                "readOnly": true
              },
              "message": {
                "description": "A human readable message indicating details about the status.",
                "type": "string",
                "readOnly": true
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.",
                "type": "string",
                "readOnly": true
              },
              "lastUpdatedAt": {
                "description": "The last update time for this condition.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "type"
          ]
        },
        "customResourceName": {
          "description": "Gets the name of the corresponding resource in Kubernetes.",
          "type": "string",
          "readOnly": true
        },
        "capacityGB": {
          "description": "Gets or sets Maximum capacity of this datastore in GBs.",
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "freeSpaceGB": {
          "description": "Gets or sets Available space of this datastore in GBs.",
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "ResourceProvisioningState": {
      "type": "string",
      "description": "The current deployment state of resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted",
        "Created"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "Datastore": {
      "description": "Define the datastore.",
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "type": "object",
          "properties": {
            "uuid": {
              "description": "Gets or sets a unique identifier for this resource.",
              "type": "string",
              "readOnly": true
            },
            "vCenterId": {
              "description": "Gets or sets the ARM Id of the vCenter resource in which this datastore resides.",
              "type": "string"
            },
            "moRefId": {
              "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.",
              "type": "string"
            },
            "inventoryItemId": {
              "description": "Gets or sets the inventory Item ID for the datastore.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the datastore.",
              "type": "string",
              "readOnly": true
            },
            "statuses": {
              "description": "The resource status information.",
              "readOnly": true,
              "type": "array",
              "items": {
                "description": "The resource status information.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "reason": {
                    "description": "The reason for the condition's status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "A human readable message indicating details about the status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "severity": {
                    "description": "Severity with which to treat failures of this type of condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "lastUpdatedAt": {
                    "description": "The last update time for this condition.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "type"
              ]
            },
            "customResourceName": {
              "description": "Gets the name of the corresponding resource in Kubernetes.",
              "type": "string",
              "readOnly": true
            },
            "capacityGB": {
              "description": "Gets or sets Maximum capacity of this datastore in GBs.",
              "format": "int64",
              "type": "integer",
              "readOnly": true
            },
            "freeSpaceGB": {
              "description": "Gets or sets Available space of this datastore in GBs.",
              "format": "int64",
              "type": "integer",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the resource.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        },
        "systemData": {
          "description": "The system data.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Gets or sets the Id.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        }
      }
    },
    "DatastoresList": {
      "description": "List of Datastores.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of Datastores.",
          "type": "string"
        },
        "value": {
          "description": "Array of Datastores",
          "type": "array",
          "items": {
            "description": "Define the datastore.",
            "required": [
              "location",
              "properties"
            ],
            "type": "object",
            "x-ms-azure-resource": true,
            "properties": {
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "uuid": {
                    "description": "Gets or sets a unique identifier for this resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "vCenterId": {
                    "description": "Gets or sets the ARM Id of the vCenter resource in which this datastore resides.",
                    "type": "string"
                  },
                  "moRefId": {
                    "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.",
                    "type": "string"
                  },
                  "inventoryItemId": {
                    "description": "Gets or sets the inventory Item ID for the datastore.",
                    "type": "string"
                  },
                  "moName": {
                    "description": "Gets or sets the vCenter Managed Object name for the datastore.",
                    "type": "string",
                    "readOnly": true
                  },
                  "statuses": {
                    "description": "The resource status information.",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "description": "The resource status information.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "reason": {
                          "description": "The reason for the condition's status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "description": "A human readable message indicating details about the status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "severity": {
                          "description": "Severity with which to treat failures of this type of condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "lastUpdatedAt": {
                          "description": "The last update time for this condition.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "type"
                    ]
                  },
                  "customResourceName": {
                    "description": "Gets the name of the corresponding resource in Kubernetes.",
                    "type": "string",
                    "readOnly": true
                  },
                  "capacityGB": {
                    "description": "Gets or sets Maximum capacity of this datastore in GBs.",
                    "format": "int64",
                    "type": "integer",
                    "readOnly": true
                  },
                  "freeSpaceGB": {
                    "description": "Gets or sets Available space of this datastore in GBs.",
                    "format": "int64",
                    "type": "integer",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the resource.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "location": {
                "description": "Gets or sets the location.",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "extendedLocation": {
                "description": "Gets or sets the extended location.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type."
                  },
                  "name": {
                    "type": "string",
                    "description": "The extended location name."
                  }
                }
              },
              "systemData": {
                "description": "The system data.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "description": "Gets or sets the Resource tags.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "name": {
                "description": "Gets or sets the name.",
                "type": "string",
                "readOnly": true
              },
              "id": {
                "description": "Gets or sets the Id.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Gets or sets the type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "kind": {
                "type": "string",
                "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
              }
            }
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "VirtualMachineTemplate": {
      "description": "Define the virtualMachineTemplate.",
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "type": "object",
          "properties": {
            "uuid": {
              "description": "Gets or sets a unique identifier for this resource.",
              "type": "string",
              "readOnly": true
            },
            "vCenterId": {
              "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
              "type": "string"
            },
            "moRefId": {
              "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate.",
              "type": "string"
            },
            "inventoryItemId": {
              "description": "Gets or sets the inventory Item ID for the virtual machine template.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the virtual machine template.",
              "type": "string",
              "readOnly": true
            },
            "memorySizeMB": {
              "format": "int32",
              "description": "Gets or sets memory size in MBs for the template.",
              "type": "integer",
              "readOnly": true
            },
            "numCPUs": {
              "format": "int32",
              "description": "Gets or sets the number of vCPUs for the template.",
              "type": "integer",
              "readOnly": true
            },
            "numCoresPerSocket": {
              "format": "int32",
              "description": "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified.",
              "type": "integer",
              "readOnly": true
            },
            "osType": {
              "description": "Gets or sets the type of the os.",
              "readOnly": true,
              "enum": [
                "Windows",
                "Linux",
                "Other"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "OsType"
              }
            },
            "osName": {
              "description": "Gets or sets os name.",
              "type": "string",
              "readOnly": true
            },
            "folderPath": {
              "description": "Gets or sets the folder path of the template.",
              "type": "string",
              "readOnly": true
            },
            "networkInterfaces": {
              "description": "Gets or sets the network interfaces of the template.",
              "type": "array",
              "items": {
                "description": "Network Interface model",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Gets or sets the name of the network interface.",
                    "type": "string"
                  },
                  "label": {
                    "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                    "type": "string",
                    "readOnly": true
                  },
                  "ipAddresses": {
                    "description": "Gets or sets the nic ip addresses.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "macAddress": {
                    "description": "Gets or sets the NIC MAC address.",
                    "type": "string",
                    "readOnly": true
                  },
                  "networkId": {
                    "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                    "type": "string"
                  },
                  "nicType": {
                    "description": "NIC type",
                    "type": "string",
                    "enum": [
                      "vmxnet3",
                      "vmxnet2",
                      "vmxnet",
                      "e1000",
                      "e1000e",
                      "pcnet32"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "NICType"
                    }
                  },
                  "powerOnBoot": {
                    "description": "Gets or sets the power on boot.",
                    "enum": [
                      "enabled",
                      "disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "PowerOnBootOption"
                    }
                  },
                  "networkMoRefId": {
                    "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                    "type": "string",
                    "readOnly": true
                  },
                  "networkMoName": {
                    "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                    "type": "string",
                    "readOnly": true
                  },
                  "deviceKey": {
                    "format": "int32",
                    "description": "Gets or sets the device key value.",
                    "type": "integer"
                  },
                  "ipSettings": {
                    "description": "Gets or sets the ipsettings.",
                    "type": "object",
                    "properties": {
                      "allocationMethod": {
                        "description": "Gets or sets the nic allocation method.",
                        "enum": [
                          "unset",
                          "dynamic",
                          "static",
                          "linklayer",
                          "random",
                          "other"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "IPAddressAllocationMethod"
                        }
                      },
                      "dnsServers": {
                        "description": "Gets or sets the dns servers.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "gateway": {
                        "description": "Gets or sets the gateway.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "ipAddress": {
                        "description": "Gets or sets the ip address for the nic.",
                        "type": "string"
                      },
                      "subnetMask": {
                        "description": "Gets or sets the mask.",
                        "type": "string"
                      },
                      "primaryWinsServer": {
                        "description": "Gets or sets the primary server.",
                        "type": "string",
                        "readOnly": true
                      },
                      "secondaryWinsServer": {
                        "description": "Gets or sets the secondary server.",
                        "type": "string",
                        "readOnly": true
                      },
                      "ipAddressInfo": {
                        "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                        "type": "array",
                        "items": {
                          "description": "IP address information for a virtual network adapter reported by the fabric.",
                          "type": "object",
                          "properties": {
                            "allocationMethod": {
                              "description": "Gets the ip address allocation method.",
                              "type": "string",
                              "readOnly": true
                            },
                            "ipAddress": {
                              "description": "Gets the ip address for the nic.",
                              "type": "string",
                              "readOnly": true
                            },
                            "subnetMask": {
                              "description": "Gets the mask.",
                              "type": "string",
                              "readOnly": true
                            }
                          }
                        },
                        "readOnly": true
                      }
                    }
                  }
                }
              },
              "readOnly": true
            },
            "disks": {
              "description": "Gets or sets the disks the template.",
              "type": "array",
              "items": {
                "description": "Virtual disk model",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Gets or sets the name of the virtual disk.",
                    "type": "string"
                  },
                  "label": {
                    "description": "Gets or sets the label of the virtual disk in vCenter.",
                    "type": "string",
                    "readOnly": true
                  },
                  "diskObjectId": {
                    "description": "Gets or sets the disk object id.",
                    "type": "string",
                    "readOnly": true
                  },
                  "diskSizeGB": {
                    "format": "int32",
                    "description": "Gets or sets the disk total size.",
                    "type": "integer"
                  },
                  "deviceKey": {
                    "format": "int32",
                    "description": "Gets or sets the device key value.",
                    "type": "integer"
                  },
                  "diskMode": {
                    "description": "Gets or sets the disk mode.",
                    "enum": [
                      "persistent",
                      "independent_persistent",
                      "independent_nonpersistent"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DiskMode"
                    }
                  },
                  "controllerKey": {
                    "description": "Gets or sets the controller id.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "unitNumber": {
                    "description": "Gets or sets the unit number of the disk on the controller.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "deviceName": {
                    "description": "Gets or sets the device name.",
                    "type": "string"
                  },
                  "diskType": {
                    "description": "Gets or sets the disk backing type.",
                    "enum": [
                      "flat",
                      "pmem",
                      "rawphysical",
                      "rawvirtual",
                      "sparse",
                      "sesparse",
                      "unknown"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DiskType"
                    }
                  }
                }
              },
              "readOnly": true
            },
            "customResourceName": {
              "description": "Gets the name of the corresponding resource in Kubernetes.",
              "type": "string",
              "readOnly": true
            },
            "toolsVersionStatus": {
              "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
              "type": "string",
              "readOnly": true
            },
            "toolsVersion": {
              "description": "Gets or sets the current version of VMware Tools.",
              "type": "string",
              "readOnly": true
            },
            "firmwareType": {
              "description": "Firmware type",
              "readOnly": true,
              "type": "string",
              "enum": [
                "bios",
                "efi"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "FirmwareType"
              }
            },
            "statuses": {
              "description": "The resource status information.",
              "readOnly": true,
              "type": "array",
              "items": {
                "description": "The resource status information.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "reason": {
                    "description": "The reason for the condition's status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "A human readable message indicating details about the status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "severity": {
                    "description": "Severity with which to treat failures of this type of condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "lastUpdatedAt": {
                    "description": "The last update time for this condition.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "type"
              ]
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        },
        "systemData": {
          "description": "The system data.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Gets or sets the Id.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        }
      }
    },
    "VirtualMachineTemplatesList": {
      "description": "List of VirtualMachineTemplates.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of VirtualMachineTemplates.",
          "type": "string"
        },
        "value": {
          "description": "Array of VirtualMachineTemplates",
          "type": "array",
          "items": {
            "description": "Define the virtualMachineTemplate.",
            "required": [
              "location",
              "properties"
            ],
            "type": "object",
            "x-ms-azure-resource": true,
            "properties": {
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "uuid": {
                    "description": "Gets or sets a unique identifier for this resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "vCenterId": {
                    "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                    "type": "string"
                  },
                  "moRefId": {
                    "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate.",
                    "type": "string"
                  },
                  "inventoryItemId": {
                    "description": "Gets or sets the inventory Item ID for the virtual machine template.",
                    "type": "string"
                  },
                  "moName": {
                    "description": "Gets or sets the vCenter Managed Object name for the virtual machine template.",
                    "type": "string",
                    "readOnly": true
                  },
                  "memorySizeMB": {
                    "format": "int32",
                    "description": "Gets or sets memory size in MBs for the template.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "numCPUs": {
                    "format": "int32",
                    "description": "Gets or sets the number of vCPUs for the template.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "numCoresPerSocket": {
                    "format": "int32",
                    "description": "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "osType": {
                    "description": "Gets or sets the type of the os.",
                    "readOnly": true,
                    "enum": [
                      "Windows",
                      "Linux",
                      "Other"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "OsType"
                    }
                  },
                  "osName": {
                    "description": "Gets or sets os name.",
                    "type": "string",
                    "readOnly": true
                  },
                  "folderPath": {
                    "description": "Gets or sets the folder path of the template.",
                    "type": "string",
                    "readOnly": true
                  },
                  "networkInterfaces": {
                    "description": "Gets or sets the network interfaces of the template.",
                    "type": "array",
                    "items": {
                      "description": "Network Interface model",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Gets or sets the name of the network interface.",
                          "type": "string"
                        },
                        "label": {
                          "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "ipAddresses": {
                          "description": "Gets or sets the nic ip addresses.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "readOnly": true
                        },
                        "macAddress": {
                          "description": "Gets or sets the NIC MAC address.",
                          "type": "string",
                          "readOnly": true
                        },
                        "networkId": {
                          "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
                          "type": "string"
                        },
                        "nicType": {
                          "description": "NIC type",
                          "type": "string",
                          "enum": [
                            "vmxnet3",
                            "vmxnet2",
                            "vmxnet",
                            "e1000",
                            "e1000e",
                            "pcnet32"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "NICType"
                          }
                        },
                        "powerOnBoot": {
                          "description": "Gets or sets the power on boot.",
                          "enum": [
                            "enabled",
                            "disabled"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "PowerOnBootOption"
                          }
                        },
                        "networkMoRefId": {
                          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "networkMoName": {
                          "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                          "type": "string",
                          "readOnly": true
                        },
                        "deviceKey": {
                          "format": "int32",
                          "description": "Gets or sets the device key value.",
                          "type": "integer"
                        },
                        "ipSettings": {
                          "description": "Gets or sets the ipsettings.",
                          "type": "object",
                          "properties": {
                            "allocationMethod": {
                              "description": "Gets or sets the nic allocation method.",
                              "enum": [
                                "unset",
                                "dynamic",
                                "static",
                                "linklayer",
                                "random",
                                "other"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "IPAddressAllocationMethod"
                              }
                            },
                            "dnsServers": {
                              "description": "Gets or sets the dns servers.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "gateway": {
                              "description": "Gets or sets the gateway.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ipAddress": {
                              "description": "Gets or sets the ip address for the nic.",
                              "type": "string"
                            },
                            "subnetMask": {
                              "description": "Gets or sets the mask.",
                              "type": "string"
                            },
                            "primaryWinsServer": {
                              "description": "Gets or sets the primary server.",
                              "type": "string",
                              "readOnly": true
                            },
                            "secondaryWinsServer": {
                              "description": "Gets or sets the secondary server.",
                              "type": "string",
                              "readOnly": true
                            },
                            "ipAddressInfo": {
                              "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
                              "type": "array",
                              "items": {
                                "description": "IP address information for a virtual network adapter reported by the fabric.",
                                "type": "object",
                                "properties": {
                                  "allocationMethod": {
                                    "description": "Gets the ip address allocation method.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "ipAddress": {
                                    "description": "Gets the ip address for the nic.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "subnetMask": {
                                    "description": "Gets the mask.",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "readOnly": true
                            }
                          }
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "disks": {
                    "description": "Gets or sets the disks the template.",
                    "type": "array",
                    "items": {
                      "description": "Virtual disk model",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Gets or sets the name of the virtual disk.",
                          "type": "string"
                        },
                        "label": {
                          "description": "Gets or sets the label of the virtual disk in vCenter.",
                          "type": "string",
                          "readOnly": true
                        },
                        "diskObjectId": {
                          "description": "Gets or sets the disk object id.",
                          "type": "string",
                          "readOnly": true
                        },
                        "diskSizeGB": {
                          "format": "int32",
                          "description": "Gets or sets the disk total size.",
                          "type": "integer"
                        },
                        "deviceKey": {
                          "format": "int32",
                          "description": "Gets or sets the device key value.",
                          "type": "integer"
                        },
                        "diskMode": {
                          "description": "Gets or sets the disk mode.",
                          "enum": [
                            "persistent",
                            "independent_persistent",
                            "independent_nonpersistent"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "DiskMode"
                          }
                        },
                        "controllerKey": {
                          "description": "Gets or sets the controller id.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "unitNumber": {
                          "description": "Gets or sets the unit number of the disk on the controller.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "deviceName": {
                          "description": "Gets or sets the device name.",
                          "type": "string"
                        },
                        "diskType": {
                          "description": "Gets or sets the disk backing type.",
                          "enum": [
                            "flat",
                            "pmem",
                            "rawphysical",
                            "rawvirtual",
                            "sparse",
                            "sesparse",
                            "unknown"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "DiskType"
                          }
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "customResourceName": {
                    "description": "Gets the name of the corresponding resource in Kubernetes.",
                    "type": "string",
                    "readOnly": true
                  },
                  "toolsVersionStatus": {
                    "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
                    "type": "string",
                    "readOnly": true
                  },
                  "toolsVersion": {
                    "description": "Gets or sets the current version of VMware Tools.",
                    "type": "string",
                    "readOnly": true
                  },
                  "firmwareType": {
                    "description": "Firmware type",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "bios",
                      "efi"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "FirmwareType"
                    }
                  },
                  "statuses": {
                    "description": "The resource status information.",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "description": "The resource status information.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "reason": {
                          "description": "The reason for the condition's status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "description": "A human readable message indicating details about the status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "severity": {
                          "description": "Severity with which to treat failures of this type of condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "lastUpdatedAt": {
                          "description": "The last update time for this condition.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "type"
                    ]
                  },
                  "provisioningState": {
                    "description": "Gets the provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "location": {
                "description": "Gets or sets the location.",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "extendedLocation": {
                "description": "Gets or sets the extended location.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type."
                  },
                  "name": {
                    "type": "string",
                    "description": "The extended location name."
                  }
                }
              },
              "systemData": {
                "description": "The system data.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "description": "Gets or sets the Resource tags.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "name": {
                "description": "Gets or sets the name.",
                "type": "string",
                "readOnly": true
              },
              "id": {
                "description": "Gets or sets the Id.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Gets or sets the type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "kind": {
                "type": "string",
                "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
              }
            }
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "VirtualNetworkProperties": {
      "description": "Describes the properties of a Virtual Network.",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Gets or sets a unique identifier for this resource.",
          "type": "string",
          "readOnly": true
        },
        "vCenterId": {
          "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
          "type": "string"
        },
        "moRefId": {
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network.",
          "type": "string"
        },
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the virtual network.",
          "type": "string"
        },
        "moName": {
          "description": "Gets or sets the vCenter Managed Object name for the virtual network.",
          "type": "string",
          "readOnly": true
        },
        "customResourceName": {
          "description": "Gets the name of the corresponding resource in Kubernetes.",
          "type": "string",
          "readOnly": true
        },
        "statuses": {
          "description": "The resource status information.",
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "The resource status information.",
            "type": "object",
            "properties": {
              "type": {
                "description": "The type of the condition.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the condition.",
                "type": "string",
                "readOnly": true
              },
              "reason": {
                "description": "The reason for the condition's status.",
                "type": "string",
                "readOnly": true
              },
              "message": {
                "description": "A human readable message indicating details about the status.",
                "type": "string",
                "readOnly": true
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.",
                "type": "string",
                "readOnly": true
              },
              "lastUpdatedAt": {
                "description": "The last update time for this condition.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "type"
          ]
        },
        "provisioningState": {
          "description": "Gets the provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "VirtualNetwork": {
      "description": "Define the virtualNetwork.",
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "type": "object",
          "properties": {
            "uuid": {
              "description": "Gets or sets a unique identifier for this resource.",
              "type": "string",
              "readOnly": true
            },
            "vCenterId": {
              "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
              "type": "string"
            },
            "moRefId": {
              "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network.",
              "type": "string"
            },
            "inventoryItemId": {
              "description": "Gets or sets the inventory Item ID for the virtual network.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the virtual network.",
              "type": "string",
              "readOnly": true
            },
            "customResourceName": {
              "description": "Gets the name of the corresponding resource in Kubernetes.",
              "type": "string",
              "readOnly": true
            },
            "statuses": {
              "description": "The resource status information.",
              "readOnly": true,
              "type": "array",
              "items": {
                "description": "The resource status information.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "reason": {
                    "description": "The reason for the condition's status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "A human readable message indicating details about the status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "severity": {
                    "description": "Severity with which to treat failures of this type of condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "lastUpdatedAt": {
                    "description": "The last update time for this condition.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "type"
              ]
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        },
        "systemData": {
          "description": "The system data.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Gets or sets the Id.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        }
      }
    },
    "VirtualNetworksList": {
      "description": "List of VirtualNetworks.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of VirtualNetworks.",
          "type": "string"
        },
        "value": {
          "description": "Array of VirtualNetworks",
          "type": "array",
          "items": {
            "description": "Define the virtualNetwork.",
            "required": [
              "location",
              "properties"
            ],
            "type": "object",
            "x-ms-azure-resource": true,
            "properties": {
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "uuid": {
                    "description": "Gets or sets a unique identifier for this resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "vCenterId": {
                    "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
                    "type": "string"
                  },
                  "moRefId": {
                    "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network.",
                    "type": "string"
                  },
                  "inventoryItemId": {
                    "description": "Gets or sets the inventory Item ID for the virtual network.",
                    "type": "string"
                  },
                  "moName": {
                    "description": "Gets or sets the vCenter Managed Object name for the virtual network.",
                    "type": "string",
                    "readOnly": true
                  },
                  "customResourceName": {
                    "description": "Gets the name of the corresponding resource in Kubernetes.",
                    "type": "string",
                    "readOnly": true
                  },
                  "statuses": {
                    "description": "The resource status information.",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "description": "The resource status information.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "reason": {
                          "description": "The reason for the condition's status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "description": "A human readable message indicating details about the status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "severity": {
                          "description": "Severity with which to treat failures of this type of condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "lastUpdatedAt": {
                          "description": "The last update time for this condition.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "type"
                    ]
                  },
                  "provisioningState": {
                    "description": "Gets the provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "location": {
                "description": "Gets or sets the location.",
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "extendedLocation": {
                "description": "Gets or sets the extended location.",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The extended location type."
                  },
                  "name": {
                    "type": "string",
                    "description": "The extended location name."
                  }
                }
              },
              "systemData": {
                "description": "The system data.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "description": "Gets or sets the Resource tags.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "name": {
                "description": "Gets or sets the name.",
                "type": "string",
                "readOnly": true
              },
              "id": {
                "description": "Gets or sets the Id.",
                "type": "string",
                "readOnly": true
              },
              "type": {
                "description": "Gets or sets the type of the resource.",
                "type": "string",
                "readOnly": true
              },
              "kind": {
                "type": "string",
                "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
              }
            }
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "NetworkInterfaceUpdate": {
      "description": "Defines the network interface update.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the name of the network interface.",
          "type": "string"
        },
        "networkId": {
          "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
          "type": "string"
        },
        "nicType": {
          "description": "NIC type",
          "type": "string",
          "enum": [
            "vmxnet3",
            "vmxnet2",
            "vmxnet",
            "e1000",
            "e1000e",
            "pcnet32"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "NICType"
          }
        },
        "powerOnBoot": {
          "description": "Gets or sets the power on boot.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PowerOnBootOption"
          }
        },
        "deviceKey": {
          "format": "int32",
          "description": "Gets or sets the device key value.",
          "type": "integer"
        }
      }
    },
    "NetworkInterface": {
      "description": "Network Interface model",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the name of the network interface.",
          "type": "string"
        },
        "label": {
          "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
          "type": "string",
          "readOnly": true
        },
        "ipAddresses": {
          "description": "Gets or sets the nic ip addresses.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "macAddress": {
          "description": "Gets or sets the NIC MAC address.",
          "type": "string",
          "readOnly": true
        },
        "networkId": {
          "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
          "type": "string"
        },
        "nicType": {
          "description": "NIC type",
          "type": "string",
          "enum": [
            "vmxnet3",
            "vmxnet2",
            "vmxnet",
            "e1000",
            "e1000e",
            "pcnet32"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "NICType"
          }
        },
        "powerOnBoot": {
          "description": "Gets or sets the power on boot.",
          "enum": [
            "enabled",
            "disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PowerOnBootOption"
          }
        },
        "networkMoRefId": {
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
          "type": "string",
          "readOnly": true
        },
        "networkMoName": {
          "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
          "type": "string",
          "readOnly": true
        },
        "deviceKey": {
          "format": "int32",
          "description": "Gets or sets the device key value.",
          "type": "integer"
        },
        "ipSettings": {
          "description": "Gets or sets the ipsettings.",
          "type": "object",
          "properties": {
            "allocationMethod": {
              "description": "Gets or sets the nic allocation method.",
              "enum": [
                "unset",
                "dynamic",
                "static",
                "linklayer",
                "random",
                "other"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "IPAddressAllocationMethod"
              }
            },
            "dnsServers": {
              "description": "Gets or sets the dns servers.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "gateway": {
              "description": "Gets or sets the gateway.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ipAddress": {
              "description": "Gets or sets the ip address for the nic.",
              "type": "string"
            },
            "subnetMask": {
              "description": "Gets or sets the mask.",
              "type": "string"
            },
            "primaryWinsServer": {
              "description": "Gets or sets the primary server.",
              "type": "string",
              "readOnly": true
            },
            "secondaryWinsServer": {
              "description": "Gets or sets the secondary server.",
              "type": "string",
              "readOnly": true
            },
            "ipAddressInfo": {
              "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
              "type": "array",
              "items": {
                "description": "IP address information for a virtual network adapter reported by the fabric.",
                "type": "object",
                "properties": {
                  "allocationMethod": {
                    "description": "Gets the ip address allocation method.",
                    "type": "string",
                    "readOnly": true
                  },
                  "ipAddress": {
                    "description": "Gets the ip address for the nic.",
                    "type": "string",
                    "readOnly": true
                  },
                  "subnetMask": {
                    "description": "Gets the mask.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            }
          }
        }
      }
    },
    "NetworkInterfaceInventory": {
      "description": "Inventory Network Interface model",
      "type": "object",
      "properties": {
        "label": {
          "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
          "type": "string",
          "readOnly": true
        },
        "ipAddresses": {
          "description": "Gets or sets the nic ip addresses.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "macAddress": {
          "description": "Gets or sets the NIC MAC address.",
          "type": "string",
          "readOnly": true
        },
        "nicType": {
          "description": "NIC type",
          "readOnly": true,
          "type": "string",
          "enum": [
            "vmxnet3",
            "vmxnet2",
            "vmxnet",
            "e1000",
            "e1000e",
            "pcnet32"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "NICType"
          }
        },
        "networkMoRefId": {
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
          "type": "string",
          "readOnly": true
        },
        "networkMoName": {
          "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
          "type": "string",
          "readOnly": true
        },
        "deviceKey": {
          "format": "int32",
          "description": "Gets or sets the device key value.",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "PowerOnBootOption": {
      "description": "Defines the options for power on boot.",
      "enum": [
        "enabled",
        "disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "PowerOnBootOption"
      }
    },
    "DiskMode": {
      "description": "Defines the different types of disk modes.",
      "enum": [
        "persistent",
        "independent_persistent",
        "independent_nonpersistent"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "DiskMode"
      }
    },
    "DiskType": {
      "description": "Defines the different types of disks.",
      "enum": [
        "flat",
        "pmem",
        "rawphysical",
        "rawvirtual",
        "sparse",
        "sesparse",
        "unknown"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "DiskType"
      }
    },
    "NICType": {
      "description": "NIC type",
      "type": "string",
      "enum": [
        "vmxnet3",
        "vmxnet2",
        "vmxnet",
        "e1000",
        "e1000e",
        "pcnet32"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "NICType"
      }
    },
    "FirmwareType": {
      "description": "Firmware type",
      "type": "string",
      "enum": [
        "bios",
        "efi"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "FirmwareType"
      }
    },
    "IPAddressAllocationMethod": {
      "description": "IP address allocation method.",
      "enum": [
        "unset",
        "dynamic",
        "static",
        "linklayer",
        "random",
        "other"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "IPAddressAllocationMethod"
      }
    },
    "NicIPAddressSettings": {
      "description": "IP address information for a virtual network adapter reported by the fabric.",
      "type": "object",
      "properties": {
        "allocationMethod": {
          "description": "Gets the ip address allocation method.",
          "type": "string",
          "readOnly": true
        },
        "ipAddress": {
          "description": "Gets the ip address for the nic.",
          "type": "string",
          "readOnly": true
        },
        "subnetMask": {
          "description": "Gets the mask.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NicIPSettings": {
      "description": "Defines the network interface ip settings.",
      "type": "object",
      "properties": {
        "allocationMethod": {
          "description": "Gets or sets the nic allocation method.",
          "enum": [
            "unset",
            "dynamic",
            "static",
            "linklayer",
            "random",
            "other"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "IPAddressAllocationMethod"
          }
        },
        "dnsServers": {
          "description": "Gets or sets the dns servers.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gateway": {
          "description": "Gets or sets the gateway.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ipAddress": {
          "description": "Gets or sets the ip address for the nic.",
          "type": "string"
        },
        "subnetMask": {
          "description": "Gets or sets the mask.",
          "type": "string"
        },
        "primaryWinsServer": {
          "description": "Gets or sets the primary server.",
          "type": "string",
          "readOnly": true
        },
        "secondaryWinsServer": {
          "description": "Gets or sets the secondary server.",
          "type": "string",
          "readOnly": true
        },
        "ipAddressInfo": {
          "description": "Gets or sets the IP address information being reported for this NIC. This contains the same IPv4 information above plus IPV6 information.",
          "type": "array",
          "items": {
            "description": "IP address information for a virtual network adapter reported by the fabric.",
            "type": "object",
            "properties": {
              "allocationMethod": {
                "description": "Gets the ip address allocation method.",
                "type": "string",
                "readOnly": true
              },
              "ipAddress": {
                "description": "Gets the ip address for the nic.",
                "type": "string",
                "readOnly": true
              },
              "subnetMask": {
                "description": "Gets the mask.",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "operation": {
      "description": "Operation provided by provider",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is data action or not.",
          "type": "boolean"
        },
        "display": {
          "type": "object",
          "description": "Properties of the operation",
          "properties": {
            "provider": {
              "type": "string",
              "description": "Provider name"
            },
            "resource": {
              "type": "string",
              "description": "Resource name"
            },
            "operation": {
              "type": "string",
              "description": "Operation name"
            },
            "description": {
              "type": "string",
              "description": "Description of the operation"
            }
          }
        }
      }
    },
    "operationsList": {
      "description": "Lists the operations available.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "Array of operations",
          "type": "array",
          "items": {
            "description": "Operation.",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the operation"
              },
              "isDataAction": {
                "description": "Indicates whether the operation is data action or not.",
                "type": "boolean"
              },
              "display": {
                "type": "object",
                "description": "Properties of the operation",
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "Provider name"
                  },
                  "resource": {
                    "type": "string",
                    "description": "Resource name"
                  },
                  "operation": {
                    "type": "string",
                    "description": "Operation name"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the operation"
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "InventoryItemsList": {
      "description": "List of InventoryItems.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of InventoryItems.",
          "type": "string"
        },
        "value": {
          "description": "Array of InventoryItems",
          "type": "array",
          "items": {
            "description": "Defines the inventory item.",
            "required": [
              "properties"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "required": [
                  "inventoryType"
                ],
                "discriminator": "inventoryType",
                "type": "object",
                "properties": {
                  "inventoryType": {
                    "description": "They inventory type.",
                    "type": "string",
                    "enum": [
                      "ResourcePool",
                      "VirtualMachine",
                      "VirtualMachineTemplate",
                      "VirtualNetwork",
                      "Cluster",
                      "Datastore",
                      "Host"
                    ],
                    "x-ms-enum": {
                      "name": "InventoryType",
                      "modelAsString": true
                    }
                  },
                  "managedResourceId": {
                    "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
                    "type": "string"
                  },
                  "moRefId": {
                    "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
                    "type": "string"
                  },
                  "moName": {
                    "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
                    "type": "string"
                  },
                  "provisioningState": {
                    "description": "Gets the provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              },
              "kind": {
                "type": "string",
                "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
              }
            },
            "x-ms-azure-resource": true
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "InventoryItem": {
      "description": "Defines the inventory item.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "required": [
            "inventoryType"
          ],
          "discriminator": "inventoryType",
          "type": "object",
          "properties": {
            "inventoryType": {
              "description": "They inventory type.",
              "type": "string",
              "enum": [
                "ResourcePool",
                "VirtualMachine",
                "VirtualMachineTemplate",
                "VirtualNetwork",
                "Cluster",
                "Datastore",
                "Host"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true
              }
            },
            "managedResourceId": {
              "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
              "type": "string"
            },
            "moRefId": {
              "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        }
      },
      "x-ms-azure-resource": true
    },
    "InventoryItemProperties": {
      "description": "Describes the properties of an Inventory Item.",
      "required": [
        "inventoryType"
      ],
      "discriminator": "inventoryType",
      "type": "object",
      "properties": {
        "inventoryType": {
          "description": "They inventory type.",
          "type": "string",
          "enum": [
            "ResourcePool",
            "VirtualMachine",
            "VirtualMachineTemplate",
            "VirtualNetwork",
            "Cluster",
            "Datastore",
            "Host"
          ],
          "x-ms-enum": {
            "name": "InventoryType",
            "modelAsString": true
          }
        },
        "managedResourceId": {
          "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
          "type": "string"
        },
        "moRefId": {
          "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
          "type": "string"
        },
        "moName": {
          "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Gets the provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "ResourcePoolInventoryItem": {
      "description": "The resource pool inventory item.",
      "type": "object",
      "allOf": [
        {
          "description": "Describes the properties of an Inventory Item.",
          "required": [
            "inventoryType"
          ],
          "discriminator": "inventoryType",
          "type": "object",
          "properties": {
            "inventoryType": {
              "description": "They inventory type.",
              "type": "string",
              "enum": [
                "ResourcePool",
                "VirtualMachine",
                "VirtualMachineTemplate",
                "VirtualNetwork",
                "Cluster",
                "Datastore",
                "Host"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true
              }
            },
            "managedResourceId": {
              "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
              "type": "string"
            },
            "moRefId": {
              "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "properties": {
        "parent": {
          "description": "Parent resourcePool inventory resource details.",
          "type": "object",
          "properties": {
            "inventoryItemId": {
              "description": "Gets or sets the inventory Item ID for the resource.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the resource.",
              "type": "string"
            },
            "inventoryType": {
              "description": "The inventory type.",
              "type": "string",
              "enum": [
                "ResourcePool",
                "VirtualMachine",
                "VirtualMachineTemplate",
                "VirtualNetwork",
                "Cluster",
                "Datastore",
                "Host"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true
              }
            }
          }
        }
      },
      "x-ms-discriminator-value": "ResourcePool"
    },
    "VirtualMachineInventoryItem": {
      "description": "The VM inventory item.",
      "type": "object",
      "allOf": [
        {
          "description": "Describes the properties of an Inventory Item.",
          "required": [
            "inventoryType"
          ],
          "discriminator": "inventoryType",
          "type": "object",
          "properties": {
            "inventoryType": {
              "description": "They inventory type.",
              "type": "string",
              "enum": [
                "ResourcePool",
                "VirtualMachine",
                "VirtualMachineTemplate",
                "VirtualNetwork",
                "Cluster",
                "Datastore",
                "Host"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true
              }
            },
            "managedResourceId": {
              "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
              "type": "string"
            },
            "moRefId": {
              "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "properties": {
        "osType": {
          "description": "Gets or sets the type of the os.",
          "enum": [
            "Windows",
            "Linux",
            "Other"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "OsType"
          }
        },
        "osName": {
          "description": "Gets or sets os name.",
          "type": "string"
        },
        "ipAddresses": {
          "description": "Gets or sets the nic ip addresses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "folderPath": {
          "description": "Gets or sets the folder path of the vm.",
          "type": "string"
        },
        "host": {
          "description": "Host inventory resource details.",
          "type": "object",
          "properties": {
            "inventoryItemId": {
              "description": "Gets or sets the inventory Item ID for the resource.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the resource.",
              "type": "string"
            },
            "inventoryType": {
              "description": "The inventory type.",
              "type": "string",
              "enum": [
                "ResourcePool",
                "VirtualMachine",
                "VirtualMachineTemplate",
                "VirtualNetwork",
                "Cluster",
                "Datastore",
                "Host"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true
              }
            }
          }
        },
        "resourcePool": {
          "description": "ResourcePool inventory resource details.",
          "type": "object",
          "properties": {
            "inventoryItemId": {
              "description": "Gets or sets the inventory Item ID for the resource.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the resource.",
              "type": "string"
            },
            "inventoryType": {
              "description": "The inventory type.",
              "type": "string",
              "enum": [
                "ResourcePool",
                "VirtualMachine",
                "VirtualMachineTemplate",
                "VirtualNetwork",
                "Cluster",
                "Datastore",
                "Host"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true
              }
            }
          }
        },
        "cluster": {
          "description": "Cluster inventory resource details.",
          "type": "object",
          "properties": {
            "inventoryItemId": {
              "description": "Gets or sets the inventory Item ID for the resource.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the resource.",
              "type": "string"
            },
            "inventoryType": {
              "description": "The inventory type.",
              "type": "string",
              "enum": [
                "ResourcePool",
                "VirtualMachine",
                "VirtualMachineTemplate",
                "VirtualNetwork",
                "Cluster",
                "Datastore",
                "Host"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true
              }
            }
          }
        },
        "instanceUuid": {
          "description": "Gets or sets the instance uuid of the vm.",
          "type": "string"
        },
        "smbiosUuid": {
          "type": "string",
          "description": "Gets or sets the SMBIOS UUID of the vm."
        },
        "powerState": {
          "description": "Gets the power state of the virtual machine.",
          "type": "string",
          "readOnly": true
        },
        "toolsRunningStatus": {
          "description": "Gets or sets the current running status of VMware Tools running in the guest operating system.",
          "type": "string",
          "readOnly": true
        },
        "toolsVersionStatus": {
          "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
          "type": "string",
          "readOnly": true
        },
        "toolsVersion": {
          "description": "Gets or sets the current version of VMware Tools.",
          "type": "string",
          "readOnly": true
        },
        "firmwareType": {
          "description": "Firmware type",
          "readOnly": true,
          "type": "string",
          "enum": [
            "bios",
            "efi"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "FirmwareType"
          }
        },
        "changeTrackingSupported": {
          "type": "boolean",
          "description": "Gets a value indicating whether change tracking is supported.",
          "readOnly": true
        },
        "changeTrackingEnabled": {
          "type": "boolean",
          "description": "Gets a value indicating whether change tracking is enabled.",
          "readOnly": true
        },
        "maxSnapshots": {
          "format": "int32",
          "type": "integer",
          "description": "Gets a value indicating the maximum possible number of snapshots.",
          "readOnly": true
        },
        "numberOfSnapshots": {
          "format": "int32",
          "type": "integer",
          "description": "Gets a value indicating the number of snapshots on the vm.",
          "readOnly": true
        },
        "diskEnabledUuid": {
          "type": "string",
          "description": "Gets or sets the disk Enabled UUID of the vm.",
          "readOnly": true
        },
        "computerName": {
          "type": "string",
          "description": "Gets the computer name.",
          "readOnly": true
        },
        "memorySizeMB": {
          "format": "int32",
          "type": "integer",
          "description": "Gets or sets memory size in MBs for the vm.",
          "readOnly": true
        },
        "numCPUs": {
          "format": "int32",
          "type": "integer",
          "description": "Gets or sets the number of vCPU for the vm.",
          "readOnly": true
        },
        "storageProfile": {
          "description": "Storage properties.",
          "type": "object",
          "properties": {
            "disks": {
              "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
              "type": "array",
              "items": {
                "description": "Virtual disk model",
                "type": "object",
                "properties": {
                  "diskName": {
                    "description": "Gets or sets the name of the virtual disk.",
                    "type": "string"
                  },
                  "label": {
                    "description": "Gets or sets the label of the virtual disk in vCenter.",
                    "type": "string",
                    "readOnly": true
                  },
                  "diskSizeGB": {
                    "format": "int32",
                    "description": "Gets or sets the disk total size.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "deviceKey": {
                    "format": "int32",
                    "description": "Gets or sets the device key value.",
                    "type": "integer",
                    "readOnly": true
                  },
                  "diskMode": {
                    "description": "Gets or sets the disk mode.",
                    "readOnly": true,
                    "enum": [
                      "persistent",
                      "independent_persistent",
                      "independent_nonpersistent"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DiskMode"
                    }
                  },
                  "controllerKey": {
                    "description": "Gets or sets the controller id.",
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                  },
                  "unitNumber": {
                    "description": "Gets or sets the unit number of the disk on the controller.",
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                  },
                  "deviceName": {
                    "description": "Gets or sets the device name.",
                    "type": "string",
                    "readOnly": true
                  },
                  "fileName": {
                    "description": "Gets or sets the disk file name.",
                    "type": "string",
                    "readOnly": true
                  },
                  "diskType": {
                    "description": "Gets or sets the disk backing type.",
                    "readOnly": true,
                    "enum": [
                      "flat",
                      "pmem",
                      "rawphysical",
                      "rawvirtual",
                      "sparse",
                      "sesparse",
                      "unknown"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "DiskType"
                    }
                  },
                  "eagerlyScrub": {
                    "description": "Gets or sets the eagerly scrub property of disk.",
                    "type": "boolean",
                    "readOnly": true
                  },
                  "thinProvisioned": {
                    "description": "Gets or sets the thin provisioning property of disk.",
                    "type": "boolean",
                    "readOnly": true
                  },
                  "controllerType": {
                    "description": "Gets or sets the controller type.",
                    "type": "string",
                    "readOnly": true
                  },
                  "uuid": {
                    "description": "Gets or sets a unique identifier for this resource.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "uuid"
              ]
            }
          }
        },
        "networkProfile": {
          "description": "Network properties.",
          "type": "object",
          "properties": {
            "networkInterfaces": {
              "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
              "type": "array",
              "items": {
                "description": "Inventory Network Interface model",
                "type": "object",
                "properties": {
                  "label": {
                    "description": "Gets or sets the label of the virtual network in vCenter that the nic is connected to.",
                    "type": "string",
                    "readOnly": true
                  },
                  "ipAddresses": {
                    "description": "Gets or sets the nic ip addresses.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "macAddress": {
                    "description": "Gets or sets the NIC MAC address.",
                    "type": "string",
                    "readOnly": true
                  },
                  "nicType": {
                    "description": "NIC type",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "vmxnet3",
                      "vmxnet2",
                      "vmxnet",
                      "e1000",
                      "e1000e",
                      "pcnet32"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "NICType"
                    }
                  },
                  "networkMoRefId": {
                    "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID of the virtual network\r\nthat the nic is connected to.",
                    "type": "string",
                    "readOnly": true
                  },
                  "networkMoName": {
                    "description": "Gets or sets the name of the virtual network in vCenter that the nic is connected to.",
                    "type": "string",
                    "readOnly": true
                  },
                  "deviceKey": {
                    "format": "int32",
                    "description": "Gets or sets the device key value.",
                    "type": "integer",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "networkMoRefId"
              ]
            }
          }
        }
      },
      "x-ms-discriminator-value": "VirtualMachine"
    },
    "VirtualMachineTemplateInventoryItem": {
      "description": "The VM Template inventory item.",
      "type": "object",
      "allOf": [
        {
          "description": "Describes the properties of an Inventory Item.",
          "required": [
            "inventoryType"
          ],
          "discriminator": "inventoryType",
          "type": "object",
          "properties": {
            "inventoryType": {
              "description": "They inventory type.",
              "type": "string",
              "enum": [
                "ResourcePool",
                "VirtualMachine",
                "VirtualMachineTemplate",
                "VirtualNetwork",
                "Cluster",
                "Datastore",
                "Host"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true
              }
            },
            "managedResourceId": {
              "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
              "type": "string"
            },
            "moRefId": {
              "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "properties": {
        "memorySizeMB": {
          "format": "int32",
          "description": "Gets or sets memory size in MBs for the template.",
          "type": "integer"
        },
        "numCPUs": {
          "format": "int32",
          "description": "Gets or sets the number of vCPUs for the template.",
          "type": "integer"
        },
        "numCoresPerSocket": {
          "format": "int32",
          "description": "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified.",
          "type": "integer"
        },
        "osType": {
          "description": "Gets or sets the type of the os.",
          "enum": [
            "Windows",
            "Linux",
            "Other"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "OsType"
          }
        },
        "osName": {
          "description": "Gets or sets os name.",
          "type": "string"
        },
        "toolsVersionStatus": {
          "description": "Gets or sets the current version status of VMware Tools installed in the guest operating system.",
          "type": "string",
          "readOnly": true
        },
        "toolsVersion": {
          "description": "Gets or sets the current version of VMware Tools.",
          "type": "string",
          "readOnly": true
        },
        "folderPath": {
          "description": "Gets or sets the folder path of the template.",
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "VirtualMachineTemplate"
    },
    "VirtualNetworkInventoryItem": {
      "description": "The Virtual network inventory item.",
      "type": "object",
      "allOf": [
        {
          "description": "Describes the properties of an Inventory Item.",
          "required": [
            "inventoryType"
          ],
          "discriminator": "inventoryType",
          "type": "object",
          "properties": {
            "inventoryType": {
              "description": "They inventory type.",
              "type": "string",
              "enum": [
                "ResourcePool",
                "VirtualMachine",
                "VirtualMachineTemplate",
                "VirtualNetwork",
                "Cluster",
                "Datastore",
                "Host"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true
              }
            },
            "managedResourceId": {
              "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
              "type": "string"
            },
            "moRefId": {
              "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "VirtualNetwork"
    },
    "ClusterInventoryItem": {
      "description": "The cluster inventory item.",
      "type": "object",
      "allOf": [
        {
          "description": "Describes the properties of an Inventory Item.",
          "required": [
            "inventoryType"
          ],
          "discriminator": "inventoryType",
          "type": "object",
          "properties": {
            "inventoryType": {
              "description": "They inventory type.",
              "type": "string",
              "enum": [
                "ResourcePool",
                "VirtualMachine",
                "VirtualMachineTemplate",
                "VirtualNetwork",
                "Cluster",
                "Datastore",
                "Host"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true
              }
            },
            "managedResourceId": {
              "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
              "type": "string"
            },
            "moRefId": {
              "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Cluster"
    },
    "DatastoreInventoryItem": {
      "description": "The datastore inventory item.",
      "type": "object",
      "allOf": [
        {
          "description": "Describes the properties of an Inventory Item.",
          "required": [
            "inventoryType"
          ],
          "discriminator": "inventoryType",
          "type": "object",
          "properties": {
            "inventoryType": {
              "description": "They inventory type.",
              "type": "string",
              "enum": [
                "ResourcePool",
                "VirtualMachine",
                "VirtualMachineTemplate",
                "VirtualNetwork",
                "Cluster",
                "Datastore",
                "Host"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true
              }
            },
            "managedResourceId": {
              "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
              "type": "string"
            },
            "moRefId": {
              "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "properties": {
        "capacityGB": {
          "format": "int64",
          "description": "Gets or sets Maximum capacity of this datastore, in GBs.",
          "type": "integer"
        },
        "freeSpaceGB": {
          "format": "int64",
          "description": "Gets or sets Available space of this datastore, in GBs.",
          "type": "integer"
        }
      },
      "x-ms-discriminator-value": "Datastore"
    },
    "HostInventoryItem": {
      "description": "The host inventory item.",
      "type": "object",
      "allOf": [
        {
          "description": "Describes the properties of an Inventory Item.",
          "required": [
            "inventoryType"
          ],
          "discriminator": "inventoryType",
          "type": "object",
          "properties": {
            "inventoryType": {
              "description": "They inventory type.",
              "type": "string",
              "enum": [
                "ResourcePool",
                "VirtualMachine",
                "VirtualMachineTemplate",
                "VirtualNetwork",
                "Cluster",
                "Datastore",
                "Host"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true
              }
            },
            "managedResourceId": {
              "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
              "type": "string"
            },
            "moRefId": {
              "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        }
      ],
      "properties": {
        "parent": {
          "description": "Parent host inventory resource details.",
          "type": "object",
          "properties": {
            "inventoryItemId": {
              "description": "Gets or sets the inventory Item ID for the resource.",
              "type": "string"
            },
            "moName": {
              "description": "Gets or sets the vCenter Managed Object name for the resource.",
              "type": "string"
            },
            "inventoryType": {
              "description": "The inventory type.",
              "type": "string",
              "enum": [
                "ResourcePool",
                "VirtualMachine",
                "VirtualMachineTemplate",
                "VirtualNetwork",
                "Cluster",
                "Datastore",
                "Host"
              ],
              "x-ms-enum": {
                "name": "InventoryType",
                "modelAsString": true
              }
            }
          }
        },
        "numCoresPerSocket": {
          "format": "int32",
          "type": "integer",
          "description": "Gets or sets the number of cores per socket on the host.",
          "readOnly": true
        },
        "numSockets": {
          "format": "int32",
          "type": "integer",
          "description": "Gets or sets the number of sockets on the host.",
          "readOnly": true
        },
        "version": {
          "description": "Gets or sets the version of the host.",
          "type": "string",
          "readOnly": true
        },
        "cpuModel": {
          "description": "Gets or sets the cpu model of the host.",
          "type": "string",
          "readOnly": true
        },
        "memorySizeGB": {
          "format": "int64",
          "description": "Gets the total amount of physical memory on the host in GB.",
          "type": "integer",
          "readOnly": true
        },
        "powerState": {
          "description": "Gets or sets the power state of the host.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-discriminator-value": "Host"
    },
    "InventoryType": {
      "type": "string",
      "description": "The inventory type.",
      "enum": [
        "ResourcePool",
        "VirtualMachine",
        "VirtualMachineTemplate",
        "VirtualNetwork",
        "Cluster",
        "Datastore",
        "Host"
      ],
      "x-ms-enum": {
        "name": "InventoryType",
        "modelAsString": true
      }
    },
    "InventoryItemDetails": {
      "description": "Describes the properties of an Inventory Item reference.",
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the resource.",
          "type": "string"
        },
        "moName": {
          "description": "Gets or sets the vCenter Managed Object name for the resource.",
          "type": "string"
        },
        "inventoryType": {
          "description": "The inventory type.",
          "type": "string",
          "enum": [
            "ResourcePool",
            "VirtualMachine",
            "VirtualMachineTemplate",
            "VirtualNetwork",
            "Cluster",
            "Datastore",
            "Host"
          ],
          "x-ms-enum": {
            "name": "InventoryType",
            "modelAsString": true
          }
        }
      }
    },
    "VmInstanceHybridIdentityMetadataList": {
      "description": "List of HybridIdentityMetadata.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of HybridIdentityMetadata.",
          "type": "string"
        },
        "value": {
          "description": "Array of HybridIdentityMetadata",
          "type": "array",
          "items": {
            "description": "Defines the HybridIdentityMetadata.",
            "required": [
              "properties"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "resourceUid": {
                    "description": "The unique identifier for the resource.",
                    "type": "string"
                  },
                  "publicKey": {
                    "description": "Gets or sets the Public Key.",
                    "type": "string"
                  },
                  "provisioningState": {
                    "description": "Gets the provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              }
            },
            "x-ms-azure-resource": true
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "VmInstanceHybridIdentityMetadata": {
      "description": "Defines the HybridIdentityMetadata.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "type": "object",
          "properties": {
            "resourceUid": {
              "description": "The unique identifier for the resource.",
              "type": "string"
            },
            "publicKey": {
              "description": "Gets or sets the Public Key.",
              "type": "string"
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "VmInstanceHybridIdentityMetadataProperties": {
      "description": "Describes the properties of Hybrid Identity Metadata for a Virtual Machine.",
      "type": "object",
      "properties": {
        "resourceUid": {
          "description": "The unique identifier for the resource.",
          "type": "string"
        },
        "publicKey": {
          "description": "Gets or sets the Public Key.",
          "type": "string"
        },
        "provisioningState": {
          "description": "Gets the provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "ProvisioningAction": {
      "description": "Defines the different types of operations for guest agent.",
      "enum": [
        "install",
        "uninstall",
        "repair"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ProvisioningAction"
      }
    },
    "GuestCredential": {
      "description": "Username / Password Credentials to connect to guest.",
      "type": "object",
      "properties": {
        "username": {
          "description": "Gets or sets username to connect with the guest.",
          "type": "string"
        },
        "password": {
          "description": "Gets or sets the password to connect with the guest.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "privateKey": {
          "type": "string",
          "description": "Private key used to authenticate to a virtual machine through ssh.",
          "x-ms-secret": true
        }
      }
    },
    "HttpProxyConfiguration": {
      "description": "HTTP Proxy configuration for the VM.",
      "type": "object",
      "properties": {
        "httpsProxy": {
          "description": "Gets or sets httpsProxy url.",
          "type": "string"
        }
      }
    },
    "GuestAgentList": {
      "description": "List of GuestAgent.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of GuestAgent.",
          "type": "string"
        },
        "value": {
          "description": "Array of GuestAgent",
          "type": "array",
          "items": {
            "description": "Defines the GuestAgent.",
            "required": [
              "properties"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Resource properties.",
                "type": "object",
                "properties": {
                  "uuid": {
                    "description": "Gets or sets a unique identifier for this resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "credentials": {
                    "description": "Username / Password Credentials to provision guest agent.",
                    "type": "object",
                    "properties": {
                      "username": {
                        "description": "Gets or sets username to connect with the guest.",
                        "type": "string"
                      },
                      "password": {
                        "description": "Gets or sets the password to connect with the guest.",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "update"
                        ],
                        "x-ms-secret": true
                      },
                      "privateKey": {
                        "type": "string",
                        "description": "Private key used to authenticate to a virtual machine through ssh.",
                        "x-ms-secret": true
                      }
                    }
                  },
                  "privateLinkScopeResourceId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "The resource id of the private link scope this machine is assigned to, if any."
                  },
                  "httpProxyConfig": {
                    "description": "HTTP Proxy configuration for the VM.",
                    "type": "object",
                    "properties": {
                      "httpsProxy": {
                        "description": "Gets or sets httpsProxy url.",
                        "type": "string"
                      }
                    }
                  },
                  "provisioningAction": {
                    "description": "Gets or sets the guest agent provisioning action.",
                    "type": "string",
                    "enum": [
                      "install",
                      "uninstall",
                      "repair"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ProvisioningAction"
                    }
                  },
                  "status": {
                    "description": "Gets or sets the guest agent status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "customResourceName": {
                    "description": "Gets the name of the corresponding resource in Kubernetes.",
                    "type": "string",
                    "readOnly": true
                  },
                  "statuses": {
                    "description": "The resource status information.",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "description": "The resource status information.",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "status": {
                          "description": "Status of the condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "reason": {
                          "description": "The reason for the condition's status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "message": {
                          "description": "A human readable message indicating details about the status.",
                          "type": "string",
                          "readOnly": true
                        },
                        "severity": {
                          "description": "Severity with which to treat failures of this type of condition.",
                          "type": "string",
                          "readOnly": true
                        },
                        "lastUpdatedAt": {
                          "description": "The last update time for this condition.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "type"
                    ]
                  },
                  "provisioningState": {
                    "description": "Gets the provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted",
                      "Created"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true
                    }
                  }
                }
              }
            },
            "x-ms-azure-resource": true
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "GuestAgent": {
      "description": "Defines the GuestAgent.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "type": "object",
          "properties": {
            "uuid": {
              "description": "Gets or sets a unique identifier for this resource.",
              "type": "string",
              "readOnly": true
            },
            "credentials": {
              "description": "Username / Password Credentials to provision guest agent.",
              "type": "object",
              "properties": {
                "username": {
                  "description": "Gets or sets username to connect with the guest.",
                  "type": "string"
                },
                "password": {
                  "description": "Gets or sets the password to connect with the guest.",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "update"
                  ],
                  "x-ms-secret": true
                },
                "privateKey": {
                  "type": "string",
                  "description": "Private key used to authenticate to a virtual machine through ssh.",
                  "x-ms-secret": true
                }
              }
            },
            "privateLinkScopeResourceId": {
              "type": "string",
              "format": "arm-id",
              "description": "The resource id of the private link scope this machine is assigned to, if any."
            },
            "httpProxyConfig": {
              "description": "HTTP Proxy configuration for the VM.",
              "type": "object",
              "properties": {
                "httpsProxy": {
                  "description": "Gets or sets httpsProxy url.",
                  "type": "string"
                }
              }
            },
            "provisioningAction": {
              "description": "Gets or sets the guest agent provisioning action.",
              "type": "string",
              "enum": [
                "install",
                "uninstall",
                "repair"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ProvisioningAction"
              }
            },
            "status": {
              "description": "Gets or sets the guest agent status.",
              "type": "string",
              "readOnly": true
            },
            "customResourceName": {
              "description": "Gets the name of the corresponding resource in Kubernetes.",
              "type": "string",
              "readOnly": true
            },
            "statuses": {
              "description": "The resource status information.",
              "readOnly": true,
              "type": "array",
              "items": {
                "description": "The resource status information.",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "reason": {
                    "description": "The reason for the condition's status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "A human readable message indicating details about the status.",
                    "type": "string",
                    "readOnly": true
                  },
                  "severity": {
                    "description": "Severity with which to treat failures of this type of condition.",
                    "type": "string",
                    "readOnly": true
                  },
                  "lastUpdatedAt": {
                    "description": "The last update time for this condition.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "type"
              ]
            },
            "provisioningState": {
              "description": "Gets the provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted",
                "Created"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true
              }
            }
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "GuestAgentProperties": {
      "description": "Describes the properties of a Virtual Machine Guest Agent.",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Gets or sets a unique identifier for this resource.",
          "type": "string",
          "readOnly": true
        },
        "credentials": {
          "description": "Username / Password Credentials to provision guest agent.",
          "type": "object",
          "properties": {
            "username": {
              "description": "Gets or sets username to connect with the guest.",
              "type": "string"
            },
            "password": {
              "description": "Gets or sets the password to connect with the guest.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "x-ms-secret": true
            },
            "privateKey": {
              "type": "string",
              "description": "Private key used to authenticate to a virtual machine through ssh.",
              "x-ms-secret": true
            }
          }
        },
        "privateLinkScopeResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "The resource id of the private link scope this machine is assigned to, if any."
        },
        "httpProxyConfig": {
          "description": "HTTP Proxy configuration for the VM.",
          "type": "object",
          "properties": {
            "httpsProxy": {
              "description": "Gets or sets httpsProxy url.",
              "type": "string"
            }
          }
        },
        "provisioningAction": {
          "description": "Gets or sets the guest agent provisioning action.",
          "type": "string",
          "enum": [
            "install",
            "uninstall",
            "repair"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ProvisioningAction"
          }
        },
        "status": {
          "description": "Gets or sets the guest agent status.",
          "type": "string",
          "readOnly": true
        },
        "customResourceName": {
          "description": "Gets the name of the corresponding resource in Kubernetes.",
          "type": "string",
          "readOnly": true
        },
        "statuses": {
          "description": "The resource status information.",
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "The resource status information.",
            "type": "object",
            "properties": {
              "type": {
                "description": "The type of the condition.",
                "type": "string",
                "readOnly": true
              },
              "status": {
                "description": "Status of the condition.",
                "type": "string",
                "readOnly": true
              },
              "reason": {
                "description": "The reason for the condition's status.",
                "type": "string",
                "readOnly": true
              },
              "message": {
                "description": "A human readable message indicating details about the status.",
                "type": "string",
                "readOnly": true
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.",
                "type": "string",
                "readOnly": true
              },
              "lastUpdatedAt": {
                "description": "The last update time for this condition.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "type"
          ]
        },
        "provisioningState": {
          "description": "Gets the provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted",
            "Created"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    }
  },
  "parameters": {
    "subscriptionId": {
      "in": "path",
      "name": "subscriptionId",
      "description": "The Subscription ID.",
      "required": true,
      "type": "string"
    },
    "api-version": {
      "in": "query",
      "name": "api-version",
      "description": "Client Api Version.",
      "required": true,
      "type": "string"
    },
    "resourceGroupName": {
      "in": "path",
      "name": "resourceGroupName",
      "description": "The Resource Group Name.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "resourceUriParameter": {
      "in": "path",
      "name": "resourceUri",
      "description": "The fully qualified Azure Resource manager identifier of the Hybrid Compute machine resource to be extended.",
      "required": true,
      "type": "string",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    }
  }
}