{
  "swagger": "2.0",
  "info": {
    "title": "Azure datamigration",
    "version": "2025-06-30",
    "description": "Azure datamigration service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/skus": {
      "get": {
        "summary": "Get supported SKUs",
        "description": "The skus action returns the list of SKUs that DMS (classic) supports.",
        "tags": [
          "Standard operation",
          "GET"
        ],
        "operationId": "ResourceSkus_ListSkus",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Got SKUs",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "resourceType": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of resource the SKU applies to."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of SKU."
                      },
                      "tier": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Specifies the tier of DMS (classic) in a scale set."
                      },
                      "size": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The Size of the SKU."
                      },
                      "family": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The Family of this particular SKU."
                      },
                      "kind": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The Kind of resources that are supported in this SKU."
                      },
                      "capacity": {
                        "readOnly": true,
                        "description": "Not used.",
                        "properties": {
                          "minimum": {
                            "type": "integer",
                            "readOnly": true,
                            "format": "int64",
                            "description": "The minimum capacity."
                          },
                          "maximum": {
                            "type": "integer",
                            "readOnly": true,
                            "format": "int64",
                            "description": "The maximum capacity."
                          },
                          "default": {
                            "type": "integer",
                            "readOnly": true,
                            "format": "int64",
                            "description": "The default capacity."
                          },
                          "scaleType": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The scale type applicable to the SKU.",
                            "enum": [
                              "Automatic",
                              "Manual",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceSkuCapacityScaleType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "locations": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "type": "string"
                        },
                        "description": "The set of locations that the SKU is available."
                      },
                      "apiVersions": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "type": "string"
                        },
                        "description": "The api versions that support this SKU."
                      },
                      "costs": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "properties": {
                            "meterID": {
                              "type": "string",
                              "readOnly": true,
                              "description": "Used for querying price from commerce."
                            },
                            "quantity": {
                              "type": "integer",
                              "readOnly": true,
                              "format": "int64",
                              "description": "The multiplier is needed to extend the base metered cost."
                            },
                            "extendedUnit": {
                              "type": "string",
                              "readOnly": true,
                              "description": "An invariant to show the extended unit."
                            }
                          },
                          "description": "Describes metadata for retrieving price info."
                        },
                        "description": "Metadata for retrieving price info."
                      },
                      "capabilities": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "readOnly": true,
                              "description": "An invariant to describe the feature."
                            },
                            "value": {
                              "type": "string",
                              "readOnly": true,
                              "description": "An invariant if the feature is measured by quantity."
                            }
                          },
                          "description": "Describes The SKU capabilities object."
                        },
                        "description": "A name value pair to describe the capability."
                      },
                      "restrictions": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "properties": {
                            "type": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The type of restrictions.",
                              "enum": [
                                "location"
                              ],
                              "x-ms-enum": {
                                "name": "ResourceSkuRestrictionsType",
                                "modelAsString": true
                              }
                            },
                            "values": {
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted."
                            },
                            "reasonCode": {
                              "type": "string",
                              "readOnly": true,
                              "description": "The reason code for restriction.",
                              "enum": [
                                "QuotaId",
                                "NotAvailableForSubscription"
                              ],
                              "x-ms-enum": {
                                "name": "ResourceSkuRestrictionsReasonCode",
                                "modelAsString": true
                              }
                            }
                          },
                          "description": "Describes scaling information of a SKU."
                        },
                        "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions."
                      }
                    },
                    "description": "Describes an available DMS (classic) SKU."
                  },
                  "description": "The list of SKUs available for the subscription."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The uri to fetch the next page of DMS (classic) SKUs. Call ListNext() with this to fetch the next page of DMS (classic) SKUs."
                }
              },
              "required": [
                "value"
              ],
              "description": "The DMS (classic) List SKUs operation response."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}": {
      "parameters": [
        {
          "name": "subscriptionId",
          "in": "path",
          "description": "Subscription ID that identifies an Azure subscription.",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "client"
        },
        {
          "name": "groupName",
          "description": "Name of the resource group",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "serviceName",
          "description": "Name of the service",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "api-version",
          "description": "Version of the API",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "summary": "Create or update DMS (classic) Instance",
        "description": "The services resource is the top-level resource that represents the Azure Database Migration Service (classic). The PUT method creates a new service or updates an existing one. When a service is updated, existing child resources (i.e. tasks) are unaffected. Services currently support a single kind, \"vm\", which refers to a VM-based service, although other kinds may be added in the future. This method can change the kind, SKU, and network of the service, but if tasks are currently running (i.e. the service is busy), this will fail with 400 Bad Request (\"ServiceIsBusy\"). The provider will reply when successful with 200 OK or 201 Created. Long-running operations use the provisioningState property.",
        "tags": [
          "Service resource",
          "Standard operation",
          "PUT"
        ],
        "operationId": "Services_CreateOrUpdate",
        "parameters": [
          {
            "name": "parameters",
            "description": "Information about the service",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "An Azure Database Migration Service (classic) resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. Ignored if submitted"
                },
                "kind": {
                  "type": "string",
                  "description": "The resource kind. Only 'vm' (the default) is supported."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Custom service properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The resource's provisioning state",
                      "enum": [
                        "Accepted",
                        "Deleting",
                        "Deploying",
                        "Stopped",
                        "Stopping",
                        "Starting",
                        "FailedToStart",
                        "FailedToStop",
                        "Succeeded",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "publicKey": {
                      "type": "string",
                      "description": "The public key of the service, used to encrypt secrets sent to the service"
                    },
                    "virtualSubnetId": {
                      "type": "string",
                      "description": "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                    },
                    "virtualNicId": {
                      "type": "string",
                      "description": "The ID of the Microsoft.Network/networkInterfaces resource which the service have"
                    },
                    "autoStopDelay": {
                      "type": "string",
                      "description": "The time delay before the service is auto-stopped when idle."
                    },
                    "deleteResourcesOnStop": {
                      "type": "boolean",
                      "description": "Whether service resources should be deleted when stopped. (Turned on by default)"
                    }
                  }
                },
                "sku": {
                  "description": "Service SKU",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The unique name of the SKU, such as 'P3'"
                    },
                    "tier": {
                      "type": "string",
                      "description": "The tier of the SKU, such as 'Basic', 'General Purpose', or 'Business Critical'"
                    },
                    "family": {
                      "type": "string",
                      "description": "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                    },
                    "size": {
                      "type": "string",
                      "description": "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                    },
                    "capacity": {
                      "type": "integer",
                      "description": "The capacity of the SKU, if it supports scaling"
                    }
                  }
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Service updated",
            "schema": {
              "type": "object",
              "description": "An Azure Database Migration Service (classic) resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. Ignored if submitted"
                },
                "kind": {
                  "type": "string",
                  "description": "The resource kind. Only 'vm' (the default) is supported."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Custom service properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The resource's provisioning state",
                      "enum": [
                        "Accepted",
                        "Deleting",
                        "Deploying",
                        "Stopped",
                        "Stopping",
                        "Starting",
                        "FailedToStart",
                        "FailedToStop",
                        "Succeeded",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "publicKey": {
                      "type": "string",
                      "description": "The public key of the service, used to encrypt secrets sent to the service"
                    },
                    "virtualSubnetId": {
                      "type": "string",
                      "description": "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                    },
                    "virtualNicId": {
                      "type": "string",
                      "description": "The ID of the Microsoft.Network/networkInterfaces resource which the service have"
                    },
                    "autoStopDelay": {
                      "type": "string",
                      "description": "The time delay before the service is auto-stopped when idle."
                    },
                    "deleteResourcesOnStop": {
                      "type": "boolean",
                      "description": "Whether service resources should be deleted when stopped. (Turned on by default)"
                    }
                  }
                },
                "sku": {
                  "description": "Service SKU",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The unique name of the SKU, such as 'P3'"
                    },
                    "tier": {
                      "type": "string",
                      "description": "The tier of the SKU, such as 'Basic', 'General Purpose', or 'Business Critical'"
                    },
                    "family": {
                      "type": "string",
                      "description": "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                    },
                    "size": {
                      "type": "string",
                      "description": "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                    },
                    "capacity": {
                      "type": "integer",
                      "description": "The capacity of the SKU, if it supports scaling"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Service created (use provisioningState)",
            "schema": {
              "type": "object",
              "description": "An Azure Database Migration Service (classic) resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. Ignored if submitted"
                },
                "kind": {
                  "type": "string",
                  "description": "The resource kind. Only 'vm' (the default) is supported."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Custom service properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The resource's provisioning state",
                      "enum": [
                        "Accepted",
                        "Deleting",
                        "Deploying",
                        "Stopped",
                        "Stopping",
                        "Starting",
                        "FailedToStart",
                        "FailedToStop",
                        "Succeeded",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "publicKey": {
                      "type": "string",
                      "description": "The public key of the service, used to encrypt secrets sent to the service"
                    },
                    "virtualSubnetId": {
                      "type": "string",
                      "description": "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                    },
                    "virtualNicId": {
                      "type": "string",
                      "description": "The ID of the Microsoft.Network/networkInterfaces resource which the service have"
                    },
                    "autoStopDelay": {
                      "type": "string",
                      "description": "The time delay before the service is auto-stopped when idle."
                    },
                    "deleteResourcesOnStop": {
                      "type": "boolean",
                      "description": "Whether service resources should be deleted when stopped. (Turned on by default)"
                    }
                  }
                },
                "sku": {
                  "description": "Service SKU",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The unique name of the SKU, such as 'P3'"
                    },
                    "tier": {
                      "type": "string",
                      "description": "The tier of the SKU, such as 'Basic', 'General Purpose', or 'Business Critical'"
                    },
                    "family": {
                      "type": "string",
                      "description": "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                    },
                    "size": {
                      "type": "string",
                      "description": "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                    },
                    "capacity": {
                      "type": "integer",
                      "description": "The capacity of the SKU, if it supports scaling"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Update accepted"
          }
        }
      },
      "get": {
        "summary": "Get DMS (classic) Service Instance",
        "description": "The services resource is the top-level resource that represents the Azure Database Migration Service (classic). The GET method retrieves information about a service instance.",
        "tags": [
          "Service resource",
          "Standard operation",
          "GET"
        ],
        "operationId": "Services_Get",
        "responses": {
          "200": {
            "description": "A service instance resource",
            "schema": {
              "type": "object",
              "description": "An Azure Database Migration Service (classic) resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. Ignored if submitted"
                },
                "kind": {
                  "type": "string",
                  "description": "The resource kind. Only 'vm' (the default) is supported."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Custom service properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The resource's provisioning state",
                      "enum": [
                        "Accepted",
                        "Deleting",
                        "Deploying",
                        "Stopped",
                        "Stopping",
                        "Starting",
                        "FailedToStart",
                        "FailedToStop",
                        "Succeeded",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "publicKey": {
                      "type": "string",
                      "description": "The public key of the service, used to encrypt secrets sent to the service"
                    },
                    "virtualSubnetId": {
                      "type": "string",
                      "description": "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                    },
                    "virtualNicId": {
                      "type": "string",
                      "description": "The ID of the Microsoft.Network/networkInterfaces resource which the service have"
                    },
                    "autoStopDelay": {
                      "type": "string",
                      "description": "The time delay before the service is auto-stopped when idle."
                    },
                    "deleteResourcesOnStop": {
                      "type": "boolean",
                      "description": "Whether service resources should be deleted when stopped. (Turned on by default)"
                    }
                  }
                },
                "sku": {
                  "description": "Service SKU",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The unique name of the SKU, such as 'P3'"
                    },
                    "tier": {
                      "type": "string",
                      "description": "The tier of the SKU, such as 'Basic', 'General Purpose', or 'Business Critical'"
                    },
                    "family": {
                      "type": "string",
                      "description": "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                    },
                    "size": {
                      "type": "string",
                      "description": "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                    },
                    "capacity": {
                      "type": "integer",
                      "description": "The capacity of the SKU, if it supports scaling"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete DMS (classic) Service Instance",
        "description": "The services resource is the top-level resource that represents the Azure Database Migration Service (classic). The DELETE method deletes a service. Any running tasks will be canceled.",
        "tags": [
          "Service resource",
          "Standard operation",
          "DELETE"
        ],
        "parameters": [
          {
            "name": "deleteRunningTasks",
            "description": "Delete the resource even if it contains running tasks",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-ms-parameter-location": "method"
          }
        ],
        "operationId": "Services_Delete",
        "responses": {
          "200": {
            "description": "Service resource deleted"
          },
          "202": {
            "description": "Deletion accepted"
          },
          "204": {
            "description": "Service not found"
          }
        }
      },
      "patch": {
        "summary": "Create or update DMS (classic) Service Instance",
        "description": "The services resource is the top-level resource that represents the Azure Database Migration Service (classic). The PATCH method updates an existing service. This method can change the kind, SKU, and network of the service, but if tasks are currently running (i.e. the service is busy), this will fail with 400 Bad Request (\"ServiceIsBusy\").",
        "tags": [
          "Service resource",
          "Standard operation",
          "PATCH"
        ],
        "operationId": "Services_Update",
        "parameters": [
          {
            "name": "parameters",
            "description": "Information about the service",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "An Azure Database Migration Service (classic) resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. Ignored if submitted"
                },
                "kind": {
                  "type": "string",
                  "description": "The resource kind. Only 'vm' (the default) is supported."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Custom service properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The resource's provisioning state",
                      "enum": [
                        "Accepted",
                        "Deleting",
                        "Deploying",
                        "Stopped",
                        "Stopping",
                        "Starting",
                        "FailedToStart",
                        "FailedToStop",
                        "Succeeded",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "publicKey": {
                      "type": "string",
                      "description": "The public key of the service, used to encrypt secrets sent to the service"
                    },
                    "virtualSubnetId": {
                      "type": "string",
                      "description": "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                    },
                    "virtualNicId": {
                      "type": "string",
                      "description": "The ID of the Microsoft.Network/networkInterfaces resource which the service have"
                    },
                    "autoStopDelay": {
                      "type": "string",
                      "description": "The time delay before the service is auto-stopped when idle."
                    },
                    "deleteResourcesOnStop": {
                      "type": "boolean",
                      "description": "Whether service resources should be deleted when stopped. (Turned on by default)"
                    }
                  }
                },
                "sku": {
                  "description": "Service SKU",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The unique name of the SKU, such as 'P3'"
                    },
                    "tier": {
                      "type": "string",
                      "description": "The tier of the SKU, such as 'Basic', 'General Purpose', or 'Business Critical'"
                    },
                    "family": {
                      "type": "string",
                      "description": "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                    },
                    "size": {
                      "type": "string",
                      "description": "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                    },
                    "capacity": {
                      "type": "integer",
                      "description": "The capacity of the SKU, if it supports scaling"
                    }
                  }
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Service resource updated",
            "schema": {
              "type": "object",
              "description": "An Azure Database Migration Service (classic) resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. Ignored if submitted"
                },
                "kind": {
                  "type": "string",
                  "description": "The resource kind. Only 'vm' (the default) is supported."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Custom service properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The resource's provisioning state",
                      "enum": [
                        "Accepted",
                        "Deleting",
                        "Deploying",
                        "Stopped",
                        "Stopping",
                        "Starting",
                        "FailedToStart",
                        "FailedToStop",
                        "Succeeded",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "ServiceProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "publicKey": {
                      "type": "string",
                      "description": "The public key of the service, used to encrypt secrets sent to the service"
                    },
                    "virtualSubnetId": {
                      "type": "string",
                      "description": "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                    },
                    "virtualNicId": {
                      "type": "string",
                      "description": "The ID of the Microsoft.Network/networkInterfaces resource which the service have"
                    },
                    "autoStopDelay": {
                      "type": "string",
                      "description": "The time delay before the service is auto-stopped when idle."
                    },
                    "deleteResourcesOnStop": {
                      "type": "boolean",
                      "description": "Whether service resources should be deleted when stopped. (Turned on by default)"
                    }
                  }
                },
                "sku": {
                  "description": "Service SKU",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The unique name of the SKU, such as 'P3'"
                    },
                    "tier": {
                      "type": "string",
                      "description": "The tier of the SKU, such as 'Basic', 'General Purpose', or 'Business Critical'"
                    },
                    "family": {
                      "type": "string",
                      "description": "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                    },
                    "size": {
                      "type": "string",
                      "description": "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                    },
                    "capacity": {
                      "type": "integer",
                      "description": "The capacity of the SKU, if it supports scaling"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Update accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/checkStatus": {
      "post": {
        "summary": "Check service health status",
        "description": "The services resource is the top-level resource that represents the Azure Database Migration Service (classic). This action performs a health check and returns the status of the service and virtual machine size.",
        "tags": [
          "Service resource",
          "Custom operation",
          "POST"
        ],
        "operationId": "Services_CheckStatus",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "groupName",
            "description": "Name of the resource group",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "description": "Name of the service",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Health checked",
            "schema": {
              "type": "object",
              "description": "Service health status",
              "properties": {
                "agentVersion": {
                  "type": "string",
                  "description": "The DMS instance agent version"
                },
                "agentConfiguration": {
                  "type": "object",
                  "description": "Agent Configuration"
                },
                "status": {
                  "type": "string",
                  "description": "The machine-readable status, such as 'Initializing', 'Offline', 'Online', 'Deploying', 'Deleting', 'Stopped', 'Stopping', 'Starting', 'FailedToStart', 'FailedToStop' or 'Failed'"
                },
                "vmSize": {
                  "type": "string",
                  "description": "The services virtual machine size, such as 'Standard_D2_v2'"
                },
                "supportedTaskTypes": {
                  "type": "array",
                  "description": "The list of supported task types",
                  "items": {
                    "type": "string",
                    "description": "Migration task type"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/start": {
      "post": {
        "summary": "Start service",
        "description": "The services resource is the top-level resource that represents the Azure Database Migration Service (classic). This action starts the service and the service can be used for data migration.",
        "tags": [
          "Service resource",
          "Custom operation",
          "POST"
        ],
        "operationId": "Services_Start",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "groupName",
            "description": "Name of the resource group",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "description": "Name of the service",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The service has already been started."
          },
          "202": {
            "description": "The request to start service is accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/stop": {
      "post": {
        "summary": "Stop service",
        "description": "The services resource is the top-level resource that represents the Azure Database Migration Service (classic). This action stops the service and the service cannot be used for data migration. The service owner won't be billed when the service is stopped.",
        "tags": [
          "Service resource",
          "Custom operation",
          "POST"
        ],
        "operationId": "Services_Stop",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "groupName",
            "description": "Name of the resource group",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "description": "Name of the service",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The service has already been stopped."
          },
          "202": {
            "description": "The request to stop service is accepted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/skus": {
      "get": {
        "summary": "Get compatible SKUs",
        "description": "The services resource is the top-level resource that represents the Database Migration Service (classic). The skus action returns the list of SKUs that a service resource can be updated to.",
        "tags": [
          "Service resource",
          "Standard operation",
          "GET"
        ],
        "operationId": "Services_ListSkus",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "groupName",
            "description": "Name of the resource group",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "description": "Name of the service",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Got SKUs",
            "schema": {
              "type": "object",
              "description": "OData page of available SKUs",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of service SKUs",
                  "items": {
                    "type": "object",
                    "description": "Describes the available service SKU.",
                    "properties": {
                      "resourceType": {
                        "type": "string",
                        "description": "The resource type, including the provider namespace"
                      },
                      "sku": {
                        "type": "object",
                        "description": "SKU name, tier, etc.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the SKU"
                          },
                          "family": {
                            "type": "string",
                            "description": "SKU family"
                          },
                          "size": {
                            "type": "string",
                            "description": "SKU size"
                          },
                          "tier": {
                            "type": "string",
                            "description": "The tier of the SKU, such as \"Basic\", \"General Purpose\", or \"Business Critical\""
                          }
                        }
                      },
                      "capacity": {
                        "type": "object",
                        "description": "A description of the scaling capacities of the SKU",
                        "properties": {
                          "minimum": {
                            "type": "integer",
                            "description": "The minimum capacity, usually 0 or 1."
                          },
                          "maximum": {
                            "type": "integer",
                            "description": "The maximum capacity"
                          },
                          "default": {
                            "type": "integer",
                            "description": "The default capacity"
                          },
                          "scaleType": {
                            "type": "string",
                            "description": "The scalability approach",
                            "enum": [
                              "none",
                              "manual",
                              "automatic"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceScalability",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to load the next page of service SKUs"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks": {
      "get": {
        "summary": "Get tasks in a service",
        "description": "The services resource is the top-level resource that represents the Azure Database Migration Service (classic). This method returns a list of tasks owned by a service resource. Some tasks may have a status of Unknown, which indicates that an error occurred while querying the status of that task.",
        "tags": [
          "Service resource",
          "Standard operation",
          "GET"
        ],
        "operationId": "Tasks_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "groupName",
            "description": "Name of the resource group",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "description": "Name of the service",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "projectName",
            "description": "Name of the project",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskType",
            "description": "Filter tasks by task type",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Got tasks",
            "schema": {
              "$ref": "./definitions/Tasks.json#/definitions/TaskList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/serviceTasks": {
      "get": {
        "summary": "Get service level tasks for a service",
        "description": "The services resource is the top-level resource that represents the Azure Database Migration Service (classic). This method returns a list of service level tasks owned by a service resource. Some tasks may have a status of Unknown, which indicates that an error occurred while querying the status of that task.",
        "tags": [
          "Service resource",
          "Standard operation",
          "GET"
        ],
        "operationId": "ServiceTasks_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "groupName",
            "description": "Name of the resource group",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "description": "Name of the service",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskType",
            "description": "Filter tasks by task type",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Got service tasks",
            "schema": {
              "$ref": "./definitions/Tasks.json#/definitions/TaskList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/checkNameAvailability": {
      "post": {
        "summary": "Check nested resource name validity and availability",
        "description": "This method checks whether a proposed nested resource name is valid and available.",
        "tags": [
          "Custom operation",
          "POST"
        ],
        "operationId": "Services_CheckChildrenNameAvailability",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "groupName",
            "description": "Name of the resource group",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "serviceName",
            "description": "Name of the service",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "description": "Requested name to validate",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A resource type and proposed name",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The proposed resource name"
                },
                "type": {
                  "type": "string",
                  "description": "The resource type chain (e.g. virtualMachines/extensions)"
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Name checked",
            "schema": {
              "type": "object",
              "description": "Indicates whether a proposed resource name is available",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "If true, the name is valid and available. If false, 'reason' describes why not."
                },
                "reason": {
                  "type": "string",
                  "description": "The reason why the name is not available, if nameAvailable is false",
                  "enum": [
                    "AlreadyExists",
                    "Invalid"
                  ],
                  "x-ms-enum": {
                    "name": "NameCheckFailureReason",
                    "modelAsString": true
                  }
                },
                "message": {
                  "type": "string",
                  "description": "The localized reason why the name is not available, if nameAvailable is false"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services": {
      "get": {
        "summary": "Get services in resource group",
        "description": "The Services resource is the top-level resource that represents the Azure Database Migration Service (classic). This method returns a list of service resources in a resource group.",
        "tags": [
          "Service resource",
          "Standard operation",
          "GET"
        ],
        "operationId": "Services_ListByResourceGroup",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "groupName",
            "description": "Name of the resource group",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Got services",
            "schema": {
              "type": "object",
              "description": "OData page of service objects",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of services",
                  "items": {
                    "type": "object",
                    "description": "An Azure Database Migration Service (classic) resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP strong entity tag value. Ignored if submitted"
                      },
                      "kind": {
                        "type": "string",
                        "description": "The resource kind. Only 'vm' (the default) is supported."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Custom service properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The resource's provisioning state",
                            "enum": [
                              "Accepted",
                              "Deleting",
                              "Deploying",
                              "Stopped",
                              "Stopping",
                              "Starting",
                              "FailedToStart",
                              "FailedToStop",
                              "Succeeded",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "publicKey": {
                            "type": "string",
                            "description": "The public key of the service, used to encrypt secrets sent to the service"
                          },
                          "virtualSubnetId": {
                            "type": "string",
                            "description": "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                          },
                          "virtualNicId": {
                            "type": "string",
                            "description": "The ID of the Microsoft.Network/networkInterfaces resource which the service have"
                          },
                          "autoStopDelay": {
                            "type": "string",
                            "description": "The time delay before the service is auto-stopped when idle."
                          },
                          "deleteResourcesOnStop": {
                            "type": "boolean",
                            "description": "Whether service resources should be deleted when stopped. (Turned on by default)"
                          }
                        }
                      },
                      "sku": {
                        "description": "Service SKU",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The unique name of the SKU, such as 'P3'"
                          },
                          "tier": {
                            "type": "string",
                            "description": "The tier of the SKU, such as 'Basic', 'General Purpose', or 'Business Critical'"
                          },
                          "family": {
                            "type": "string",
                            "description": "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                          },
                          "size": {
                            "type": "string",
                            "description": "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                          },
                          "capacity": {
                            "type": "integer",
                            "description": "The capacity of the SKU, if it supports scaling"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to load the next page of services"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/services": {
      "get": {
        "summary": "Get services in subscription",
        "description": "The services resource is the top-level resource that represents the Azure Database Migration Service (classic). This method returns a list of service resources in a subscription.",
        "tags": [
          "Service resource",
          "Standard operation",
          "GET"
        ],
        "operationId": "Services_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Got services",
            "schema": {
              "type": "object",
              "description": "OData page of service objects",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of services",
                  "items": {
                    "type": "object",
                    "description": "An Azure Database Migration Service (classic) resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP strong entity tag value. Ignored if submitted"
                      },
                      "kind": {
                        "type": "string",
                        "description": "The resource kind. Only 'vm' (the default) is supported."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Custom service properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The resource's provisioning state",
                            "enum": [
                              "Accepted",
                              "Deleting",
                              "Deploying",
                              "Stopped",
                              "Stopping",
                              "Starting",
                              "FailedToStart",
                              "FailedToStop",
                              "Succeeded",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "ServiceProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "publicKey": {
                            "type": "string",
                            "description": "The public key of the service, used to encrypt secrets sent to the service"
                          },
                          "virtualSubnetId": {
                            "type": "string",
                            "description": "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
                          },
                          "virtualNicId": {
                            "type": "string",
                            "description": "The ID of the Microsoft.Network/networkInterfaces resource which the service have"
                          },
                          "autoStopDelay": {
                            "type": "string",
                            "description": "The time delay before the service is auto-stopped when idle."
                          },
                          "deleteResourcesOnStop": {
                            "type": "boolean",
                            "description": "Whether service resources should be deleted when stopped. (Turned on by default)"
                          }
                        }
                      },
                      "sku": {
                        "description": "Service SKU",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The unique name of the SKU, such as 'P3'"
                          },
                          "tier": {
                            "type": "string",
                            "description": "The tier of the SKU, such as 'Basic', 'General Purpose', or 'Business Critical'"
                          },
                          "family": {
                            "type": "string",
                            "description": "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
                          },
                          "size": {
                            "type": "string",
                            "description": "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
                          },
                          "capacity": {
                            "type": "integer",
                            "description": "The capacity of the SKU, if it supports scaling"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to load the next page of services"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}": {
      "parameters": [
        {
          "name": "subscriptionId",
          "in": "path",
          "description": "Subscription ID that identifies an Azure subscription.",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "client"
        },
        {
          "name": "groupName",
          "description": "Name of the resource group",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "serviceName",
          "description": "Name of the service",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "projectName",
          "description": "Name of the project",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "taskName",
          "description": "Name of the Task",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "api-version",
          "description": "Version of the API",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "summary": "Create or update task",
        "description": "The tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The PUT method creates a new task or updates an existing one, although since tasks have no mutable custom properties, there is little reason to update an existing one.",
        "tags": [
          "Task resource",
          "Standard operation",
          "PUT"
        ],
        "operationId": "Tasks_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/projectTask"
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated",
            "schema": {
              "$ref": "./definitions/Tasks.json#/definitions/ProjectTask"
            }
          },
          "201": {
            "description": "Task created",
            "schema": {
              "$ref": "./definitions/Tasks.json#/definitions/ProjectTask"
            }
          }
        }
      },
      "get": {
        "summary": "Get task information",
        "description": "The tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The GET method retrieves information about a task.",
        "tags": [
          "Task resource",
          "Standard operation",
          "GET"
        ],
        "operationId": "Tasks_Get",
        "parameters": [
          {
            "name": "$expand",
            "description": "Expand the response",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A task resource",
            "schema": {
              "$ref": "./definitions/Tasks.json#/definitions/ProjectTask"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete task",
        "description": "The tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The DELETE method deletes a task, canceling it first if it's running.",
        "tags": [
          "Task resource",
          "Standard operation",
          "DELETE"
        ],
        "parameters": [
          {
            "name": "deleteRunningTasks",
            "description": "Delete the resource even if it contains running tasks",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-ms-parameter-location": "method"
          }
        ],
        "operationId": "Tasks_Delete",
        "responses": {
          "200": {
            "description": "Task resource deleted"
          },
          "204": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "summary": "Create or update task",
        "description": "The tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The PATCH method updates an existing task, but since tasks have no mutable custom properties, there is little reason to do so.",
        "tags": [
          "Task resource",
          "Standard operation",
          "PATCH"
        ],
        "operationId": "Tasks_Update",
        "parameters": [
          {
            "$ref": "#/parameters/projectTask"
          }
        ],
        "responses": {
          "200": {
            "description": "Task resource updated",
            "schema": {
              "$ref": "./definitions/Tasks.json#/definitions/ProjectTask"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/serviceTasks/{taskName}": {
      "parameters": [
        {
          "name": "subscriptionId",
          "in": "path",
          "description": "Subscription ID that identifies an Azure subscription.",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "client"
        },
        {
          "name": "groupName",
          "description": "Name of the resource group",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "serviceName",
          "description": "Name of the service",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "taskName",
          "description": "Name of the Task",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "api-version",
          "description": "Version of the API",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "summary": "Create or update service task",
        "description": "The service tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The PUT method creates a new service task or updates an existing one, although since service tasks have no mutable custom properties, there is little reason to update an existing one.",
        "tags": [
          "Service Task resource",
          "Standard operation",
          "PUT"
        ],
        "operationId": "ServiceTasks_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/projectTask"
          }
        ],
        "responses": {
          "200": {
            "description": "Service task updated",
            "schema": {
              "$ref": "./definitions/Tasks.json#/definitions/ProjectTask"
            }
          },
          "201": {
            "description": "Service task created",
            "schema": {
              "$ref": "./definitions/Tasks.json#/definitions/ProjectTask"
            }
          }
        }
      },
      "get": {
        "summary": "Get service task information",
        "description": "The service tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The GET method retrieves information about a service task.",
        "tags": [
          "Service Task resource",
          "Standard operation",
          "GET"
        ],
        "operationId": "ServiceTasks_Get",
        "parameters": [
          {
            "name": "$expand",
            "description": "Expand the response",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A service task resource",
            "schema": {
              "$ref": "./definitions/Tasks.json#/definitions/ProjectTask"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete service task",
        "description": "The service tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The DELETE method deletes a service task, canceling it first if it's running.",
        "tags": [
          "Service Task resource",
          "Standard operation",
          "DELETE"
        ],
        "parameters": [
          {
            "name": "deleteRunningTasks",
            "description": "Delete the resource even if it contains running tasks",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-ms-parameter-location": "method"
          }
        ],
        "operationId": "ServiceTasks_Delete",
        "responses": {
          "200": {
            "description": "Service Task resource deleted"
          },
          "204": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "summary": "Create or update service task",
        "description": "The service tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. The PATCH method updates an existing service task, but since service tasks have no mutable custom properties, there is little reason to do so.",
        "tags": [
          "Service Task resource",
          "Standard operation",
          "PATCH"
        ],
        "operationId": "ServiceTasks_Update",
        "parameters": [
          {
            "$ref": "#/parameters/projectTask"
          }
        ],
        "responses": {
          "200": {
            "description": "Service Task resource updated",
            "schema": {
              "$ref": "./definitions/Tasks.json#/definitions/ProjectTask"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}/cancel": {
      "post": {
        "summary": "Cancel a task",
        "description": "The tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. This method cancels a task if it's currently queued or running.",
        "tags": [
          "Task resource",
          "Custom operation",
          "POST"
        ],
        "operationId": "Tasks_Cancel",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "groupName",
            "description": "Name of the resource group",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "description": "Name of the service",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "projectName",
            "description": "Name of the project",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "taskName",
            "description": "Name of the Task",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Task canceled",
            "schema": {
              "$ref": "./definitions/Tasks.json#/definitions/ProjectTask"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/serviceTasks/{taskName}/cancel": {
      "post": {
        "summary": "Cancel a service task",
        "description": "The service tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. This method cancels a service task if it's currently queued or running.",
        "tags": [
          "Service Task resource",
          "Custom operation",
          "POST"
        ],
        "operationId": "ServiceTasks_Cancel",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "groupName",
            "description": "Name of the resource group",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "description": "Name of the service",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "taskName",
            "description": "Name of the Task",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Service Task canceled",
            "schema": {
              "$ref": "./definitions/Tasks.json#/definitions/ProjectTask"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/tasks/{taskName}/command": {
      "post": {
        "summary": "Execute a command on a task",
        "description": "The tasks resource is a nested, proxy-only resource representing work performed by a DMS (classic) instance. This method executes a command on a running task.",
        "tags": [
          "Task resource",
          "Custom operation",
          "POST"
        ],
        "operationId": "Tasks_Command",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "groupName",
            "description": "Name of the resource group",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "description": "Name of the service",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "projectName",
            "description": "Name of the project",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "taskName",
            "description": "Name of the Task",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/command"
          }
        ],
        "responses": {
          "200": {
            "description": "Command executed",
            "schema": {
              "$ref": "./definitions/Commands.json#/definitions/CommandProperties"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects": {
      "get": {
        "summary": "Get projects in a service",
        "description": "The project resource is a nested resource representing a stored migration project. This method returns a list of projects owned by a service resource.",
        "tags": [
          "Project resource",
          "Standard operation",
          "GET"
        ],
        "operationId": "Projects_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "groupName",
            "description": "Name of the resource group",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "description": "Name of the service",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of projects",
            "schema": {
              "type": "object",
              "description": "OData page of project resources",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of projects",
                  "items": {
                    "type": "object",
                    "description": "A project resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Project properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "sourcePlatform": {
                            "description": "Source platform for the project",
                            "type": "string",
                            "enum": [
                              "SQL",
                              "MySQL",
                              "PostgreSql",
                              "MongoDb",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ProjectSourcePlatform",
                              "modelAsString": true
                            }
                          },
                          "azureAuthenticationInfo": {
                            "description": "Field that defines the Azure active directory application info, used to connect to the target Azure resource",
                            "type": "object",
                            "properties": {
                              "applicationId": {
                                "type": "string",
                                "description": "Application ID of the Azure Active Directory Application"
                              },
                              "appKey": {
                                "type": "string",
                                "description": "Key used to authenticate to the Azure Active Directory Application"
                              },
                              "tenantId": {
                                "type": "string",
                                "description": "Tenant id of the customer"
                              },
                              "ignoreAzurePermissions": {
                                "type": "boolean",
                                "description": "Ignore checking azure permissions on the AAD app"
                              }
                            }
                          },
                          "targetPlatform": {
                            "description": "Target platform for the project",
                            "type": "string",
                            "enum": [
                              "SQLDB",
                              "SQLMI",
                              "AzureDbForMySql",
                              "AzureDbForPostgreSql",
                              "MongoDb",
                              "Unknown"
                            ],
                            "x-ms-enum": {
                              "name": "ProjectTargetPlatform",
                              "modelAsString": true
                            }
                          },
                          "creationTime": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "description": "UTC Date and time when project was created"
                          },
                          "sourceConnectionInfo": {
                            "description": "Information for connecting to source",
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of connection info"
                              },
                              "userName": {
                                "type": "string",
                                "description": "User name"
                              },
                              "password": {
                                "type": "string",
                                "description": "Password credential."
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "discriminator": "type"
                          },
                          "targetConnectionInfo": {
                            "description": "Information for connecting to target",
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Type of connection info"
                              },
                              "userName": {
                                "type": "string",
                                "description": "User name"
                              },
                              "password": {
                                "type": "string",
                                "description": "Password credential."
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "discriminator": "type"
                          },
                          "databasesInfo": {
                            "type": "array",
                            "description": "List of DatabaseInfo",
                            "items": {
                              "type": "object",
                              "description": "Project Database Details",
                              "properties": {
                                "sourceDatabaseName": {
                                  "type": "string",
                                  "description": "Name of the database"
                                }
                              },
                              "required": [
                                "sourceDatabaseName"
                              ]
                            }
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The project's provisioning state",
                            "enum": [
                              "Deleting",
                              "Succeeded"
                            ],
                            "x-ms-enum": {
                              "name": "ProjectProvisioningState",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "sourcePlatform",
                          "targetPlatform"
                        ]
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP strong entity tag value. This is ignored if submitted."
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to load the next page of projects"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}": {
      "parameters": [
        {
          "name": "subscriptionId",
          "in": "path",
          "description": "Subscription ID that identifies an Azure subscription.",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "client"
        },
        {
          "name": "groupName",
          "description": "Name of the resource group",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "serviceName",
          "description": "Name of the service",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "projectName",
          "description": "Name of the project",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "api-version",
          "description": "Version of the API",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "summary": "Create or update project",
        "description": "The project resource is a nested resource representing a stored migration project. The PUT method creates a new project or updates an existing one.",
        "tags": [
          "Project resource",
          "Standard operation",
          "PUT"
        ],
        "operationId": "Projects_CreateOrUpdate",
        "parameters": [
          {
            "name": "parameters",
            "description": "Information about the project",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A project resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Project properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "sourcePlatform": {
                      "description": "Source platform for the project",
                      "type": "string",
                      "enum": [
                        "SQL",
                        "MySQL",
                        "PostgreSql",
                        "MongoDb",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectSourcePlatform",
                        "modelAsString": true
                      }
                    },
                    "azureAuthenticationInfo": {
                      "description": "Field that defines the Azure active directory application info, used to connect to the target Azure resource",
                      "type": "object",
                      "properties": {
                        "applicationId": {
                          "type": "string",
                          "description": "Application ID of the Azure Active Directory Application"
                        },
                        "appKey": {
                          "type": "string",
                          "description": "Key used to authenticate to the Azure Active Directory Application"
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Tenant id of the customer"
                        },
                        "ignoreAzurePermissions": {
                          "type": "boolean",
                          "description": "Ignore checking azure permissions on the AAD app"
                        }
                      }
                    },
                    "targetPlatform": {
                      "description": "Target platform for the project",
                      "type": "string",
                      "enum": [
                        "SQLDB",
                        "SQLMI",
                        "AzureDbForMySql",
                        "AzureDbForPostgreSql",
                        "MongoDb",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectTargetPlatform",
                        "modelAsString": true
                      }
                    },
                    "creationTime": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "UTC Date and time when project was created"
                    },
                    "sourceConnectionInfo": {
                      "description": "Information for connecting to source",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of connection info"
                        },
                        "userName": {
                          "type": "string",
                          "description": "User name"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password credential."
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "discriminator": "type"
                    },
                    "targetConnectionInfo": {
                      "description": "Information for connecting to target",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of connection info"
                        },
                        "userName": {
                          "type": "string",
                          "description": "User name"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password credential."
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "discriminator": "type"
                    },
                    "databasesInfo": {
                      "type": "array",
                      "description": "List of DatabaseInfo",
                      "items": {
                        "type": "object",
                        "description": "Project Database Details",
                        "properties": {
                          "sourceDatabaseName": {
                            "type": "string",
                            "description": "Name of the database"
                          }
                        },
                        "required": [
                          "sourceDatabaseName"
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The project's provisioning state",
                      "enum": [
                        "Deleting",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "sourcePlatform",
                    "targetPlatform"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. This is ignored if submitted."
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Project updated",
            "schema": {
              "type": "object",
              "description": "A project resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Project properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "sourcePlatform": {
                      "description": "Source platform for the project",
                      "type": "string",
                      "enum": [
                        "SQL",
                        "MySQL",
                        "PostgreSql",
                        "MongoDb",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectSourcePlatform",
                        "modelAsString": true
                      }
                    },
                    "azureAuthenticationInfo": {
                      "description": "Field that defines the Azure active directory application info, used to connect to the target Azure resource",
                      "type": "object",
                      "properties": {
                        "applicationId": {
                          "type": "string",
                          "description": "Application ID of the Azure Active Directory Application"
                        },
                        "appKey": {
                          "type": "string",
                          "description": "Key used to authenticate to the Azure Active Directory Application"
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Tenant id of the customer"
                        },
                        "ignoreAzurePermissions": {
                          "type": "boolean",
                          "description": "Ignore checking azure permissions on the AAD app"
                        }
                      }
                    },
                    "targetPlatform": {
                      "description": "Target platform for the project",
                      "type": "string",
                      "enum": [
                        "SQLDB",
                        "SQLMI",
                        "AzureDbForMySql",
                        "AzureDbForPostgreSql",
                        "MongoDb",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectTargetPlatform",
                        "modelAsString": true
                      }
                    },
                    "creationTime": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "UTC Date and time when project was created"
                    },
                    "sourceConnectionInfo": {
                      "description": "Information for connecting to source",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of connection info"
                        },
                        "userName": {
                          "type": "string",
                          "description": "User name"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password credential."
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "discriminator": "type"
                    },
                    "targetConnectionInfo": {
                      "description": "Information for connecting to target",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of connection info"
                        },
                        "userName": {
                          "type": "string",
                          "description": "User name"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password credential."
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "discriminator": "type"
                    },
                    "databasesInfo": {
                      "type": "array",
                      "description": "List of DatabaseInfo",
                      "items": {
                        "type": "object",
                        "description": "Project Database Details",
                        "properties": {
                          "sourceDatabaseName": {
                            "type": "string",
                            "description": "Name of the database"
                          }
                        },
                        "required": [
                          "sourceDatabaseName"
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The project's provisioning state",
                      "enum": [
                        "Deleting",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "sourcePlatform",
                    "targetPlatform"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. This is ignored if submitted."
                }
              }
            }
          },
          "201": {
            "description": "Project created",
            "schema": {
              "type": "object",
              "description": "A project resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Project properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "sourcePlatform": {
                      "description": "Source platform for the project",
                      "type": "string",
                      "enum": [
                        "SQL",
                        "MySQL",
                        "PostgreSql",
                        "MongoDb",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectSourcePlatform",
                        "modelAsString": true
                      }
                    },
                    "azureAuthenticationInfo": {
                      "description": "Field that defines the Azure active directory application info, used to connect to the target Azure resource",
                      "type": "object",
                      "properties": {
                        "applicationId": {
                          "type": "string",
                          "description": "Application ID of the Azure Active Directory Application"
                        },
                        "appKey": {
                          "type": "string",
                          "description": "Key used to authenticate to the Azure Active Directory Application"
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Tenant id of the customer"
                        },
                        "ignoreAzurePermissions": {
                          "type": "boolean",
                          "description": "Ignore checking azure permissions on the AAD app"
                        }
                      }
                    },
                    "targetPlatform": {
                      "description": "Target platform for the project",
                      "type": "string",
                      "enum": [
                        "SQLDB",
                        "SQLMI",
                        "AzureDbForMySql",
                        "AzureDbForPostgreSql",
                        "MongoDb",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectTargetPlatform",
                        "modelAsString": true
                      }
                    },
                    "creationTime": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "UTC Date and time when project was created"
                    },
                    "sourceConnectionInfo": {
                      "description": "Information for connecting to source",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of connection info"
                        },
                        "userName": {
                          "type": "string",
                          "description": "User name"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password credential."
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "discriminator": "type"
                    },
                    "targetConnectionInfo": {
                      "description": "Information for connecting to target",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of connection info"
                        },
                        "userName": {
                          "type": "string",
                          "description": "User name"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password credential."
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "discriminator": "type"
                    },
                    "databasesInfo": {
                      "type": "array",
                      "description": "List of DatabaseInfo",
                      "items": {
                        "type": "object",
                        "description": "Project Database Details",
                        "properties": {
                          "sourceDatabaseName": {
                            "type": "string",
                            "description": "Name of the database"
                          }
                        },
                        "required": [
                          "sourceDatabaseName"
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The project's provisioning state",
                      "enum": [
                        "Deleting",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "sourcePlatform",
                    "targetPlatform"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. This is ignored if submitted."
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get project information",
        "description": "The project resource is a nested resource representing a stored migration project. The GET method retrieves information about a project.",
        "tags": [
          "Project resource",
          "Standard operation",
          "GET"
        ],
        "operationId": "Projects_Get",
        "responses": {
          "200": {
            "description": "A project resource",
            "schema": {
              "type": "object",
              "description": "A project resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Project properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "sourcePlatform": {
                      "description": "Source platform for the project",
                      "type": "string",
                      "enum": [
                        "SQL",
                        "MySQL",
                        "PostgreSql",
                        "MongoDb",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectSourcePlatform",
                        "modelAsString": true
                      }
                    },
                    "azureAuthenticationInfo": {
                      "description": "Field that defines the Azure active directory application info, used to connect to the target Azure resource",
                      "type": "object",
                      "properties": {
                        "applicationId": {
                          "type": "string",
                          "description": "Application ID of the Azure Active Directory Application"
                        },
                        "appKey": {
                          "type": "string",
                          "description": "Key used to authenticate to the Azure Active Directory Application"
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Tenant id of the customer"
                        },
                        "ignoreAzurePermissions": {
                          "type": "boolean",
                          "description": "Ignore checking azure permissions on the AAD app"
                        }
                      }
                    },
                    "targetPlatform": {
                      "description": "Target platform for the project",
                      "type": "string",
                      "enum": [
                        "SQLDB",
                        "SQLMI",
                        "AzureDbForMySql",
                        "AzureDbForPostgreSql",
                        "MongoDb",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectTargetPlatform",
                        "modelAsString": true
                      }
                    },
                    "creationTime": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "UTC Date and time when project was created"
                    },
                    "sourceConnectionInfo": {
                      "description": "Information for connecting to source",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of connection info"
                        },
                        "userName": {
                          "type": "string",
                          "description": "User name"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password credential."
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "discriminator": "type"
                    },
                    "targetConnectionInfo": {
                      "description": "Information for connecting to target",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of connection info"
                        },
                        "userName": {
                          "type": "string",
                          "description": "User name"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password credential."
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "discriminator": "type"
                    },
                    "databasesInfo": {
                      "type": "array",
                      "description": "List of DatabaseInfo",
                      "items": {
                        "type": "object",
                        "description": "Project Database Details",
                        "properties": {
                          "sourceDatabaseName": {
                            "type": "string",
                            "description": "Name of the database"
                          }
                        },
                        "required": [
                          "sourceDatabaseName"
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The project's provisioning state",
                      "enum": [
                        "Deleting",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "sourcePlatform",
                    "targetPlatform"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. This is ignored if submitted."
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete project",
        "description": "The project resource is a nested resource representing a stored migration project. The DELETE method deletes a project.",
        "tags": [
          "Project resource",
          "Standard operation",
          "DELETE"
        ],
        "parameters": [
          {
            "name": "deleteRunningTasks",
            "description": "Delete the resource even if it contains running tasks",
            "in": "query",
            "required": false,
            "type": "boolean",
            "x-ms-parameter-location": "method"
          }
        ],
        "operationId": "Projects_Delete",
        "responses": {
          "200": {
            "description": "Project resource deleted"
          },
          "204": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "summary": "Update project",
        "description": "The project resource is a nested resource representing a stored migration project. The PATCH method updates an existing project.",
        "tags": [
          "Project resource",
          "Standard operation",
          "PATCH"
        ],
        "operationId": "Projects_Update",
        "parameters": [
          {
            "name": "parameters",
            "description": "Information about the project",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A project resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Project properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "sourcePlatform": {
                      "description": "Source platform for the project",
                      "type": "string",
                      "enum": [
                        "SQL",
                        "MySQL",
                        "PostgreSql",
                        "MongoDb",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectSourcePlatform",
                        "modelAsString": true
                      }
                    },
                    "azureAuthenticationInfo": {
                      "description": "Field that defines the Azure active directory application info, used to connect to the target Azure resource",
                      "type": "object",
                      "properties": {
                        "applicationId": {
                          "type": "string",
                          "description": "Application ID of the Azure Active Directory Application"
                        },
                        "appKey": {
                          "type": "string",
                          "description": "Key used to authenticate to the Azure Active Directory Application"
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Tenant id of the customer"
                        },
                        "ignoreAzurePermissions": {
                          "type": "boolean",
                          "description": "Ignore checking azure permissions on the AAD app"
                        }
                      }
                    },
                    "targetPlatform": {
                      "description": "Target platform for the project",
                      "type": "string",
                      "enum": [
                        "SQLDB",
                        "SQLMI",
                        "AzureDbForMySql",
                        "AzureDbForPostgreSql",
                        "MongoDb",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectTargetPlatform",
                        "modelAsString": true
                      }
                    },
                    "creationTime": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "UTC Date and time when project was created"
                    },
                    "sourceConnectionInfo": {
                      "description": "Information for connecting to source",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of connection info"
                        },
                        "userName": {
                          "type": "string",
                          "description": "User name"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password credential."
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "discriminator": "type"
                    },
                    "targetConnectionInfo": {
                      "description": "Information for connecting to target",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of connection info"
                        },
                        "userName": {
                          "type": "string",
                          "description": "User name"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password credential."
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "discriminator": "type"
                    },
                    "databasesInfo": {
                      "type": "array",
                      "description": "List of DatabaseInfo",
                      "items": {
                        "type": "object",
                        "description": "Project Database Details",
                        "properties": {
                          "sourceDatabaseName": {
                            "type": "string",
                            "description": "Name of the database"
                          }
                        },
                        "required": [
                          "sourceDatabaseName"
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The project's provisioning state",
                      "enum": [
                        "Deleting",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "sourcePlatform",
                    "targetPlatform"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. This is ignored if submitted."
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Project resource updated",
            "schema": {
              "type": "object",
              "description": "A project resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Project properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "sourcePlatform": {
                      "description": "Source platform for the project",
                      "type": "string",
                      "enum": [
                        "SQL",
                        "MySQL",
                        "PostgreSql",
                        "MongoDb",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectSourcePlatform",
                        "modelAsString": true
                      }
                    },
                    "azureAuthenticationInfo": {
                      "description": "Field that defines the Azure active directory application info, used to connect to the target Azure resource",
                      "type": "object",
                      "properties": {
                        "applicationId": {
                          "type": "string",
                          "description": "Application ID of the Azure Active Directory Application"
                        },
                        "appKey": {
                          "type": "string",
                          "description": "Key used to authenticate to the Azure Active Directory Application"
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Tenant id of the customer"
                        },
                        "ignoreAzurePermissions": {
                          "type": "boolean",
                          "description": "Ignore checking azure permissions on the AAD app"
                        }
                      }
                    },
                    "targetPlatform": {
                      "description": "Target platform for the project",
                      "type": "string",
                      "enum": [
                        "SQLDB",
                        "SQLMI",
                        "AzureDbForMySql",
                        "AzureDbForPostgreSql",
                        "MongoDb",
                        "Unknown"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectTargetPlatform",
                        "modelAsString": true
                      }
                    },
                    "creationTime": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "UTC Date and time when project was created"
                    },
                    "sourceConnectionInfo": {
                      "description": "Information for connecting to source",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of connection info"
                        },
                        "userName": {
                          "type": "string",
                          "description": "User name"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password credential."
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "discriminator": "type"
                    },
                    "targetConnectionInfo": {
                      "description": "Information for connecting to target",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Type of connection info"
                        },
                        "userName": {
                          "type": "string",
                          "description": "User name"
                        },
                        "password": {
                          "type": "string",
                          "description": "Password credential."
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "discriminator": "type"
                    },
                    "databasesInfo": {
                      "type": "array",
                      "description": "List of DatabaseInfo",
                      "items": {
                        "type": "object",
                        "description": "Project Database Details",
                        "properties": {
                          "sourceDatabaseName": {
                            "type": "string",
                            "description": "Name of the database"
                          }
                        },
                        "required": [
                          "sourceDatabaseName"
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The project's provisioning state",
                      "enum": [
                        "Deleting",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProjectProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "sourcePlatform",
                    "targetPlatform"
                  ]
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. This is ignored if submitted."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/locations/{location}/checkNameAvailability": {
      "post": {
        "summary": "Check name validity and availability",
        "description": "This method checks whether a proposed top-level resource name is valid and available.",
        "tags": [
          "Standard operation",
          "POST"
        ],
        "operationId": "Services_CheckNameAvailability",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "location",
            "description": "The Azure region of the operation",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "parameters",
            "description": "Requested name to validate",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A resource type and proposed name",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The proposed resource name"
                },
                "type": {
                  "type": "string",
                  "description": "The resource type chain (e.g. virtualMachines/extensions)"
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Name checked",
            "schema": {
              "type": "object",
              "description": "Indicates whether a proposed resource name is available",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "If true, the name is valid and available. If false, 'reason' describes why not."
                },
                "reason": {
                  "type": "string",
                  "description": "The reason why the name is not available, if nameAvailable is false",
                  "enum": [
                    "AlreadyExists",
                    "Invalid"
                  ],
                  "x-ms-enum": {
                    "name": "NameCheckFailureReason",
                    "modelAsString": true
                  }
                },
                "message": {
                  "type": "string",
                  "description": "The localized reason why the name is not available, if nameAvailable is false"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataMigration/locations/{location}/usages": {
      "get": {
        "summary": "Get resource quotas and usage information",
        "description": "This method returns region-specific quotas and resource usage information for the Azure Database Migration Service (classic).",
        "tags": [
          "Standard operation",
          "GET"
        ],
        "operationId": "Usages_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "location",
            "description": "The Azure region of the operation",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Quotas returned",
            "schema": {
              "type": "object",
              "description": "OData page of quota objects",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of quotas",
                  "items": {
                    "type": "object",
                    "description": "Describes a quota for or usage details about a resource",
                    "properties": {
                      "currentValue": {
                        "type": "number",
                        "format": "double",
                        "description": "The current value of the quota. If null or missing, the current value cannot be determined in the context of the request."
                      },
                      "id": {
                        "type": "string",
                        "description": "The resource ID of the quota object"
                      },
                      "limit": {
                        "type": "number",
                        "format": "double",
                        "description": "The maximum value of the quota. If null or missing, the quota has no maximum, in which case it merely tracks usage."
                      },
                      "name": {
                        "type": "object",
                        "description": "The name of the quota",
                        "properties": {
                          "localizedValue": {
                            "type": "string",
                            "description": "The localized name of the quota"
                          },
                          "value": {
                            "type": "string",
                            "description": "The unlocalized name (or ID) of the quota"
                          }
                        }
                      },
                      "unit": {
                        "type": "string",
                        "description": "The unit for the quota, such as Count, Bytes, BytesPerSecond, etc."
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to load the next page of quotas, or null or missing if this is the last page"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/files": {
      "get": {
        "summary": "Get files in a project",
        "description": "The project resource is a nested resource representing a stored migration project. This method returns a list of files owned by a project resource.",
        "tags": [
          "File resource",
          "Standard operation",
          "GET"
        ],
        "operationId": "Files_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "groupName",
            "description": "Name of the resource group",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "description": "Name of the service",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "projectName",
            "description": "Name of the project",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of files",
            "schema": {
              "type": "object",
              "description": "OData page of files",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of files",
                  "items": {
                    "type": "object",
                    "description": "A file resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "etag": {
                        "type": "string",
                        "description": "HTTP strong entity tag value. This is ignored if submitted."
                      },
                      "properties": {
                        "description": "Custom file properties",
                        "type": "object",
                        "properties": {
                          "extension": {
                            "description": "Optional File extension. If submitted it should not have a leading period and must match the extension from filePath.",
                            "type": "string"
                          },
                          "filePath": {
                            "description": "Relative path of this file resource. This property can be set when creating or updating the file resource.",
                            "type": "string"
                          },
                          "lastModified": {
                            "description": "Modification DateTime.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "mediaType": {
                            "description": "File content type. This property can be modified to reflect the file content type.",
                            "type": "string"
                          },
                          "size": {
                            "description": "File size.",
                            "type": "integer",
                            "format": "int64",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to load the next page of files"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/files/{fileName}": {
      "parameters": [
        {
          "name": "subscriptionId",
          "in": "path",
          "description": "Subscription ID that identifies an Azure subscription.",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "client"
        },
        {
          "name": "groupName",
          "description": "Name of the resource group",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "serviceName",
          "description": "Name of the service",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "projectName",
          "description": "Name of the project",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "fileName",
          "description": "Name of the File",
          "in": "path",
          "required": true,
          "type": "string",
          "x-ms-parameter-location": "method"
        },
        {
          "name": "api-version",
          "description": "Version of the API",
          "in": "query",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Get file information",
        "description": "The files resource is a nested, proxy-only resource representing a file stored under the project resource. This method retrieves information about a file.",
        "tags": [
          "File resource",
          "Standard operation",
          "GET"
        ],
        "operationId": "Files_Get",
        "responses": {
          "200": {
            "description": "A file resource",
            "schema": {
              "type": "object",
              "description": "A file resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. This is ignored if submitted."
                },
                "properties": {
                  "description": "Custom file properties",
                  "type": "object",
                  "properties": {
                    "extension": {
                      "description": "Optional File extension. If submitted it should not have a leading period and must match the extension from filePath.",
                      "type": "string"
                    },
                    "filePath": {
                      "description": "Relative path of this file resource. This property can be set when creating or updating the file resource.",
                      "type": "string"
                    },
                    "lastModified": {
                      "description": "Modification DateTime.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "mediaType": {
                      "description": "File content type. This property can be modified to reflect the file content type.",
                      "type": "string"
                    },
                    "size": {
                      "description": "File size.",
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Create a file resource",
        "description": "The PUT method creates a new file or updates an existing one.",
        "tags": [
          "Fie resource",
          "Standard operation",
          "PUT"
        ],
        "operationId": "Files_CreateOrUpdate",
        "parameters": [
          {
            "name": "parameters",
            "description": "Information about the file",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A file resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. This is ignored if submitted."
                },
                "properties": {
                  "description": "Custom file properties",
                  "type": "object",
                  "properties": {
                    "extension": {
                      "description": "Optional File extension. If submitted it should not have a leading period and must match the extension from filePath.",
                      "type": "string"
                    },
                    "filePath": {
                      "description": "Relative path of this file resource. This property can be set when creating or updating the file resource.",
                      "type": "string"
                    },
                    "lastModified": {
                      "description": "Modification DateTime.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "mediaType": {
                      "description": "File content type. This property can be modified to reflect the file content type.",
                      "type": "string"
                    },
                    "size": {
                      "description": "File size.",
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "File updated",
            "schema": {
              "type": "object",
              "description": "A file resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. This is ignored if submitted."
                },
                "properties": {
                  "description": "Custom file properties",
                  "type": "object",
                  "properties": {
                    "extension": {
                      "description": "Optional File extension. If submitted it should not have a leading period and must match the extension from filePath.",
                      "type": "string"
                    },
                    "filePath": {
                      "description": "Relative path of this file resource. This property can be set when creating or updating the file resource.",
                      "type": "string"
                    },
                    "lastModified": {
                      "description": "Modification DateTime.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "mediaType": {
                      "description": "File content type. This property can be modified to reflect the file content type.",
                      "type": "string"
                    },
                    "size": {
                      "description": "File size.",
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "File created",
            "schema": {
              "type": "object",
              "description": "A file resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. This is ignored if submitted."
                },
                "properties": {
                  "description": "Custom file properties",
                  "type": "object",
                  "properties": {
                    "extension": {
                      "description": "Optional File extension. If submitted it should not have a leading period and must match the extension from filePath.",
                      "type": "string"
                    },
                    "filePath": {
                      "description": "Relative path of this file resource. This property can be set when creating or updating the file resource.",
                      "type": "string"
                    },
                    "lastModified": {
                      "description": "Modification DateTime.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "mediaType": {
                      "description": "File content type. This property can be modified to reflect the file content type.",
                      "type": "string"
                    },
                    "size": {
                      "description": "File size.",
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete file",
        "description": "This method deletes a file.",
        "tags": [
          "File resource",
          "Standard operation",
          "DELETE"
        ],
        "operationId": "Files_Delete",
        "responses": {
          "200": {
            "description": "File resource deleted"
          },
          "204": {
            "description": "Not found"
          }
        }
      },
      "patch": {
        "summary": "Update a file",
        "description": "This method updates an existing file.",
        "tags": [
          "File resource",
          "Standard operation",
          "PATCH"
        ],
        "operationId": "Files_Update",
        "parameters": [
          {
            "name": "parameters",
            "description": "Information about the file",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A file resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. This is ignored if submitted."
                },
                "properties": {
                  "description": "Custom file properties",
                  "type": "object",
                  "properties": {
                    "extension": {
                      "description": "Optional File extension. If submitted it should not have a leading period and must match the extension from filePath.",
                      "type": "string"
                    },
                    "filePath": {
                      "description": "Relative path of this file resource. This property can be set when creating or updating the file resource.",
                      "type": "string"
                    },
                    "lastModified": {
                      "description": "Modification DateTime.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "mediaType": {
                      "description": "File content type. This property can be modified to reflect the file content type.",
                      "type": "string"
                    },
                    "size": {
                      "description": "File size.",
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "File resource updated",
            "schema": {
              "type": "object",
              "description": "A file resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "etag": {
                  "type": "string",
                  "description": "HTTP strong entity tag value. This is ignored if submitted."
                },
                "properties": {
                  "description": "Custom file properties",
                  "type": "object",
                  "properties": {
                    "extension": {
                      "description": "Optional File extension. If submitted it should not have a leading period and must match the extension from filePath.",
                      "type": "string"
                    },
                    "filePath": {
                      "description": "Relative path of this file resource. This property can be set when creating or updating the file resource.",
                      "type": "string"
                    },
                    "lastModified": {
                      "description": "Modification DateTime.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "mediaType": {
                      "description": "File content type. This property can be modified to reflect the file content type.",
                      "type": "string"
                    },
                    "size": {
                      "description": "File size.",
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/files/{fileName}/read": {
      "post": {
        "summary": "Request storage information for downloading the file content",
        "description": "This method is used for requesting storage information using which contents of the file can be downloaded.",
        "tags": [
          "File resource",
          "Standard operation",
          "POST"
        ],
        "operationId": "Files_Read",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "groupName",
            "description": "Name of the resource group",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "description": "Name of the service",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "projectName",
            "description": "Name of the project",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fileName",
            "description": "Name of the File",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An object describing how to access the file content",
            "schema": {
              "type": "object",
              "description": "File storage information.",
              "properties": {
                "uri": {
                  "description": "A URI that can be used to access the file content.",
                  "type": "string"
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.DataMigration/services/{serviceName}/projects/{projectName}/files/{fileName}/readwrite": {
      "post": {
        "summary": "Request information for reading and writing file content.",
        "description": "This method is used for requesting information for reading and writing the file content.",
        "tags": [
          "File resource",
          "Standard operation",
          "POST"
        ],
        "operationId": "Files_ReadWrite",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "Subscription ID that identifies an Azure subscription.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "client"
          },
          {
            "name": "groupName",
            "description": "Name of the resource group",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serviceName",
            "description": "Name of the service",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "projectName",
            "description": "Name of the project",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "fileName",
            "description": "Name of the File",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "description": "Version of the API",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An object describing how to access the file content",
            "schema": {
              "type": "object",
              "description": "File storage information.",
              "properties": {
                "uri": {
                  "description": "A URI that can be used to access the file content.",
                  "type": "string"
                },
                "headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {},
  "parameters": {
    "apiVersion": {
      "name": "api-version",
      "description": "Version of the API",
      "in": "query",
      "required": true,
      "type": "string"
    },
    "deleteRunningTasks": {
      "name": "deleteRunningTasks",
      "description": "Delete the resource even if it contains running tasks",
      "in": "query",
      "required": false,
      "type": "boolean",
      "x-ms-parameter-location": "method"
    },
    "groupName": {
      "name": "groupName",
      "description": "Name of the resource group",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "location": {
      "name": "location",
      "description": "The Azure region of the operation",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "project": {
      "name": "parameters",
      "description": "Information about the project",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "description": "A project resource",
        "properties": {
          "id": {
            "type": "string",
            "format": "arm-id",
            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The name of the resource",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
            "readOnly": true
          },
          "systemData": {
            "description": "Metadata pertaining to creation and last modification of the resource.",
            "readOnly": true,
            "type": "object",
            "properties": {
              "createdBy": {
                "type": "string",
                "description": "The identity that created the resource."
              },
              "createdByType": {
                "type": "string",
                "description": "The type of identity that created the resource.",
                "enum": [
                  "User",
                  "Application",
                  "ManagedIdentity",
                  "Key"
                ],
                "x-ms-enum": {
                  "name": "createdByType",
                  "modelAsString": true
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp of resource creation (UTC)."
              },
              "lastModifiedBy": {
                "type": "string",
                "description": "The identity that last modified the resource."
              },
              "lastModifiedByType": {
                "type": "string",
                "description": "The type of identity that last modified the resource.",
                "enum": [
                  "User",
                  "Application",
                  "ManagedIdentity",
                  "Key"
                ],
                "x-ms-enum": {
                  "name": "createdByType",
                  "modelAsString": true
                }
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp of resource last modification (UTC)"
              }
            }
          },
          "tags": {
            "type": "object",
            "description": "Resource tags.",
            "additionalProperties": {
              "type": "string"
            },
            "x-ms-mutability": [
              "read",
              "create",
              "update"
            ]
          },
          "location": {
            "type": "string",
            "description": "The geo-location where the resource lives",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "properties": {
            "description": "Project properties",
            "x-ms-client-flatten": true,
            "type": "object",
            "properties": {
              "sourcePlatform": {
                "description": "Source platform for the project",
                "type": "string",
                "enum": [
                  "SQL",
                  "MySQL",
                  "PostgreSql",
                  "MongoDb",
                  "Unknown"
                ],
                "x-ms-enum": {
                  "name": "ProjectSourcePlatform",
                  "modelAsString": true
                }
              },
              "azureAuthenticationInfo": {
                "description": "Field that defines the Azure active directory application info, used to connect to the target Azure resource",
                "type": "object",
                "properties": {
                  "applicationId": {
                    "type": "string",
                    "description": "Application ID of the Azure Active Directory Application"
                  },
                  "appKey": {
                    "type": "string",
                    "description": "Key used to authenticate to the Azure Active Directory Application"
                  },
                  "tenantId": {
                    "type": "string",
                    "description": "Tenant id of the customer"
                  },
                  "ignoreAzurePermissions": {
                    "type": "boolean",
                    "description": "Ignore checking azure permissions on the AAD app"
                  }
                }
              },
              "targetPlatform": {
                "description": "Target platform for the project",
                "type": "string",
                "enum": [
                  "SQLDB",
                  "SQLMI",
                  "AzureDbForMySql",
                  "AzureDbForPostgreSql",
                  "MongoDb",
                  "Unknown"
                ],
                "x-ms-enum": {
                  "name": "ProjectTargetPlatform",
                  "modelAsString": true
                }
              },
              "creationTime": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "description": "UTC Date and time when project was created"
              },
              "sourceConnectionInfo": {
                "description": "Information for connecting to source",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of connection info"
                  },
                  "userName": {
                    "type": "string",
                    "description": "User name"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password credential."
                  }
                },
                "required": [
                  "type"
                ],
                "discriminator": "type"
              },
              "targetConnectionInfo": {
                "description": "Information for connecting to target",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of connection info"
                  },
                  "userName": {
                    "type": "string",
                    "description": "User name"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password credential."
                  }
                },
                "required": [
                  "type"
                ],
                "discriminator": "type"
              },
              "databasesInfo": {
                "type": "array",
                "description": "List of DatabaseInfo",
                "items": {
                  "type": "object",
                  "description": "Project Database Details",
                  "properties": {
                    "sourceDatabaseName": {
                      "type": "string",
                      "description": "Name of the database"
                    }
                  },
                  "required": [
                    "sourceDatabaseName"
                  ]
                }
              },
              "provisioningState": {
                "type": "string",
                "readOnly": true,
                "description": "The project's provisioning state",
                "enum": [
                  "Deleting",
                  "Succeeded"
                ],
                "x-ms-enum": {
                  "name": "ProjectProvisioningState",
                  "modelAsString": true
                }
              }
            },
            "required": [
              "sourcePlatform",
              "targetPlatform"
            ]
          },
          "etag": {
            "type": "string",
            "description": "HTTP strong entity tag value. This is ignored if submitted."
          }
        }
      },
      "x-ms-parameter-location": "method"
    },
    "projectName": {
      "name": "projectName",
      "description": "Name of the project",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "requestedName": {
      "name": "parameters",
      "description": "Requested name to validate",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "description": "A resource type and proposed name",
        "properties": {
          "name": {
            "type": "string",
            "description": "The proposed resource name"
          },
          "type": {
            "type": "string",
            "description": "The resource type chain (e.g. virtualMachines/extensions)"
          }
        }
      },
      "x-ms-parameter-location": "method"
    },
    "taskName": {
      "name": "taskName",
      "description": "Name of the Task",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "taskType": {
      "name": "taskType",
      "description": "Filter tasks by task type",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "service": {
      "name": "parameters",
      "description": "Information about the service",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "description": "An Azure Database Migration Service (classic) resource",
        "properties": {
          "id": {
            "type": "string",
            "format": "arm-id",
            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The name of the resource",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
            "readOnly": true
          },
          "systemData": {
            "description": "Metadata pertaining to creation and last modification of the resource.",
            "readOnly": true,
            "type": "object",
            "properties": {
              "createdBy": {
                "type": "string",
                "description": "The identity that created the resource."
              },
              "createdByType": {
                "type": "string",
                "description": "The type of identity that created the resource.",
                "enum": [
                  "User",
                  "Application",
                  "ManagedIdentity",
                  "Key"
                ],
                "x-ms-enum": {
                  "name": "createdByType",
                  "modelAsString": true
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp of resource creation (UTC)."
              },
              "lastModifiedBy": {
                "type": "string",
                "description": "The identity that last modified the resource."
              },
              "lastModifiedByType": {
                "type": "string",
                "description": "The type of identity that last modified the resource.",
                "enum": [
                  "User",
                  "Application",
                  "ManagedIdentity",
                  "Key"
                ],
                "x-ms-enum": {
                  "name": "createdByType",
                  "modelAsString": true
                }
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp of resource last modification (UTC)"
              }
            }
          },
          "tags": {
            "type": "object",
            "description": "Resource tags.",
            "additionalProperties": {
              "type": "string"
            },
            "x-ms-mutability": [
              "read",
              "create",
              "update"
            ]
          },
          "location": {
            "type": "string",
            "description": "The geo-location where the resource lives",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "etag": {
            "type": "string",
            "description": "HTTP strong entity tag value. Ignored if submitted"
          },
          "kind": {
            "type": "string",
            "description": "The resource kind. Only 'vm' (the default) is supported."
          },
          "properties": {
            "x-ms-client-flatten": true,
            "description": "Custom service properties",
            "type": "object",
            "properties": {
              "provisioningState": {
                "type": "string",
                "readOnly": true,
                "description": "The resource's provisioning state",
                "enum": [
                  "Accepted",
                  "Deleting",
                  "Deploying",
                  "Stopped",
                  "Stopping",
                  "Starting",
                  "FailedToStart",
                  "FailedToStop",
                  "Succeeded",
                  "Failed"
                ],
                "x-ms-enum": {
                  "name": "ServiceProvisioningState",
                  "modelAsString": true
                }
              },
              "publicKey": {
                "type": "string",
                "description": "The public key of the service, used to encrypt secrets sent to the service"
              },
              "virtualSubnetId": {
                "type": "string",
                "description": "The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined"
              },
              "virtualNicId": {
                "type": "string",
                "description": "The ID of the Microsoft.Network/networkInterfaces resource which the service have"
              },
              "autoStopDelay": {
                "type": "string",
                "description": "The time delay before the service is auto-stopped when idle."
              },
              "deleteResourcesOnStop": {
                "type": "boolean",
                "description": "Whether service resources should be deleted when stopped. (Turned on by default)"
              }
            }
          },
          "sku": {
            "description": "Service SKU",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The unique name of the SKU, such as 'P3'"
              },
              "tier": {
                "type": "string",
                "description": "The tier of the SKU, such as 'Basic', 'General Purpose', or 'Business Critical'"
              },
              "family": {
                "type": "string",
                "description": "The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines"
              },
              "size": {
                "type": "string",
                "description": "The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines"
              },
              "capacity": {
                "type": "integer",
                "description": "The capacity of the SKU, if it supports scaling"
              }
            }
          }
        }
      },
      "x-ms-parameter-location": "method"
    },
    "serviceName": {
      "name": "serviceName",
      "description": "Name of the service",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "projectTask": {
      "name": "parameters",
      "description": "Information about the task",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "./definitions/Tasks.json#/definitions/ProjectTask"
      },
      "x-ms-parameter-location": "method"
    },
    "timeoutMs": {
      "name": "timeoutMs",
      "description": "The number of milliseconds the task is allowed to run, up to 20000",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "command": {
      "name": "parameters",
      "description": "Command to execute",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "./definitions/Commands.json#/definitions/CommandProperties"
      },
      "x-ms-parameter-location": "method"
    },
    "projectFile": {
      "name": "parameters",
      "description": "Information about the file",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "description": "A file resource",
        "properties": {
          "id": {
            "type": "string",
            "format": "arm-id",
            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The name of the resource",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
            "readOnly": true
          },
          "systemData": {
            "description": "Metadata pertaining to creation and last modification of the resource.",
            "readOnly": true,
            "type": "object",
            "properties": {
              "createdBy": {
                "type": "string",
                "description": "The identity that created the resource."
              },
              "createdByType": {
                "type": "string",
                "description": "The type of identity that created the resource.",
                "enum": [
                  "User",
                  "Application",
                  "ManagedIdentity",
                  "Key"
                ],
                "x-ms-enum": {
                  "name": "createdByType",
                  "modelAsString": true
                }
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp of resource creation (UTC)."
              },
              "lastModifiedBy": {
                "type": "string",
                "description": "The identity that last modified the resource."
              },
              "lastModifiedByType": {
                "type": "string",
                "description": "The type of identity that last modified the resource.",
                "enum": [
                  "User",
                  "Application",
                  "ManagedIdentity",
                  "Key"
                ],
                "x-ms-enum": {
                  "name": "createdByType",
                  "modelAsString": true
                }
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp of resource last modification (UTC)"
              }
            }
          },
          "etag": {
            "type": "string",
            "description": "HTTP strong entity tag value. This is ignored if submitted."
          },
          "properties": {
            "description": "Custom file properties",
            "type": "object",
            "properties": {
              "extension": {
                "description": "Optional File extension. If submitted it should not have a leading period and must match the extension from filePath.",
                "type": "string"
              },
              "filePath": {
                "description": "Relative path of this file resource. This property can be set when creating or updating the file resource.",
                "type": "string"
              },
              "lastModified": {
                "description": "Modification DateTime.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "mediaType": {
                "description": "File content type. This property can be modified to reflect the file content type.",
                "type": "string"
              },
              "size": {
                "description": "File size.",
                "type": "integer",
                "format": "int64",
                "readOnly": true
              }
            }
          }
        }
      },
      "x-ms-parameter-location": "method"
    },
    "fileName": {
      "name": "fileName",
      "description": "Name of the File",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}