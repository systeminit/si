{
  "swagger": "2.0",
  "info": {
    "title": "Azure app",
    "version": "2025-07-01",
    "description": "Azure app service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/authConfigs": {
      "get": {
        "tags": [
          "ContainerAppsAuthConfigs"
        ],
        "summary": "Get the Container App AuthConfigs in a given resource group.",
        "operationId": "ContainerAppsAuthConfigs_ListByContainerApp",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "AuthConfig collection ARM resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Configuration settings for the Azure ContainerApp Service Authentication / Authorization feature.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "AuthConfig resource specific properties",
                        "type": "object",
                        "properties": {
                          "platform": {
                            "description": "The configuration settings of the platform of ContainerApp Service Authentication/Authorization.",
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
                                "type": "boolean"
                              },
                              "runtimeVersion": {
                                "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
                                "type": "string"
                              }
                            }
                          },
                          "globalValidation": {
                            "description": "The configuration settings that determines the validation flow of users using  Service Authentication/Authorization.",
                            "type": "object",
                            "properties": {
                              "unauthenticatedClientAction": {
                                "description": "The action to take when an unauthenticated client attempts to access the app.",
                                "enum": [
                                  "RedirectToLoginPage",
                                  "AllowAnonymous",
                                  "Return401",
                                  "Return403"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "UnauthenticatedClientActionV2",
                                  "modelAsString": false
                                }
                              },
                              "redirectToProvider": {
                                "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\".",
                                "type": "string"
                              },
                              "excludedPaths": {
                                "description": "The paths for which unauthenticated flow would not be redirected to the login page.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "identityProviders": {
                            "description": "The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.",
                            "type": "object",
                            "properties": {
                              "azureActiveDirectory": {
                                "description": "The configuration settings of the Azure Active directory provider.",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "<code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                                    "type": "boolean"
                                  },
                                  "registration": {
                                    "description": "The configuration settings of the Azure Active Directory app registration.",
                                    "type": "object",
                                    "properties": {
                                      "openIdIssuer": {
                                        "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
                                        "type": "string"
                                      },
                                      "clientId": {
                                        "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
                                        "type": "string"
                                      },
                                      "clientSecretSettingName": {
                                        "description": "The app setting name that contains the client secret of the relying party application.",
                                        "type": "string"
                                      },
                                      "clientSecretCertificateThumbprint": {
                                        "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional.",
                                        "type": "string"
                                      },
                                      "clientSecretCertificateSubjectAlternativeName": {
                                        "description": "An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
                                        "type": "string"
                                      },
                                      "clientSecretCertificateIssuer": {
                                        "description": "An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "login": {
                                    "description": "The configuration settings of the Azure Active Directory login flow.",
                                    "type": "object",
                                    "properties": {
                                      "loginParameters": {
                                        "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "disableWWWAuthenticate": {
                                        "description": "<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "validation": {
                                    "description": "The configuration settings of the Azure Active Directory token validation flow.",
                                    "type": "object",
                                    "properties": {
                                      "jwtClaimChecks": {
                                        "description": "The configuration settings of the checks that should be made while validating the JWT Claims.",
                                        "type": "object",
                                        "properties": {
                                          "allowedGroups": {
                                            "description": "The list of the allowed groups.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "allowedClientApplications": {
                                            "description": "The list of the allowed client applications.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "allowedAudiences": {
                                        "description": "The list of audiences that can make successful authentication/authorization requests.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "defaultAuthorizationPolicy": {
                                        "description": "The configuration settings of the default authorization policy.",
                                        "type": "object",
                                        "properties": {
                                          "allowedPrincipals": {
                                            "description": "The configuration settings of the Azure Active Directory allowed principals.",
                                            "type": "object",
                                            "properties": {
                                              "groups": {
                                                "description": "The list of the allowed groups.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "identities": {
                                                "description": "The list of the allowed identities.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "allowedApplications": {
                                            "description": "The configuration settings of the Azure Active Directory allowed applications.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "isAutoProvisioned": {
                                    "description": "Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.\nThis is an internal flag primarily intended to support the Azure Management Portal. Users should not\nread or write to this property.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "facebook": {
                                "description": "The configuration settings of the Facebook provider.",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "<code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                                    "type": "boolean"
                                  },
                                  "registration": {
                                    "description": "The configuration settings of the app registration for the Facebook provider.",
                                    "type": "object",
                                    "properties": {
                                      "appId": {
                                        "description": "The App ID of the app used for login.",
                                        "type": "string"
                                      },
                                      "appSecretSettingName": {
                                        "description": "The app setting name that contains the app secret.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "graphApiVersion": {
                                    "description": "The version of the Facebook api to be used while logging in.",
                                    "type": "string"
                                  },
                                  "login": {
                                    "description": "The configuration settings of the login flow.",
                                    "type": "object",
                                    "properties": {
                                      "scopes": {
                                        "description": "A list of the scopes that should be requested while authenticating.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "gitHub": {
                                "description": "The configuration settings of the GitHub provider.",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "<code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                                    "type": "boolean"
                                  },
                                  "registration": {
                                    "description": "The configuration settings of the app registration for the GitHub provider.",
                                    "type": "object",
                                    "properties": {
                                      "clientId": {
                                        "description": "The Client ID of the app used for login.",
                                        "type": "string"
                                      },
                                      "clientSecretSettingName": {
                                        "description": "The app setting name that contains the client secret.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "login": {
                                    "description": "The configuration settings of the login flow.",
                                    "type": "object",
                                    "properties": {
                                      "scopes": {
                                        "description": "A list of the scopes that should be requested while authenticating.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "google": {
                                "description": "The configuration settings of the Google provider.",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                                    "type": "boolean"
                                  },
                                  "registration": {
                                    "description": "The configuration settings of the app registration for the Google provider.",
                                    "type": "object",
                                    "properties": {
                                      "clientId": {
                                        "description": "The Client ID of the app used for login.",
                                        "type": "string"
                                      },
                                      "clientSecretSettingName": {
                                        "description": "The app setting name that contains the client secret.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "login": {
                                    "description": "The configuration settings of the login flow.",
                                    "type": "object",
                                    "properties": {
                                      "scopes": {
                                        "description": "A list of the scopes that should be requested while authenticating.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "validation": {
                                    "description": "The configuration settings of the Azure Active Directory token validation flow.",
                                    "type": "object",
                                    "properties": {
                                      "allowedAudiences": {
                                        "description": "The configuration settings of the allowed list of audiences from which to validate the JWT token.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "twitter": {
                                "description": "The configuration settings of the Twitter provider.",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "<code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                                    "type": "boolean"
                                  },
                                  "registration": {
                                    "description": "The configuration settings of the app registration for the Twitter provider.",
                                    "type": "object",
                                    "properties": {
                                      "consumerKey": {
                                        "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
                                        "type": "string"
                                      },
                                      "consumerSecretSettingName": {
                                        "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "apple": {
                                "description": "The configuration settings of the Apple provider.",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "<code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                                    "type": "boolean"
                                  },
                                  "registration": {
                                    "description": "The configuration settings of the Apple registration.",
                                    "type": "object",
                                    "properties": {
                                      "clientId": {
                                        "description": "The Client ID of the app used for login.",
                                        "type": "string"
                                      },
                                      "clientSecretSettingName": {
                                        "description": "The app setting name that contains the client secret.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "login": {
                                    "description": "The configuration settings of the login flow.",
                                    "type": "object",
                                    "properties": {
                                      "scopes": {
                                        "description": "A list of the scopes that should be requested while authenticating.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "azureStaticWebApps": {
                                "description": "The configuration settings of the Azure Static Web Apps provider.",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "<code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                                    "type": "boolean"
                                  },
                                  "registration": {
                                    "description": "The configuration settings of the Azure Static Web Apps registration.",
                                    "type": "object",
                                    "properties": {
                                      "clientId": {
                                        "description": "The Client ID of the app used for login.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "customOpenIdConnectProviders": {
                                "description": "The map of the name of the alias of each custom Open ID Connect provider to the\nconfiguration settings of the custom Open ID Connect provider.",
                                "type": "object",
                                "additionalProperties": {
                                  "description": "The configuration settings of the custom Open ID Connect provider.",
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "description": "<code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.",
                                      "type": "boolean"
                                    },
                                    "registration": {
                                      "description": "The configuration settings of the app registration for the custom Open ID Connect provider.",
                                      "type": "object",
                                      "properties": {
                                        "clientId": {
                                          "description": "The client id of the custom Open ID Connect provider.",
                                          "type": "string"
                                        },
                                        "clientCredential": {
                                          "description": "The authentication credentials of the custom Open ID Connect provider.",
                                          "type": "object",
                                          "properties": {
                                            "method": {
                                              "description": "The method that should be used to authenticate the user.",
                                              "enum": [
                                                "ClientSecretPost"
                                              ],
                                              "type": "string",
                                              "x-ms-enum": {
                                                "name": "ClientCredentialMethod",
                                                "modelAsString": false
                                              }
                                            },
                                            "clientSecretSettingName": {
                                              "description": "The app setting that contains the client secret for the custom Open ID Connect provider.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "openIdConnectConfiguration": {
                                          "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider.",
                                          "type": "object",
                                          "properties": {
                                            "authorizationEndpoint": {
                                              "description": "The endpoint to be used to make an authorization request.",
                                              "type": "string"
                                            },
                                            "tokenEndpoint": {
                                              "description": "The endpoint to be used to request a token.",
                                              "type": "string"
                                            },
                                            "issuer": {
                                              "description": "The endpoint that issues the token.",
                                              "type": "string"
                                            },
                                            "certificationUri": {
                                              "description": "The endpoint that provides the keys necessary to validate the token.",
                                              "type": "string"
                                            },
                                            "wellKnownOpenIdConfiguration": {
                                              "description": "The endpoint that contains all the configuration endpoints for the provider.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "login": {
                                      "description": "The configuration settings of the login flow of the custom Open ID Connect provider.",
                                      "type": "object",
                                      "properties": {
                                        "nameClaimType": {
                                          "description": "The name of the claim that contains the users name.",
                                          "type": "string"
                                        },
                                        "scopes": {
                                          "description": "A list of the scopes that should be requested while authenticating.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "login": {
                            "description": "The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.",
                            "type": "object",
                            "properties": {
                              "routes": {
                                "description": "The routes that specify the endpoints used for login and logout requests.",
                                "type": "object",
                                "properties": {
                                  "logoutEndpoint": {
                                    "description": "The endpoint at which a logout request should be made.",
                                    "type": "string"
                                  }
                                }
                              },
                              "tokenStore": {
                                "description": "The configuration settings of the token store.",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
                                    "type": "boolean"
                                  },
                                  "tokenRefreshExtensionHours": {
                                    "format": "double",
                                    "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
                                    "type": "number"
                                  },
                                  "azureBlobStorage": {
                                    "description": "The configuration settings of the storage of the tokens if blob storage is used.",
                                    "type": "object",
                                    "required": [
                                      "sasUrlSettingName"
                                    ],
                                    "properties": {
                                      "sasUrlSettingName": {
                                        "description": "The name of the app secrets containing the SAS URL of the blob storage containing the tokens.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "preserveUrlFragmentsForLogins": {
                                "description": "<code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.",
                                "type": "boolean"
                              },
                              "allowedExternalRedirectUrls": {
                                "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "cookieExpiration": {
                                "description": "The configuration settings of the session cookie's expiration.",
                                "type": "object",
                                "properties": {
                                  "convention": {
                                    "description": "The convention used when determining the session cookie's expiration.",
                                    "enum": [
                                      "FixedTime",
                                      "IdentityProviderDerived"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "CookieExpirationConvention",
                                      "modelAsString": false
                                    }
                                  },
                                  "timeToExpiration": {
                                    "description": "The time after the request is made when the session cookie should expire.",
                                    "type": "string"
                                  }
                                }
                              },
                              "nonce": {
                                "description": "The configuration settings of the nonce used in the login flow.",
                                "type": "object",
                                "properties": {
                                  "validateNonce": {
                                    "description": "<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.",
                                    "type": "boolean"
                                  },
                                  "nonceExpirationInterval": {
                                    "description": "The time after the request is made when the nonce should expire.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "httpSettings": {
                            "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.",
                            "type": "object",
                            "properties": {
                              "requireHttps": {
                                "description": "<code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.",
                                "type": "boolean"
                              },
                              "routes": {
                                "description": "The configuration settings of the paths HTTP requests.",
                                "type": "object",
                                "properties": {
                                  "apiPrefix": {
                                    "description": "The prefix that should precede all the authentication/authorization paths.",
                                    "type": "string"
                                  }
                                }
                              },
                              "forwardProxy": {
                                "description": "The configuration settings of a forward proxy used to make the requests.",
                                "type": "object",
                                "properties": {
                                  "convention": {
                                    "description": "The convention used to determine the url of the request made.",
                                    "enum": [
                                      "NoProxy",
                                      "Standard",
                                      "Custom"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "ForwardProxyConvention",
                                      "modelAsString": false
                                    }
                                  },
                                  "customHostHeaderName": {
                                    "description": "The name of the header containing the host of the request.",
                                    "type": "string"
                                  },
                                  "customProtoHeaderName": {
                                    "description": "The name of the header containing the scheme of the request.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "encryptionSettings": {
                            "description": "The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization.",
                            "type": "object",
                            "properties": {
                              "containerAppAuthEncryptionSecretName": {
                                "description": "The secret name which is referenced for EncryptionKey.",
                                "type": "string"
                              },
                              "containerAppAuthSigningSecretName": {
                                "description": "The secret name which is referenced for SigningKey.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/authConfigs/{authConfigName}": {
      "get": {
        "tags": [
          "ContainerAppsAuthConfigs"
        ],
        "summary": "Get a AuthConfig of a Container App.",
        "operationId": "ContainerAppsAuthConfigs_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authConfigName",
            "in": "path",
            "description": "Name of the Container App AuthConfig.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Configuration settings for the Azure ContainerApp Service Authentication / Authorization feature.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "AuthConfig resource specific properties",
                  "type": "object",
                  "properties": {
                    "platform": {
                      "description": "The configuration settings of the platform of ContainerApp Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
                          "type": "boolean"
                        },
                        "runtimeVersion": {
                          "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
                          "type": "string"
                        }
                      }
                    },
                    "globalValidation": {
                      "description": "The configuration settings that determines the validation flow of users using  Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "unauthenticatedClientAction": {
                          "description": "The action to take when an unauthenticated client attempts to access the app.",
                          "enum": [
                            "RedirectToLoginPage",
                            "AllowAnonymous",
                            "Return401",
                            "Return403"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "UnauthenticatedClientActionV2",
                            "modelAsString": false
                          }
                        },
                        "redirectToProvider": {
                          "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\".",
                          "type": "string"
                        },
                        "excludedPaths": {
                          "description": "The paths for which unauthenticated flow would not be redirected to the login page.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "identityProviders": {
                      "description": "The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "azureActiveDirectory": {
                          "description": "The configuration settings of the Azure Active directory provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the Azure Active Directory app registration.",
                              "type": "object",
                              "properties": {
                                "openIdIssuer": {
                                  "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
                                  "type": "string"
                                },
                                "clientId": {
                                  "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
                                  "type": "string"
                                },
                                "clientSecretSettingName": {
                                  "description": "The app setting name that contains the client secret of the relying party application.",
                                  "type": "string"
                                },
                                "clientSecretCertificateThumbprint": {
                                  "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional.",
                                  "type": "string"
                                },
                                "clientSecretCertificateSubjectAlternativeName": {
                                  "description": "An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
                                  "type": "string"
                                },
                                "clientSecretCertificateIssuer": {
                                  "description": "An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
                                  "type": "string"
                                }
                              }
                            },
                            "login": {
                              "description": "The configuration settings of the Azure Active Directory login flow.",
                              "type": "object",
                              "properties": {
                                "loginParameters": {
                                  "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "disableWWWAuthenticate": {
                                  "description": "<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "validation": {
                              "description": "The configuration settings of the Azure Active Directory token validation flow.",
                              "type": "object",
                              "properties": {
                                "jwtClaimChecks": {
                                  "description": "The configuration settings of the checks that should be made while validating the JWT Claims.",
                                  "type": "object",
                                  "properties": {
                                    "allowedGroups": {
                                      "description": "The list of the allowed groups.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "allowedClientApplications": {
                                      "description": "The list of the allowed client applications.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "allowedAudiences": {
                                  "description": "The list of audiences that can make successful authentication/authorization requests.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "defaultAuthorizationPolicy": {
                                  "description": "The configuration settings of the default authorization policy.",
                                  "type": "object",
                                  "properties": {
                                    "allowedPrincipals": {
                                      "description": "The configuration settings of the Azure Active Directory allowed principals.",
                                      "type": "object",
                                      "properties": {
                                        "groups": {
                                          "description": "The list of the allowed groups.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "identities": {
                                          "description": "The list of the allowed identities.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "allowedApplications": {
                                      "description": "The configuration settings of the Azure Active Directory allowed applications.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "isAutoProvisioned": {
                              "description": "Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.\nThis is an internal flag primarily intended to support the Azure Management Portal. Users should not\nread or write to this property.",
                              "type": "boolean"
                            }
                          }
                        },
                        "facebook": {
                          "description": "The configuration settings of the Facebook provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the app registration for the Facebook provider.",
                              "type": "object",
                              "properties": {
                                "appId": {
                                  "description": "The App ID of the app used for login.",
                                  "type": "string"
                                },
                                "appSecretSettingName": {
                                  "description": "The app setting name that contains the app secret.",
                                  "type": "string"
                                }
                              }
                            },
                            "graphApiVersion": {
                              "description": "The version of the Facebook api to be used while logging in.",
                              "type": "string"
                            },
                            "login": {
                              "description": "The configuration settings of the login flow.",
                              "type": "object",
                              "properties": {
                                "scopes": {
                                  "description": "A list of the scopes that should be requested while authenticating.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "gitHub": {
                          "description": "The configuration settings of the GitHub provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the app registration for the GitHub provider.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "description": "The Client ID of the app used for login.",
                                  "type": "string"
                                },
                                "clientSecretSettingName": {
                                  "description": "The app setting name that contains the client secret.",
                                  "type": "string"
                                }
                              }
                            },
                            "login": {
                              "description": "The configuration settings of the login flow.",
                              "type": "object",
                              "properties": {
                                "scopes": {
                                  "description": "A list of the scopes that should be requested while authenticating.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "google": {
                          "description": "The configuration settings of the Google provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the app registration for the Google provider.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "description": "The Client ID of the app used for login.",
                                  "type": "string"
                                },
                                "clientSecretSettingName": {
                                  "description": "The app setting name that contains the client secret.",
                                  "type": "string"
                                }
                              }
                            },
                            "login": {
                              "description": "The configuration settings of the login flow.",
                              "type": "object",
                              "properties": {
                                "scopes": {
                                  "description": "A list of the scopes that should be requested while authenticating.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "validation": {
                              "description": "The configuration settings of the Azure Active Directory token validation flow.",
                              "type": "object",
                              "properties": {
                                "allowedAudiences": {
                                  "description": "The configuration settings of the allowed list of audiences from which to validate the JWT token.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "twitter": {
                          "description": "The configuration settings of the Twitter provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the app registration for the Twitter provider.",
                              "type": "object",
                              "properties": {
                                "consumerKey": {
                                  "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
                                  "type": "string"
                                },
                                "consumerSecretSettingName": {
                                  "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "apple": {
                          "description": "The configuration settings of the Apple provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the Apple registration.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "description": "The Client ID of the app used for login.",
                                  "type": "string"
                                },
                                "clientSecretSettingName": {
                                  "description": "The app setting name that contains the client secret.",
                                  "type": "string"
                                }
                              }
                            },
                            "login": {
                              "description": "The configuration settings of the login flow.",
                              "type": "object",
                              "properties": {
                                "scopes": {
                                  "description": "A list of the scopes that should be requested while authenticating.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "azureStaticWebApps": {
                          "description": "The configuration settings of the Azure Static Web Apps provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the Azure Static Web Apps registration.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "description": "The Client ID of the app used for login.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "customOpenIdConnectProviders": {
                          "description": "The map of the name of the alias of each custom Open ID Connect provider to the\nconfiguration settings of the custom Open ID Connect provider.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "The configuration settings of the custom Open ID Connect provider.",
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "<code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.",
                                "type": "boolean"
                              },
                              "registration": {
                                "description": "The configuration settings of the app registration for the custom Open ID Connect provider.",
                                "type": "object",
                                "properties": {
                                  "clientId": {
                                    "description": "The client id of the custom Open ID Connect provider.",
                                    "type": "string"
                                  },
                                  "clientCredential": {
                                    "description": "The authentication credentials of the custom Open ID Connect provider.",
                                    "type": "object",
                                    "properties": {
                                      "method": {
                                        "description": "The method that should be used to authenticate the user.",
                                        "enum": [
                                          "ClientSecretPost"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "ClientCredentialMethod",
                                          "modelAsString": false
                                        }
                                      },
                                      "clientSecretSettingName": {
                                        "description": "The app setting that contains the client secret for the custom Open ID Connect provider.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "openIdConnectConfiguration": {
                                    "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider.",
                                    "type": "object",
                                    "properties": {
                                      "authorizationEndpoint": {
                                        "description": "The endpoint to be used to make an authorization request.",
                                        "type": "string"
                                      },
                                      "tokenEndpoint": {
                                        "description": "The endpoint to be used to request a token.",
                                        "type": "string"
                                      },
                                      "issuer": {
                                        "description": "The endpoint that issues the token.",
                                        "type": "string"
                                      },
                                      "certificationUri": {
                                        "description": "The endpoint that provides the keys necessary to validate the token.",
                                        "type": "string"
                                      },
                                      "wellKnownOpenIdConfiguration": {
                                        "description": "The endpoint that contains all the configuration endpoints for the provider.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "login": {
                                "description": "The configuration settings of the login flow of the custom Open ID Connect provider.",
                                "type": "object",
                                "properties": {
                                  "nameClaimType": {
                                    "description": "The name of the claim that contains the users name.",
                                    "type": "string"
                                  },
                                  "scopes": {
                                    "description": "A list of the scopes that should be requested while authenticating.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "login": {
                      "description": "The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "routes": {
                          "description": "The routes that specify the endpoints used for login and logout requests.",
                          "type": "object",
                          "properties": {
                            "logoutEndpoint": {
                              "description": "The endpoint at which a logout request should be made.",
                              "type": "string"
                            }
                          }
                        },
                        "tokenStore": {
                          "description": "The configuration settings of the token store.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
                              "type": "boolean"
                            },
                            "tokenRefreshExtensionHours": {
                              "format": "double",
                              "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
                              "type": "number"
                            },
                            "azureBlobStorage": {
                              "description": "The configuration settings of the storage of the tokens if blob storage is used.",
                              "type": "object",
                              "required": [
                                "sasUrlSettingName"
                              ],
                              "properties": {
                                "sasUrlSettingName": {
                                  "description": "The name of the app secrets containing the SAS URL of the blob storage containing the tokens.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "preserveUrlFragmentsForLogins": {
                          "description": "<code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.",
                          "type": "boolean"
                        },
                        "allowedExternalRedirectUrls": {
                          "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "cookieExpiration": {
                          "description": "The configuration settings of the session cookie's expiration.",
                          "type": "object",
                          "properties": {
                            "convention": {
                              "description": "The convention used when determining the session cookie's expiration.",
                              "enum": [
                                "FixedTime",
                                "IdentityProviderDerived"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "CookieExpirationConvention",
                                "modelAsString": false
                              }
                            },
                            "timeToExpiration": {
                              "description": "The time after the request is made when the session cookie should expire.",
                              "type": "string"
                            }
                          }
                        },
                        "nonce": {
                          "description": "The configuration settings of the nonce used in the login flow.",
                          "type": "object",
                          "properties": {
                            "validateNonce": {
                              "description": "<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "nonceExpirationInterval": {
                              "description": "The time after the request is made when the nonce should expire.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "httpSettings": {
                      "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "requireHttps": {
                          "description": "<code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.",
                          "type": "boolean"
                        },
                        "routes": {
                          "description": "The configuration settings of the paths HTTP requests.",
                          "type": "object",
                          "properties": {
                            "apiPrefix": {
                              "description": "The prefix that should precede all the authentication/authorization paths.",
                              "type": "string"
                            }
                          }
                        },
                        "forwardProxy": {
                          "description": "The configuration settings of a forward proxy used to make the requests.",
                          "type": "object",
                          "properties": {
                            "convention": {
                              "description": "The convention used to determine the url of the request made.",
                              "enum": [
                                "NoProxy",
                                "Standard",
                                "Custom"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "ForwardProxyConvention",
                                "modelAsString": false
                              }
                            },
                            "customHostHeaderName": {
                              "description": "The name of the header containing the host of the request.",
                              "type": "string"
                            },
                            "customProtoHeaderName": {
                              "description": "The name of the header containing the scheme of the request.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "encryptionSettings": {
                      "description": "The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "containerAppAuthEncryptionSecretName": {
                          "description": "The secret name which is referenced for EncryptionKey.",
                          "type": "string"
                        },
                        "containerAppAuthSigningSecretName": {
                          "description": "The secret name which is referenced for SigningKey.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContainerAppsAuthConfigs"
        ],
        "summary": "Create or update the AuthConfig for a Container App.",
        "description": "Create or update the AuthConfig for a Container App.",
        "operationId": "ContainerAppsAuthConfigs_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authConfigName",
            "in": "path",
            "description": "Name of the Container App AuthConfig.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authConfigEnvelope",
            "in": "body",
            "description": "Properties used to create a Container App AuthConfig",
            "required": true,
            "schema": {
              "description": "Configuration settings for the Azure ContainerApp Service Authentication / Authorization feature.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "AuthConfig resource specific properties",
                  "type": "object",
                  "properties": {
                    "platform": {
                      "description": "The configuration settings of the platform of ContainerApp Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
                          "type": "boolean"
                        },
                        "runtimeVersion": {
                          "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
                          "type": "string"
                        }
                      }
                    },
                    "globalValidation": {
                      "description": "The configuration settings that determines the validation flow of users using  Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "unauthenticatedClientAction": {
                          "description": "The action to take when an unauthenticated client attempts to access the app.",
                          "enum": [
                            "RedirectToLoginPage",
                            "AllowAnonymous",
                            "Return401",
                            "Return403"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "UnauthenticatedClientActionV2",
                            "modelAsString": false
                          }
                        },
                        "redirectToProvider": {
                          "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\".",
                          "type": "string"
                        },
                        "excludedPaths": {
                          "description": "The paths for which unauthenticated flow would not be redirected to the login page.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "identityProviders": {
                      "description": "The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "azureActiveDirectory": {
                          "description": "The configuration settings of the Azure Active directory provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the Azure Active Directory app registration.",
                              "type": "object",
                              "properties": {
                                "openIdIssuer": {
                                  "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
                                  "type": "string"
                                },
                                "clientId": {
                                  "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
                                  "type": "string"
                                },
                                "clientSecretSettingName": {
                                  "description": "The app setting name that contains the client secret of the relying party application.",
                                  "type": "string"
                                },
                                "clientSecretCertificateThumbprint": {
                                  "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional.",
                                  "type": "string"
                                },
                                "clientSecretCertificateSubjectAlternativeName": {
                                  "description": "An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
                                  "type": "string"
                                },
                                "clientSecretCertificateIssuer": {
                                  "description": "An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
                                  "type": "string"
                                }
                              }
                            },
                            "login": {
                              "description": "The configuration settings of the Azure Active Directory login flow.",
                              "type": "object",
                              "properties": {
                                "loginParameters": {
                                  "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "disableWWWAuthenticate": {
                                  "description": "<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "validation": {
                              "description": "The configuration settings of the Azure Active Directory token validation flow.",
                              "type": "object",
                              "properties": {
                                "jwtClaimChecks": {
                                  "description": "The configuration settings of the checks that should be made while validating the JWT Claims.",
                                  "type": "object",
                                  "properties": {
                                    "allowedGroups": {
                                      "description": "The list of the allowed groups.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "allowedClientApplications": {
                                      "description": "The list of the allowed client applications.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "allowedAudiences": {
                                  "description": "The list of audiences that can make successful authentication/authorization requests.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "defaultAuthorizationPolicy": {
                                  "description": "The configuration settings of the default authorization policy.",
                                  "type": "object",
                                  "properties": {
                                    "allowedPrincipals": {
                                      "description": "The configuration settings of the Azure Active Directory allowed principals.",
                                      "type": "object",
                                      "properties": {
                                        "groups": {
                                          "description": "The list of the allowed groups.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "identities": {
                                          "description": "The list of the allowed identities.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "allowedApplications": {
                                      "description": "The configuration settings of the Azure Active Directory allowed applications.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "isAutoProvisioned": {
                              "description": "Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.\nThis is an internal flag primarily intended to support the Azure Management Portal. Users should not\nread or write to this property.",
                              "type": "boolean"
                            }
                          }
                        },
                        "facebook": {
                          "description": "The configuration settings of the Facebook provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the app registration for the Facebook provider.",
                              "type": "object",
                              "properties": {
                                "appId": {
                                  "description": "The App ID of the app used for login.",
                                  "type": "string"
                                },
                                "appSecretSettingName": {
                                  "description": "The app setting name that contains the app secret.",
                                  "type": "string"
                                }
                              }
                            },
                            "graphApiVersion": {
                              "description": "The version of the Facebook api to be used while logging in.",
                              "type": "string"
                            },
                            "login": {
                              "description": "The configuration settings of the login flow.",
                              "type": "object",
                              "properties": {
                                "scopes": {
                                  "description": "A list of the scopes that should be requested while authenticating.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "gitHub": {
                          "description": "The configuration settings of the GitHub provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the app registration for the GitHub provider.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "description": "The Client ID of the app used for login.",
                                  "type": "string"
                                },
                                "clientSecretSettingName": {
                                  "description": "The app setting name that contains the client secret.",
                                  "type": "string"
                                }
                              }
                            },
                            "login": {
                              "description": "The configuration settings of the login flow.",
                              "type": "object",
                              "properties": {
                                "scopes": {
                                  "description": "A list of the scopes that should be requested while authenticating.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "google": {
                          "description": "The configuration settings of the Google provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the app registration for the Google provider.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "description": "The Client ID of the app used for login.",
                                  "type": "string"
                                },
                                "clientSecretSettingName": {
                                  "description": "The app setting name that contains the client secret.",
                                  "type": "string"
                                }
                              }
                            },
                            "login": {
                              "description": "The configuration settings of the login flow.",
                              "type": "object",
                              "properties": {
                                "scopes": {
                                  "description": "A list of the scopes that should be requested while authenticating.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "validation": {
                              "description": "The configuration settings of the Azure Active Directory token validation flow.",
                              "type": "object",
                              "properties": {
                                "allowedAudiences": {
                                  "description": "The configuration settings of the allowed list of audiences from which to validate the JWT token.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "twitter": {
                          "description": "The configuration settings of the Twitter provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the app registration for the Twitter provider.",
                              "type": "object",
                              "properties": {
                                "consumerKey": {
                                  "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
                                  "type": "string"
                                },
                                "consumerSecretSettingName": {
                                  "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "apple": {
                          "description": "The configuration settings of the Apple provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the Apple registration.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "description": "The Client ID of the app used for login.",
                                  "type": "string"
                                },
                                "clientSecretSettingName": {
                                  "description": "The app setting name that contains the client secret.",
                                  "type": "string"
                                }
                              }
                            },
                            "login": {
                              "description": "The configuration settings of the login flow.",
                              "type": "object",
                              "properties": {
                                "scopes": {
                                  "description": "A list of the scopes that should be requested while authenticating.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "azureStaticWebApps": {
                          "description": "The configuration settings of the Azure Static Web Apps provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the Azure Static Web Apps registration.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "description": "The Client ID of the app used for login.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "customOpenIdConnectProviders": {
                          "description": "The map of the name of the alias of each custom Open ID Connect provider to the\nconfiguration settings of the custom Open ID Connect provider.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "The configuration settings of the custom Open ID Connect provider.",
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "<code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.",
                                "type": "boolean"
                              },
                              "registration": {
                                "description": "The configuration settings of the app registration for the custom Open ID Connect provider.",
                                "type": "object",
                                "properties": {
                                  "clientId": {
                                    "description": "The client id of the custom Open ID Connect provider.",
                                    "type": "string"
                                  },
                                  "clientCredential": {
                                    "description": "The authentication credentials of the custom Open ID Connect provider.",
                                    "type": "object",
                                    "properties": {
                                      "method": {
                                        "description": "The method that should be used to authenticate the user.",
                                        "enum": [
                                          "ClientSecretPost"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "ClientCredentialMethod",
                                          "modelAsString": false
                                        }
                                      },
                                      "clientSecretSettingName": {
                                        "description": "The app setting that contains the client secret for the custom Open ID Connect provider.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "openIdConnectConfiguration": {
                                    "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider.",
                                    "type": "object",
                                    "properties": {
                                      "authorizationEndpoint": {
                                        "description": "The endpoint to be used to make an authorization request.",
                                        "type": "string"
                                      },
                                      "tokenEndpoint": {
                                        "description": "The endpoint to be used to request a token.",
                                        "type": "string"
                                      },
                                      "issuer": {
                                        "description": "The endpoint that issues the token.",
                                        "type": "string"
                                      },
                                      "certificationUri": {
                                        "description": "The endpoint that provides the keys necessary to validate the token.",
                                        "type": "string"
                                      },
                                      "wellKnownOpenIdConfiguration": {
                                        "description": "The endpoint that contains all the configuration endpoints for the provider.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "login": {
                                "description": "The configuration settings of the login flow of the custom Open ID Connect provider.",
                                "type": "object",
                                "properties": {
                                  "nameClaimType": {
                                    "description": "The name of the claim that contains the users name.",
                                    "type": "string"
                                  },
                                  "scopes": {
                                    "description": "A list of the scopes that should be requested while authenticating.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "login": {
                      "description": "The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "routes": {
                          "description": "The routes that specify the endpoints used for login and logout requests.",
                          "type": "object",
                          "properties": {
                            "logoutEndpoint": {
                              "description": "The endpoint at which a logout request should be made.",
                              "type": "string"
                            }
                          }
                        },
                        "tokenStore": {
                          "description": "The configuration settings of the token store.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
                              "type": "boolean"
                            },
                            "tokenRefreshExtensionHours": {
                              "format": "double",
                              "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
                              "type": "number"
                            },
                            "azureBlobStorage": {
                              "description": "The configuration settings of the storage of the tokens if blob storage is used.",
                              "type": "object",
                              "required": [
                                "sasUrlSettingName"
                              ],
                              "properties": {
                                "sasUrlSettingName": {
                                  "description": "The name of the app secrets containing the SAS URL of the blob storage containing the tokens.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "preserveUrlFragmentsForLogins": {
                          "description": "<code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.",
                          "type": "boolean"
                        },
                        "allowedExternalRedirectUrls": {
                          "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "cookieExpiration": {
                          "description": "The configuration settings of the session cookie's expiration.",
                          "type": "object",
                          "properties": {
                            "convention": {
                              "description": "The convention used when determining the session cookie's expiration.",
                              "enum": [
                                "FixedTime",
                                "IdentityProviderDerived"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "CookieExpirationConvention",
                                "modelAsString": false
                              }
                            },
                            "timeToExpiration": {
                              "description": "The time after the request is made when the session cookie should expire.",
                              "type": "string"
                            }
                          }
                        },
                        "nonce": {
                          "description": "The configuration settings of the nonce used in the login flow.",
                          "type": "object",
                          "properties": {
                            "validateNonce": {
                              "description": "<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "nonceExpirationInterval": {
                              "description": "The time after the request is made when the nonce should expire.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "httpSettings": {
                      "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "requireHttps": {
                          "description": "<code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.",
                          "type": "boolean"
                        },
                        "routes": {
                          "description": "The configuration settings of the paths HTTP requests.",
                          "type": "object",
                          "properties": {
                            "apiPrefix": {
                              "description": "The prefix that should precede all the authentication/authorization paths.",
                              "type": "string"
                            }
                          }
                        },
                        "forwardProxy": {
                          "description": "The configuration settings of a forward proxy used to make the requests.",
                          "type": "object",
                          "properties": {
                            "convention": {
                              "description": "The convention used to determine the url of the request made.",
                              "enum": [
                                "NoProxy",
                                "Standard",
                                "Custom"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "ForwardProxyConvention",
                                "modelAsString": false
                              }
                            },
                            "customHostHeaderName": {
                              "description": "The name of the header containing the host of the request.",
                              "type": "string"
                            },
                            "customProtoHeaderName": {
                              "description": "The name of the header containing the scheme of the request.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "encryptionSettings": {
                      "description": "The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "containerAppAuthEncryptionSecretName": {
                          "description": "The secret name which is referenced for EncryptionKey.",
                          "type": "string"
                        },
                        "containerAppAuthSigningSecretName": {
                          "description": "The secret name which is referenced for SigningKey.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "description": "Configuration settings for the Azure ContainerApp Service Authentication / Authorization feature.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "AuthConfig resource specific properties",
                  "type": "object",
                  "properties": {
                    "platform": {
                      "description": "The configuration settings of the platform of ContainerApp Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
                          "type": "boolean"
                        },
                        "runtimeVersion": {
                          "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
                          "type": "string"
                        }
                      }
                    },
                    "globalValidation": {
                      "description": "The configuration settings that determines the validation flow of users using  Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "unauthenticatedClientAction": {
                          "description": "The action to take when an unauthenticated client attempts to access the app.",
                          "enum": [
                            "RedirectToLoginPage",
                            "AllowAnonymous",
                            "Return401",
                            "Return403"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "UnauthenticatedClientActionV2",
                            "modelAsString": false
                          }
                        },
                        "redirectToProvider": {
                          "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\".",
                          "type": "string"
                        },
                        "excludedPaths": {
                          "description": "The paths for which unauthenticated flow would not be redirected to the login page.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "identityProviders": {
                      "description": "The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "azureActiveDirectory": {
                          "description": "The configuration settings of the Azure Active directory provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the Azure Active Directory app registration.",
                              "type": "object",
                              "properties": {
                                "openIdIssuer": {
                                  "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
                                  "type": "string"
                                },
                                "clientId": {
                                  "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
                                  "type": "string"
                                },
                                "clientSecretSettingName": {
                                  "description": "The app setting name that contains the client secret of the relying party application.",
                                  "type": "string"
                                },
                                "clientSecretCertificateThumbprint": {
                                  "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional.",
                                  "type": "string"
                                },
                                "clientSecretCertificateSubjectAlternativeName": {
                                  "description": "An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
                                  "type": "string"
                                },
                                "clientSecretCertificateIssuer": {
                                  "description": "An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
                                  "type": "string"
                                }
                              }
                            },
                            "login": {
                              "description": "The configuration settings of the Azure Active Directory login flow.",
                              "type": "object",
                              "properties": {
                                "loginParameters": {
                                  "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "disableWWWAuthenticate": {
                                  "description": "<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "validation": {
                              "description": "The configuration settings of the Azure Active Directory token validation flow.",
                              "type": "object",
                              "properties": {
                                "jwtClaimChecks": {
                                  "description": "The configuration settings of the checks that should be made while validating the JWT Claims.",
                                  "type": "object",
                                  "properties": {
                                    "allowedGroups": {
                                      "description": "The list of the allowed groups.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "allowedClientApplications": {
                                      "description": "The list of the allowed client applications.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "allowedAudiences": {
                                  "description": "The list of audiences that can make successful authentication/authorization requests.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "defaultAuthorizationPolicy": {
                                  "description": "The configuration settings of the default authorization policy.",
                                  "type": "object",
                                  "properties": {
                                    "allowedPrincipals": {
                                      "description": "The configuration settings of the Azure Active Directory allowed principals.",
                                      "type": "object",
                                      "properties": {
                                        "groups": {
                                          "description": "The list of the allowed groups.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "identities": {
                                          "description": "The list of the allowed identities.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "allowedApplications": {
                                      "description": "The configuration settings of the Azure Active Directory allowed applications.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "isAutoProvisioned": {
                              "description": "Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.\nThis is an internal flag primarily intended to support the Azure Management Portal. Users should not\nread or write to this property.",
                              "type": "boolean"
                            }
                          }
                        },
                        "facebook": {
                          "description": "The configuration settings of the Facebook provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the app registration for the Facebook provider.",
                              "type": "object",
                              "properties": {
                                "appId": {
                                  "description": "The App ID of the app used for login.",
                                  "type": "string"
                                },
                                "appSecretSettingName": {
                                  "description": "The app setting name that contains the app secret.",
                                  "type": "string"
                                }
                              }
                            },
                            "graphApiVersion": {
                              "description": "The version of the Facebook api to be used while logging in.",
                              "type": "string"
                            },
                            "login": {
                              "description": "The configuration settings of the login flow.",
                              "type": "object",
                              "properties": {
                                "scopes": {
                                  "description": "A list of the scopes that should be requested while authenticating.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "gitHub": {
                          "description": "The configuration settings of the GitHub provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the app registration for the GitHub provider.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "description": "The Client ID of the app used for login.",
                                  "type": "string"
                                },
                                "clientSecretSettingName": {
                                  "description": "The app setting name that contains the client secret.",
                                  "type": "string"
                                }
                              }
                            },
                            "login": {
                              "description": "The configuration settings of the login flow.",
                              "type": "object",
                              "properties": {
                                "scopes": {
                                  "description": "A list of the scopes that should be requested while authenticating.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "google": {
                          "description": "The configuration settings of the Google provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the app registration for the Google provider.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "description": "The Client ID of the app used for login.",
                                  "type": "string"
                                },
                                "clientSecretSettingName": {
                                  "description": "The app setting name that contains the client secret.",
                                  "type": "string"
                                }
                              }
                            },
                            "login": {
                              "description": "The configuration settings of the login flow.",
                              "type": "object",
                              "properties": {
                                "scopes": {
                                  "description": "A list of the scopes that should be requested while authenticating.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "validation": {
                              "description": "The configuration settings of the Azure Active Directory token validation flow.",
                              "type": "object",
                              "properties": {
                                "allowedAudiences": {
                                  "description": "The configuration settings of the allowed list of audiences from which to validate the JWT token.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "twitter": {
                          "description": "The configuration settings of the Twitter provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the app registration for the Twitter provider.",
                              "type": "object",
                              "properties": {
                                "consumerKey": {
                                  "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
                                  "type": "string"
                                },
                                "consumerSecretSettingName": {
                                  "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "apple": {
                          "description": "The configuration settings of the Apple provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the Apple registration.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "description": "The Client ID of the app used for login.",
                                  "type": "string"
                                },
                                "clientSecretSettingName": {
                                  "description": "The app setting name that contains the client secret.",
                                  "type": "string"
                                }
                              }
                            },
                            "login": {
                              "description": "The configuration settings of the login flow.",
                              "type": "object",
                              "properties": {
                                "scopes": {
                                  "description": "A list of the scopes that should be requested while authenticating.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "azureStaticWebApps": {
                          "description": "The configuration settings of the Azure Static Web Apps provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the Azure Static Web Apps registration.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "description": "The Client ID of the app used for login.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "customOpenIdConnectProviders": {
                          "description": "The map of the name of the alias of each custom Open ID Connect provider to the\nconfiguration settings of the custom Open ID Connect provider.",
                          "type": "object",
                          "additionalProperties": {
                            "description": "The configuration settings of the custom Open ID Connect provider.",
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "<code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.",
                                "type": "boolean"
                              },
                              "registration": {
                                "description": "The configuration settings of the app registration for the custom Open ID Connect provider.",
                                "type": "object",
                                "properties": {
                                  "clientId": {
                                    "description": "The client id of the custom Open ID Connect provider.",
                                    "type": "string"
                                  },
                                  "clientCredential": {
                                    "description": "The authentication credentials of the custom Open ID Connect provider.",
                                    "type": "object",
                                    "properties": {
                                      "method": {
                                        "description": "The method that should be used to authenticate the user.",
                                        "enum": [
                                          "ClientSecretPost"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "ClientCredentialMethod",
                                          "modelAsString": false
                                        }
                                      },
                                      "clientSecretSettingName": {
                                        "description": "The app setting that contains the client secret for the custom Open ID Connect provider.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "openIdConnectConfiguration": {
                                    "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider.",
                                    "type": "object",
                                    "properties": {
                                      "authorizationEndpoint": {
                                        "description": "The endpoint to be used to make an authorization request.",
                                        "type": "string"
                                      },
                                      "tokenEndpoint": {
                                        "description": "The endpoint to be used to request a token.",
                                        "type": "string"
                                      },
                                      "issuer": {
                                        "description": "The endpoint that issues the token.",
                                        "type": "string"
                                      },
                                      "certificationUri": {
                                        "description": "The endpoint that provides the keys necessary to validate the token.",
                                        "type": "string"
                                      },
                                      "wellKnownOpenIdConfiguration": {
                                        "description": "The endpoint that contains all the configuration endpoints for the provider.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "login": {
                                "description": "The configuration settings of the login flow of the custom Open ID Connect provider.",
                                "type": "object",
                                "properties": {
                                  "nameClaimType": {
                                    "description": "The name of the claim that contains the users name.",
                                    "type": "string"
                                  },
                                  "scopes": {
                                    "description": "A list of the scopes that should be requested while authenticating.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "login": {
                      "description": "The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "routes": {
                          "description": "The routes that specify the endpoints used for login and logout requests.",
                          "type": "object",
                          "properties": {
                            "logoutEndpoint": {
                              "description": "The endpoint at which a logout request should be made.",
                              "type": "string"
                            }
                          }
                        },
                        "tokenStore": {
                          "description": "The configuration settings of the token store.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
                              "type": "boolean"
                            },
                            "tokenRefreshExtensionHours": {
                              "format": "double",
                              "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
                              "type": "number"
                            },
                            "azureBlobStorage": {
                              "description": "The configuration settings of the storage of the tokens if blob storage is used.",
                              "type": "object",
                              "required": [
                                "sasUrlSettingName"
                              ],
                              "properties": {
                                "sasUrlSettingName": {
                                  "description": "The name of the app secrets containing the SAS URL of the blob storage containing the tokens.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "preserveUrlFragmentsForLogins": {
                          "description": "<code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.",
                          "type": "boolean"
                        },
                        "allowedExternalRedirectUrls": {
                          "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "cookieExpiration": {
                          "description": "The configuration settings of the session cookie's expiration.",
                          "type": "object",
                          "properties": {
                            "convention": {
                              "description": "The convention used when determining the session cookie's expiration.",
                              "enum": [
                                "FixedTime",
                                "IdentityProviderDerived"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "CookieExpirationConvention",
                                "modelAsString": false
                              }
                            },
                            "timeToExpiration": {
                              "description": "The time after the request is made when the session cookie should expire.",
                              "type": "string"
                            }
                          }
                        },
                        "nonce": {
                          "description": "The configuration settings of the nonce used in the login flow.",
                          "type": "object",
                          "properties": {
                            "validateNonce": {
                              "description": "<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "nonceExpirationInterval": {
                              "description": "The time after the request is made when the nonce should expire.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "httpSettings": {
                      "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "requireHttps": {
                          "description": "<code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.",
                          "type": "boolean"
                        },
                        "routes": {
                          "description": "The configuration settings of the paths HTTP requests.",
                          "type": "object",
                          "properties": {
                            "apiPrefix": {
                              "description": "The prefix that should precede all the authentication/authorization paths.",
                              "type": "string"
                            }
                          }
                        },
                        "forwardProxy": {
                          "description": "The configuration settings of a forward proxy used to make the requests.",
                          "type": "object",
                          "properties": {
                            "convention": {
                              "description": "The convention used to determine the url of the request made.",
                              "enum": [
                                "NoProxy",
                                "Standard",
                                "Custom"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "ForwardProxyConvention",
                                "modelAsString": false
                              }
                            },
                            "customHostHeaderName": {
                              "description": "The name of the header containing the host of the request.",
                              "type": "string"
                            },
                            "customProtoHeaderName": {
                              "description": "The name of the header containing the scheme of the request.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "encryptionSettings": {
                      "description": "The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization.",
                      "type": "object",
                      "properties": {
                        "containerAppAuthEncryptionSecretName": {
                          "description": "The secret name which is referenced for EncryptionKey.",
                          "type": "string"
                        },
                        "containerAppAuthSigningSecretName": {
                          "description": "The secret name which is referenced for SigningKey.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContainerAppsAuthConfigs"
        ],
        "summary": "Delete a Container App AuthConfig.",
        "description": "Delete a Container App AuthConfig.",
        "operationId": "ContainerAppsAuthConfigs_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "authConfigName",
            "in": "path",
            "description": "Name of the Container App AuthConfig.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Container App deleted successfully."
          },
          "204": {
            "description": "Container App AuthConfig does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/availableManagedEnvironmentsWorkloadProfileTypes": {
      "get": {
        "tags": [
          "AvailableWorkloadProfiles"
        ],
        "summary": "Get available workload profiles by location.",
        "description": "Get all available workload profiles for a location.",
        "operationId": "AvailableWorkloadProfiles_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of available workload profiles in the location.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of workload profiles.",
                  "type": "array",
                  "items": {
                    "description": "A workload profile with specific hardware configure to run container apps.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Region of the workload profile."
                      },
                      "properties": {
                        "description": "Revision resource specific properties",
                        "type": "object",
                        "properties": {
                          "category": {
                            "description": "Used to categorize workload profiles.",
                            "type": "string"
                          },
                          "applicability": {
                            "type": "string",
                            "description": "indicates whether the profile is default for the location.",
                            "enum": [
                              "LocationDefault",
                              "Custom"
                            ],
                            "x-ms-enum": {
                              "name": "Applicability",
                              "modelAsString": true
                            }
                          },
                          "cores": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of cores in CPU."
                          },
                          "memoryGiB": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Memory in GiB."
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of GPUs."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The everyday name of the workload profile."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/billingMeters": {
      "get": {
        "tags": [
          "BillingMeters"
        ],
        "summary": "Get billing meters by location.",
        "description": "Get all billingMeters for a location.",
        "operationId": "BillingMeters_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of billing meters.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of billing meters.",
                  "type": "array",
                  "items": {
                    "description": "Billing meter.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Region for the billing meter."
                      },
                      "properties": {
                        "description": "Revision resource specific properties",
                        "type": "object",
                        "properties": {
                          "category": {
                            "description": "Used to categorize billing meters.",
                            "type": "string"
                          },
                          "meterType": {
                            "type": "string",
                            "description": "Billing meter type."
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The everyday name of the billing meter."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/connectedEnvironments": {
      "get": {
        "tags": [
          "ConnectedEnvironments"
        ],
        "summary": "Get all connectedEnvironments for a subscription.",
        "description": "Get all connectedEnvironments for a subscription.",
        "operationId": "ConnectedEnvironments_ListBySubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of connectedEnvironments",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "An environment for Kubernetes cluster specialized for web workloads by Azure App Service",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "type": "object",
                        "description": "The complex type of the extended location.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "The type of the extended location.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationTypes",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "properties": {
                        "description": "ConnectedEnvironment resource specific properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the Kubernetes Environment.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Waiting",
                              "InitializationInProgress",
                              "InfrastructureSetupInProgress",
                              "InfrastructureSetupComplete",
                              "ScheduledForDelete"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ConnectedEnvironmentProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "deploymentErrors": {
                            "description": "Any errors that occurred during deployment or deployment validation",
                            "type": "string",
                            "readOnly": true
                          },
                          "defaultDomain": {
                            "description": "Default Domain Name for the cluster",
                            "type": "string",
                            "readOnly": true
                          },
                          "staticIp": {
                            "description": "Static IP of the connectedEnvironment",
                            "type": "string"
                          },
                          "daprAIConnectionString": {
                            "type": "string",
                            "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                            "x-ms-secret": true
                          },
                          "customDomainConfiguration": {
                            "description": "Custom domain configuration for the environment",
                            "type": "object",
                            "properties": {
                              "customDomainVerificationId": {
                                "description": "Id used to verify domain name ownership",
                                "type": "string",
                                "readOnly": true
                              },
                              "dnsSuffix": {
                                "type": "string",
                                "description": "Dns suffix for the environment domain",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "certificateKeyVaultProperties": {
                                "description": "Certificate stored in Azure Key Vault.",
                                "type": "object",
                                "properties": {
                                  "identity": {
                                    "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                    "type": "string"
                                  },
                                  "keyVaultUrl": {
                                    "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                                    "type": "string",
                                    "format": "uri"
                                  }
                                }
                              },
                              "certificateValue": {
                                "format": "byte",
                                "description": "PFX or PEM blob",
                                "type": "string",
                                "x-ms-secret": true
                              },
                              "certificatePassword": {
                                "description": "Certificate password",
                                "type": "string",
                                "x-ms-secret": true
                              },
                              "expirationDate": {
                                "format": "date-time",
                                "description": "Certificate expiration date.",
                                "type": "string",
                                "readOnly": true
                              },
                              "thumbprint": {
                                "description": "Certificate thumbprint.",
                                "type": "string",
                                "readOnly": true
                              },
                              "subjectName": {
                                "description": "Subject name of the certificate.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments": {
      "get": {
        "tags": [
          "ConnectedEnvironments"
        ],
        "operationId": "ConnectedEnvironments_ListByResourceGroup",
        "description": "Get all connectedEnvironments in a resource group.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of connectedEnvironments",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "An environment for Kubernetes cluster specialized for web workloads by Azure App Service",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "type": "object",
                        "description": "The complex type of the extended location.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "The type of the extended location.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationTypes",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "properties": {
                        "description": "ConnectedEnvironment resource specific properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the Kubernetes Environment.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Waiting",
                              "InitializationInProgress",
                              "InfrastructureSetupInProgress",
                              "InfrastructureSetupComplete",
                              "ScheduledForDelete"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ConnectedEnvironmentProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "deploymentErrors": {
                            "description": "Any errors that occurred during deployment or deployment validation",
                            "type": "string",
                            "readOnly": true
                          },
                          "defaultDomain": {
                            "description": "Default Domain Name for the cluster",
                            "type": "string",
                            "readOnly": true
                          },
                          "staticIp": {
                            "description": "Static IP of the connectedEnvironment",
                            "type": "string"
                          },
                          "daprAIConnectionString": {
                            "type": "string",
                            "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                            "x-ms-secret": true
                          },
                          "customDomainConfiguration": {
                            "description": "Custom domain configuration for the environment",
                            "type": "object",
                            "properties": {
                              "customDomainVerificationId": {
                                "description": "Id used to verify domain name ownership",
                                "type": "string",
                                "readOnly": true
                              },
                              "dnsSuffix": {
                                "type": "string",
                                "description": "Dns suffix for the environment domain",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "certificateKeyVaultProperties": {
                                "description": "Certificate stored in Azure Key Vault.",
                                "type": "object",
                                "properties": {
                                  "identity": {
                                    "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                    "type": "string"
                                  },
                                  "keyVaultUrl": {
                                    "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                                    "type": "string",
                                    "format": "uri"
                                  }
                                }
                              },
                              "certificateValue": {
                                "format": "byte",
                                "description": "PFX or PEM blob",
                                "type": "string",
                                "x-ms-secret": true
                              },
                              "certificatePassword": {
                                "description": "Certificate password",
                                "type": "string",
                                "x-ms-secret": true
                              },
                              "expirationDate": {
                                "format": "date-time",
                                "description": "Certificate expiration date.",
                                "type": "string",
                                "readOnly": true
                              },
                              "thumbprint": {
                                "description": "Certificate thumbprint.",
                                "type": "string",
                                "readOnly": true
                              },
                              "subjectName": {
                                "description": "Subject name of the certificate.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}": {
      "get": {
        "tags": [
          "ConnectedEnvironments"
        ],
        "operationId": "ConnectedEnvironments_Get",
        "description": "Get the properties of an connectedEnvironment.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "An environment for Kubernetes cluster specialized for web workloads by Azure App Service",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationTypes",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "description": "ConnectedEnvironment resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Kubernetes Environment.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "InitializationInProgress",
                        "InfrastructureSetupInProgress",
                        "InfrastructureSetupComplete",
                        "ScheduledForDelete"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConnectedEnvironmentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "defaultDomain": {
                      "description": "Default Domain Name for the cluster",
                      "type": "string",
                      "readOnly": true
                    },
                    "staticIp": {
                      "description": "Static IP of the connectedEnvironment",
                      "type": "string"
                    },
                    "daprAIConnectionString": {
                      "type": "string",
                      "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "customDomainConfiguration": {
                      "description": "Custom domain configuration for the environment",
                      "type": "object",
                      "properties": {
                        "customDomainVerificationId": {
                          "description": "Id used to verify domain name ownership",
                          "type": "string",
                          "readOnly": true
                        },
                        "dnsSuffix": {
                          "type": "string",
                          "description": "Dns suffix for the environment domain",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "certificateKeyVaultProperties": {
                          "description": "Certificate stored in Azure Key Vault.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "certificateValue": {
                          "format": "byte",
                          "description": "PFX or PEM blob",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "certificatePassword": {
                          "description": "Certificate password",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "expirationDate": {
                          "format": "date-time",
                          "description": "Certificate expiration date.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subjectName": {
                          "description": "Subject name of the certificate.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConnectedEnvironments"
        ],
        "description": "Creates or updates an connectedEnvironment.",
        "operationId": "ConnectedEnvironments_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentEnvelope",
            "in": "body",
            "description": "Configuration details of the connectedEnvironment.",
            "required": true,
            "schema": {
              "description": "An environment for Kubernetes cluster specialized for web workloads by Azure App Service",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationTypes",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "description": "ConnectedEnvironment resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Kubernetes Environment.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "InitializationInProgress",
                        "InfrastructureSetupInProgress",
                        "InfrastructureSetupComplete",
                        "ScheduledForDelete"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConnectedEnvironmentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "defaultDomain": {
                      "description": "Default Domain Name for the cluster",
                      "type": "string",
                      "readOnly": true
                    },
                    "staticIp": {
                      "description": "Static IP of the connectedEnvironment",
                      "type": "string"
                    },
                    "daprAIConnectionString": {
                      "type": "string",
                      "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "customDomainConfiguration": {
                      "description": "Custom domain configuration for the environment",
                      "type": "object",
                      "properties": {
                        "customDomainVerificationId": {
                          "description": "Id used to verify domain name ownership",
                          "type": "string",
                          "readOnly": true
                        },
                        "dnsSuffix": {
                          "type": "string",
                          "description": "Dns suffix for the environment domain",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "certificateKeyVaultProperties": {
                          "description": "Certificate stored in Azure Key Vault.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "certificateValue": {
                          "format": "byte",
                          "description": "PFX or PEM blob",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "certificatePassword": {
                          "description": "Certificate password",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "expirationDate": {
                          "format": "date-time",
                          "description": "Certificate expiration date.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subjectName": {
                          "description": "Subject name of the certificate.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "An environment for Kubernetes cluster specialized for web workloads by Azure App Service",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationTypes",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "description": "ConnectedEnvironment resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Kubernetes Environment.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "InitializationInProgress",
                        "InfrastructureSetupInProgress",
                        "InfrastructureSetupComplete",
                        "ScheduledForDelete"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConnectedEnvironmentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "defaultDomain": {
                      "description": "Default Domain Name for the cluster",
                      "type": "string",
                      "readOnly": true
                    },
                    "staticIp": {
                      "description": "Static IP of the connectedEnvironment",
                      "type": "string"
                    },
                    "daprAIConnectionString": {
                      "type": "string",
                      "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "customDomainConfiguration": {
                      "description": "Custom domain configuration for the environment",
                      "type": "object",
                      "properties": {
                        "customDomainVerificationId": {
                          "description": "Id used to verify domain name ownership",
                          "type": "string",
                          "readOnly": true
                        },
                        "dnsSuffix": {
                          "type": "string",
                          "description": "Dns suffix for the environment domain",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "certificateKeyVaultProperties": {
                          "description": "Certificate stored in Azure Key Vault.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "certificateValue": {
                          "format": "byte",
                          "description": "PFX or PEM blob",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "certificatePassword": {
                          "description": "Certificate password",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "expirationDate": {
                          "format": "date-time",
                          "description": "Certificate expiration date.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subjectName": {
                          "description": "Subject name of the certificate.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string"
              }
            },
            "schema": {
              "description": "An environment for Kubernetes cluster specialized for web workloads by Azure App Service",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationTypes",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "description": "ConnectedEnvironment resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Kubernetes Environment.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "InitializationInProgress",
                        "InfrastructureSetupInProgress",
                        "InfrastructureSetupComplete",
                        "ScheduledForDelete"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConnectedEnvironmentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "defaultDomain": {
                      "description": "Default Domain Name for the cluster",
                      "type": "string",
                      "readOnly": true
                    },
                    "staticIp": {
                      "description": "Static IP of the connectedEnvironment",
                      "type": "string"
                    },
                    "daprAIConnectionString": {
                      "type": "string",
                      "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "customDomainConfiguration": {
                      "description": "Custom domain configuration for the environment",
                      "type": "object",
                      "properties": {
                        "customDomainVerificationId": {
                          "description": "Id used to verify domain name ownership",
                          "type": "string",
                          "readOnly": true
                        },
                        "dnsSuffix": {
                          "type": "string",
                          "description": "Dns suffix for the environment domain",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "certificateKeyVaultProperties": {
                          "description": "Certificate stored in Azure Key Vault.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "certificateValue": {
                          "format": "byte",
                          "description": "PFX or PEM blob",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "certificatePassword": {
                          "description": "Certificate password",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "expirationDate": {
                          "format": "date-time",
                          "description": "Certificate expiration date.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subjectName": {
                          "description": "Subject name of the certificate.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConnectedEnvironments"
        ],
        "summary": "Delete an connectedEnvironment.",
        "description": "Delete an connectedEnvironment.",
        "operationId": "ConnectedEnvironments_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "202": {
            "description": "Delete operation is accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "ConnectedEnvironment does not exist"
          }
        }
      },
      "patch": {
        "tags": [
          "ConnectedEnvironments"
        ],
        "summary": "Update connected Environment's properties.",
        "description": "Patches a Managed Environment. Only patching of tags is supported currently",
        "operationId": "ConnectedEnvironments_Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connectedEnvironment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentEnvelope",
            "in": "body",
            "description": "Configuration details of the connectedEnvironment.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Connected environment patch properties",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "An environment for Kubernetes cluster specialized for web workloads by Azure App Service",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationTypes",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "description": "ConnectedEnvironment resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Kubernetes Environment.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "InitializationInProgress",
                        "InfrastructureSetupInProgress",
                        "InfrastructureSetupComplete",
                        "ScheduledForDelete"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConnectedEnvironmentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "defaultDomain": {
                      "description": "Default Domain Name for the cluster",
                      "type": "string",
                      "readOnly": true
                    },
                    "staticIp": {
                      "description": "Static IP of the connectedEnvironment",
                      "type": "string"
                    },
                    "daprAIConnectionString": {
                      "type": "string",
                      "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "customDomainConfiguration": {
                      "description": "Custom domain configuration for the environment",
                      "type": "object",
                      "properties": {
                        "customDomainVerificationId": {
                          "description": "Id used to verify domain name ownership",
                          "type": "string",
                          "readOnly": true
                        },
                        "dnsSuffix": {
                          "type": "string",
                          "description": "Dns suffix for the environment domain",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "certificateKeyVaultProperties": {
                          "description": "Certificate stored in Azure Key Vault.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "certificateValue": {
                          "format": "byte",
                          "description": "PFX or PEM blob",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "certificatePassword": {
                          "description": "Certificate password",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "expirationDate": {
                          "format": "date-time",
                          "description": "Certificate expiration date.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subjectName": {
                          "description": "Subject name of the certificate.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/checkNameAvailability": {
      "post": {
        "tags": [
          "ConnectedEnvironments"
        ],
        "summary": "Checks the resource connectedEnvironmentName availability.",
        "description": "Checks if resource connectedEnvironmentName is available.",
        "operationId": "ConnectedEnvironments_CheckNameAvailability",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkNameAvailabilityRequest",
            "in": "body",
            "description": "The check connectedEnvironmentName availability request.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The check availability request body.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the resource for which availability needs to be checked."
                },
                "type": {
                  "type": "string",
                  "description": "The resource type."
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "description": "The check availability result.",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Indicates if the resource name is available."
                },
                "reason": {
                  "type": "string",
                  "description": "The reason why the given name is not available.",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "CheckNameAvailabilityReason",
                    "modelAsString": true
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Detailed reason why the given name is available."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/certificates": {
      "get": {
        "tags": [
          "ConnectedEnvironments",
          "Certificates"
        ],
        "summary": "Get the Certificates in a given connected environment.",
        "operationId": "ConnectedEnvironmentsCertificates_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Connected Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of Certificates.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Certificate used for Custom Domain bindings of Container Apps in a Managed Environment",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Certificate resource specific properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the certificate.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "DeleteFailed",
                              "Pending",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "CertificateProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "deploymentErrors": {
                            "description": "Any errors that occurred during deployment or deployment validation",
                            "type": "string",
                            "readOnly": true
                          },
                          "certificateKeyVaultProperties": {
                            "description": "Properties for a certificate stored in a Key Vault.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                                "type": "string",
                                "format": "uri"
                              }
                            }
                          },
                          "password": {
                            "description": "Certificate password.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "subjectName": {
                            "description": "Subject name of the certificate.",
                            "type": "string",
                            "readOnly": true
                          },
                          "subjectAlternativeNames": {
                            "description": "Subject alternative names the certificate applies to.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "value": {
                            "format": "byte",
                            "description": "PFX or PEM blob",
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "issuer": {
                            "description": "Certificate issuer.",
                            "type": "string",
                            "readOnly": true
                          },
                          "issueDate": {
                            "format": "date-time",
                            "description": "Certificate issue Date.",
                            "type": "string",
                            "readOnly": true
                          },
                          "expirationDate": {
                            "format": "date-time",
                            "description": "Certificate expiration date.",
                            "type": "string",
                            "readOnly": true
                          },
                          "thumbprint": {
                            "description": "Certificate thumbprint.",
                            "type": "string",
                            "readOnly": true
                          },
                          "valid": {
                            "description": "Is the certificate valid?.",
                            "type": "boolean",
                            "readOnly": true
                          },
                          "publicKeyHash": {
                            "description": "Public key hash.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "x-ms-client-flatten": true
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/certificates/{certificateName}": {
      "get": {
        "tags": [
          "ConnectedEnvironments",
          "Certificates"
        ],
        "summary": "Get the specified Certificate.",
        "operationId": "ConnectedEnvironmentsCertificates_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Connected Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Certificate used for Custom Domain bindings of Container Apps in a Managed Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Certificate resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the certificate.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "DeleteFailed",
                        "Pending",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "certificateKeyVaultProperties": {
                      "description": "Properties for a certificate stored in a Key Vault.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                          "type": "string"
                        },
                        "keyVaultUrl": {
                          "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    },
                    "password": {
                      "description": "Certificate password.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "subjectName": {
                      "description": "Subject name of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "subjectAlternativeNames": {
                      "description": "Subject alternative names the certificate applies to.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "value": {
                      "format": "byte",
                      "description": "PFX or PEM blob",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "issuer": {
                      "description": "Certificate issuer.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issueDate": {
                      "format": "date-time",
                      "description": "Certificate issue Date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationDate": {
                      "format": "date-time",
                      "description": "Certificate expiration date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "Certificate thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "valid": {
                      "description": "Is the certificate valid?.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "publicKeyHash": {
                      "description": "Public key hash.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConnectedEnvironments",
          "Certificates"
        ],
        "summary": "Create or Update a Certificate.",
        "operationId": "ConnectedEnvironmentsCertificates_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Connected Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Certificate to be created or updated",
            "schema": {
              "description": "Certificate used for Custom Domain bindings of Container Apps in a Managed Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Certificate resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the certificate.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "DeleteFailed",
                        "Pending",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "certificateKeyVaultProperties": {
                      "description": "Properties for a certificate stored in a Key Vault.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                          "type": "string"
                        },
                        "keyVaultUrl": {
                          "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    },
                    "password": {
                      "description": "Certificate password.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "subjectName": {
                      "description": "Subject name of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "subjectAlternativeNames": {
                      "description": "Subject alternative names the certificate applies to.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "value": {
                      "format": "byte",
                      "description": "PFX or PEM blob",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "issuer": {
                      "description": "Certificate issuer.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issueDate": {
                      "format": "date-time",
                      "description": "Certificate issue Date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationDate": {
                      "format": "date-time",
                      "description": "Certificate expiration date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "Certificate thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "valid": {
                      "description": "Is the certificate valid?.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "publicKeyHash": {
                      "description": "Public key hash.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Certificate used for Custom Domain bindings of Container Apps in a Managed Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Certificate resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the certificate.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "DeleteFailed",
                        "Pending",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "certificateKeyVaultProperties": {
                      "description": "Properties for a certificate stored in a Key Vault.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                          "type": "string"
                        },
                        "keyVaultUrl": {
                          "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    },
                    "password": {
                      "description": "Certificate password.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "subjectName": {
                      "description": "Subject name of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "subjectAlternativeNames": {
                      "description": "Subject alternative names the certificate applies to.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "value": {
                      "format": "byte",
                      "description": "PFX or PEM blob",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "issuer": {
                      "description": "Certificate issuer.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issueDate": {
                      "format": "date-time",
                      "description": "Certificate issue Date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationDate": {
                      "format": "date-time",
                      "description": "Certificate expiration date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "Certificate thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "valid": {
                      "description": "Is the certificate valid?.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "publicKeyHash": {
                      "description": "Public key hash.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          },
          "201": {
            "description": "Created",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string"
              }
            },
            "schema": {
              "description": "Certificate used for Custom Domain bindings of Container Apps in a Managed Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Certificate resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the certificate.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "DeleteFailed",
                        "Pending",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "certificateKeyVaultProperties": {
                      "description": "Properties for a certificate stored in a Key Vault.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                          "type": "string"
                        },
                        "keyVaultUrl": {
                          "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    },
                    "password": {
                      "description": "Certificate password.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "subjectName": {
                      "description": "Subject name of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "subjectAlternativeNames": {
                      "description": "Subject alternative names the certificate applies to.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "value": {
                      "format": "byte",
                      "description": "PFX or PEM blob",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "issuer": {
                      "description": "Certificate issuer.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issueDate": {
                      "format": "date-time",
                      "description": "Certificate issue Date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationDate": {
                      "format": "date-time",
                      "description": "Certificate expiration date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "Certificate thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "valid": {
                      "description": "Is the certificate valid?.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "publicKeyHash": {
                      "description": "Public key hash.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConnectedEnvironments",
          "Certificates"
        ],
        "summary": "Deletes the specified Certificate.",
        "operationId": "ConnectedEnvironmentsCertificates_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Connected Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Delete operation is accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Certificate does not exist"
          }
        }
      },
      "patch": {
        "tags": [
          "ConnectedEnvironments",
          "Certificates"
        ],
        "summary": "Update properties of a certificate",
        "description": "Patches a certificate. Currently only patching of tags is supported",
        "operationId": "ConnectedEnvironmentsCertificates_Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Connected Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "required": true,
            "description": "Properties of a certificate that need to be updated",
            "schema": {
              "description": "A certificate to update",
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application-specific metadata in the form of key-value pairs."
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Certificate used for Custom Domain bindings of Container Apps in a Managed Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Certificate resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the certificate.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "DeleteFailed",
                        "Pending",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "certificateKeyVaultProperties": {
                      "description": "Properties for a certificate stored in a Key Vault.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                          "type": "string"
                        },
                        "keyVaultUrl": {
                          "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    },
                    "password": {
                      "description": "Certificate password.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "subjectName": {
                      "description": "Subject name of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "subjectAlternativeNames": {
                      "description": "Subject alternative names the certificate applies to.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "value": {
                      "format": "byte",
                      "description": "PFX or PEM blob",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "issuer": {
                      "description": "Certificate issuer.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issueDate": {
                      "format": "date-time",
                      "description": "Certificate issue Date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationDate": {
                      "format": "date-time",
                      "description": "Certificate expiration date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "Certificate thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "valid": {
                      "description": "Is the certificate valid?.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "publicKeyHash": {
                      "description": "Public key hash.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          },
          "202": {
            "description": "Patch operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/daprComponents": {
      "get": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Get the Dapr Components for a connected environment.",
        "operationId": "ConnectedEnvironmentsDaprComponents_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connected environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Dapr Components ARM resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Dapr Component.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Dapr Component resource specific properties",
                        "type": "object",
                        "properties": {
                          "componentType": {
                            "description": "Component type",
                            "type": "string"
                          },
                          "version": {
                            "description": "Component version",
                            "type": "string"
                          },
                          "ignoreErrors": {
                            "description": "Boolean describing if the component errors are ignores",
                            "type": "boolean",
                            "default": false
                          },
                          "initTimeout": {
                            "description": "Initialization timeout",
                            "type": "string"
                          },
                          "secrets": {
                            "description": "Collection of secrets used by a Dapr component",
                            "type": "array",
                            "items": {
                              "description": "Secret definition.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Secret Name.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Secret Value.",
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "create",
                                    "update"
                                  ],
                                  "x-ms-secret": true
                                },
                                "identity": {
                                  "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                  "type": "string"
                                },
                                "keyVaultUrl": {
                                  "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "secretStoreComponent": {
                            "description": "Name of a Dapr component to retrieve component secrets from",
                            "type": "string"
                          },
                          "metadata": {
                            "description": "Component metadata",
                            "type": "array",
                            "items": {
                              "description": "Dapr component metadata.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Metadata property name.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Metadata property value.",
                                  "type": "string"
                                },
                                "secretRef": {
                                  "description": "Name of the Dapr Component secret from which to pull the metadata property value.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "scopes": {
                            "description": "Names of container apps that can use this Dapr component",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the Dapr Component.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "InProgress",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "DaprComponentProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "deploymentErrors": {
                            "description": "Any errors that occurred during deployment or deployment validation",
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/daprComponents/{componentName}": {
      "get": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Get a dapr component.",
        "operationId": "ConnectedEnvironmentsDaprComponents_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connected environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Dapr Component.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Dapr Component resource specific properties",
                  "type": "object",
                  "properties": {
                    "componentType": {
                      "description": "Component type",
                      "type": "string"
                    },
                    "version": {
                      "description": "Component version",
                      "type": "string"
                    },
                    "ignoreErrors": {
                      "description": "Boolean describing if the component errors are ignores",
                      "type": "boolean",
                      "default": false
                    },
                    "initTimeout": {
                      "description": "Initialization timeout",
                      "type": "string"
                    },
                    "secrets": {
                      "description": "Collection of secrets used by a Dapr component",
                      "type": "array",
                      "items": {
                        "description": "Secret definition.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Secret Name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Secret Value.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          },
                          "identity": {
                            "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                            "type": "string"
                          },
                          "keyVaultUrl": {
                            "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "secretStoreComponent": {
                      "description": "Name of a Dapr component to retrieve component secrets from",
                      "type": "string"
                    },
                    "metadata": {
                      "description": "Component metadata",
                      "type": "array",
                      "items": {
                        "description": "Dapr component metadata.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Metadata property name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Metadata property value.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "Name of the Dapr Component secret from which to pull the metadata property value.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "scopes": {
                      "description": "Names of container apps that can use this Dapr component",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Dapr Component.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DaprComponentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Creates or updates a Dapr Component.",
        "description": "Creates or updates a Dapr Component in a connected environment.",
        "operationId": "ConnectedEnvironmentsDaprComponents_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connected environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "name": "daprComponentEnvelope",
            "in": "body",
            "description": "Configuration details of the Dapr Component.",
            "required": true,
            "schema": {
              "description": "Dapr Component.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Dapr Component resource specific properties",
                  "type": "object",
                  "properties": {
                    "componentType": {
                      "description": "Component type",
                      "type": "string"
                    },
                    "version": {
                      "description": "Component version",
                      "type": "string"
                    },
                    "ignoreErrors": {
                      "description": "Boolean describing if the component errors are ignores",
                      "type": "boolean",
                      "default": false
                    },
                    "initTimeout": {
                      "description": "Initialization timeout",
                      "type": "string"
                    },
                    "secrets": {
                      "description": "Collection of secrets used by a Dapr component",
                      "type": "array",
                      "items": {
                        "description": "Secret definition.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Secret Name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Secret Value.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          },
                          "identity": {
                            "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                            "type": "string"
                          },
                          "keyVaultUrl": {
                            "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "secretStoreComponent": {
                      "description": "Name of a Dapr component to retrieve component secrets from",
                      "type": "string"
                    },
                    "metadata": {
                      "description": "Component metadata",
                      "type": "array",
                      "items": {
                        "description": "Dapr component metadata.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Metadata property name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Metadata property value.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "Name of the Dapr Component secret from which to pull the metadata property value.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "scopes": {
                      "description": "Names of container apps that can use this Dapr component",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Dapr Component.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DaprComponentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Dapr Component.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Dapr Component resource specific properties",
                  "type": "object",
                  "properties": {
                    "componentType": {
                      "description": "Component type",
                      "type": "string"
                    },
                    "version": {
                      "description": "Component version",
                      "type": "string"
                    },
                    "ignoreErrors": {
                      "description": "Boolean describing if the component errors are ignores",
                      "type": "boolean",
                      "default": false
                    },
                    "initTimeout": {
                      "description": "Initialization timeout",
                      "type": "string"
                    },
                    "secrets": {
                      "description": "Collection of secrets used by a Dapr component",
                      "type": "array",
                      "items": {
                        "description": "Secret definition.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Secret Name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Secret Value.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          },
                          "identity": {
                            "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                            "type": "string"
                          },
                          "keyVaultUrl": {
                            "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "secretStoreComponent": {
                      "description": "Name of a Dapr component to retrieve component secrets from",
                      "type": "string"
                    },
                    "metadata": {
                      "description": "Component metadata",
                      "type": "array",
                      "items": {
                        "description": "Dapr component metadata.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Metadata property name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Metadata property value.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "Name of the Dapr Component secret from which to pull the metadata property value.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "scopes": {
                      "description": "Names of container apps that can use this Dapr component",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Dapr Component.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DaprComponentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string"
              }
            },
            "schema": {
              "description": "Dapr Component.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Dapr Component resource specific properties",
                  "type": "object",
                  "properties": {
                    "componentType": {
                      "description": "Component type",
                      "type": "string"
                    },
                    "version": {
                      "description": "Component version",
                      "type": "string"
                    },
                    "ignoreErrors": {
                      "description": "Boolean describing if the component errors are ignores",
                      "type": "boolean",
                      "default": false
                    },
                    "initTimeout": {
                      "description": "Initialization timeout",
                      "type": "string"
                    },
                    "secrets": {
                      "description": "Collection of secrets used by a Dapr component",
                      "type": "array",
                      "items": {
                        "description": "Secret definition.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Secret Name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Secret Value.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          },
                          "identity": {
                            "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                            "type": "string"
                          },
                          "keyVaultUrl": {
                            "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "secretStoreComponent": {
                      "description": "Name of a Dapr component to retrieve component secrets from",
                      "type": "string"
                    },
                    "metadata": {
                      "description": "Component metadata",
                      "type": "array",
                      "items": {
                        "description": "Dapr component metadata.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Metadata property name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Metadata property value.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "Name of the Dapr Component secret from which to pull the metadata property value.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "scopes": {
                      "description": "Names of container apps that can use this Dapr component",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Dapr Component.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DaprComponentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Delete a Dapr Component.",
        "description": "Delete a Dapr Component from a connected environment.",
        "operationId": "ConnectedEnvironmentsDaprComponents_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connected environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Delete operation is accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Environment does not exist"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/daprComponents/{componentName}/listSecrets": {
      "post": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "List secrets for a dapr component",
        "operationId": "ConnectedEnvironmentsDaprComponents_ListSecrets",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the connected environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Dapr component Secrets Collection for ListSecrets Action.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of secrets used by a Dapr component",
                  "type": "array",
                  "items": {
                    "description": "Dapr component Secret for ListSecrets Action",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Secret Name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "value": {
                        "description": "Secret Value.",
                        "type": "string",
                        "x-ms-secret": true,
                        "readOnly": true
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/storages": {
      "get": {
        "tags": [
          "ConnectedEnvironmentsStorages"
        ],
        "summary": "Get all storages for a connectedEnvironment.",
        "description": "Get all storages for a connectedEnvironment.",
        "operationId": "ConnectedEnvironmentsStorages_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of Storage for Environments",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of storage resources.",
                  "type": "array",
                  "items": {
                    "description": "Storage resource for connectedEnvironment.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Storage properties",
                        "type": "object",
                        "properties": {
                          "azureFile": {
                            "description": "Azure file properties",
                            "type": "object",
                            "properties": {
                              "accountName": {
                                "description": "Storage account name for azure file.",
                                "type": "string"
                              },
                              "accountKey": {
                                "description": "Storage account key for azure file.",
                                "type": "string",
                                "x-ms-secret": true
                              },
                              "accountKeyVaultProperties": {
                                "description": "Storage account key stored as an Azure Key Vault secret.",
                                "type": "object",
                                "properties": {
                                  "identity": {
                                    "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                    "type": "string"
                                  },
                                  "keyVaultUrl": {
                                    "description": "URL pointing to the Azure Key Vault secret.",
                                    "type": "string"
                                  }
                                }
                              },
                              "accessMode": {
                                "description": "Access mode for storage",
                                "enum": [
                                  "ReadOnly",
                                  "ReadWrite"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AccessMode",
                                  "modelAsString": true
                                }
                              },
                              "shareName": {
                                "description": "Azure file share name.",
                                "type": "string"
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the storage.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "InProgress",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ConnectedEnvironmentStorageProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "deploymentErrors": {
                            "description": "Any errors that occurred during deployment or deployment validation",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/connectedEnvironments/{connectedEnvironmentName}/storages/{storageName}": {
      "get": {
        "tags": [
          "ConnectedEnvironmentsStorages"
        ],
        "summary": "Get storage for a connectedEnvironment.",
        "description": "Get storage for a connectedEnvironment.",
        "operationId": "ConnectedEnvironmentsStorages_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Storage resource for connectedEnvironment.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Storage properties",
                  "type": "object",
                  "properties": {
                    "azureFile": {
                      "description": "Azure file properties",
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "description": "Storage account name for azure file.",
                          "type": "string"
                        },
                        "accountKey": {
                          "description": "Storage account key for azure file.",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "accountKeyVaultProperties": {
                          "description": "Storage account key stored as an Azure Key Vault secret.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret.",
                              "type": "string"
                            }
                          }
                        },
                        "accessMode": {
                          "description": "Access mode for storage",
                          "enum": [
                            "ReadOnly",
                            "ReadWrite"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "AccessMode",
                            "modelAsString": true
                          }
                        },
                        "shareName": {
                          "description": "Azure file share name.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the storage.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConnectedEnvironmentStorageProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ConnectedEnvironmentsStorages"
        ],
        "summary": "Create or update storage for a connectedEnvironment.",
        "description": "Create or update storage for a connectedEnvironment.",
        "operationId": "ConnectedEnvironmentsStorages_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageEnvelope",
            "in": "body",
            "description": "Configuration details of storage.",
            "required": true,
            "schema": {
              "description": "Storage resource for connectedEnvironment.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Storage properties",
                  "type": "object",
                  "properties": {
                    "azureFile": {
                      "description": "Azure file properties",
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "description": "Storage account name for azure file.",
                          "type": "string"
                        },
                        "accountKey": {
                          "description": "Storage account key for azure file.",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "accountKeyVaultProperties": {
                          "description": "Storage account key stored as an Azure Key Vault secret.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret.",
                              "type": "string"
                            }
                          }
                        },
                        "accessMode": {
                          "description": "Access mode for storage",
                          "enum": [
                            "ReadOnly",
                            "ReadWrite"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "AccessMode",
                            "modelAsString": true
                          }
                        },
                        "shareName": {
                          "description": "Azure file share name.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the storage.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConnectedEnvironmentStorageProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Storage resource for connectedEnvironment.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Storage properties",
                  "type": "object",
                  "properties": {
                    "azureFile": {
                      "description": "Azure file properties",
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "description": "Storage account name for azure file.",
                          "type": "string"
                        },
                        "accountKey": {
                          "description": "Storage account key for azure file.",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "accountKeyVaultProperties": {
                          "description": "Storage account key stored as an Azure Key Vault secret.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret.",
                              "type": "string"
                            }
                          }
                        },
                        "accessMode": {
                          "description": "Access mode for storage",
                          "enum": [
                            "ReadOnly",
                            "ReadWrite"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "AccessMode",
                            "modelAsString": true
                          }
                        },
                        "shareName": {
                          "description": "Azure file share name.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the storage.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConnectedEnvironmentStorageProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string"
              }
            },
            "schema": {
              "description": "Storage resource for connectedEnvironment.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Storage properties",
                  "type": "object",
                  "properties": {
                    "azureFile": {
                      "description": "Azure file properties",
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "description": "Storage account name for azure file.",
                          "type": "string"
                        },
                        "accountKey": {
                          "description": "Storage account key for azure file.",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "accountKeyVaultProperties": {
                          "description": "Storage account key stored as an Azure Key Vault secret.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret.",
                              "type": "string"
                            }
                          }
                        },
                        "accessMode": {
                          "description": "Access mode for storage",
                          "enum": [
                            "ReadOnly",
                            "ReadWrite"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "AccessMode",
                            "modelAsString": true
                          }
                        },
                        "shareName": {
                          "description": "Azure file share name.",
                          "type": "string"
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the storage.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ConnectedEnvironmentStorageProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ConnectedEnvironmentsStorages"
        ],
        "summary": "Delete storage for a connectedEnvironment.",
        "description": "Delete storage for a connectedEnvironment.",
        "operationId": "ConnectedEnvironmentsStorages_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "connectedEnvironmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Delete operation is accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Storage does not exist"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/containerApps": {
      "get": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Get the Container Apps in a given subscription.",
        "operationId": "ContainerApps_ListBySubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container App collection ARM resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Container App.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "type": "object",
                        "description": "The complex type of the extended location.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "The type of the extended location.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationTypes",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "managedBy": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "workflowapp",
                          "functionapp"
                        ],
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "x-ms-enum": {
                          "name": "kind",
                          "modelAsString": true
                        },
                        "description": "Metadata to represent the container app kind, representing if a container app is workflowapp or functionapp."
                      },
                      "properties": {
                        "description": "ContainerApp resource specific properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the Container App.",
                            "enum": [
                              "InProgress",
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ContainerAppProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "runningStatus": {
                            "description": "Running status of the Container App.",
                            "enum": [
                              "Progressing",
                              "Running",
                              "Stopped",
                              "Suspended",
                              "Ready"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ContainerAppRunningStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Progressing",
                                  "description": "Container App is transitioning between Stopped and Running states."
                                },
                                {
                                  "value": "Running",
                                  "description": "Container App is in Running state."
                                },
                                {
                                  "value": "Stopped",
                                  "description": "Container App is in Stopped state."
                                },
                                {
                                  "value": "Suspended",
                                  "description": "Container App Job is in Suspended state."
                                },
                                {
                                  "value": "Ready",
                                  "description": "Container App Job is in Ready state."
                                }
                              ]
                            }
                          },
                          "managedEnvironmentId": {
                            "description": "Deprecated. Resource ID of the Container App's environment.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "environmentId": {
                            "description": "Resource ID of environment.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "workloadProfileName": {
                            "description": "Workload profile name to pin for container app execution.",
                            "type": "string"
                          },
                          "latestRevisionName": {
                            "description": "Name of the latest revision of the Container App.",
                            "type": "string",
                            "readOnly": true
                          },
                          "latestReadyRevisionName": {
                            "description": "Name of the latest ready revision of the Container App.",
                            "type": "string",
                            "readOnly": true
                          },
                          "latestRevisionFqdn": {
                            "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
                            "type": "string",
                            "readOnly": true
                          },
                          "customDomainVerificationId": {
                            "description": "Id used to verify domain name ownership",
                            "type": "string",
                            "readOnly": true
                          },
                          "configuration": {
                            "description": "Non versioned Container App configuration properties.",
                            "type": "object",
                            "properties": {
                              "secrets": {
                                "description": "Collection of secrets used by a Container app",
                                "type": "array",
                                "items": {
                                  "description": "Secret definition.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Secret Name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Secret Value.",
                                      "type": "string",
                                      "x-ms-mutability": [
                                        "create",
                                        "update"
                                      ],
                                      "x-ms-secret": true
                                    },
                                    "identity": {
                                      "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                      "type": "string"
                                    },
                                    "keyVaultUrl": {
                                      "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "activeRevisionsMode": {
                                "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
                                "enum": [
                                  "Multiple",
                                  "Single"
                                ],
                                "type": "string",
                                "default": "Single",
                                "x-ms-enum": {
                                  "name": "ActiveRevisionsMode",
                                  "modelAsString": true
                                }
                              },
                              "ingress": {
                                "description": "Ingress configurations.",
                                "type": "object",
                                "properties": {
                                  "fqdn": {
                                    "description": "Hostname.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "external": {
                                    "description": "Bool indicating if app exposes an external http endpoint",
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "targetPort": {
                                    "format": "int32",
                                    "description": "Target Port in containers for traffic from ingress",
                                    "type": "integer"
                                  },
                                  "exposedPort": {
                                    "format": "int32",
                                    "description": "Exposed Port in containers for TCP traffic from ingress",
                                    "type": "integer"
                                  },
                                  "transport": {
                                    "description": "Ingress transport protocol",
                                    "enum": [
                                      "auto",
                                      "http",
                                      "http2",
                                      "tcp"
                                    ],
                                    "type": "string",
                                    "default": "auto",
                                    "x-ms-enum": {
                                      "name": "IngressTransportMethod",
                                      "modelAsString": true
                                    }
                                  },
                                  "traffic": {
                                    "description": "Traffic weights for app's revisions",
                                    "type": "array",
                                    "items": {
                                      "description": "Traffic weight assigned to a revision",
                                      "type": "object",
                                      "properties": {
                                        "revisionName": {
                                          "description": "Name of a revision",
                                          "type": "string"
                                        },
                                        "weight": {
                                          "format": "int32",
                                          "description": "Traffic weight assigned to a revision",
                                          "type": "integer"
                                        },
                                        "latestRevision": {
                                          "description": "Indicates that the traffic weight belongs to a latest stable revision",
                                          "default": false,
                                          "type": "boolean"
                                        },
                                        "label": {
                                          "description": "Associates a traffic label with a revision",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "revisionName"
                                    ]
                                  },
                                  "customDomains": {
                                    "description": "custom domain bindings for Container Apps' hostnames.",
                                    "type": "array",
                                    "items": {
                                      "description": "Custom Domain of a Container App",
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Hostname.",
                                          "type": "string"
                                        },
                                        "bindingType": {
                                          "description": "Custom Domain binding type.",
                                          "enum": [
                                            "Disabled",
                                            "SniEnabled",
                                            "Auto"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "bindingType",
                                            "modelAsString": true
                                          }
                                        },
                                        "certificateId": {
                                          "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ]
                                  },
                                  "allowInsecure": {
                                    "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "ipSecurityRestrictions": {
                                    "description": "Rules to restrict incoming IP address.",
                                    "type": "array",
                                    "items": {
                                      "description": "Rule to restrict incoming IP address.",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "ipAddressRange",
                                        "action"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name for the IP restriction rule.",
                                          "type": "string"
                                        },
                                        "description": {
                                          "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
                                          "type": "string"
                                        },
                                        "ipAddressRange": {
                                          "description": "CIDR notation to match incoming IP address",
                                          "type": "string"
                                        },
                                        "action": {
                                          "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
                                          "enum": [
                                            "Allow",
                                            "Deny"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "action",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ]
                                  },
                                  "stickySessions": {
                                    "description": "Sticky Sessions for Single Revision Mode",
                                    "type": "object",
                                    "properties": {
                                      "affinity": {
                                        "description": "Sticky Session Affinity",
                                        "enum": [
                                          "sticky",
                                          "none"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "affinity",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  },
                                  "clientCertificateMode": {
                                    "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
                                    "enum": [
                                      "ignore",
                                      "accept",
                                      "require"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "IngressClientCertificateMode",
                                      "modelAsString": true
                                    }
                                  },
                                  "corsPolicy": {
                                    "description": "CORS policy for container app",
                                    "type": "object",
                                    "required": [
                                      "allowedOrigins"
                                    ],
                                    "properties": {
                                      "allowedOrigins": {
                                        "description": "Specifies the content for the access-control-allow-origins header",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "allowedMethods": {
                                        "description": "Specifies the content for the access-control-allow-methods header",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "allowedHeaders": {
                                        "description": "Specifies the content for the access-control-allow-headers header",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "exposeHeaders": {
                                        "description": "Specifies the content for the access-control-expose-headers header ",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "maxAge": {
                                        "format": "int32",
                                        "description": "Specifies the content for the access-control-max-age header",
                                        "type": "integer"
                                      },
                                      "allowCredentials": {
                                        "description": "Specifies whether the resource allows credentials",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "additionalPortMappings": {
                                    "description": "Settings to expose additional ports on container app",
                                    "type": "array",
                                    "items": {
                                      "description": "Port mappings of container app ingress",
                                      "type": "object",
                                      "required": [
                                        "external",
                                        "targetPort"
                                      ],
                                      "properties": {
                                        "external": {
                                          "description": "Specifies whether the app port is accessible outside of the environment",
                                          "type": "boolean"
                                        },
                                        "targetPort": {
                                          "format": "int32",
                                          "description": "Specifies the port user's container listens on",
                                          "type": "integer"
                                        },
                                        "exposedPort": {
                                          "format": "int32",
                                          "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "targetPort"
                                    ]
                                  }
                                }
                              },
                              "registries": {
                                "description": "Collection of private container registry credentials for containers used by the Container app",
                                "type": "array",
                                "items": {
                                  "description": "Container App Private Registry",
                                  "type": "object",
                                  "properties": {
                                    "server": {
                                      "description": "Container Registry Server",
                                      "type": "string"
                                    },
                                    "username": {
                                      "description": "Container Registry Username",
                                      "type": "string"
                                    },
                                    "passwordSecretRef": {
                                      "description": "The name of the Secret that contains the registry login password",
                                      "type": "string"
                                    },
                                    "identity": {
                                      "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "server"
                                ]
                              },
                              "dapr": {
                                "description": "Dapr configuration for the Container App.",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "Boolean indicating if the Dapr side car is enabled",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "appId": {
                                    "description": "Dapr application identifier",
                                    "type": "string"
                                  },
                                  "appProtocol": {
                                    "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
                                    "enum": [
                                      "http",
                                      "grpc"
                                    ],
                                    "type": "string",
                                    "default": "http",
                                    "x-ms-enum": {
                                      "name": "appProtocol",
                                      "modelAsString": true
                                    }
                                  },
                                  "appPort": {
                                    "format": "int32",
                                    "description": "Tells Dapr which port your application is listening on",
                                    "type": "integer"
                                  },
                                  "httpReadBufferSize": {
                                    "type": "integer",
                                    "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
                                    "format": "int32"
                                  },
                                  "httpMaxRequestSize": {
                                    "type": "integer",
                                    "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
                                    "format": "int32"
                                  },
                                  "logLevel": {
                                    "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
                                    "enum": [
                                      "info",
                                      "debug",
                                      "warn",
                                      "error"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "logLevel",
                                      "modelAsString": true
                                    }
                                  },
                                  "enableApiLogging": {
                                    "description": "Enables API logging for the Dapr sidecar",
                                    "type": "boolean"
                                  },
                                  "appHealth": {
                                    "description": "Dapr application health check configuration",
                                    "type": "object",
                                    "properties": {
                                      "enabled": {
                                        "description": "Boolean indicating if the health probe is enabled",
                                        "type": "boolean"
                                      },
                                      "path": {
                                        "description": "Path for the health probe",
                                        "type": "string"
                                      },
                                      "probeIntervalSeconds": {
                                        "description": "Interval for the health probe in seconds",
                                        "format": "int32",
                                        "type": "integer",
                                        "minimum": 1
                                      },
                                      "probeTimeoutMilliseconds": {
                                        "description": "Timeout for the health probe in milliseconds",
                                        "format": "int32",
                                        "type": "integer",
                                        "minimum": 1
                                      },
                                      "threshold": {
                                        "description": "Threshold for the health probe",
                                        "format": "int32",
                                        "type": "integer",
                                        "minimum": 1
                                      }
                                    }
                                  },
                                  "maxConcurrency": {
                                    "description": "Maximum number of concurrent requests, events handled by the Dapr sidecar",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              },
                              "runtime": {
                                "description": "App runtime configuration for the Container App.",
                                "type": "object",
                                "properties": {
                                  "java": {
                                    "description": "Java app configuration",
                                    "type": "object",
                                    "properties": {
                                      "enableMetrics": {
                                        "description": "Enable jmx core metrics for the java app",
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              },
                              "maxInactiveRevisions": {
                                "format": "int32",
                                "description": "Optional. Max inactive revisions a Container App can have.",
                                "type": "integer"
                              },
                              "service": {
                                "description": "Container App to be a dev Container App Service",
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "description": "Dev ContainerApp service type",
                                    "type": "string"
                                  }
                                }
                              },
                              "identitySettings": {
                                "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
                                "type": "array",
                                "items": {
                                  "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                                  "type": "object",
                                  "required": [
                                    "identity"
                                  ],
                                  "properties": {
                                    "identity": {
                                      "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                      "type": "string"
                                    },
                                    "lifecycle": {
                                      "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                      "enum": [
                                        "Init",
                                        "Main",
                                        "None",
                                        "All"
                                      ],
                                      "type": "string",
                                      "default": "All",
                                      "x-ms-enum": {
                                        "name": "IdentitySettingsLifeCycle",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "identity"
                                ]
                              }
                            }
                          },
                          "template": {
                            "description": "Container App versioned application definition.",
                            "type": "object",
                            "properties": {
                              "revisionSuffix": {
                                "description": "User friendly suffix that is appended to the revision name",
                                "type": "string"
                              },
                              "terminationGracePeriodSeconds": {
                                "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                                "format": "int64",
                                "type": "integer"
                              },
                              "initContainers": {
                                "description": "List of specialized containers that run before app containers.",
                                "type": "array",
                                "items": {
                                  "description": "Container App init container definition",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "volumeMounts": {
                                      "description": "Container volume mounts.",
                                      "type": "array",
                                      "items": {
                                        "description": "Volume mount for the Container App.",
                                        "type": "object",
                                        "properties": {
                                          "volumeName": {
                                            "description": "This must match the Name of a Volume.",
                                            "type": "string"
                                          },
                                          "mountPath": {
                                            "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                            "type": "string"
                                          },
                                          "subPath": {
                                            "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "volumeName"
                                      ]
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "containers": {
                                "description": "List of container definitions for the Container App.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container definition",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "volumeMounts": {
                                      "description": "Container volume mounts.",
                                      "type": "array",
                                      "items": {
                                        "description": "Volume mount for the Container App.",
                                        "type": "object",
                                        "properties": {
                                          "volumeName": {
                                            "description": "This must match the Name of a Volume.",
                                            "type": "string"
                                          },
                                          "mountPath": {
                                            "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                            "type": "string"
                                          },
                                          "subPath": {
                                            "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "volumeName"
                                      ]
                                    },
                                    "probes": {
                                      "description": "List of probes for the container.",
                                      "type": "array",
                                      "items": {
                                        "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                        "type": "object",
                                        "properties": {
                                          "failureThreshold": {
                                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "httpGet": {
                                            "description": "HTTPGet specifies the http request to perform.",
                                            "type": "object",
                                            "required": [
                                              "port"
                                            ],
                                            "properties": {
                                              "host": {
                                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                "type": "string"
                                              },
                                              "httpHeaders": {
                                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                                "type": "array",
                                                "items": {
                                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                                  "type": "object",
                                                  "required": [
                                                    "name",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "name": {
                                                      "description": "The header field name",
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "description": "The header field value",
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "x-ms-identifiers": [
                                                  "name"
                                                ]
                                              },
                                              "path": {
                                                "description": "Path to access on the HTTP server.",
                                                "type": "string"
                                              },
                                              "port": {
                                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "scheme": {
                                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                                "enum": [
                                                  "HTTP",
                                                  "HTTPS"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "name": "Scheme",
                                                  "modelAsString": true
                                                }
                                              }
                                            }
                                          },
                                          "initialDelaySeconds": {
                                            "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "periodSeconds": {
                                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "successThreshold": {
                                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "tcpSocket": {
                                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                            "type": "object",
                                            "required": [
                                              "port"
                                            ],
                                            "properties": {
                                              "host": {
                                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                                "type": "string"
                                              },
                                              "port": {
                                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                "type": "integer",
                                                "format": "int32"
                                              }
                                            }
                                          },
                                          "terminationGracePeriodSeconds": {
                                            "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "timeoutSeconds": {
                                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "type": {
                                            "description": "The type of probe.",
                                            "enum": [
                                              "Liveness",
                                              "Readiness",
                                              "Startup"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "name": "Type",
                                              "modelAsString": true
                                            }
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "type"
                                      ]
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "scale": {
                                "description": "Scaling properties for the Container App.",
                                "type": "object",
                                "properties": {
                                  "minReplicas": {
                                    "format": "int32",
                                    "description": "Optional. Minimum number of container replicas.",
                                    "type": "integer"
                                  },
                                  "maxReplicas": {
                                    "format": "int32",
                                    "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                                    "type": "integer",
                                    "default": 10
                                  },
                                  "cooldownPeriod": {
                                    "format": "int32",
                                    "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                                    "type": "integer"
                                  },
                                  "pollingInterval": {
                                    "format": "int32",
                                    "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                                    "type": "integer"
                                  },
                                  "rules": {
                                    "description": "Scaling rules.",
                                    "type": "array",
                                    "items": {
                                      "description": "Container App container scaling rule.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Scale Rule Name",
                                          "type": "string"
                                        },
                                        "azureQueue": {
                                          "description": "Azure Queue based scaling.",
                                          "type": "object",
                                          "properties": {
                                            "accountName": {
                                              "description": "Storage account name. required if using managed identity to authenticate",
                                              "type": "string"
                                            },
                                            "queueName": {
                                              "description": "Queue name.",
                                              "type": "string"
                                            },
                                            "queueLength": {
                                              "format": "int32",
                                              "description": "Queue length.",
                                              "type": "integer"
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the queue scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "custom": {
                                          "description": "Custom scale rule.",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                              "type": "string"
                                            },
                                            "metadata": {
                                              "description": "Metadata properties to describe custom scale rule.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the custom scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "http": {
                                          "description": "HTTP requests based scaling.",
                                          "type": "object",
                                          "properties": {
                                            "metadata": {
                                              "description": "Metadata properties to describe http scale rule.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the custom scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "tcp": {
                                          "description": "Tcp requests based scaling.",
                                          "type": "object",
                                          "properties": {
                                            "metadata": {
                                              "description": "Metadata properties to describe tcp scale rule.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the tcp scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ]
                                  }
                                }
                              },
                              "volumes": {
                                "description": "List of volume definitions for the Container App.",
                                "type": "array",
                                "items": {
                                  "description": "Volume definitions for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Volume name.",
                                      "type": "string"
                                    },
                                    "storageType": {
                                      "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                      "enum": [
                                        "AzureFile",
                                        "EmptyDir",
                                        "Secret",
                                        "NfsAzureFile"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "StorageType",
                                        "modelAsString": true
                                      }
                                    },
                                    "storageName": {
                                      "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                      "type": "string"
                                    },
                                    "secrets": {
                                      "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                      "type": "array",
                                      "items": {
                                        "description": "Secret to be added to volume.",
                                        "type": "object",
                                        "properties": {
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the secret value.",
                                            "type": "string"
                                          },
                                          "path": {
                                            "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "secretRef"
                                      ]
                                    },
                                    "mountOptions": {
                                      "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "serviceBinds": {
                                "description": "List of container app services bound to the app",
                                "type": "array",
                                "items": {
                                  "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                                  "type": "object",
                                  "properties": {
                                    "serviceId": {
                                      "description": "Resource id of the target service",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the service bind",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifier": [
                                  "name"
                                ]
                              }
                            }
                          },
                          "outboundIpAddresses": {
                            "description": "Outbound IP Addresses for container app.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "eventStreamEndpoint": {
                            "description": "The endpoint of the eventstream of the container app.",
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps": {
      "get": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Get the Container Apps in a given resource group.",
        "operationId": "ContainerApps_ListByResourceGroup",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container App collection ARM resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Container App.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "extendedLocation": {
                        "type": "object",
                        "description": "The complex type of the extended location.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the extended location."
                          },
                          "type": {
                            "description": "The type of the extended location.",
                            "type": "string",
                            "enum": [
                              "CustomLocation"
                            ],
                            "x-ms-enum": {
                              "name": "ExtendedLocationTypes",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "managedBy": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ],
                        "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "workflowapp",
                          "functionapp"
                        ],
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "x-ms-enum": {
                          "name": "kind",
                          "modelAsString": true
                        },
                        "description": "Metadata to represent the container app kind, representing if a container app is workflowapp or functionapp."
                      },
                      "properties": {
                        "description": "ContainerApp resource specific properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the Container App.",
                            "enum": [
                              "InProgress",
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ContainerAppProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "runningStatus": {
                            "description": "Running status of the Container App.",
                            "enum": [
                              "Progressing",
                              "Running",
                              "Stopped",
                              "Suspended",
                              "Ready"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ContainerAppRunningStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Progressing",
                                  "description": "Container App is transitioning between Stopped and Running states."
                                },
                                {
                                  "value": "Running",
                                  "description": "Container App is in Running state."
                                },
                                {
                                  "value": "Stopped",
                                  "description": "Container App is in Stopped state."
                                },
                                {
                                  "value": "Suspended",
                                  "description": "Container App Job is in Suspended state."
                                },
                                {
                                  "value": "Ready",
                                  "description": "Container App Job is in Ready state."
                                }
                              ]
                            }
                          },
                          "managedEnvironmentId": {
                            "description": "Deprecated. Resource ID of the Container App's environment.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "environmentId": {
                            "description": "Resource ID of environment.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "workloadProfileName": {
                            "description": "Workload profile name to pin for container app execution.",
                            "type": "string"
                          },
                          "latestRevisionName": {
                            "description": "Name of the latest revision of the Container App.",
                            "type": "string",
                            "readOnly": true
                          },
                          "latestReadyRevisionName": {
                            "description": "Name of the latest ready revision of the Container App.",
                            "type": "string",
                            "readOnly": true
                          },
                          "latestRevisionFqdn": {
                            "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
                            "type": "string",
                            "readOnly": true
                          },
                          "customDomainVerificationId": {
                            "description": "Id used to verify domain name ownership",
                            "type": "string",
                            "readOnly": true
                          },
                          "configuration": {
                            "description": "Non versioned Container App configuration properties.",
                            "type": "object",
                            "properties": {
                              "secrets": {
                                "description": "Collection of secrets used by a Container app",
                                "type": "array",
                                "items": {
                                  "description": "Secret definition.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Secret Name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Secret Value.",
                                      "type": "string",
                                      "x-ms-mutability": [
                                        "create",
                                        "update"
                                      ],
                                      "x-ms-secret": true
                                    },
                                    "identity": {
                                      "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                      "type": "string"
                                    },
                                    "keyVaultUrl": {
                                      "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "activeRevisionsMode": {
                                "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
                                "enum": [
                                  "Multiple",
                                  "Single"
                                ],
                                "type": "string",
                                "default": "Single",
                                "x-ms-enum": {
                                  "name": "ActiveRevisionsMode",
                                  "modelAsString": true
                                }
                              },
                              "ingress": {
                                "description": "Ingress configurations.",
                                "type": "object",
                                "properties": {
                                  "fqdn": {
                                    "description": "Hostname.",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "external": {
                                    "description": "Bool indicating if app exposes an external http endpoint",
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "targetPort": {
                                    "format": "int32",
                                    "description": "Target Port in containers for traffic from ingress",
                                    "type": "integer"
                                  },
                                  "exposedPort": {
                                    "format": "int32",
                                    "description": "Exposed Port in containers for TCP traffic from ingress",
                                    "type": "integer"
                                  },
                                  "transport": {
                                    "description": "Ingress transport protocol",
                                    "enum": [
                                      "auto",
                                      "http",
                                      "http2",
                                      "tcp"
                                    ],
                                    "type": "string",
                                    "default": "auto",
                                    "x-ms-enum": {
                                      "name": "IngressTransportMethod",
                                      "modelAsString": true
                                    }
                                  },
                                  "traffic": {
                                    "description": "Traffic weights for app's revisions",
                                    "type": "array",
                                    "items": {
                                      "description": "Traffic weight assigned to a revision",
                                      "type": "object",
                                      "properties": {
                                        "revisionName": {
                                          "description": "Name of a revision",
                                          "type": "string"
                                        },
                                        "weight": {
                                          "format": "int32",
                                          "description": "Traffic weight assigned to a revision",
                                          "type": "integer"
                                        },
                                        "latestRevision": {
                                          "description": "Indicates that the traffic weight belongs to a latest stable revision",
                                          "default": false,
                                          "type": "boolean"
                                        },
                                        "label": {
                                          "description": "Associates a traffic label with a revision",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "revisionName"
                                    ]
                                  },
                                  "customDomains": {
                                    "description": "custom domain bindings for Container Apps' hostnames.",
                                    "type": "array",
                                    "items": {
                                      "description": "Custom Domain of a Container App",
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Hostname.",
                                          "type": "string"
                                        },
                                        "bindingType": {
                                          "description": "Custom Domain binding type.",
                                          "enum": [
                                            "Disabled",
                                            "SniEnabled",
                                            "Auto"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "bindingType",
                                            "modelAsString": true
                                          }
                                        },
                                        "certificateId": {
                                          "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ]
                                  },
                                  "allowInsecure": {
                                    "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "ipSecurityRestrictions": {
                                    "description": "Rules to restrict incoming IP address.",
                                    "type": "array",
                                    "items": {
                                      "description": "Rule to restrict incoming IP address.",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "ipAddressRange",
                                        "action"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name for the IP restriction rule.",
                                          "type": "string"
                                        },
                                        "description": {
                                          "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
                                          "type": "string"
                                        },
                                        "ipAddressRange": {
                                          "description": "CIDR notation to match incoming IP address",
                                          "type": "string"
                                        },
                                        "action": {
                                          "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
                                          "enum": [
                                            "Allow",
                                            "Deny"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "action",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ]
                                  },
                                  "stickySessions": {
                                    "description": "Sticky Sessions for Single Revision Mode",
                                    "type": "object",
                                    "properties": {
                                      "affinity": {
                                        "description": "Sticky Session Affinity",
                                        "enum": [
                                          "sticky",
                                          "none"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "affinity",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  },
                                  "clientCertificateMode": {
                                    "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
                                    "enum": [
                                      "ignore",
                                      "accept",
                                      "require"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "IngressClientCertificateMode",
                                      "modelAsString": true
                                    }
                                  },
                                  "corsPolicy": {
                                    "description": "CORS policy for container app",
                                    "type": "object",
                                    "required": [
                                      "allowedOrigins"
                                    ],
                                    "properties": {
                                      "allowedOrigins": {
                                        "description": "Specifies the content for the access-control-allow-origins header",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "allowedMethods": {
                                        "description": "Specifies the content for the access-control-allow-methods header",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "allowedHeaders": {
                                        "description": "Specifies the content for the access-control-allow-headers header",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "exposeHeaders": {
                                        "description": "Specifies the content for the access-control-expose-headers header ",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "maxAge": {
                                        "format": "int32",
                                        "description": "Specifies the content for the access-control-max-age header",
                                        "type": "integer"
                                      },
                                      "allowCredentials": {
                                        "description": "Specifies whether the resource allows credentials",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "additionalPortMappings": {
                                    "description": "Settings to expose additional ports on container app",
                                    "type": "array",
                                    "items": {
                                      "description": "Port mappings of container app ingress",
                                      "type": "object",
                                      "required": [
                                        "external",
                                        "targetPort"
                                      ],
                                      "properties": {
                                        "external": {
                                          "description": "Specifies whether the app port is accessible outside of the environment",
                                          "type": "boolean"
                                        },
                                        "targetPort": {
                                          "format": "int32",
                                          "description": "Specifies the port user's container listens on",
                                          "type": "integer"
                                        },
                                        "exposedPort": {
                                          "format": "int32",
                                          "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "targetPort"
                                    ]
                                  }
                                }
                              },
                              "registries": {
                                "description": "Collection of private container registry credentials for containers used by the Container app",
                                "type": "array",
                                "items": {
                                  "description": "Container App Private Registry",
                                  "type": "object",
                                  "properties": {
                                    "server": {
                                      "description": "Container Registry Server",
                                      "type": "string"
                                    },
                                    "username": {
                                      "description": "Container Registry Username",
                                      "type": "string"
                                    },
                                    "passwordSecretRef": {
                                      "description": "The name of the Secret that contains the registry login password",
                                      "type": "string"
                                    },
                                    "identity": {
                                      "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "server"
                                ]
                              },
                              "dapr": {
                                "description": "Dapr configuration for the Container App.",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "description": "Boolean indicating if the Dapr side car is enabled",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "appId": {
                                    "description": "Dapr application identifier",
                                    "type": "string"
                                  },
                                  "appProtocol": {
                                    "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
                                    "enum": [
                                      "http",
                                      "grpc"
                                    ],
                                    "type": "string",
                                    "default": "http",
                                    "x-ms-enum": {
                                      "name": "appProtocol",
                                      "modelAsString": true
                                    }
                                  },
                                  "appPort": {
                                    "format": "int32",
                                    "description": "Tells Dapr which port your application is listening on",
                                    "type": "integer"
                                  },
                                  "httpReadBufferSize": {
                                    "type": "integer",
                                    "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
                                    "format": "int32"
                                  },
                                  "httpMaxRequestSize": {
                                    "type": "integer",
                                    "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
                                    "format": "int32"
                                  },
                                  "logLevel": {
                                    "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
                                    "enum": [
                                      "info",
                                      "debug",
                                      "warn",
                                      "error"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "logLevel",
                                      "modelAsString": true
                                    }
                                  },
                                  "enableApiLogging": {
                                    "description": "Enables API logging for the Dapr sidecar",
                                    "type": "boolean"
                                  },
                                  "appHealth": {
                                    "description": "Dapr application health check configuration",
                                    "type": "object",
                                    "properties": {
                                      "enabled": {
                                        "description": "Boolean indicating if the health probe is enabled",
                                        "type": "boolean"
                                      },
                                      "path": {
                                        "description": "Path for the health probe",
                                        "type": "string"
                                      },
                                      "probeIntervalSeconds": {
                                        "description": "Interval for the health probe in seconds",
                                        "format": "int32",
                                        "type": "integer",
                                        "minimum": 1
                                      },
                                      "probeTimeoutMilliseconds": {
                                        "description": "Timeout for the health probe in milliseconds",
                                        "format": "int32",
                                        "type": "integer",
                                        "minimum": 1
                                      },
                                      "threshold": {
                                        "description": "Threshold for the health probe",
                                        "format": "int32",
                                        "type": "integer",
                                        "minimum": 1
                                      }
                                    }
                                  },
                                  "maxConcurrency": {
                                    "description": "Maximum number of concurrent requests, events handled by the Dapr sidecar",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              },
                              "runtime": {
                                "description": "App runtime configuration for the Container App.",
                                "type": "object",
                                "properties": {
                                  "java": {
                                    "description": "Java app configuration",
                                    "type": "object",
                                    "properties": {
                                      "enableMetrics": {
                                        "description": "Enable jmx core metrics for the java app",
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              },
                              "maxInactiveRevisions": {
                                "format": "int32",
                                "description": "Optional. Max inactive revisions a Container App can have.",
                                "type": "integer"
                              },
                              "service": {
                                "description": "Container App to be a dev Container App Service",
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "description": "Dev ContainerApp service type",
                                    "type": "string"
                                  }
                                }
                              },
                              "identitySettings": {
                                "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
                                "type": "array",
                                "items": {
                                  "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                                  "type": "object",
                                  "required": [
                                    "identity"
                                  ],
                                  "properties": {
                                    "identity": {
                                      "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                      "type": "string"
                                    },
                                    "lifecycle": {
                                      "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                      "enum": [
                                        "Init",
                                        "Main",
                                        "None",
                                        "All"
                                      ],
                                      "type": "string",
                                      "default": "All",
                                      "x-ms-enum": {
                                        "name": "IdentitySettingsLifeCycle",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "identity"
                                ]
                              }
                            }
                          },
                          "template": {
                            "description": "Container App versioned application definition.",
                            "type": "object",
                            "properties": {
                              "revisionSuffix": {
                                "description": "User friendly suffix that is appended to the revision name",
                                "type": "string"
                              },
                              "terminationGracePeriodSeconds": {
                                "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                                "format": "int64",
                                "type": "integer"
                              },
                              "initContainers": {
                                "description": "List of specialized containers that run before app containers.",
                                "type": "array",
                                "items": {
                                  "description": "Container App init container definition",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "volumeMounts": {
                                      "description": "Container volume mounts.",
                                      "type": "array",
                                      "items": {
                                        "description": "Volume mount for the Container App.",
                                        "type": "object",
                                        "properties": {
                                          "volumeName": {
                                            "description": "This must match the Name of a Volume.",
                                            "type": "string"
                                          },
                                          "mountPath": {
                                            "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                            "type": "string"
                                          },
                                          "subPath": {
                                            "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "volumeName"
                                      ]
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "containers": {
                                "description": "List of container definitions for the Container App.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container definition",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "volumeMounts": {
                                      "description": "Container volume mounts.",
                                      "type": "array",
                                      "items": {
                                        "description": "Volume mount for the Container App.",
                                        "type": "object",
                                        "properties": {
                                          "volumeName": {
                                            "description": "This must match the Name of a Volume.",
                                            "type": "string"
                                          },
                                          "mountPath": {
                                            "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                            "type": "string"
                                          },
                                          "subPath": {
                                            "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "volumeName"
                                      ]
                                    },
                                    "probes": {
                                      "description": "List of probes for the container.",
                                      "type": "array",
                                      "items": {
                                        "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                        "type": "object",
                                        "properties": {
                                          "failureThreshold": {
                                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "httpGet": {
                                            "description": "HTTPGet specifies the http request to perform.",
                                            "type": "object",
                                            "required": [
                                              "port"
                                            ],
                                            "properties": {
                                              "host": {
                                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                "type": "string"
                                              },
                                              "httpHeaders": {
                                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                                "type": "array",
                                                "items": {
                                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                                  "type": "object",
                                                  "required": [
                                                    "name",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "name": {
                                                      "description": "The header field name",
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "description": "The header field value",
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "x-ms-identifiers": [
                                                  "name"
                                                ]
                                              },
                                              "path": {
                                                "description": "Path to access on the HTTP server.",
                                                "type": "string"
                                              },
                                              "port": {
                                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "scheme": {
                                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                                "enum": [
                                                  "HTTP",
                                                  "HTTPS"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "name": "Scheme",
                                                  "modelAsString": true
                                                }
                                              }
                                            }
                                          },
                                          "initialDelaySeconds": {
                                            "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "periodSeconds": {
                                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "successThreshold": {
                                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "tcpSocket": {
                                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                            "type": "object",
                                            "required": [
                                              "port"
                                            ],
                                            "properties": {
                                              "host": {
                                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                                "type": "string"
                                              },
                                              "port": {
                                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                "type": "integer",
                                                "format": "int32"
                                              }
                                            }
                                          },
                                          "terminationGracePeriodSeconds": {
                                            "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "timeoutSeconds": {
                                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "type": {
                                            "description": "The type of probe.",
                                            "enum": [
                                              "Liveness",
                                              "Readiness",
                                              "Startup"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "name": "Type",
                                              "modelAsString": true
                                            }
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "type"
                                      ]
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "scale": {
                                "description": "Scaling properties for the Container App.",
                                "type": "object",
                                "properties": {
                                  "minReplicas": {
                                    "format": "int32",
                                    "description": "Optional. Minimum number of container replicas.",
                                    "type": "integer"
                                  },
                                  "maxReplicas": {
                                    "format": "int32",
                                    "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                                    "type": "integer",
                                    "default": 10
                                  },
                                  "cooldownPeriod": {
                                    "format": "int32",
                                    "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                                    "type": "integer"
                                  },
                                  "pollingInterval": {
                                    "format": "int32",
                                    "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                                    "type": "integer"
                                  },
                                  "rules": {
                                    "description": "Scaling rules.",
                                    "type": "array",
                                    "items": {
                                      "description": "Container App container scaling rule.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Scale Rule Name",
                                          "type": "string"
                                        },
                                        "azureQueue": {
                                          "description": "Azure Queue based scaling.",
                                          "type": "object",
                                          "properties": {
                                            "accountName": {
                                              "description": "Storage account name. required if using managed identity to authenticate",
                                              "type": "string"
                                            },
                                            "queueName": {
                                              "description": "Queue name.",
                                              "type": "string"
                                            },
                                            "queueLength": {
                                              "format": "int32",
                                              "description": "Queue length.",
                                              "type": "integer"
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the queue scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "custom": {
                                          "description": "Custom scale rule.",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                              "type": "string"
                                            },
                                            "metadata": {
                                              "description": "Metadata properties to describe custom scale rule.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the custom scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "http": {
                                          "description": "HTTP requests based scaling.",
                                          "type": "object",
                                          "properties": {
                                            "metadata": {
                                              "description": "Metadata properties to describe http scale rule.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the custom scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "tcp": {
                                          "description": "Tcp requests based scaling.",
                                          "type": "object",
                                          "properties": {
                                            "metadata": {
                                              "description": "Metadata properties to describe tcp scale rule.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the tcp scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ]
                                  }
                                }
                              },
                              "volumes": {
                                "description": "List of volume definitions for the Container App.",
                                "type": "array",
                                "items": {
                                  "description": "Volume definitions for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Volume name.",
                                      "type": "string"
                                    },
                                    "storageType": {
                                      "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                      "enum": [
                                        "AzureFile",
                                        "EmptyDir",
                                        "Secret",
                                        "NfsAzureFile"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "StorageType",
                                        "modelAsString": true
                                      }
                                    },
                                    "storageName": {
                                      "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                      "type": "string"
                                    },
                                    "secrets": {
                                      "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                      "type": "array",
                                      "items": {
                                        "description": "Secret to be added to volume.",
                                        "type": "object",
                                        "properties": {
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the secret value.",
                                            "type": "string"
                                          },
                                          "path": {
                                            "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "secretRef"
                                      ]
                                    },
                                    "mountOptions": {
                                      "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "serviceBinds": {
                                "description": "List of container app services bound to the app",
                                "type": "array",
                                "items": {
                                  "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                                  "type": "object",
                                  "properties": {
                                    "serviceId": {
                                      "description": "Resource id of the target service",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the service bind",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifier": [
                                  "name"
                                ]
                              }
                            }
                          },
                          "outboundIpAddresses": {
                            "description": "Outbound IP Addresses for container app.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "eventStreamEndpoint": {
                            "description": "The endpoint of the eventstream of the container app.",
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}": {
      "get": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Get the properties of a Container App.",
        "operationId": "ContainerApps_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Container App.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationTypes",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "managedBy": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "workflowapp",
                    "functionapp"
                  ],
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "x-ms-enum": {
                    "name": "kind",
                    "modelAsString": true
                  },
                  "description": "Metadata to represent the container app kind, representing if a container app is workflowapp or functionapp."
                },
                "properties": {
                  "description": "ContainerApp resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Container App.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "runningStatus": {
                      "description": "Running status of the Container App.",
                      "enum": [
                        "Progressing",
                        "Running",
                        "Stopped",
                        "Suspended",
                        "Ready"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppRunningStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Progressing",
                            "description": "Container App is transitioning between Stopped and Running states."
                          },
                          {
                            "value": "Running",
                            "description": "Container App is in Running state."
                          },
                          {
                            "value": "Stopped",
                            "description": "Container App is in Stopped state."
                          },
                          {
                            "value": "Suspended",
                            "description": "Container App Job is in Suspended state."
                          },
                          {
                            "value": "Ready",
                            "description": "Container App Job is in Ready state."
                          }
                        ]
                      }
                    },
                    "managedEnvironmentId": {
                      "description": "Deprecated. Resource ID of the Container App's environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "workloadProfileName": {
                      "description": "Workload profile name to pin for container app execution.",
                      "type": "string"
                    },
                    "latestRevisionName": {
                      "description": "Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestReadyRevisionName": {
                      "description": "Name of the latest ready revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestRevisionFqdn": {
                      "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customDomainVerificationId": {
                      "description": "Id used to verify domain name ownership",
                      "type": "string",
                      "readOnly": true
                    },
                    "configuration": {
                      "description": "Non versioned Container App configuration properties.",
                      "type": "object",
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container app",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "activeRevisionsMode": {
                          "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
                          "enum": [
                            "Multiple",
                            "Single"
                          ],
                          "type": "string",
                          "default": "Single",
                          "x-ms-enum": {
                            "name": "ActiveRevisionsMode",
                            "modelAsString": true
                          }
                        },
                        "ingress": {
                          "description": "Ingress configurations.",
                          "type": "object",
                          "properties": {
                            "fqdn": {
                              "description": "Hostname.",
                              "type": "string",
                              "readOnly": true
                            },
                            "external": {
                              "description": "Bool indicating if app exposes an external http endpoint",
                              "default": false,
                              "type": "boolean"
                            },
                            "targetPort": {
                              "format": "int32",
                              "description": "Target Port in containers for traffic from ingress",
                              "type": "integer"
                            },
                            "exposedPort": {
                              "format": "int32",
                              "description": "Exposed Port in containers for TCP traffic from ingress",
                              "type": "integer"
                            },
                            "transport": {
                              "description": "Ingress transport protocol",
                              "enum": [
                                "auto",
                                "http",
                                "http2",
                                "tcp"
                              ],
                              "type": "string",
                              "default": "auto",
                              "x-ms-enum": {
                                "name": "IngressTransportMethod",
                                "modelAsString": true
                              }
                            },
                            "traffic": {
                              "description": "Traffic weights for app's revisions",
                              "type": "array",
                              "items": {
                                "description": "Traffic weight assigned to a revision",
                                "type": "object",
                                "properties": {
                                  "revisionName": {
                                    "description": "Name of a revision",
                                    "type": "string"
                                  },
                                  "weight": {
                                    "format": "int32",
                                    "description": "Traffic weight assigned to a revision",
                                    "type": "integer"
                                  },
                                  "latestRevision": {
                                    "description": "Indicates that the traffic weight belongs to a latest stable revision",
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "label": {
                                    "description": "Associates a traffic label with a revision",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "revisionName"
                              ]
                            },
                            "customDomains": {
                              "description": "custom domain bindings for Container Apps' hostnames.",
                              "type": "array",
                              "items": {
                                "description": "Custom Domain of a Container App",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Hostname.",
                                    "type": "string"
                                  },
                                  "bindingType": {
                                    "description": "Custom Domain binding type.",
                                    "enum": [
                                      "Disabled",
                                      "SniEnabled",
                                      "Auto"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "bindingType",
                                      "modelAsString": true
                                    }
                                  },
                                  "certificateId": {
                                    "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "allowInsecure": {
                              "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
                              "type": "boolean",
                              "default": false
                            },
                            "ipSecurityRestrictions": {
                              "description": "Rules to restrict incoming IP address.",
                              "type": "array",
                              "items": {
                                "description": "Rule to restrict incoming IP address.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "ipAddressRange",
                                  "action"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name for the IP restriction rule.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
                                    "type": "string"
                                  },
                                  "ipAddressRange": {
                                    "description": "CIDR notation to match incoming IP address",
                                    "type": "string"
                                  },
                                  "action": {
                                    "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
                                    "enum": [
                                      "Allow",
                                      "Deny"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "action",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "stickySessions": {
                              "description": "Sticky Sessions for Single Revision Mode",
                              "type": "object",
                              "properties": {
                                "affinity": {
                                  "description": "Sticky Session Affinity",
                                  "enum": [
                                    "sticky",
                                    "none"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "affinity",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "clientCertificateMode": {
                              "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
                              "enum": [
                                "ignore",
                                "accept",
                                "require"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "IngressClientCertificateMode",
                                "modelAsString": true
                              }
                            },
                            "corsPolicy": {
                              "description": "CORS policy for container app",
                              "type": "object",
                              "required": [
                                "allowedOrigins"
                              ],
                              "properties": {
                                "allowedOrigins": {
                                  "description": "Specifies the content for the access-control-allow-origins header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedMethods": {
                                  "description": "Specifies the content for the access-control-allow-methods header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedHeaders": {
                                  "description": "Specifies the content for the access-control-allow-headers header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "exposeHeaders": {
                                  "description": "Specifies the content for the access-control-expose-headers header ",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "maxAge": {
                                  "format": "int32",
                                  "description": "Specifies the content for the access-control-max-age header",
                                  "type": "integer"
                                },
                                "allowCredentials": {
                                  "description": "Specifies whether the resource allows credentials",
                                  "type": "boolean"
                                }
                              }
                            },
                            "additionalPortMappings": {
                              "description": "Settings to expose additional ports on container app",
                              "type": "array",
                              "items": {
                                "description": "Port mappings of container app ingress",
                                "type": "object",
                                "required": [
                                  "external",
                                  "targetPort"
                                ],
                                "properties": {
                                  "external": {
                                    "description": "Specifies whether the app port is accessible outside of the environment",
                                    "type": "boolean"
                                  },
                                  "targetPort": {
                                    "format": "int32",
                                    "description": "Specifies the port user's container listens on",
                                    "type": "integer"
                                  },
                                  "exposedPort": {
                                    "format": "int32",
                                    "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
                                    "type": "integer"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "targetPort"
                              ]
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials for containers used by the Container app",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "dapr": {
                          "description": "Dapr configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Boolean indicating if the Dapr side car is enabled",
                              "type": "boolean",
                              "default": false
                            },
                            "appId": {
                              "description": "Dapr application identifier",
                              "type": "string"
                            },
                            "appProtocol": {
                              "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
                              "enum": [
                                "http",
                                "grpc"
                              ],
                              "type": "string",
                              "default": "http",
                              "x-ms-enum": {
                                "name": "appProtocol",
                                "modelAsString": true
                              }
                            },
                            "appPort": {
                              "format": "int32",
                              "description": "Tells Dapr which port your application is listening on",
                              "type": "integer"
                            },
                            "httpReadBufferSize": {
                              "type": "integer",
                              "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
                              "format": "int32"
                            },
                            "httpMaxRequestSize": {
                              "type": "integer",
                              "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
                              "format": "int32"
                            },
                            "logLevel": {
                              "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
                              "enum": [
                                "info",
                                "debug",
                                "warn",
                                "error"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "logLevel",
                                "modelAsString": true
                              }
                            },
                            "enableApiLogging": {
                              "description": "Enables API logging for the Dapr sidecar",
                              "type": "boolean"
                            },
                            "appHealth": {
                              "description": "Dapr application health check configuration",
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "description": "Boolean indicating if the health probe is enabled",
                                  "type": "boolean"
                                },
                                "path": {
                                  "description": "Path for the health probe",
                                  "type": "string"
                                },
                                "probeIntervalSeconds": {
                                  "description": "Interval for the health probe in seconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "probeTimeoutMilliseconds": {
                                  "description": "Timeout for the health probe in milliseconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "threshold": {
                                  "description": "Threshold for the health probe",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                }
                              }
                            },
                            "maxConcurrency": {
                              "description": "Maximum number of concurrent requests, events handled by the Dapr sidecar",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "runtime": {
                          "description": "App runtime configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "java": {
                              "description": "Java app configuration",
                              "type": "object",
                              "properties": {
                                "enableMetrics": {
                                  "description": "Enable jmx core metrics for the java app",
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "maxInactiveRevisions": {
                          "format": "int32",
                          "description": "Optional. Max inactive revisions a Container App can have.",
                          "type": "integer"
                        },
                        "service": {
                          "description": "Container App to be a dev Container App Service",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "description": "Dev ContainerApp service type",
                              "type": "string"
                            }
                          }
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container App versioned application definition.",
                      "type": "object",
                      "properties": {
                        "revisionSuffix": {
                          "description": "User friendly suffix that is appended to the revision name",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "scale": {
                          "description": "Scaling properties for the Container App.",
                          "type": "object",
                          "properties": {
                            "minReplicas": {
                              "format": "int32",
                              "description": "Optional. Minimum number of container replicas.",
                              "type": "integer"
                            },
                            "maxReplicas": {
                              "format": "int32",
                              "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                              "type": "integer",
                              "default": 10
                            },
                            "cooldownPeriod": {
                              "format": "int32",
                              "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                              "type": "integer"
                            },
                            "pollingInterval": {
                              "format": "int32",
                              "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                              "type": "integer"
                            },
                            "rules": {
                              "description": "Scaling rules.",
                              "type": "array",
                              "items": {
                                "description": "Container App container scaling rule.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Scale Rule Name",
                                    "type": "string"
                                  },
                                  "azureQueue": {
                                    "description": "Azure Queue based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "accountName": {
                                        "description": "Storage account name. required if using managed identity to authenticate",
                                        "type": "string"
                                      },
                                      "queueName": {
                                        "description": "Queue name.",
                                        "type": "string"
                                      },
                                      "queueLength": {
                                        "format": "int32",
                                        "description": "Queue length.",
                                        "type": "integer"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the queue scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "custom": {
                                    "description": "Custom scale rule.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe custom scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "http": {
                                    "description": "HTTP requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe http scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcp": {
                                    "description": "Tcp requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe tcp scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the tcp scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "serviceBinds": {
                          "description": "List of container app services bound to the app",
                          "type": "array",
                          "items": {
                            "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                            "type": "object",
                            "properties": {
                              "serviceId": {
                                "description": "Resource id of the target service",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the service bind",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifier": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses for container app.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container app.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Create or update a Container App.",
        "description": "Create or update a Container App.",
        "operationId": "ContainerApps_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerAppEnvelope",
            "in": "body",
            "description": "Properties used to create a container app",
            "required": true,
            "schema": {
              "description": "Container App.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationTypes",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "managedBy": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "workflowapp",
                    "functionapp"
                  ],
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "x-ms-enum": {
                    "name": "kind",
                    "modelAsString": true
                  },
                  "description": "Metadata to represent the container app kind, representing if a container app is workflowapp or functionapp."
                },
                "properties": {
                  "description": "ContainerApp resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Container App.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "runningStatus": {
                      "description": "Running status of the Container App.",
                      "enum": [
                        "Progressing",
                        "Running",
                        "Stopped",
                        "Suspended",
                        "Ready"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppRunningStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Progressing",
                            "description": "Container App is transitioning between Stopped and Running states."
                          },
                          {
                            "value": "Running",
                            "description": "Container App is in Running state."
                          },
                          {
                            "value": "Stopped",
                            "description": "Container App is in Stopped state."
                          },
                          {
                            "value": "Suspended",
                            "description": "Container App Job is in Suspended state."
                          },
                          {
                            "value": "Ready",
                            "description": "Container App Job is in Ready state."
                          }
                        ]
                      }
                    },
                    "managedEnvironmentId": {
                      "description": "Deprecated. Resource ID of the Container App's environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "workloadProfileName": {
                      "description": "Workload profile name to pin for container app execution.",
                      "type": "string"
                    },
                    "latestRevisionName": {
                      "description": "Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestReadyRevisionName": {
                      "description": "Name of the latest ready revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestRevisionFqdn": {
                      "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customDomainVerificationId": {
                      "description": "Id used to verify domain name ownership",
                      "type": "string",
                      "readOnly": true
                    },
                    "configuration": {
                      "description": "Non versioned Container App configuration properties.",
                      "type": "object",
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container app",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "activeRevisionsMode": {
                          "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
                          "enum": [
                            "Multiple",
                            "Single"
                          ],
                          "type": "string",
                          "default": "Single",
                          "x-ms-enum": {
                            "name": "ActiveRevisionsMode",
                            "modelAsString": true
                          }
                        },
                        "ingress": {
                          "description": "Ingress configurations.",
                          "type": "object",
                          "properties": {
                            "fqdn": {
                              "description": "Hostname.",
                              "type": "string",
                              "readOnly": true
                            },
                            "external": {
                              "description": "Bool indicating if app exposes an external http endpoint",
                              "default": false,
                              "type": "boolean"
                            },
                            "targetPort": {
                              "format": "int32",
                              "description": "Target Port in containers for traffic from ingress",
                              "type": "integer"
                            },
                            "exposedPort": {
                              "format": "int32",
                              "description": "Exposed Port in containers for TCP traffic from ingress",
                              "type": "integer"
                            },
                            "transport": {
                              "description": "Ingress transport protocol",
                              "enum": [
                                "auto",
                                "http",
                                "http2",
                                "tcp"
                              ],
                              "type": "string",
                              "default": "auto",
                              "x-ms-enum": {
                                "name": "IngressTransportMethod",
                                "modelAsString": true
                              }
                            },
                            "traffic": {
                              "description": "Traffic weights for app's revisions",
                              "type": "array",
                              "items": {
                                "description": "Traffic weight assigned to a revision",
                                "type": "object",
                                "properties": {
                                  "revisionName": {
                                    "description": "Name of a revision",
                                    "type": "string"
                                  },
                                  "weight": {
                                    "format": "int32",
                                    "description": "Traffic weight assigned to a revision",
                                    "type": "integer"
                                  },
                                  "latestRevision": {
                                    "description": "Indicates that the traffic weight belongs to a latest stable revision",
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "label": {
                                    "description": "Associates a traffic label with a revision",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "revisionName"
                              ]
                            },
                            "customDomains": {
                              "description": "custom domain bindings for Container Apps' hostnames.",
                              "type": "array",
                              "items": {
                                "description": "Custom Domain of a Container App",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Hostname.",
                                    "type": "string"
                                  },
                                  "bindingType": {
                                    "description": "Custom Domain binding type.",
                                    "enum": [
                                      "Disabled",
                                      "SniEnabled",
                                      "Auto"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "bindingType",
                                      "modelAsString": true
                                    }
                                  },
                                  "certificateId": {
                                    "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "allowInsecure": {
                              "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
                              "type": "boolean",
                              "default": false
                            },
                            "ipSecurityRestrictions": {
                              "description": "Rules to restrict incoming IP address.",
                              "type": "array",
                              "items": {
                                "description": "Rule to restrict incoming IP address.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "ipAddressRange",
                                  "action"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name for the IP restriction rule.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
                                    "type": "string"
                                  },
                                  "ipAddressRange": {
                                    "description": "CIDR notation to match incoming IP address",
                                    "type": "string"
                                  },
                                  "action": {
                                    "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
                                    "enum": [
                                      "Allow",
                                      "Deny"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "action",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "stickySessions": {
                              "description": "Sticky Sessions for Single Revision Mode",
                              "type": "object",
                              "properties": {
                                "affinity": {
                                  "description": "Sticky Session Affinity",
                                  "enum": [
                                    "sticky",
                                    "none"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "affinity",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "clientCertificateMode": {
                              "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
                              "enum": [
                                "ignore",
                                "accept",
                                "require"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "IngressClientCertificateMode",
                                "modelAsString": true
                              }
                            },
                            "corsPolicy": {
                              "description": "CORS policy for container app",
                              "type": "object",
                              "required": [
                                "allowedOrigins"
                              ],
                              "properties": {
                                "allowedOrigins": {
                                  "description": "Specifies the content for the access-control-allow-origins header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedMethods": {
                                  "description": "Specifies the content for the access-control-allow-methods header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedHeaders": {
                                  "description": "Specifies the content for the access-control-allow-headers header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "exposeHeaders": {
                                  "description": "Specifies the content for the access-control-expose-headers header ",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "maxAge": {
                                  "format": "int32",
                                  "description": "Specifies the content for the access-control-max-age header",
                                  "type": "integer"
                                },
                                "allowCredentials": {
                                  "description": "Specifies whether the resource allows credentials",
                                  "type": "boolean"
                                }
                              }
                            },
                            "additionalPortMappings": {
                              "description": "Settings to expose additional ports on container app",
                              "type": "array",
                              "items": {
                                "description": "Port mappings of container app ingress",
                                "type": "object",
                                "required": [
                                  "external",
                                  "targetPort"
                                ],
                                "properties": {
                                  "external": {
                                    "description": "Specifies whether the app port is accessible outside of the environment",
                                    "type": "boolean"
                                  },
                                  "targetPort": {
                                    "format": "int32",
                                    "description": "Specifies the port user's container listens on",
                                    "type": "integer"
                                  },
                                  "exposedPort": {
                                    "format": "int32",
                                    "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
                                    "type": "integer"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "targetPort"
                              ]
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials for containers used by the Container app",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "dapr": {
                          "description": "Dapr configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Boolean indicating if the Dapr side car is enabled",
                              "type": "boolean",
                              "default": false
                            },
                            "appId": {
                              "description": "Dapr application identifier",
                              "type": "string"
                            },
                            "appProtocol": {
                              "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
                              "enum": [
                                "http",
                                "grpc"
                              ],
                              "type": "string",
                              "default": "http",
                              "x-ms-enum": {
                                "name": "appProtocol",
                                "modelAsString": true
                              }
                            },
                            "appPort": {
                              "format": "int32",
                              "description": "Tells Dapr which port your application is listening on",
                              "type": "integer"
                            },
                            "httpReadBufferSize": {
                              "type": "integer",
                              "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
                              "format": "int32"
                            },
                            "httpMaxRequestSize": {
                              "type": "integer",
                              "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
                              "format": "int32"
                            },
                            "logLevel": {
                              "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
                              "enum": [
                                "info",
                                "debug",
                                "warn",
                                "error"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "logLevel",
                                "modelAsString": true
                              }
                            },
                            "enableApiLogging": {
                              "description": "Enables API logging for the Dapr sidecar",
                              "type": "boolean"
                            },
                            "appHealth": {
                              "description": "Dapr application health check configuration",
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "description": "Boolean indicating if the health probe is enabled",
                                  "type": "boolean"
                                },
                                "path": {
                                  "description": "Path for the health probe",
                                  "type": "string"
                                },
                                "probeIntervalSeconds": {
                                  "description": "Interval for the health probe in seconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "probeTimeoutMilliseconds": {
                                  "description": "Timeout for the health probe in milliseconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "threshold": {
                                  "description": "Threshold for the health probe",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                }
                              }
                            },
                            "maxConcurrency": {
                              "description": "Maximum number of concurrent requests, events handled by the Dapr sidecar",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "runtime": {
                          "description": "App runtime configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "java": {
                              "description": "Java app configuration",
                              "type": "object",
                              "properties": {
                                "enableMetrics": {
                                  "description": "Enable jmx core metrics for the java app",
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "maxInactiveRevisions": {
                          "format": "int32",
                          "description": "Optional. Max inactive revisions a Container App can have.",
                          "type": "integer"
                        },
                        "service": {
                          "description": "Container App to be a dev Container App Service",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "description": "Dev ContainerApp service type",
                              "type": "string"
                            }
                          }
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container App versioned application definition.",
                      "type": "object",
                      "properties": {
                        "revisionSuffix": {
                          "description": "User friendly suffix that is appended to the revision name",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "scale": {
                          "description": "Scaling properties for the Container App.",
                          "type": "object",
                          "properties": {
                            "minReplicas": {
                              "format": "int32",
                              "description": "Optional. Minimum number of container replicas.",
                              "type": "integer"
                            },
                            "maxReplicas": {
                              "format": "int32",
                              "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                              "type": "integer",
                              "default": 10
                            },
                            "cooldownPeriod": {
                              "format": "int32",
                              "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                              "type": "integer"
                            },
                            "pollingInterval": {
                              "format": "int32",
                              "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                              "type": "integer"
                            },
                            "rules": {
                              "description": "Scaling rules.",
                              "type": "array",
                              "items": {
                                "description": "Container App container scaling rule.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Scale Rule Name",
                                    "type": "string"
                                  },
                                  "azureQueue": {
                                    "description": "Azure Queue based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "accountName": {
                                        "description": "Storage account name. required if using managed identity to authenticate",
                                        "type": "string"
                                      },
                                      "queueName": {
                                        "description": "Queue name.",
                                        "type": "string"
                                      },
                                      "queueLength": {
                                        "format": "int32",
                                        "description": "Queue length.",
                                        "type": "integer"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the queue scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "custom": {
                                    "description": "Custom scale rule.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe custom scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "http": {
                                    "description": "HTTP requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe http scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcp": {
                                    "description": "Tcp requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe tcp scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the tcp scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "serviceBinds": {
                          "description": "List of container app services bound to the app",
                          "type": "array",
                          "items": {
                            "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                            "type": "object",
                            "properties": {
                              "serviceId": {
                                "description": "Resource id of the target service",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the service bind",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifier": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses for container app.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container app.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "No change performed on the Container App.",
            "schema": {
              "description": "Container App.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationTypes",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "managedBy": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "workflowapp",
                    "functionapp"
                  ],
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "x-ms-enum": {
                    "name": "kind",
                    "modelAsString": true
                  },
                  "description": "Metadata to represent the container app kind, representing if a container app is workflowapp or functionapp."
                },
                "properties": {
                  "description": "ContainerApp resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Container App.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "runningStatus": {
                      "description": "Running status of the Container App.",
                      "enum": [
                        "Progressing",
                        "Running",
                        "Stopped",
                        "Suspended",
                        "Ready"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppRunningStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Progressing",
                            "description": "Container App is transitioning between Stopped and Running states."
                          },
                          {
                            "value": "Running",
                            "description": "Container App is in Running state."
                          },
                          {
                            "value": "Stopped",
                            "description": "Container App is in Stopped state."
                          },
                          {
                            "value": "Suspended",
                            "description": "Container App Job is in Suspended state."
                          },
                          {
                            "value": "Ready",
                            "description": "Container App Job is in Ready state."
                          }
                        ]
                      }
                    },
                    "managedEnvironmentId": {
                      "description": "Deprecated. Resource ID of the Container App's environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "workloadProfileName": {
                      "description": "Workload profile name to pin for container app execution.",
                      "type": "string"
                    },
                    "latestRevisionName": {
                      "description": "Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestReadyRevisionName": {
                      "description": "Name of the latest ready revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestRevisionFqdn": {
                      "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customDomainVerificationId": {
                      "description": "Id used to verify domain name ownership",
                      "type": "string",
                      "readOnly": true
                    },
                    "configuration": {
                      "description": "Non versioned Container App configuration properties.",
                      "type": "object",
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container app",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "activeRevisionsMode": {
                          "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
                          "enum": [
                            "Multiple",
                            "Single"
                          ],
                          "type": "string",
                          "default": "Single",
                          "x-ms-enum": {
                            "name": "ActiveRevisionsMode",
                            "modelAsString": true
                          }
                        },
                        "ingress": {
                          "description": "Ingress configurations.",
                          "type": "object",
                          "properties": {
                            "fqdn": {
                              "description": "Hostname.",
                              "type": "string",
                              "readOnly": true
                            },
                            "external": {
                              "description": "Bool indicating if app exposes an external http endpoint",
                              "default": false,
                              "type": "boolean"
                            },
                            "targetPort": {
                              "format": "int32",
                              "description": "Target Port in containers for traffic from ingress",
                              "type": "integer"
                            },
                            "exposedPort": {
                              "format": "int32",
                              "description": "Exposed Port in containers for TCP traffic from ingress",
                              "type": "integer"
                            },
                            "transport": {
                              "description": "Ingress transport protocol",
                              "enum": [
                                "auto",
                                "http",
                                "http2",
                                "tcp"
                              ],
                              "type": "string",
                              "default": "auto",
                              "x-ms-enum": {
                                "name": "IngressTransportMethod",
                                "modelAsString": true
                              }
                            },
                            "traffic": {
                              "description": "Traffic weights for app's revisions",
                              "type": "array",
                              "items": {
                                "description": "Traffic weight assigned to a revision",
                                "type": "object",
                                "properties": {
                                  "revisionName": {
                                    "description": "Name of a revision",
                                    "type": "string"
                                  },
                                  "weight": {
                                    "format": "int32",
                                    "description": "Traffic weight assigned to a revision",
                                    "type": "integer"
                                  },
                                  "latestRevision": {
                                    "description": "Indicates that the traffic weight belongs to a latest stable revision",
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "label": {
                                    "description": "Associates a traffic label with a revision",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "revisionName"
                              ]
                            },
                            "customDomains": {
                              "description": "custom domain bindings for Container Apps' hostnames.",
                              "type": "array",
                              "items": {
                                "description": "Custom Domain of a Container App",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Hostname.",
                                    "type": "string"
                                  },
                                  "bindingType": {
                                    "description": "Custom Domain binding type.",
                                    "enum": [
                                      "Disabled",
                                      "SniEnabled",
                                      "Auto"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "bindingType",
                                      "modelAsString": true
                                    }
                                  },
                                  "certificateId": {
                                    "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "allowInsecure": {
                              "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
                              "type": "boolean",
                              "default": false
                            },
                            "ipSecurityRestrictions": {
                              "description": "Rules to restrict incoming IP address.",
                              "type": "array",
                              "items": {
                                "description": "Rule to restrict incoming IP address.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "ipAddressRange",
                                  "action"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name for the IP restriction rule.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
                                    "type": "string"
                                  },
                                  "ipAddressRange": {
                                    "description": "CIDR notation to match incoming IP address",
                                    "type": "string"
                                  },
                                  "action": {
                                    "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
                                    "enum": [
                                      "Allow",
                                      "Deny"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "action",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "stickySessions": {
                              "description": "Sticky Sessions for Single Revision Mode",
                              "type": "object",
                              "properties": {
                                "affinity": {
                                  "description": "Sticky Session Affinity",
                                  "enum": [
                                    "sticky",
                                    "none"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "affinity",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "clientCertificateMode": {
                              "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
                              "enum": [
                                "ignore",
                                "accept",
                                "require"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "IngressClientCertificateMode",
                                "modelAsString": true
                              }
                            },
                            "corsPolicy": {
                              "description": "CORS policy for container app",
                              "type": "object",
                              "required": [
                                "allowedOrigins"
                              ],
                              "properties": {
                                "allowedOrigins": {
                                  "description": "Specifies the content for the access-control-allow-origins header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedMethods": {
                                  "description": "Specifies the content for the access-control-allow-methods header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedHeaders": {
                                  "description": "Specifies the content for the access-control-allow-headers header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "exposeHeaders": {
                                  "description": "Specifies the content for the access-control-expose-headers header ",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "maxAge": {
                                  "format": "int32",
                                  "description": "Specifies the content for the access-control-max-age header",
                                  "type": "integer"
                                },
                                "allowCredentials": {
                                  "description": "Specifies whether the resource allows credentials",
                                  "type": "boolean"
                                }
                              }
                            },
                            "additionalPortMappings": {
                              "description": "Settings to expose additional ports on container app",
                              "type": "array",
                              "items": {
                                "description": "Port mappings of container app ingress",
                                "type": "object",
                                "required": [
                                  "external",
                                  "targetPort"
                                ],
                                "properties": {
                                  "external": {
                                    "description": "Specifies whether the app port is accessible outside of the environment",
                                    "type": "boolean"
                                  },
                                  "targetPort": {
                                    "format": "int32",
                                    "description": "Specifies the port user's container listens on",
                                    "type": "integer"
                                  },
                                  "exposedPort": {
                                    "format": "int32",
                                    "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
                                    "type": "integer"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "targetPort"
                              ]
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials for containers used by the Container app",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "dapr": {
                          "description": "Dapr configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Boolean indicating if the Dapr side car is enabled",
                              "type": "boolean",
                              "default": false
                            },
                            "appId": {
                              "description": "Dapr application identifier",
                              "type": "string"
                            },
                            "appProtocol": {
                              "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
                              "enum": [
                                "http",
                                "grpc"
                              ],
                              "type": "string",
                              "default": "http",
                              "x-ms-enum": {
                                "name": "appProtocol",
                                "modelAsString": true
                              }
                            },
                            "appPort": {
                              "format": "int32",
                              "description": "Tells Dapr which port your application is listening on",
                              "type": "integer"
                            },
                            "httpReadBufferSize": {
                              "type": "integer",
                              "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
                              "format": "int32"
                            },
                            "httpMaxRequestSize": {
                              "type": "integer",
                              "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
                              "format": "int32"
                            },
                            "logLevel": {
                              "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
                              "enum": [
                                "info",
                                "debug",
                                "warn",
                                "error"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "logLevel",
                                "modelAsString": true
                              }
                            },
                            "enableApiLogging": {
                              "description": "Enables API logging for the Dapr sidecar",
                              "type": "boolean"
                            },
                            "appHealth": {
                              "description": "Dapr application health check configuration",
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "description": "Boolean indicating if the health probe is enabled",
                                  "type": "boolean"
                                },
                                "path": {
                                  "description": "Path for the health probe",
                                  "type": "string"
                                },
                                "probeIntervalSeconds": {
                                  "description": "Interval for the health probe in seconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "probeTimeoutMilliseconds": {
                                  "description": "Timeout for the health probe in milliseconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "threshold": {
                                  "description": "Threshold for the health probe",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                }
                              }
                            },
                            "maxConcurrency": {
                              "description": "Maximum number of concurrent requests, events handled by the Dapr sidecar",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "runtime": {
                          "description": "App runtime configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "java": {
                              "description": "Java app configuration",
                              "type": "object",
                              "properties": {
                                "enableMetrics": {
                                  "description": "Enable jmx core metrics for the java app",
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "maxInactiveRevisions": {
                          "format": "int32",
                          "description": "Optional. Max inactive revisions a Container App can have.",
                          "type": "integer"
                        },
                        "service": {
                          "description": "Container App to be a dev Container App Service",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "description": "Dev ContainerApp service type",
                              "type": "string"
                            }
                          }
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container App versioned application definition.",
                      "type": "object",
                      "properties": {
                        "revisionSuffix": {
                          "description": "User friendly suffix that is appended to the revision name",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "scale": {
                          "description": "Scaling properties for the Container App.",
                          "type": "object",
                          "properties": {
                            "minReplicas": {
                              "format": "int32",
                              "description": "Optional. Minimum number of container replicas.",
                              "type": "integer"
                            },
                            "maxReplicas": {
                              "format": "int32",
                              "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                              "type": "integer",
                              "default": 10
                            },
                            "cooldownPeriod": {
                              "format": "int32",
                              "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                              "type": "integer"
                            },
                            "pollingInterval": {
                              "format": "int32",
                              "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                              "type": "integer"
                            },
                            "rules": {
                              "description": "Scaling rules.",
                              "type": "array",
                              "items": {
                                "description": "Container App container scaling rule.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Scale Rule Name",
                                    "type": "string"
                                  },
                                  "azureQueue": {
                                    "description": "Azure Queue based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "accountName": {
                                        "description": "Storage account name. required if using managed identity to authenticate",
                                        "type": "string"
                                      },
                                      "queueName": {
                                        "description": "Queue name.",
                                        "type": "string"
                                      },
                                      "queueLength": {
                                        "format": "int32",
                                        "description": "Queue length.",
                                        "type": "integer"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the queue scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "custom": {
                                    "description": "Custom scale rule.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe custom scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "http": {
                                    "description": "HTTP requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe http scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcp": {
                                    "description": "Tcp requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe tcp scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the tcp scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "serviceBinds": {
                          "description": "List of container app services bound to the app",
                          "type": "array",
                          "items": {
                            "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                            "type": "object",
                            "properties": {
                              "serviceId": {
                                "description": "Resource id of the target service",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the service bind",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifier": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses for container app.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container app.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "201": {
            "description": "Container App create or update has been started.",
            "schema": {
              "description": "Container App.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationTypes",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "managedBy": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "workflowapp",
                    "functionapp"
                  ],
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "x-ms-enum": {
                    "name": "kind",
                    "modelAsString": true
                  },
                  "description": "Metadata to represent the container app kind, representing if a container app is workflowapp or functionapp."
                },
                "properties": {
                  "description": "ContainerApp resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Container App.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "runningStatus": {
                      "description": "Running status of the Container App.",
                      "enum": [
                        "Progressing",
                        "Running",
                        "Stopped",
                        "Suspended",
                        "Ready"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppRunningStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Progressing",
                            "description": "Container App is transitioning between Stopped and Running states."
                          },
                          {
                            "value": "Running",
                            "description": "Container App is in Running state."
                          },
                          {
                            "value": "Stopped",
                            "description": "Container App is in Stopped state."
                          },
                          {
                            "value": "Suspended",
                            "description": "Container App Job is in Suspended state."
                          },
                          {
                            "value": "Ready",
                            "description": "Container App Job is in Ready state."
                          }
                        ]
                      }
                    },
                    "managedEnvironmentId": {
                      "description": "Deprecated. Resource ID of the Container App's environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "workloadProfileName": {
                      "description": "Workload profile name to pin for container app execution.",
                      "type": "string"
                    },
                    "latestRevisionName": {
                      "description": "Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestReadyRevisionName": {
                      "description": "Name of the latest ready revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestRevisionFqdn": {
                      "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customDomainVerificationId": {
                      "description": "Id used to verify domain name ownership",
                      "type": "string",
                      "readOnly": true
                    },
                    "configuration": {
                      "description": "Non versioned Container App configuration properties.",
                      "type": "object",
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container app",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "activeRevisionsMode": {
                          "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
                          "enum": [
                            "Multiple",
                            "Single"
                          ],
                          "type": "string",
                          "default": "Single",
                          "x-ms-enum": {
                            "name": "ActiveRevisionsMode",
                            "modelAsString": true
                          }
                        },
                        "ingress": {
                          "description": "Ingress configurations.",
                          "type": "object",
                          "properties": {
                            "fqdn": {
                              "description": "Hostname.",
                              "type": "string",
                              "readOnly": true
                            },
                            "external": {
                              "description": "Bool indicating if app exposes an external http endpoint",
                              "default": false,
                              "type": "boolean"
                            },
                            "targetPort": {
                              "format": "int32",
                              "description": "Target Port in containers for traffic from ingress",
                              "type": "integer"
                            },
                            "exposedPort": {
                              "format": "int32",
                              "description": "Exposed Port in containers for TCP traffic from ingress",
                              "type": "integer"
                            },
                            "transport": {
                              "description": "Ingress transport protocol",
                              "enum": [
                                "auto",
                                "http",
                                "http2",
                                "tcp"
                              ],
                              "type": "string",
                              "default": "auto",
                              "x-ms-enum": {
                                "name": "IngressTransportMethod",
                                "modelAsString": true
                              }
                            },
                            "traffic": {
                              "description": "Traffic weights for app's revisions",
                              "type": "array",
                              "items": {
                                "description": "Traffic weight assigned to a revision",
                                "type": "object",
                                "properties": {
                                  "revisionName": {
                                    "description": "Name of a revision",
                                    "type": "string"
                                  },
                                  "weight": {
                                    "format": "int32",
                                    "description": "Traffic weight assigned to a revision",
                                    "type": "integer"
                                  },
                                  "latestRevision": {
                                    "description": "Indicates that the traffic weight belongs to a latest stable revision",
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "label": {
                                    "description": "Associates a traffic label with a revision",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "revisionName"
                              ]
                            },
                            "customDomains": {
                              "description": "custom domain bindings for Container Apps' hostnames.",
                              "type": "array",
                              "items": {
                                "description": "Custom Domain of a Container App",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Hostname.",
                                    "type": "string"
                                  },
                                  "bindingType": {
                                    "description": "Custom Domain binding type.",
                                    "enum": [
                                      "Disabled",
                                      "SniEnabled",
                                      "Auto"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "bindingType",
                                      "modelAsString": true
                                    }
                                  },
                                  "certificateId": {
                                    "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "allowInsecure": {
                              "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
                              "type": "boolean",
                              "default": false
                            },
                            "ipSecurityRestrictions": {
                              "description": "Rules to restrict incoming IP address.",
                              "type": "array",
                              "items": {
                                "description": "Rule to restrict incoming IP address.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "ipAddressRange",
                                  "action"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name for the IP restriction rule.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
                                    "type": "string"
                                  },
                                  "ipAddressRange": {
                                    "description": "CIDR notation to match incoming IP address",
                                    "type": "string"
                                  },
                                  "action": {
                                    "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
                                    "enum": [
                                      "Allow",
                                      "Deny"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "action",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "stickySessions": {
                              "description": "Sticky Sessions for Single Revision Mode",
                              "type": "object",
                              "properties": {
                                "affinity": {
                                  "description": "Sticky Session Affinity",
                                  "enum": [
                                    "sticky",
                                    "none"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "affinity",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "clientCertificateMode": {
                              "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
                              "enum": [
                                "ignore",
                                "accept",
                                "require"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "IngressClientCertificateMode",
                                "modelAsString": true
                              }
                            },
                            "corsPolicy": {
                              "description": "CORS policy for container app",
                              "type": "object",
                              "required": [
                                "allowedOrigins"
                              ],
                              "properties": {
                                "allowedOrigins": {
                                  "description": "Specifies the content for the access-control-allow-origins header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedMethods": {
                                  "description": "Specifies the content for the access-control-allow-methods header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedHeaders": {
                                  "description": "Specifies the content for the access-control-allow-headers header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "exposeHeaders": {
                                  "description": "Specifies the content for the access-control-expose-headers header ",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "maxAge": {
                                  "format": "int32",
                                  "description": "Specifies the content for the access-control-max-age header",
                                  "type": "integer"
                                },
                                "allowCredentials": {
                                  "description": "Specifies whether the resource allows credentials",
                                  "type": "boolean"
                                }
                              }
                            },
                            "additionalPortMappings": {
                              "description": "Settings to expose additional ports on container app",
                              "type": "array",
                              "items": {
                                "description": "Port mappings of container app ingress",
                                "type": "object",
                                "required": [
                                  "external",
                                  "targetPort"
                                ],
                                "properties": {
                                  "external": {
                                    "description": "Specifies whether the app port is accessible outside of the environment",
                                    "type": "boolean"
                                  },
                                  "targetPort": {
                                    "format": "int32",
                                    "description": "Specifies the port user's container listens on",
                                    "type": "integer"
                                  },
                                  "exposedPort": {
                                    "format": "int32",
                                    "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
                                    "type": "integer"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "targetPort"
                              ]
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials for containers used by the Container app",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "dapr": {
                          "description": "Dapr configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Boolean indicating if the Dapr side car is enabled",
                              "type": "boolean",
                              "default": false
                            },
                            "appId": {
                              "description": "Dapr application identifier",
                              "type": "string"
                            },
                            "appProtocol": {
                              "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
                              "enum": [
                                "http",
                                "grpc"
                              ],
                              "type": "string",
                              "default": "http",
                              "x-ms-enum": {
                                "name": "appProtocol",
                                "modelAsString": true
                              }
                            },
                            "appPort": {
                              "format": "int32",
                              "description": "Tells Dapr which port your application is listening on",
                              "type": "integer"
                            },
                            "httpReadBufferSize": {
                              "type": "integer",
                              "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
                              "format": "int32"
                            },
                            "httpMaxRequestSize": {
                              "type": "integer",
                              "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
                              "format": "int32"
                            },
                            "logLevel": {
                              "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
                              "enum": [
                                "info",
                                "debug",
                                "warn",
                                "error"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "logLevel",
                                "modelAsString": true
                              }
                            },
                            "enableApiLogging": {
                              "description": "Enables API logging for the Dapr sidecar",
                              "type": "boolean"
                            },
                            "appHealth": {
                              "description": "Dapr application health check configuration",
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "description": "Boolean indicating if the health probe is enabled",
                                  "type": "boolean"
                                },
                                "path": {
                                  "description": "Path for the health probe",
                                  "type": "string"
                                },
                                "probeIntervalSeconds": {
                                  "description": "Interval for the health probe in seconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "probeTimeoutMilliseconds": {
                                  "description": "Timeout for the health probe in milliseconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "threshold": {
                                  "description": "Threshold for the health probe",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                }
                              }
                            },
                            "maxConcurrency": {
                              "description": "Maximum number of concurrent requests, events handled by the Dapr sidecar",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "runtime": {
                          "description": "App runtime configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "java": {
                              "description": "Java app configuration",
                              "type": "object",
                              "properties": {
                                "enableMetrics": {
                                  "description": "Enable jmx core metrics for the java app",
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "maxInactiveRevisions": {
                          "format": "int32",
                          "description": "Optional. Max inactive revisions a Container App can have.",
                          "type": "integer"
                        },
                        "service": {
                          "description": "Container App to be a dev Container App Service",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "description": "Dev ContainerApp service type",
                              "type": "string"
                            }
                          }
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container App versioned application definition.",
                      "type": "object",
                      "properties": {
                        "revisionSuffix": {
                          "description": "User friendly suffix that is appended to the revision name",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "scale": {
                          "description": "Scaling properties for the Container App.",
                          "type": "object",
                          "properties": {
                            "minReplicas": {
                              "format": "int32",
                              "description": "Optional. Minimum number of container replicas.",
                              "type": "integer"
                            },
                            "maxReplicas": {
                              "format": "int32",
                              "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                              "type": "integer",
                              "default": 10
                            },
                            "cooldownPeriod": {
                              "format": "int32",
                              "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                              "type": "integer"
                            },
                            "pollingInterval": {
                              "format": "int32",
                              "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                              "type": "integer"
                            },
                            "rules": {
                              "description": "Scaling rules.",
                              "type": "array",
                              "items": {
                                "description": "Container App container scaling rule.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Scale Rule Name",
                                    "type": "string"
                                  },
                                  "azureQueue": {
                                    "description": "Azure Queue based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "accountName": {
                                        "description": "Storage account name. required if using managed identity to authenticate",
                                        "type": "string"
                                      },
                                      "queueName": {
                                        "description": "Queue name.",
                                        "type": "string"
                                      },
                                      "queueLength": {
                                        "format": "int32",
                                        "description": "Queue length.",
                                        "type": "integer"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the queue scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "custom": {
                                    "description": "Custom scale rule.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe custom scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "http": {
                                    "description": "HTTP requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe http scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcp": {
                                    "description": "Tcp requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe tcp scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the tcp scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "serviceBinds": {
                          "description": "List of container app services bound to the app",
                          "type": "array",
                          "items": {
                            "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                            "type": "object",
                            "properties": {
                              "serviceId": {
                                "description": "Resource id of the target service",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the service bind",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifier": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses for container app.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container app.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Delete a Container App.",
        "description": "Delete a Container App.",
        "operationId": "ContainerApps_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Container App deleted successfully."
          },
          "202": {
            "description": "Delete operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Container App does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Update properties of a Container App",
        "description": "Patches a Container App using JSON Merge Patch",
        "operationId": "ContainerApps_Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerAppEnvelope",
            "in": "body",
            "required": true,
            "description": "Properties of a Container App that need to be updated",
            "schema": {
              "description": "Container App.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationTypes",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "managedBy": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "workflowapp",
                    "functionapp"
                  ],
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "x-ms-enum": {
                    "name": "kind",
                    "modelAsString": true
                  },
                  "description": "Metadata to represent the container app kind, representing if a container app is workflowapp or functionapp."
                },
                "properties": {
                  "description": "ContainerApp resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Container App.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "runningStatus": {
                      "description": "Running status of the Container App.",
                      "enum": [
                        "Progressing",
                        "Running",
                        "Stopped",
                        "Suspended",
                        "Ready"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppRunningStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Progressing",
                            "description": "Container App is transitioning between Stopped and Running states."
                          },
                          {
                            "value": "Running",
                            "description": "Container App is in Running state."
                          },
                          {
                            "value": "Stopped",
                            "description": "Container App is in Stopped state."
                          },
                          {
                            "value": "Suspended",
                            "description": "Container App Job is in Suspended state."
                          },
                          {
                            "value": "Ready",
                            "description": "Container App Job is in Ready state."
                          }
                        ]
                      }
                    },
                    "managedEnvironmentId": {
                      "description": "Deprecated. Resource ID of the Container App's environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "workloadProfileName": {
                      "description": "Workload profile name to pin for container app execution.",
                      "type": "string"
                    },
                    "latestRevisionName": {
                      "description": "Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestReadyRevisionName": {
                      "description": "Name of the latest ready revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestRevisionFqdn": {
                      "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customDomainVerificationId": {
                      "description": "Id used to verify domain name ownership",
                      "type": "string",
                      "readOnly": true
                    },
                    "configuration": {
                      "description": "Non versioned Container App configuration properties.",
                      "type": "object",
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container app",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "activeRevisionsMode": {
                          "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
                          "enum": [
                            "Multiple",
                            "Single"
                          ],
                          "type": "string",
                          "default": "Single",
                          "x-ms-enum": {
                            "name": "ActiveRevisionsMode",
                            "modelAsString": true
                          }
                        },
                        "ingress": {
                          "description": "Ingress configurations.",
                          "type": "object",
                          "properties": {
                            "fqdn": {
                              "description": "Hostname.",
                              "type": "string",
                              "readOnly": true
                            },
                            "external": {
                              "description": "Bool indicating if app exposes an external http endpoint",
                              "default": false,
                              "type": "boolean"
                            },
                            "targetPort": {
                              "format": "int32",
                              "description": "Target Port in containers for traffic from ingress",
                              "type": "integer"
                            },
                            "exposedPort": {
                              "format": "int32",
                              "description": "Exposed Port in containers for TCP traffic from ingress",
                              "type": "integer"
                            },
                            "transport": {
                              "description": "Ingress transport protocol",
                              "enum": [
                                "auto",
                                "http",
                                "http2",
                                "tcp"
                              ],
                              "type": "string",
                              "default": "auto",
                              "x-ms-enum": {
                                "name": "IngressTransportMethod",
                                "modelAsString": true
                              }
                            },
                            "traffic": {
                              "description": "Traffic weights for app's revisions",
                              "type": "array",
                              "items": {
                                "description": "Traffic weight assigned to a revision",
                                "type": "object",
                                "properties": {
                                  "revisionName": {
                                    "description": "Name of a revision",
                                    "type": "string"
                                  },
                                  "weight": {
                                    "format": "int32",
                                    "description": "Traffic weight assigned to a revision",
                                    "type": "integer"
                                  },
                                  "latestRevision": {
                                    "description": "Indicates that the traffic weight belongs to a latest stable revision",
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "label": {
                                    "description": "Associates a traffic label with a revision",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "revisionName"
                              ]
                            },
                            "customDomains": {
                              "description": "custom domain bindings for Container Apps' hostnames.",
                              "type": "array",
                              "items": {
                                "description": "Custom Domain of a Container App",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Hostname.",
                                    "type": "string"
                                  },
                                  "bindingType": {
                                    "description": "Custom Domain binding type.",
                                    "enum": [
                                      "Disabled",
                                      "SniEnabled",
                                      "Auto"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "bindingType",
                                      "modelAsString": true
                                    }
                                  },
                                  "certificateId": {
                                    "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "allowInsecure": {
                              "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
                              "type": "boolean",
                              "default": false
                            },
                            "ipSecurityRestrictions": {
                              "description": "Rules to restrict incoming IP address.",
                              "type": "array",
                              "items": {
                                "description": "Rule to restrict incoming IP address.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "ipAddressRange",
                                  "action"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name for the IP restriction rule.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
                                    "type": "string"
                                  },
                                  "ipAddressRange": {
                                    "description": "CIDR notation to match incoming IP address",
                                    "type": "string"
                                  },
                                  "action": {
                                    "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
                                    "enum": [
                                      "Allow",
                                      "Deny"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "action",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "stickySessions": {
                              "description": "Sticky Sessions for Single Revision Mode",
                              "type": "object",
                              "properties": {
                                "affinity": {
                                  "description": "Sticky Session Affinity",
                                  "enum": [
                                    "sticky",
                                    "none"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "affinity",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "clientCertificateMode": {
                              "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
                              "enum": [
                                "ignore",
                                "accept",
                                "require"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "IngressClientCertificateMode",
                                "modelAsString": true
                              }
                            },
                            "corsPolicy": {
                              "description": "CORS policy for container app",
                              "type": "object",
                              "required": [
                                "allowedOrigins"
                              ],
                              "properties": {
                                "allowedOrigins": {
                                  "description": "Specifies the content for the access-control-allow-origins header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedMethods": {
                                  "description": "Specifies the content for the access-control-allow-methods header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedHeaders": {
                                  "description": "Specifies the content for the access-control-allow-headers header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "exposeHeaders": {
                                  "description": "Specifies the content for the access-control-expose-headers header ",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "maxAge": {
                                  "format": "int32",
                                  "description": "Specifies the content for the access-control-max-age header",
                                  "type": "integer"
                                },
                                "allowCredentials": {
                                  "description": "Specifies whether the resource allows credentials",
                                  "type": "boolean"
                                }
                              }
                            },
                            "additionalPortMappings": {
                              "description": "Settings to expose additional ports on container app",
                              "type": "array",
                              "items": {
                                "description": "Port mappings of container app ingress",
                                "type": "object",
                                "required": [
                                  "external",
                                  "targetPort"
                                ],
                                "properties": {
                                  "external": {
                                    "description": "Specifies whether the app port is accessible outside of the environment",
                                    "type": "boolean"
                                  },
                                  "targetPort": {
                                    "format": "int32",
                                    "description": "Specifies the port user's container listens on",
                                    "type": "integer"
                                  },
                                  "exposedPort": {
                                    "format": "int32",
                                    "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
                                    "type": "integer"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "targetPort"
                              ]
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials for containers used by the Container app",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "dapr": {
                          "description": "Dapr configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Boolean indicating if the Dapr side car is enabled",
                              "type": "boolean",
                              "default": false
                            },
                            "appId": {
                              "description": "Dapr application identifier",
                              "type": "string"
                            },
                            "appProtocol": {
                              "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
                              "enum": [
                                "http",
                                "grpc"
                              ],
                              "type": "string",
                              "default": "http",
                              "x-ms-enum": {
                                "name": "appProtocol",
                                "modelAsString": true
                              }
                            },
                            "appPort": {
                              "format": "int32",
                              "description": "Tells Dapr which port your application is listening on",
                              "type": "integer"
                            },
                            "httpReadBufferSize": {
                              "type": "integer",
                              "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
                              "format": "int32"
                            },
                            "httpMaxRequestSize": {
                              "type": "integer",
                              "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
                              "format": "int32"
                            },
                            "logLevel": {
                              "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
                              "enum": [
                                "info",
                                "debug",
                                "warn",
                                "error"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "logLevel",
                                "modelAsString": true
                              }
                            },
                            "enableApiLogging": {
                              "description": "Enables API logging for the Dapr sidecar",
                              "type": "boolean"
                            },
                            "appHealth": {
                              "description": "Dapr application health check configuration",
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "description": "Boolean indicating if the health probe is enabled",
                                  "type": "boolean"
                                },
                                "path": {
                                  "description": "Path for the health probe",
                                  "type": "string"
                                },
                                "probeIntervalSeconds": {
                                  "description": "Interval for the health probe in seconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "probeTimeoutMilliseconds": {
                                  "description": "Timeout for the health probe in milliseconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "threshold": {
                                  "description": "Threshold for the health probe",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                }
                              }
                            },
                            "maxConcurrency": {
                              "description": "Maximum number of concurrent requests, events handled by the Dapr sidecar",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "runtime": {
                          "description": "App runtime configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "java": {
                              "description": "Java app configuration",
                              "type": "object",
                              "properties": {
                                "enableMetrics": {
                                  "description": "Enable jmx core metrics for the java app",
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "maxInactiveRevisions": {
                          "format": "int32",
                          "description": "Optional. Max inactive revisions a Container App can have.",
                          "type": "integer"
                        },
                        "service": {
                          "description": "Container App to be a dev Container App Service",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "description": "Dev ContainerApp service type",
                              "type": "string"
                            }
                          }
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container App versioned application definition.",
                      "type": "object",
                      "properties": {
                        "revisionSuffix": {
                          "description": "User friendly suffix that is appended to the revision name",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "scale": {
                          "description": "Scaling properties for the Container App.",
                          "type": "object",
                          "properties": {
                            "minReplicas": {
                              "format": "int32",
                              "description": "Optional. Minimum number of container replicas.",
                              "type": "integer"
                            },
                            "maxReplicas": {
                              "format": "int32",
                              "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                              "type": "integer",
                              "default": 10
                            },
                            "cooldownPeriod": {
                              "format": "int32",
                              "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                              "type": "integer"
                            },
                            "pollingInterval": {
                              "format": "int32",
                              "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                              "type": "integer"
                            },
                            "rules": {
                              "description": "Scaling rules.",
                              "type": "array",
                              "items": {
                                "description": "Container App container scaling rule.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Scale Rule Name",
                                    "type": "string"
                                  },
                                  "azureQueue": {
                                    "description": "Azure Queue based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "accountName": {
                                        "description": "Storage account name. required if using managed identity to authenticate",
                                        "type": "string"
                                      },
                                      "queueName": {
                                        "description": "Queue name.",
                                        "type": "string"
                                      },
                                      "queueLength": {
                                        "format": "int32",
                                        "description": "Queue length.",
                                        "type": "integer"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the queue scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "custom": {
                                    "description": "Custom scale rule.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe custom scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "http": {
                                    "description": "HTTP requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe http scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcp": {
                                    "description": "Tcp requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe tcp scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the tcp scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "serviceBinds": {
                          "description": "List of container app services bound to the app",
                          "type": "array",
                          "items": {
                            "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                            "type": "object",
                            "properties": {
                              "serviceId": {
                                "description": "Resource id of the target service",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the service bind",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifier": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses for container app.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container app.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "description": "Container App.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationTypes",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "managedBy": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "workflowapp",
                    "functionapp"
                  ],
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "x-ms-enum": {
                    "name": "kind",
                    "modelAsString": true
                  },
                  "description": "Metadata to represent the container app kind, representing if a container app is workflowapp or functionapp."
                },
                "properties": {
                  "description": "ContainerApp resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Container App.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "runningStatus": {
                      "description": "Running status of the Container App.",
                      "enum": [
                        "Progressing",
                        "Running",
                        "Stopped",
                        "Suspended",
                        "Ready"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppRunningStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Progressing",
                            "description": "Container App is transitioning between Stopped and Running states."
                          },
                          {
                            "value": "Running",
                            "description": "Container App is in Running state."
                          },
                          {
                            "value": "Stopped",
                            "description": "Container App is in Stopped state."
                          },
                          {
                            "value": "Suspended",
                            "description": "Container App Job is in Suspended state."
                          },
                          {
                            "value": "Ready",
                            "description": "Container App Job is in Ready state."
                          }
                        ]
                      }
                    },
                    "managedEnvironmentId": {
                      "description": "Deprecated. Resource ID of the Container App's environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "workloadProfileName": {
                      "description": "Workload profile name to pin for container app execution.",
                      "type": "string"
                    },
                    "latestRevisionName": {
                      "description": "Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestReadyRevisionName": {
                      "description": "Name of the latest ready revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestRevisionFqdn": {
                      "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customDomainVerificationId": {
                      "description": "Id used to verify domain name ownership",
                      "type": "string",
                      "readOnly": true
                    },
                    "configuration": {
                      "description": "Non versioned Container App configuration properties.",
                      "type": "object",
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container app",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "activeRevisionsMode": {
                          "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
                          "enum": [
                            "Multiple",
                            "Single"
                          ],
                          "type": "string",
                          "default": "Single",
                          "x-ms-enum": {
                            "name": "ActiveRevisionsMode",
                            "modelAsString": true
                          }
                        },
                        "ingress": {
                          "description": "Ingress configurations.",
                          "type": "object",
                          "properties": {
                            "fqdn": {
                              "description": "Hostname.",
                              "type": "string",
                              "readOnly": true
                            },
                            "external": {
                              "description": "Bool indicating if app exposes an external http endpoint",
                              "default": false,
                              "type": "boolean"
                            },
                            "targetPort": {
                              "format": "int32",
                              "description": "Target Port in containers for traffic from ingress",
                              "type": "integer"
                            },
                            "exposedPort": {
                              "format": "int32",
                              "description": "Exposed Port in containers for TCP traffic from ingress",
                              "type": "integer"
                            },
                            "transport": {
                              "description": "Ingress transport protocol",
                              "enum": [
                                "auto",
                                "http",
                                "http2",
                                "tcp"
                              ],
                              "type": "string",
                              "default": "auto",
                              "x-ms-enum": {
                                "name": "IngressTransportMethod",
                                "modelAsString": true
                              }
                            },
                            "traffic": {
                              "description": "Traffic weights for app's revisions",
                              "type": "array",
                              "items": {
                                "description": "Traffic weight assigned to a revision",
                                "type": "object",
                                "properties": {
                                  "revisionName": {
                                    "description": "Name of a revision",
                                    "type": "string"
                                  },
                                  "weight": {
                                    "format": "int32",
                                    "description": "Traffic weight assigned to a revision",
                                    "type": "integer"
                                  },
                                  "latestRevision": {
                                    "description": "Indicates that the traffic weight belongs to a latest stable revision",
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "label": {
                                    "description": "Associates a traffic label with a revision",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "revisionName"
                              ]
                            },
                            "customDomains": {
                              "description": "custom domain bindings for Container Apps' hostnames.",
                              "type": "array",
                              "items": {
                                "description": "Custom Domain of a Container App",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Hostname.",
                                    "type": "string"
                                  },
                                  "bindingType": {
                                    "description": "Custom Domain binding type.",
                                    "enum": [
                                      "Disabled",
                                      "SniEnabled",
                                      "Auto"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "bindingType",
                                      "modelAsString": true
                                    }
                                  },
                                  "certificateId": {
                                    "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "allowInsecure": {
                              "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
                              "type": "boolean",
                              "default": false
                            },
                            "ipSecurityRestrictions": {
                              "description": "Rules to restrict incoming IP address.",
                              "type": "array",
                              "items": {
                                "description": "Rule to restrict incoming IP address.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "ipAddressRange",
                                  "action"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name for the IP restriction rule.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
                                    "type": "string"
                                  },
                                  "ipAddressRange": {
                                    "description": "CIDR notation to match incoming IP address",
                                    "type": "string"
                                  },
                                  "action": {
                                    "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
                                    "enum": [
                                      "Allow",
                                      "Deny"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "action",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "stickySessions": {
                              "description": "Sticky Sessions for Single Revision Mode",
                              "type": "object",
                              "properties": {
                                "affinity": {
                                  "description": "Sticky Session Affinity",
                                  "enum": [
                                    "sticky",
                                    "none"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "affinity",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "clientCertificateMode": {
                              "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
                              "enum": [
                                "ignore",
                                "accept",
                                "require"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "IngressClientCertificateMode",
                                "modelAsString": true
                              }
                            },
                            "corsPolicy": {
                              "description": "CORS policy for container app",
                              "type": "object",
                              "required": [
                                "allowedOrigins"
                              ],
                              "properties": {
                                "allowedOrigins": {
                                  "description": "Specifies the content for the access-control-allow-origins header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedMethods": {
                                  "description": "Specifies the content for the access-control-allow-methods header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedHeaders": {
                                  "description": "Specifies the content for the access-control-allow-headers header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "exposeHeaders": {
                                  "description": "Specifies the content for the access-control-expose-headers header ",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "maxAge": {
                                  "format": "int32",
                                  "description": "Specifies the content for the access-control-max-age header",
                                  "type": "integer"
                                },
                                "allowCredentials": {
                                  "description": "Specifies whether the resource allows credentials",
                                  "type": "boolean"
                                }
                              }
                            },
                            "additionalPortMappings": {
                              "description": "Settings to expose additional ports on container app",
                              "type": "array",
                              "items": {
                                "description": "Port mappings of container app ingress",
                                "type": "object",
                                "required": [
                                  "external",
                                  "targetPort"
                                ],
                                "properties": {
                                  "external": {
                                    "description": "Specifies whether the app port is accessible outside of the environment",
                                    "type": "boolean"
                                  },
                                  "targetPort": {
                                    "format": "int32",
                                    "description": "Specifies the port user's container listens on",
                                    "type": "integer"
                                  },
                                  "exposedPort": {
                                    "format": "int32",
                                    "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
                                    "type": "integer"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "targetPort"
                              ]
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials for containers used by the Container app",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "dapr": {
                          "description": "Dapr configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Boolean indicating if the Dapr side car is enabled",
                              "type": "boolean",
                              "default": false
                            },
                            "appId": {
                              "description": "Dapr application identifier",
                              "type": "string"
                            },
                            "appProtocol": {
                              "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
                              "enum": [
                                "http",
                                "grpc"
                              ],
                              "type": "string",
                              "default": "http",
                              "x-ms-enum": {
                                "name": "appProtocol",
                                "modelAsString": true
                              }
                            },
                            "appPort": {
                              "format": "int32",
                              "description": "Tells Dapr which port your application is listening on",
                              "type": "integer"
                            },
                            "httpReadBufferSize": {
                              "type": "integer",
                              "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
                              "format": "int32"
                            },
                            "httpMaxRequestSize": {
                              "type": "integer",
                              "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
                              "format": "int32"
                            },
                            "logLevel": {
                              "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
                              "enum": [
                                "info",
                                "debug",
                                "warn",
                                "error"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "logLevel",
                                "modelAsString": true
                              }
                            },
                            "enableApiLogging": {
                              "description": "Enables API logging for the Dapr sidecar",
                              "type": "boolean"
                            },
                            "appHealth": {
                              "description": "Dapr application health check configuration",
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "description": "Boolean indicating if the health probe is enabled",
                                  "type": "boolean"
                                },
                                "path": {
                                  "description": "Path for the health probe",
                                  "type": "string"
                                },
                                "probeIntervalSeconds": {
                                  "description": "Interval for the health probe in seconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "probeTimeoutMilliseconds": {
                                  "description": "Timeout for the health probe in milliseconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "threshold": {
                                  "description": "Threshold for the health probe",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                }
                              }
                            },
                            "maxConcurrency": {
                              "description": "Maximum number of concurrent requests, events handled by the Dapr sidecar",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "runtime": {
                          "description": "App runtime configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "java": {
                              "description": "Java app configuration",
                              "type": "object",
                              "properties": {
                                "enableMetrics": {
                                  "description": "Enable jmx core metrics for the java app",
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "maxInactiveRevisions": {
                          "format": "int32",
                          "description": "Optional. Max inactive revisions a Container App can have.",
                          "type": "integer"
                        },
                        "service": {
                          "description": "Container App to be a dev Container App Service",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "description": "Dev ContainerApp service type",
                              "type": "string"
                            }
                          }
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container App versioned application definition.",
                      "type": "object",
                      "properties": {
                        "revisionSuffix": {
                          "description": "User friendly suffix that is appended to the revision name",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "scale": {
                          "description": "Scaling properties for the Container App.",
                          "type": "object",
                          "properties": {
                            "minReplicas": {
                              "format": "int32",
                              "description": "Optional. Minimum number of container replicas.",
                              "type": "integer"
                            },
                            "maxReplicas": {
                              "format": "int32",
                              "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                              "type": "integer",
                              "default": 10
                            },
                            "cooldownPeriod": {
                              "format": "int32",
                              "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                              "type": "integer"
                            },
                            "pollingInterval": {
                              "format": "int32",
                              "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                              "type": "integer"
                            },
                            "rules": {
                              "description": "Scaling rules.",
                              "type": "array",
                              "items": {
                                "description": "Container App container scaling rule.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Scale Rule Name",
                                    "type": "string"
                                  },
                                  "azureQueue": {
                                    "description": "Azure Queue based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "accountName": {
                                        "description": "Storage account name. required if using managed identity to authenticate",
                                        "type": "string"
                                      },
                                      "queueName": {
                                        "description": "Queue name.",
                                        "type": "string"
                                      },
                                      "queueLength": {
                                        "format": "int32",
                                        "description": "Queue length.",
                                        "type": "integer"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the queue scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "custom": {
                                    "description": "Custom scale rule.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe custom scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "http": {
                                    "description": "HTTP requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe http scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcp": {
                                    "description": "Tcp requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe tcp scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the tcp scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "serviceBinds": {
                          "description": "List of container app services bound to the app",
                          "type": "array",
                          "items": {
                            "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                            "type": "object",
                            "properties": {
                              "serviceId": {
                                "description": "Resource id of the target service",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the service bind",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifier": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses for container app.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container app.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "202": {
            "description": "Patch operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/listCustomHostNameAnalysis": {
      "post": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Analyzes a custom hostname for a Container App",
        "operationId": "ContainerApps_ListCustomHostNameAnalysis",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "customHostname",
            "in": "query",
            "description": "Custom hostname.",
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Custom domain analysis.",
              "type": "object",
              "properties": {
                "hostName": {
                  "description": "Host name that was analyzed",
                  "type": "string",
                  "readOnly": true
                },
                "isHostnameAlreadyVerified": {
                  "description": "<code>true</code> if hostname is already verified; otherwise, <code>false</code>.",
                  "type": "boolean",
                  "readOnly": true
                },
                "customDomainVerificationTest": {
                  "description": "DNS verification test result.",
                  "enum": [
                    "Passed",
                    "Failed",
                    "Skipped"
                  ],
                  "type": "string",
                  "readOnly": true,
                  "x-ms-enum": {
                    "name": "DnsVerificationTestResult",
                    "modelAsString": false
                  }
                },
                "customDomainVerificationFailureInfo": {
                  "description": "Raw failure information if DNS verification fails.",
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "Standardized string to programmatically identify the error.",
                      "type": "string",
                      "readOnly": true
                    },
                    "message": {
                      "description": "Detailed error description and debugging information.",
                      "type": "string",
                      "readOnly": true
                    },
                    "target": {
                      "description": "Detailed error description and debugging information.",
                      "type": "string",
                      "readOnly": true
                    },
                    "details": {
                      "type": "array",
                      "description": "Details or the error",
                      "items": {
                        "description": "Detailed errors.",
                        "type": "object",
                        "properties": {
                          "code": {
                            "description": "Standardized string to programmatically identify the error.",
                            "type": "string",
                            "readOnly": true
                          },
                          "message": {
                            "description": "Detailed error description and debugging information.",
                            "type": "string",
                            "readOnly": true
                          },
                          "target": {
                            "description": "Detailed error description and debugging information.",
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "readOnly": true
                      },
                      "x-ms-identifiers": [
                        "code"
                      ]
                    }
                  },
                  "readOnly": true
                },
                "hasConflictOnManagedEnvironment": {
                  "description": "<code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>.",
                  "type": "boolean",
                  "readOnly": true
                },
                "conflictWithEnvironmentCustomDomain": {
                  "description": "<code>true</code> if there is a conflict on the Container App's managed environment level custom domain; otherwise, <code>false</code>.",
                  "type": "boolean",
                  "readOnly": true
                },
                "conflictingContainerAppResourceId": {
                  "description": "Name of the conflicting Container App on the Managed Environment if it's within the same subscription.",
                  "type": "string",
                  "readOnly": true
                },
                "cNameRecords": {
                  "description": "CName records visible for this hostname.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "txtRecords": {
                  "description": "TXT records visible for this hostname.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "aRecords": {
                  "description": "A records visible for this hostname.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "alternateCNameRecords": {
                  "description": "Alternate CName records visible for this hostname.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "alternateTxtRecords": {
                  "description": "Alternate TXT records visible for this hostname.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/listSecrets": {
      "post": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "List secrets for a container app",
        "operationId": "ContainerApps_ListSecrets",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container App Secrets Collection ARM resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Container App Secret.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Secret Name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "value": {
                        "description": "Secret Value.",
                        "type": "string",
                        "x-ms-secret": true,
                        "readOnly": true
                      },
                      "identity": {
                        "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                        "type": "string",
                        "readOnly": true
                      },
                      "keyVaultUrl": {
                        "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/getAuthtoken": {
      "post": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Get auth token for a container app",
        "operationId": "ContainerApps_GetAuthToken",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container App Auth Token.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Container App auth token resource specific properties",
                  "type": "object",
                  "properties": {
                    "token": {
                      "description": "Auth token value.",
                      "type": "string",
                      "x-ms-secret": true,
                      "readOnly": true
                    },
                    "expires": {
                      "format": "date-time",
                      "description": "Token expiration date.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/start": {
      "post": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Start a container app",
        "operationId": "ContainerApps_Start",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Container App started successfully.",
            "schema": {
              "description": "Container App.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationTypes",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "managedBy": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "workflowapp",
                    "functionapp"
                  ],
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "x-ms-enum": {
                    "name": "kind",
                    "modelAsString": true
                  },
                  "description": "Metadata to represent the container app kind, representing if a container app is workflowapp or functionapp."
                },
                "properties": {
                  "description": "ContainerApp resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Container App.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "runningStatus": {
                      "description": "Running status of the Container App.",
                      "enum": [
                        "Progressing",
                        "Running",
                        "Stopped",
                        "Suspended",
                        "Ready"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppRunningStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Progressing",
                            "description": "Container App is transitioning between Stopped and Running states."
                          },
                          {
                            "value": "Running",
                            "description": "Container App is in Running state."
                          },
                          {
                            "value": "Stopped",
                            "description": "Container App is in Stopped state."
                          },
                          {
                            "value": "Suspended",
                            "description": "Container App Job is in Suspended state."
                          },
                          {
                            "value": "Ready",
                            "description": "Container App Job is in Ready state."
                          }
                        ]
                      }
                    },
                    "managedEnvironmentId": {
                      "description": "Deprecated. Resource ID of the Container App's environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "workloadProfileName": {
                      "description": "Workload profile name to pin for container app execution.",
                      "type": "string"
                    },
                    "latestRevisionName": {
                      "description": "Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestReadyRevisionName": {
                      "description": "Name of the latest ready revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestRevisionFqdn": {
                      "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customDomainVerificationId": {
                      "description": "Id used to verify domain name ownership",
                      "type": "string",
                      "readOnly": true
                    },
                    "configuration": {
                      "description": "Non versioned Container App configuration properties.",
                      "type": "object",
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container app",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "activeRevisionsMode": {
                          "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
                          "enum": [
                            "Multiple",
                            "Single"
                          ],
                          "type": "string",
                          "default": "Single",
                          "x-ms-enum": {
                            "name": "ActiveRevisionsMode",
                            "modelAsString": true
                          }
                        },
                        "ingress": {
                          "description": "Ingress configurations.",
                          "type": "object",
                          "properties": {
                            "fqdn": {
                              "description": "Hostname.",
                              "type": "string",
                              "readOnly": true
                            },
                            "external": {
                              "description": "Bool indicating if app exposes an external http endpoint",
                              "default": false,
                              "type": "boolean"
                            },
                            "targetPort": {
                              "format": "int32",
                              "description": "Target Port in containers for traffic from ingress",
                              "type": "integer"
                            },
                            "exposedPort": {
                              "format": "int32",
                              "description": "Exposed Port in containers for TCP traffic from ingress",
                              "type": "integer"
                            },
                            "transport": {
                              "description": "Ingress transport protocol",
                              "enum": [
                                "auto",
                                "http",
                                "http2",
                                "tcp"
                              ],
                              "type": "string",
                              "default": "auto",
                              "x-ms-enum": {
                                "name": "IngressTransportMethod",
                                "modelAsString": true
                              }
                            },
                            "traffic": {
                              "description": "Traffic weights for app's revisions",
                              "type": "array",
                              "items": {
                                "description": "Traffic weight assigned to a revision",
                                "type": "object",
                                "properties": {
                                  "revisionName": {
                                    "description": "Name of a revision",
                                    "type": "string"
                                  },
                                  "weight": {
                                    "format": "int32",
                                    "description": "Traffic weight assigned to a revision",
                                    "type": "integer"
                                  },
                                  "latestRevision": {
                                    "description": "Indicates that the traffic weight belongs to a latest stable revision",
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "label": {
                                    "description": "Associates a traffic label with a revision",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "revisionName"
                              ]
                            },
                            "customDomains": {
                              "description": "custom domain bindings for Container Apps' hostnames.",
                              "type": "array",
                              "items": {
                                "description": "Custom Domain of a Container App",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Hostname.",
                                    "type": "string"
                                  },
                                  "bindingType": {
                                    "description": "Custom Domain binding type.",
                                    "enum": [
                                      "Disabled",
                                      "SniEnabled",
                                      "Auto"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "bindingType",
                                      "modelAsString": true
                                    }
                                  },
                                  "certificateId": {
                                    "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "allowInsecure": {
                              "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
                              "type": "boolean",
                              "default": false
                            },
                            "ipSecurityRestrictions": {
                              "description": "Rules to restrict incoming IP address.",
                              "type": "array",
                              "items": {
                                "description": "Rule to restrict incoming IP address.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "ipAddressRange",
                                  "action"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name for the IP restriction rule.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
                                    "type": "string"
                                  },
                                  "ipAddressRange": {
                                    "description": "CIDR notation to match incoming IP address",
                                    "type": "string"
                                  },
                                  "action": {
                                    "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
                                    "enum": [
                                      "Allow",
                                      "Deny"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "action",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "stickySessions": {
                              "description": "Sticky Sessions for Single Revision Mode",
                              "type": "object",
                              "properties": {
                                "affinity": {
                                  "description": "Sticky Session Affinity",
                                  "enum": [
                                    "sticky",
                                    "none"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "affinity",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "clientCertificateMode": {
                              "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
                              "enum": [
                                "ignore",
                                "accept",
                                "require"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "IngressClientCertificateMode",
                                "modelAsString": true
                              }
                            },
                            "corsPolicy": {
                              "description": "CORS policy for container app",
                              "type": "object",
                              "required": [
                                "allowedOrigins"
                              ],
                              "properties": {
                                "allowedOrigins": {
                                  "description": "Specifies the content for the access-control-allow-origins header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedMethods": {
                                  "description": "Specifies the content for the access-control-allow-methods header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedHeaders": {
                                  "description": "Specifies the content for the access-control-allow-headers header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "exposeHeaders": {
                                  "description": "Specifies the content for the access-control-expose-headers header ",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "maxAge": {
                                  "format": "int32",
                                  "description": "Specifies the content for the access-control-max-age header",
                                  "type": "integer"
                                },
                                "allowCredentials": {
                                  "description": "Specifies whether the resource allows credentials",
                                  "type": "boolean"
                                }
                              }
                            },
                            "additionalPortMappings": {
                              "description": "Settings to expose additional ports on container app",
                              "type": "array",
                              "items": {
                                "description": "Port mappings of container app ingress",
                                "type": "object",
                                "required": [
                                  "external",
                                  "targetPort"
                                ],
                                "properties": {
                                  "external": {
                                    "description": "Specifies whether the app port is accessible outside of the environment",
                                    "type": "boolean"
                                  },
                                  "targetPort": {
                                    "format": "int32",
                                    "description": "Specifies the port user's container listens on",
                                    "type": "integer"
                                  },
                                  "exposedPort": {
                                    "format": "int32",
                                    "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
                                    "type": "integer"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "targetPort"
                              ]
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials for containers used by the Container app",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "dapr": {
                          "description": "Dapr configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Boolean indicating if the Dapr side car is enabled",
                              "type": "boolean",
                              "default": false
                            },
                            "appId": {
                              "description": "Dapr application identifier",
                              "type": "string"
                            },
                            "appProtocol": {
                              "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
                              "enum": [
                                "http",
                                "grpc"
                              ],
                              "type": "string",
                              "default": "http",
                              "x-ms-enum": {
                                "name": "appProtocol",
                                "modelAsString": true
                              }
                            },
                            "appPort": {
                              "format": "int32",
                              "description": "Tells Dapr which port your application is listening on",
                              "type": "integer"
                            },
                            "httpReadBufferSize": {
                              "type": "integer",
                              "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
                              "format": "int32"
                            },
                            "httpMaxRequestSize": {
                              "type": "integer",
                              "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
                              "format": "int32"
                            },
                            "logLevel": {
                              "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
                              "enum": [
                                "info",
                                "debug",
                                "warn",
                                "error"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "logLevel",
                                "modelAsString": true
                              }
                            },
                            "enableApiLogging": {
                              "description": "Enables API logging for the Dapr sidecar",
                              "type": "boolean"
                            },
                            "appHealth": {
                              "description": "Dapr application health check configuration",
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "description": "Boolean indicating if the health probe is enabled",
                                  "type": "boolean"
                                },
                                "path": {
                                  "description": "Path for the health probe",
                                  "type": "string"
                                },
                                "probeIntervalSeconds": {
                                  "description": "Interval for the health probe in seconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "probeTimeoutMilliseconds": {
                                  "description": "Timeout for the health probe in milliseconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "threshold": {
                                  "description": "Threshold for the health probe",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                }
                              }
                            },
                            "maxConcurrency": {
                              "description": "Maximum number of concurrent requests, events handled by the Dapr sidecar",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "runtime": {
                          "description": "App runtime configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "java": {
                              "description": "Java app configuration",
                              "type": "object",
                              "properties": {
                                "enableMetrics": {
                                  "description": "Enable jmx core metrics for the java app",
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "maxInactiveRevisions": {
                          "format": "int32",
                          "description": "Optional. Max inactive revisions a Container App can have.",
                          "type": "integer"
                        },
                        "service": {
                          "description": "Container App to be a dev Container App Service",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "description": "Dev ContainerApp service type",
                              "type": "string"
                            }
                          }
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container App versioned application definition.",
                      "type": "object",
                      "properties": {
                        "revisionSuffix": {
                          "description": "User friendly suffix that is appended to the revision name",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "scale": {
                          "description": "Scaling properties for the Container App.",
                          "type": "object",
                          "properties": {
                            "minReplicas": {
                              "format": "int32",
                              "description": "Optional. Minimum number of container replicas.",
                              "type": "integer"
                            },
                            "maxReplicas": {
                              "format": "int32",
                              "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                              "type": "integer",
                              "default": 10
                            },
                            "cooldownPeriod": {
                              "format": "int32",
                              "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                              "type": "integer"
                            },
                            "pollingInterval": {
                              "format": "int32",
                              "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                              "type": "integer"
                            },
                            "rules": {
                              "description": "Scaling rules.",
                              "type": "array",
                              "items": {
                                "description": "Container App container scaling rule.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Scale Rule Name",
                                    "type": "string"
                                  },
                                  "azureQueue": {
                                    "description": "Azure Queue based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "accountName": {
                                        "description": "Storage account name. required if using managed identity to authenticate",
                                        "type": "string"
                                      },
                                      "queueName": {
                                        "description": "Queue name.",
                                        "type": "string"
                                      },
                                      "queueLength": {
                                        "format": "int32",
                                        "description": "Queue length.",
                                        "type": "integer"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the queue scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "custom": {
                                    "description": "Custom scale rule.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe custom scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "http": {
                                    "description": "HTTP requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe http scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcp": {
                                    "description": "Tcp requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe tcp scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the tcp scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "serviceBinds": {
                          "description": "List of container app services bound to the app",
                          "type": "array",
                          "items": {
                            "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                            "type": "object",
                            "properties": {
                              "serviceId": {
                                "description": "Resource id of the target service",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the service bind",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifier": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses for container app.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container app.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "202": {
            "description": "Start operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/stop": {
      "post": {
        "tags": [
          "ContainerApps"
        ],
        "summary": "Stop a container app",
        "operationId": "ContainerApps_Stop",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "Container App stopped successfully.",
            "schema": {
              "description": "Container App.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationTypes",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "managedBy": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "workflowapp",
                    "functionapp"
                  ],
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "x-ms-enum": {
                    "name": "kind",
                    "modelAsString": true
                  },
                  "description": "Metadata to represent the container app kind, representing if a container app is workflowapp or functionapp."
                },
                "properties": {
                  "description": "ContainerApp resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Container App.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "runningStatus": {
                      "description": "Running status of the Container App.",
                      "enum": [
                        "Progressing",
                        "Running",
                        "Stopped",
                        "Suspended",
                        "Ready"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppRunningStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Progressing",
                            "description": "Container App is transitioning between Stopped and Running states."
                          },
                          {
                            "value": "Running",
                            "description": "Container App is in Running state."
                          },
                          {
                            "value": "Stopped",
                            "description": "Container App is in Stopped state."
                          },
                          {
                            "value": "Suspended",
                            "description": "Container App Job is in Suspended state."
                          },
                          {
                            "value": "Ready",
                            "description": "Container App Job is in Ready state."
                          }
                        ]
                      }
                    },
                    "managedEnvironmentId": {
                      "description": "Deprecated. Resource ID of the Container App's environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "workloadProfileName": {
                      "description": "Workload profile name to pin for container app execution.",
                      "type": "string"
                    },
                    "latestRevisionName": {
                      "description": "Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestReadyRevisionName": {
                      "description": "Name of the latest ready revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestRevisionFqdn": {
                      "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customDomainVerificationId": {
                      "description": "Id used to verify domain name ownership",
                      "type": "string",
                      "readOnly": true
                    },
                    "configuration": {
                      "description": "Non versioned Container App configuration properties.",
                      "type": "object",
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container app",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "activeRevisionsMode": {
                          "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
                          "enum": [
                            "Multiple",
                            "Single"
                          ],
                          "type": "string",
                          "default": "Single",
                          "x-ms-enum": {
                            "name": "ActiveRevisionsMode",
                            "modelAsString": true
                          }
                        },
                        "ingress": {
                          "description": "Ingress configurations.",
                          "type": "object",
                          "properties": {
                            "fqdn": {
                              "description": "Hostname.",
                              "type": "string",
                              "readOnly": true
                            },
                            "external": {
                              "description": "Bool indicating if app exposes an external http endpoint",
                              "default": false,
                              "type": "boolean"
                            },
                            "targetPort": {
                              "format": "int32",
                              "description": "Target Port in containers for traffic from ingress",
                              "type": "integer"
                            },
                            "exposedPort": {
                              "format": "int32",
                              "description": "Exposed Port in containers for TCP traffic from ingress",
                              "type": "integer"
                            },
                            "transport": {
                              "description": "Ingress transport protocol",
                              "enum": [
                                "auto",
                                "http",
                                "http2",
                                "tcp"
                              ],
                              "type": "string",
                              "default": "auto",
                              "x-ms-enum": {
                                "name": "IngressTransportMethod",
                                "modelAsString": true
                              }
                            },
                            "traffic": {
                              "description": "Traffic weights for app's revisions",
                              "type": "array",
                              "items": {
                                "description": "Traffic weight assigned to a revision",
                                "type": "object",
                                "properties": {
                                  "revisionName": {
                                    "description": "Name of a revision",
                                    "type": "string"
                                  },
                                  "weight": {
                                    "format": "int32",
                                    "description": "Traffic weight assigned to a revision",
                                    "type": "integer"
                                  },
                                  "latestRevision": {
                                    "description": "Indicates that the traffic weight belongs to a latest stable revision",
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "label": {
                                    "description": "Associates a traffic label with a revision",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "revisionName"
                              ]
                            },
                            "customDomains": {
                              "description": "custom domain bindings for Container Apps' hostnames.",
                              "type": "array",
                              "items": {
                                "description": "Custom Domain of a Container App",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Hostname.",
                                    "type": "string"
                                  },
                                  "bindingType": {
                                    "description": "Custom Domain binding type.",
                                    "enum": [
                                      "Disabled",
                                      "SniEnabled",
                                      "Auto"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "bindingType",
                                      "modelAsString": true
                                    }
                                  },
                                  "certificateId": {
                                    "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "allowInsecure": {
                              "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
                              "type": "boolean",
                              "default": false
                            },
                            "ipSecurityRestrictions": {
                              "description": "Rules to restrict incoming IP address.",
                              "type": "array",
                              "items": {
                                "description": "Rule to restrict incoming IP address.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "ipAddressRange",
                                  "action"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name for the IP restriction rule.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
                                    "type": "string"
                                  },
                                  "ipAddressRange": {
                                    "description": "CIDR notation to match incoming IP address",
                                    "type": "string"
                                  },
                                  "action": {
                                    "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
                                    "enum": [
                                      "Allow",
                                      "Deny"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "action",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "stickySessions": {
                              "description": "Sticky Sessions for Single Revision Mode",
                              "type": "object",
                              "properties": {
                                "affinity": {
                                  "description": "Sticky Session Affinity",
                                  "enum": [
                                    "sticky",
                                    "none"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "affinity",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "clientCertificateMode": {
                              "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
                              "enum": [
                                "ignore",
                                "accept",
                                "require"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "IngressClientCertificateMode",
                                "modelAsString": true
                              }
                            },
                            "corsPolicy": {
                              "description": "CORS policy for container app",
                              "type": "object",
                              "required": [
                                "allowedOrigins"
                              ],
                              "properties": {
                                "allowedOrigins": {
                                  "description": "Specifies the content for the access-control-allow-origins header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedMethods": {
                                  "description": "Specifies the content for the access-control-allow-methods header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedHeaders": {
                                  "description": "Specifies the content for the access-control-allow-headers header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "exposeHeaders": {
                                  "description": "Specifies the content for the access-control-expose-headers header ",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "maxAge": {
                                  "format": "int32",
                                  "description": "Specifies the content for the access-control-max-age header",
                                  "type": "integer"
                                },
                                "allowCredentials": {
                                  "description": "Specifies whether the resource allows credentials",
                                  "type": "boolean"
                                }
                              }
                            },
                            "additionalPortMappings": {
                              "description": "Settings to expose additional ports on container app",
                              "type": "array",
                              "items": {
                                "description": "Port mappings of container app ingress",
                                "type": "object",
                                "required": [
                                  "external",
                                  "targetPort"
                                ],
                                "properties": {
                                  "external": {
                                    "description": "Specifies whether the app port is accessible outside of the environment",
                                    "type": "boolean"
                                  },
                                  "targetPort": {
                                    "format": "int32",
                                    "description": "Specifies the port user's container listens on",
                                    "type": "integer"
                                  },
                                  "exposedPort": {
                                    "format": "int32",
                                    "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
                                    "type": "integer"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "targetPort"
                              ]
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials for containers used by the Container app",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "dapr": {
                          "description": "Dapr configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Boolean indicating if the Dapr side car is enabled",
                              "type": "boolean",
                              "default": false
                            },
                            "appId": {
                              "description": "Dapr application identifier",
                              "type": "string"
                            },
                            "appProtocol": {
                              "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
                              "enum": [
                                "http",
                                "grpc"
                              ],
                              "type": "string",
                              "default": "http",
                              "x-ms-enum": {
                                "name": "appProtocol",
                                "modelAsString": true
                              }
                            },
                            "appPort": {
                              "format": "int32",
                              "description": "Tells Dapr which port your application is listening on",
                              "type": "integer"
                            },
                            "httpReadBufferSize": {
                              "type": "integer",
                              "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
                              "format": "int32"
                            },
                            "httpMaxRequestSize": {
                              "type": "integer",
                              "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
                              "format": "int32"
                            },
                            "logLevel": {
                              "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
                              "enum": [
                                "info",
                                "debug",
                                "warn",
                                "error"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "logLevel",
                                "modelAsString": true
                              }
                            },
                            "enableApiLogging": {
                              "description": "Enables API logging for the Dapr sidecar",
                              "type": "boolean"
                            },
                            "appHealth": {
                              "description": "Dapr application health check configuration",
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "description": "Boolean indicating if the health probe is enabled",
                                  "type": "boolean"
                                },
                                "path": {
                                  "description": "Path for the health probe",
                                  "type": "string"
                                },
                                "probeIntervalSeconds": {
                                  "description": "Interval for the health probe in seconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "probeTimeoutMilliseconds": {
                                  "description": "Timeout for the health probe in milliseconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "threshold": {
                                  "description": "Threshold for the health probe",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                }
                              }
                            },
                            "maxConcurrency": {
                              "description": "Maximum number of concurrent requests, events handled by the Dapr sidecar",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "runtime": {
                          "description": "App runtime configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "java": {
                              "description": "Java app configuration",
                              "type": "object",
                              "properties": {
                                "enableMetrics": {
                                  "description": "Enable jmx core metrics for the java app",
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "maxInactiveRevisions": {
                          "format": "int32",
                          "description": "Optional. Max inactive revisions a Container App can have.",
                          "type": "integer"
                        },
                        "service": {
                          "description": "Container App to be a dev Container App Service",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "description": "Dev ContainerApp service type",
                              "type": "string"
                            }
                          }
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container App versioned application definition.",
                      "type": "object",
                      "properties": {
                        "revisionSuffix": {
                          "description": "User friendly suffix that is appended to the revision name",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "scale": {
                          "description": "Scaling properties for the Container App.",
                          "type": "object",
                          "properties": {
                            "minReplicas": {
                              "format": "int32",
                              "description": "Optional. Minimum number of container replicas.",
                              "type": "integer"
                            },
                            "maxReplicas": {
                              "format": "int32",
                              "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                              "type": "integer",
                              "default": 10
                            },
                            "cooldownPeriod": {
                              "format": "int32",
                              "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                              "type": "integer"
                            },
                            "pollingInterval": {
                              "format": "int32",
                              "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                              "type": "integer"
                            },
                            "rules": {
                              "description": "Scaling rules.",
                              "type": "array",
                              "items": {
                                "description": "Container App container scaling rule.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Scale Rule Name",
                                    "type": "string"
                                  },
                                  "azureQueue": {
                                    "description": "Azure Queue based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "accountName": {
                                        "description": "Storage account name. required if using managed identity to authenticate",
                                        "type": "string"
                                      },
                                      "queueName": {
                                        "description": "Queue name.",
                                        "type": "string"
                                      },
                                      "queueLength": {
                                        "format": "int32",
                                        "description": "Queue length.",
                                        "type": "integer"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the queue scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "custom": {
                                    "description": "Custom scale rule.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe custom scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "http": {
                                    "description": "HTTP requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe http scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcp": {
                                    "description": "Tcp requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe tcp scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the tcp scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "serviceBinds": {
                          "description": "List of container app services bound to the app",
                          "type": "array",
                          "items": {
                            "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                            "type": "object",
                            "properties": {
                              "serviceId": {
                                "description": "Resource id of the target service",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the service bind",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifier": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses for container app.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container app.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "202": {
            "description": "Stop operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions": {
      "get": {
        "tags": [
          "ContainerAppsRevisions"
        ],
        "summary": "Get the Revisions for a given Container App.",
        "operationId": "ContainerAppsRevisions_ListRevisions",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App for which Revisions are needed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container App Revisions collection ARM resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Container App Revision.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Revision resource specific properties",
                        "type": "object",
                        "properties": {
                          "createdTime": {
                            "format": "date-time",
                            "description": "Timestamp describing when the revision was created\nby controller",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastActiveTime": {
                            "format": "date-time",
                            "description": "Timestamp describing when the revision was last active. Only meaningful when revision is inactive",
                            "type": "string",
                            "readOnly": true
                          },
                          "fqdn": {
                            "description": "Fully qualified domain name of the revision",
                            "type": "string",
                            "readOnly": true
                          },
                          "template": {
                            "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "revisionSuffix": {
                                "description": "User friendly suffix that is appended to the revision name",
                                "type": "string"
                              },
                              "terminationGracePeriodSeconds": {
                                "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                                "format": "int64",
                                "type": "integer"
                              },
                              "initContainers": {
                                "description": "List of specialized containers that run before app containers.",
                                "type": "array",
                                "items": {
                                  "description": "Container App init container definition",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "volumeMounts": {
                                      "description": "Container volume mounts.",
                                      "type": "array",
                                      "items": {
                                        "description": "Volume mount for the Container App.",
                                        "type": "object",
                                        "properties": {
                                          "volumeName": {
                                            "description": "This must match the Name of a Volume.",
                                            "type": "string"
                                          },
                                          "mountPath": {
                                            "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                            "type": "string"
                                          },
                                          "subPath": {
                                            "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "volumeName"
                                      ]
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "containers": {
                                "description": "List of container definitions for the Container App.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container definition",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "volumeMounts": {
                                      "description": "Container volume mounts.",
                                      "type": "array",
                                      "items": {
                                        "description": "Volume mount for the Container App.",
                                        "type": "object",
                                        "properties": {
                                          "volumeName": {
                                            "description": "This must match the Name of a Volume.",
                                            "type": "string"
                                          },
                                          "mountPath": {
                                            "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                            "type": "string"
                                          },
                                          "subPath": {
                                            "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "volumeName"
                                      ]
                                    },
                                    "probes": {
                                      "description": "List of probes for the container.",
                                      "type": "array",
                                      "items": {
                                        "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                        "type": "object",
                                        "properties": {
                                          "failureThreshold": {
                                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "httpGet": {
                                            "description": "HTTPGet specifies the http request to perform.",
                                            "type": "object",
                                            "required": [
                                              "port"
                                            ],
                                            "properties": {
                                              "host": {
                                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                "type": "string"
                                              },
                                              "httpHeaders": {
                                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                                "type": "array",
                                                "items": {
                                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                                  "type": "object",
                                                  "required": [
                                                    "name",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "name": {
                                                      "description": "The header field name",
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "description": "The header field value",
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "x-ms-identifiers": [
                                                  "name"
                                                ]
                                              },
                                              "path": {
                                                "description": "Path to access on the HTTP server.",
                                                "type": "string"
                                              },
                                              "port": {
                                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "scheme": {
                                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                                "enum": [
                                                  "HTTP",
                                                  "HTTPS"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "name": "Scheme",
                                                  "modelAsString": true
                                                }
                                              }
                                            }
                                          },
                                          "initialDelaySeconds": {
                                            "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "periodSeconds": {
                                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "successThreshold": {
                                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "tcpSocket": {
                                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                            "type": "object",
                                            "required": [
                                              "port"
                                            ],
                                            "properties": {
                                              "host": {
                                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                                "type": "string"
                                              },
                                              "port": {
                                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                "type": "integer",
                                                "format": "int32"
                                              }
                                            }
                                          },
                                          "terminationGracePeriodSeconds": {
                                            "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "timeoutSeconds": {
                                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "type": {
                                            "description": "The type of probe.",
                                            "enum": [
                                              "Liveness",
                                              "Readiness",
                                              "Startup"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "name": "Type",
                                              "modelAsString": true
                                            }
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "type"
                                      ]
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "scale": {
                                "description": "Scaling properties for the Container App.",
                                "type": "object",
                                "properties": {
                                  "minReplicas": {
                                    "format": "int32",
                                    "description": "Optional. Minimum number of container replicas.",
                                    "type": "integer"
                                  },
                                  "maxReplicas": {
                                    "format": "int32",
                                    "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                                    "type": "integer",
                                    "default": 10
                                  },
                                  "cooldownPeriod": {
                                    "format": "int32",
                                    "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                                    "type": "integer"
                                  },
                                  "pollingInterval": {
                                    "format": "int32",
                                    "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                                    "type": "integer"
                                  },
                                  "rules": {
                                    "description": "Scaling rules.",
                                    "type": "array",
                                    "items": {
                                      "description": "Container App container scaling rule.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Scale Rule Name",
                                          "type": "string"
                                        },
                                        "azureQueue": {
                                          "description": "Azure Queue based scaling.",
                                          "type": "object",
                                          "properties": {
                                            "accountName": {
                                              "description": "Storage account name. required if using managed identity to authenticate",
                                              "type": "string"
                                            },
                                            "queueName": {
                                              "description": "Queue name.",
                                              "type": "string"
                                            },
                                            "queueLength": {
                                              "format": "int32",
                                              "description": "Queue length.",
                                              "type": "integer"
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the queue scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "custom": {
                                          "description": "Custom scale rule.",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                              "type": "string"
                                            },
                                            "metadata": {
                                              "description": "Metadata properties to describe custom scale rule.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the custom scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "http": {
                                          "description": "HTTP requests based scaling.",
                                          "type": "object",
                                          "properties": {
                                            "metadata": {
                                              "description": "Metadata properties to describe http scale rule.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the custom scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "tcp": {
                                          "description": "Tcp requests based scaling.",
                                          "type": "object",
                                          "properties": {
                                            "metadata": {
                                              "description": "Metadata properties to describe tcp scale rule.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the tcp scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ]
                                  }
                                }
                              },
                              "volumes": {
                                "description": "List of volume definitions for the Container App.",
                                "type": "array",
                                "items": {
                                  "description": "Volume definitions for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Volume name.",
                                      "type": "string"
                                    },
                                    "storageType": {
                                      "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                      "enum": [
                                        "AzureFile",
                                        "EmptyDir",
                                        "Secret",
                                        "NfsAzureFile"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "StorageType",
                                        "modelAsString": true
                                      }
                                    },
                                    "storageName": {
                                      "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                      "type": "string"
                                    },
                                    "secrets": {
                                      "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                      "type": "array",
                                      "items": {
                                        "description": "Secret to be added to volume.",
                                        "type": "object",
                                        "properties": {
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the secret value.",
                                            "type": "string"
                                          },
                                          "path": {
                                            "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "secretRef"
                                      ]
                                    },
                                    "mountOptions": {
                                      "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "serviceBinds": {
                                "description": "List of container app services bound to the app",
                                "type": "array",
                                "items": {
                                  "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                                  "type": "object",
                                  "properties": {
                                    "serviceId": {
                                      "description": "Resource id of the target service",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the service bind",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifier": [
                                  "name"
                                ]
                              }
                            }
                          },
                          "active": {
                            "description": "Boolean describing if the Revision is Active",
                            "type": "boolean",
                            "readOnly": true
                          },
                          "replicas": {
                            "format": "int32",
                            "description": "Number of pods currently running for this revision",
                            "type": "integer",
                            "readOnly": true
                          },
                          "trafficWeight": {
                            "format": "int32",
                            "description": "Traffic weight assigned to this revision",
                            "type": "integer",
                            "readOnly": true
                          },
                          "provisioningError": {
                            "description": "Optional Field - Platform Error Message",
                            "type": "string",
                            "readOnly": true
                          },
                          "healthState": {
                            "description": "Current health State of the revision",
                            "enum": [
                              "Healthy",
                              "Unhealthy",
                              "None"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "RevisionHealthState",
                              "modelAsString": true
                            }
                          },
                          "provisioningState": {
                            "description": "Current provisioning State of the revision",
                            "enum": [
                              "Provisioning",
                              "Provisioned",
                              "Failed",
                              "Deprovisioning",
                              "Deprovisioned"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "RevisionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "runningState": {
                            "description": "Current running state of the revision",
                            "enum": [
                              "Running",
                              "Processing",
                              "Stopped",
                              "Degraded",
                              "Failed",
                              "Unknown"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "RevisionRunningState",
                              "modelAsString": true
                            }
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "x-ms-odata": "#/definitions/Revision"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}": {
      "get": {
        "tags": [
          "ContainerAppsRevisions"
        ],
        "summary": "Get a revision of a Container App.",
        "operationId": "ContainerAppsRevisions_GetRevision",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container App Revision.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Revision resource specific properties",
                  "type": "object",
                  "properties": {
                    "createdTime": {
                      "format": "date-time",
                      "description": "Timestamp describing when the revision was created\nby controller",
                      "type": "string",
                      "readOnly": true
                    },
                    "lastActiveTime": {
                      "format": "date-time",
                      "description": "Timestamp describing when the revision was last active. Only meaningful when revision is inactive",
                      "type": "string",
                      "readOnly": true
                    },
                    "fqdn": {
                      "description": "Fully qualified domain name of the revision",
                      "type": "string",
                      "readOnly": true
                    },
                    "template": {
                      "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "revisionSuffix": {
                          "description": "User friendly suffix that is appended to the revision name",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "scale": {
                          "description": "Scaling properties for the Container App.",
                          "type": "object",
                          "properties": {
                            "minReplicas": {
                              "format": "int32",
                              "description": "Optional. Minimum number of container replicas.",
                              "type": "integer"
                            },
                            "maxReplicas": {
                              "format": "int32",
                              "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                              "type": "integer",
                              "default": 10
                            },
                            "cooldownPeriod": {
                              "format": "int32",
                              "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                              "type": "integer"
                            },
                            "pollingInterval": {
                              "format": "int32",
                              "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                              "type": "integer"
                            },
                            "rules": {
                              "description": "Scaling rules.",
                              "type": "array",
                              "items": {
                                "description": "Container App container scaling rule.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Scale Rule Name",
                                    "type": "string"
                                  },
                                  "azureQueue": {
                                    "description": "Azure Queue based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "accountName": {
                                        "description": "Storage account name. required if using managed identity to authenticate",
                                        "type": "string"
                                      },
                                      "queueName": {
                                        "description": "Queue name.",
                                        "type": "string"
                                      },
                                      "queueLength": {
                                        "format": "int32",
                                        "description": "Queue length.",
                                        "type": "integer"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the queue scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "custom": {
                                    "description": "Custom scale rule.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe custom scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "http": {
                                    "description": "HTTP requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe http scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcp": {
                                    "description": "Tcp requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe tcp scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the tcp scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "serviceBinds": {
                          "description": "List of container app services bound to the app",
                          "type": "array",
                          "items": {
                            "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                            "type": "object",
                            "properties": {
                              "serviceId": {
                                "description": "Resource id of the target service",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the service bind",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifier": [
                            "name"
                          ]
                        }
                      }
                    },
                    "active": {
                      "description": "Boolean describing if the Revision is Active",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "replicas": {
                      "format": "int32",
                      "description": "Number of pods currently running for this revision",
                      "type": "integer",
                      "readOnly": true
                    },
                    "trafficWeight": {
                      "format": "int32",
                      "description": "Traffic weight assigned to this revision",
                      "type": "integer",
                      "readOnly": true
                    },
                    "provisioningError": {
                      "description": "Optional Field - Platform Error Message",
                      "type": "string",
                      "readOnly": true
                    },
                    "healthState": {
                      "description": "Current health State of the revision",
                      "enum": [
                        "Healthy",
                        "Unhealthy",
                        "None"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "RevisionHealthState",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "description": "Current provisioning State of the revision",
                      "enum": [
                        "Provisioning",
                        "Provisioned",
                        "Failed",
                        "Deprovisioning",
                        "Deprovisioned"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "RevisionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "runningState": {
                      "description": "Current running state of the revision",
                      "enum": [
                        "Running",
                        "Processing",
                        "Stopped",
                        "Degraded",
                        "Failed",
                        "Unknown"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "RevisionRunningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/activate": {
      "post": {
        "tags": [
          "ContainerAppsRevisions"
        ],
        "summary": "Activates a revision for a Container App",
        "operationId": "ContainerAppsRevisions_ActivateRevision",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Container App revision was activated"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/deactivate": {
      "post": {
        "tags": [
          "ContainerAppsRevisions"
        ],
        "summary": "Deactivates a revision for a Container App",
        "operationId": "ContainerAppsRevisions_DeactivateRevision",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Container App revision was deactivated"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas/{replicaName}": {
      "get": {
        "tags": [
          "ContainerAppsRevisionReplicas"
        ],
        "summary": "Get a replica for a Container App Revision.",
        "operationId": "ContainerAppsRevisionReplicas_GetReplica",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          },
          {
            "name": "replicaName",
            "in": "path",
            "description": "Name of the Container App Revision Replica.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container App Revision Replica.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Replica resource specific properties",
                  "type": "object",
                  "properties": {
                    "createdTime": {
                      "type": "string",
                      "description": "Timestamp describing when the pod was created by controller",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "runningState": {
                      "description": "Current running state of the replica",
                      "enum": [
                        "Running",
                        "NotRunning",
                        "Unknown"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppReplicaRunningState",
                        "modelAsString": true
                      }
                    },
                    "runningStateDetails": {
                      "description": "The details of replica current running state",
                      "type": "string",
                      "readOnly": true
                    },
                    "containers": {
                      "description": "The containers collection under a replica.",
                      "type": "array",
                      "items": {
                        "description": "Container object under Container App Revision Replica.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The Name of the Container",
                            "type": "string"
                          },
                          "containerId": {
                            "description": "The Id of the Container",
                            "type": "string"
                          },
                          "ready": {
                            "description": "The container ready status",
                            "type": "boolean"
                          },
                          "started": {
                            "description": "The container start status",
                            "type": "boolean"
                          },
                          "restartCount": {
                            "format": "int32",
                            "description": "The container restart count",
                            "type": "integer"
                          },
                          "runningState": {
                            "description": "Current running state of the container",
                            "enum": [
                              "Running",
                              "Terminated",
                              "Waiting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ContainerAppContainerRunningState",
                              "modelAsString": true
                            }
                          },
                          "runningStateDetails": {
                            "description": "The details of container current running state",
                            "type": "string",
                            "readOnly": true
                          },
                          "logStreamEndpoint": {
                            "description": "Log Stream endpoint",
                            "type": "string",
                            "readOnly": true
                          },
                          "execEndpoint": {
                            "description": "Container exec endpoint",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "initContainers": {
                      "description": "The init containers collection under a replica.",
                      "type": "array",
                      "items": {
                        "description": "Container object under Container App Revision Replica.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The Name of the Container",
                            "type": "string"
                          },
                          "containerId": {
                            "description": "The Id of the Container",
                            "type": "string"
                          },
                          "ready": {
                            "description": "The container ready status",
                            "type": "boolean"
                          },
                          "started": {
                            "description": "The container start status",
                            "type": "boolean"
                          },
                          "restartCount": {
                            "format": "int32",
                            "description": "The container restart count",
                            "type": "integer"
                          },
                          "runningState": {
                            "description": "Current running state of the container",
                            "enum": [
                              "Running",
                              "Terminated",
                              "Waiting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ContainerAppContainerRunningState",
                              "modelAsString": true
                            }
                          },
                          "runningStateDetails": {
                            "description": "The details of container current running state",
                            "type": "string",
                            "readOnly": true
                          },
                          "logStreamEndpoint": {
                            "description": "Log Stream endpoint",
                            "type": "string",
                            "readOnly": true
                          },
                          "execEndpoint": {
                            "description": "Container exec endpoint",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/replicas": {
      "get": {
        "tags": [
          "ContainerAppsRevisionReplicas"
        ],
        "summary": "List replicas for a Container App Revision.",
        "operationId": "ContainerAppsRevisionReplicas_ListReplicas",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container App Revision Replicas collection ARM resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Container App Revision Replica.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Replica resource specific properties",
                        "type": "object",
                        "properties": {
                          "createdTime": {
                            "type": "string",
                            "description": "Timestamp describing when the pod was created by controller",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "runningState": {
                            "description": "Current running state of the replica",
                            "enum": [
                              "Running",
                              "NotRunning",
                              "Unknown"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "ContainerAppReplicaRunningState",
                              "modelAsString": true
                            }
                          },
                          "runningStateDetails": {
                            "description": "The details of replica current running state",
                            "type": "string",
                            "readOnly": true
                          },
                          "containers": {
                            "description": "The containers collection under a replica.",
                            "type": "array",
                            "items": {
                              "description": "Container object under Container App Revision Replica.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The Name of the Container",
                                  "type": "string"
                                },
                                "containerId": {
                                  "description": "The Id of the Container",
                                  "type": "string"
                                },
                                "ready": {
                                  "description": "The container ready status",
                                  "type": "boolean"
                                },
                                "started": {
                                  "description": "The container start status",
                                  "type": "boolean"
                                },
                                "restartCount": {
                                  "format": "int32",
                                  "description": "The container restart count",
                                  "type": "integer"
                                },
                                "runningState": {
                                  "description": "Current running state of the container",
                                  "enum": [
                                    "Running",
                                    "Terminated",
                                    "Waiting"
                                  ],
                                  "type": "string",
                                  "readOnly": true,
                                  "x-ms-enum": {
                                    "name": "ContainerAppContainerRunningState",
                                    "modelAsString": true
                                  }
                                },
                                "runningStateDetails": {
                                  "description": "The details of container current running state",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "logStreamEndpoint": {
                                  "description": "Log Stream endpoint",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "execEndpoint": {
                                  "description": "Container exec endpoint",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "initContainers": {
                            "description": "The init containers collection under a replica.",
                            "type": "array",
                            "items": {
                              "description": "Container object under Container App Revision Replica.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The Name of the Container",
                                  "type": "string"
                                },
                                "containerId": {
                                  "description": "The Id of the Container",
                                  "type": "string"
                                },
                                "ready": {
                                  "description": "The container ready status",
                                  "type": "boolean"
                                },
                                "started": {
                                  "description": "The container start status",
                                  "type": "boolean"
                                },
                                "restartCount": {
                                  "format": "int32",
                                  "description": "The container restart count",
                                  "type": "integer"
                                },
                                "runningState": {
                                  "description": "Current running state of the container",
                                  "enum": [
                                    "Running",
                                    "Terminated",
                                    "Waiting"
                                  ],
                                  "type": "string",
                                  "readOnly": true,
                                  "x-ms-enum": {
                                    "name": "ContainerAppContainerRunningState",
                                    "modelAsString": true
                                  }
                                },
                                "runningStateDetails": {
                                  "description": "The details of container current running state",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "logStreamEndpoint": {
                                  "description": "Log Stream endpoint",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "execEndpoint": {
                                  "description": "Container exec endpoint",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/revisions/{revisionName}/restart": {
      "post": {
        "tags": [
          "ContainerAppsRevisions"
        ],
        "summary": "Restarts a revision for a Container App",
        "operationId": "ContainerAppsRevisions_RestartRevision",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Container App revision was restarted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectors": {
      "get": {
        "tags": [
          "ContainerApps",
          "Diagnostics"
        ],
        "summary": "Get the list of diagnostics for a given Container App.",
        "operationId": "ContainerAppsDiagnostics_ListDetectors",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App for which detector info is needed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Diagnostics data collection for a resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of diagnostic data.",
                  "type": "array",
                  "items": {
                    "description": "Diagnostics data for a resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Diagnostics resource specific properties",
                        "type": "object",
                        "properties": {
                          "metadata": {
                            "description": "Metadata of the diagnostics response.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Unique detector name",
                                "type": "string",
                                "readOnly": true
                              },
                              "name": {
                                "description": "Display Name of the detector",
                                "type": "string",
                                "readOnly": true
                              },
                              "description": {
                                "description": "Details of the diagnostics info",
                                "type": "string",
                                "readOnly": true
                              },
                              "author": {
                                "description": "Authors' names of the detector",
                                "type": "string",
                                "readOnly": true
                              },
                              "category": {
                                "description": "Category of the detector",
                                "type": "string",
                                "readOnly": true
                              },
                              "supportTopicList": {
                                "description": "List of support topics",
                                "type": "array",
                                "items": {
                                  "description": "Support topic information",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "Unique topic identifier",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "pesId": {
                                      "description": "PES identifier",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "analysisTypes": {
                                "description": "List of analysis types",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "type": {
                                "description": "Authors' names of the detector",
                                "type": "string",
                                "readOnly": true
                              },
                              "score": {
                                "description": "Authors' names of the detector",
                                "type": "number",
                                "readOnly": true
                              }
                            }
                          },
                          "dataset": {
                            "description": "Set of data collections associated with the response.",
                            "type": "array",
                            "items": {
                              "description": "Diagnostics data returned from a detector",
                              "type": "object",
                              "properties": {
                                "table": {
                                  "description": "Table response",
                                  "type": "object",
                                  "properties": {
                                    "tableName": {
                                      "description": "Table name",
                                      "type": "string"
                                    },
                                    "columns": {
                                      "description": "Columns in the table",
                                      "type": "array",
                                      "items": {
                                        "description": "Diagnostics data column",
                                        "type": "object",
                                        "properties": {
                                          "columnName": {
                                            "description": "Column name",
                                            "type": "string"
                                          },
                                          "dataType": {
                                            "description": "Data type of the column",
                                            "type": "string"
                                          },
                                          "columnType": {
                                            "description": "Column type",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "columnName"
                                      ]
                                    },
                                    "rows": {
                                      "description": "Rows in the table",
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                },
                                "renderingProperties": {
                                  "description": "Details of the table response",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "format": "int32",
                                      "description": "Rendering type",
                                      "type": "integer"
                                    },
                                    "title": {
                                      "description": "Title of the table",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "Description of the table",
                                      "type": "string"
                                    },
                                    "isVisible": {
                                      "description": "Flag if the table should be rendered",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "status": {
                            "description": "Status of the diagnostics response.",
                            "type": "object",
                            "properties": {
                              "message": {
                                "description": "Diagnostic message",
                                "type": "string"
                              },
                              "statusId": {
                                "format": "int32",
                                "description": "Status",
                                "type": "integer"
                              }
                            }
                          },
                          "dataProviderMetadata": {
                            "description": "List of data providers' metadata.",
                            "type": "object",
                            "properties": {
                              "providerName": {
                                "description": "Name of data provider",
                                "type": "string"
                              },
                              "propertyBag": {
                                "description": "Collection of properties",
                                "type": "array",
                                "items": {
                                  "description": "Property details",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Property name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Property value",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectors/{detectorName}": {
      "get": {
        "tags": [
          "ContainerApps",
          "Diagnostics"
        ],
        "summary": "Get a diagnostics result of a Container App.",
        "operationId": "ContainerAppsDiagnostics_GetDetector",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Name of the Container App Detector.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Diagnostics data for a resource.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Diagnostics resource specific properties",
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "description": "Metadata of the diagnostics response.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Unique detector name",
                          "type": "string",
                          "readOnly": true
                        },
                        "name": {
                          "description": "Display Name of the detector",
                          "type": "string",
                          "readOnly": true
                        },
                        "description": {
                          "description": "Details of the diagnostics info",
                          "type": "string",
                          "readOnly": true
                        },
                        "author": {
                          "description": "Authors' names of the detector",
                          "type": "string",
                          "readOnly": true
                        },
                        "category": {
                          "description": "Category of the detector",
                          "type": "string",
                          "readOnly": true
                        },
                        "supportTopicList": {
                          "description": "List of support topics",
                          "type": "array",
                          "items": {
                            "description": "Support topic information",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Unique topic identifier",
                                "type": "string",
                                "readOnly": true
                              },
                              "pesId": {
                                "description": "PES identifier",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        },
                        "analysisTypes": {
                          "description": "List of analysis types",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "type": {
                          "description": "Authors' names of the detector",
                          "type": "string",
                          "readOnly": true
                        },
                        "score": {
                          "description": "Authors' names of the detector",
                          "type": "number",
                          "readOnly": true
                        }
                      }
                    },
                    "dataset": {
                      "description": "Set of data collections associated with the response.",
                      "type": "array",
                      "items": {
                        "description": "Diagnostics data returned from a detector",
                        "type": "object",
                        "properties": {
                          "table": {
                            "description": "Table response",
                            "type": "object",
                            "properties": {
                              "tableName": {
                                "description": "Table name",
                                "type": "string"
                              },
                              "columns": {
                                "description": "Columns in the table",
                                "type": "array",
                                "items": {
                                  "description": "Diagnostics data column",
                                  "type": "object",
                                  "properties": {
                                    "columnName": {
                                      "description": "Column name",
                                      "type": "string"
                                    },
                                    "dataType": {
                                      "description": "Data type of the column",
                                      "type": "string"
                                    },
                                    "columnType": {
                                      "description": "Column type",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "columnName"
                                ]
                              },
                              "rows": {
                                "description": "Rows in the table",
                                "type": "array",
                                "items": {
                                  "type": "object"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "renderingProperties": {
                            "description": "Details of the table response",
                            "type": "object",
                            "properties": {
                              "type": {
                                "format": "int32",
                                "description": "Rendering type",
                                "type": "integer"
                              },
                              "title": {
                                "description": "Title of the table",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description of the table",
                                "type": "string"
                              },
                              "isVisible": {
                                "description": "Flag if the table should be rendered",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "status": {
                      "description": "Status of the diagnostics response.",
                      "type": "object",
                      "properties": {
                        "message": {
                          "description": "Diagnostic message",
                          "type": "string"
                        },
                        "statusId": {
                          "format": "int32",
                          "description": "Status",
                          "type": "integer"
                        }
                      }
                    },
                    "dataProviderMetadata": {
                      "description": "List of data providers' metadata.",
                      "type": "object",
                      "properties": {
                        "providerName": {
                          "description": "Name of data provider",
                          "type": "string"
                        },
                        "propertyBag": {
                          "description": "Collection of properties",
                          "type": "array",
                          "items": {
                            "description": "Property details",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Property name",
                                "type": "string"
                              },
                              "value": {
                                "description": "Property value",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectorProperties/revisionsApi/revisions/": {
      "get": {
        "tags": [
          "ContainerApps",
          "Diagnostics"
        ],
        "summary": "Get the Revisions for a given Container App.",
        "operationId": "ContainerAppsDiagnostics_ListRevisions",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App for which Revisions are needed.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container App Revisions collection ARM resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Container App Revision.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Revision resource specific properties",
                        "type": "object",
                        "properties": {
                          "createdTime": {
                            "format": "date-time",
                            "description": "Timestamp describing when the revision was created\nby controller",
                            "type": "string",
                            "readOnly": true
                          },
                          "lastActiveTime": {
                            "format": "date-time",
                            "description": "Timestamp describing when the revision was last active. Only meaningful when revision is inactive",
                            "type": "string",
                            "readOnly": true
                          },
                          "fqdn": {
                            "description": "Fully qualified domain name of the revision",
                            "type": "string",
                            "readOnly": true
                          },
                          "template": {
                            "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "revisionSuffix": {
                                "description": "User friendly suffix that is appended to the revision name",
                                "type": "string"
                              },
                              "terminationGracePeriodSeconds": {
                                "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                                "format": "int64",
                                "type": "integer"
                              },
                              "initContainers": {
                                "description": "List of specialized containers that run before app containers.",
                                "type": "array",
                                "items": {
                                  "description": "Container App init container definition",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "volumeMounts": {
                                      "description": "Container volume mounts.",
                                      "type": "array",
                                      "items": {
                                        "description": "Volume mount for the Container App.",
                                        "type": "object",
                                        "properties": {
                                          "volumeName": {
                                            "description": "This must match the Name of a Volume.",
                                            "type": "string"
                                          },
                                          "mountPath": {
                                            "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                            "type": "string"
                                          },
                                          "subPath": {
                                            "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "volumeName"
                                      ]
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "containers": {
                                "description": "List of container definitions for the Container App.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container definition",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "volumeMounts": {
                                      "description": "Container volume mounts.",
                                      "type": "array",
                                      "items": {
                                        "description": "Volume mount for the Container App.",
                                        "type": "object",
                                        "properties": {
                                          "volumeName": {
                                            "description": "This must match the Name of a Volume.",
                                            "type": "string"
                                          },
                                          "mountPath": {
                                            "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                            "type": "string"
                                          },
                                          "subPath": {
                                            "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "volumeName"
                                      ]
                                    },
                                    "probes": {
                                      "description": "List of probes for the container.",
                                      "type": "array",
                                      "items": {
                                        "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                        "type": "object",
                                        "properties": {
                                          "failureThreshold": {
                                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "httpGet": {
                                            "description": "HTTPGet specifies the http request to perform.",
                                            "type": "object",
                                            "required": [
                                              "port"
                                            ],
                                            "properties": {
                                              "host": {
                                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                "type": "string"
                                              },
                                              "httpHeaders": {
                                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                                "type": "array",
                                                "items": {
                                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                                  "type": "object",
                                                  "required": [
                                                    "name",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "name": {
                                                      "description": "The header field name",
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "description": "The header field value",
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "x-ms-identifiers": [
                                                  "name"
                                                ]
                                              },
                                              "path": {
                                                "description": "Path to access on the HTTP server.",
                                                "type": "string"
                                              },
                                              "port": {
                                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "scheme": {
                                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                                "enum": [
                                                  "HTTP",
                                                  "HTTPS"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "name": "Scheme",
                                                  "modelAsString": true
                                                }
                                              }
                                            }
                                          },
                                          "initialDelaySeconds": {
                                            "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "periodSeconds": {
                                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "successThreshold": {
                                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "tcpSocket": {
                                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                            "type": "object",
                                            "required": [
                                              "port"
                                            ],
                                            "properties": {
                                              "host": {
                                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                                "type": "string"
                                              },
                                              "port": {
                                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                "type": "integer",
                                                "format": "int32"
                                              }
                                            }
                                          },
                                          "terminationGracePeriodSeconds": {
                                            "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "timeoutSeconds": {
                                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "type": {
                                            "description": "The type of probe.",
                                            "enum": [
                                              "Liveness",
                                              "Readiness",
                                              "Startup"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "name": "Type",
                                              "modelAsString": true
                                            }
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "type"
                                      ]
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "scale": {
                                "description": "Scaling properties for the Container App.",
                                "type": "object",
                                "properties": {
                                  "minReplicas": {
                                    "format": "int32",
                                    "description": "Optional. Minimum number of container replicas.",
                                    "type": "integer"
                                  },
                                  "maxReplicas": {
                                    "format": "int32",
                                    "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                                    "type": "integer",
                                    "default": 10
                                  },
                                  "cooldownPeriod": {
                                    "format": "int32",
                                    "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                                    "type": "integer"
                                  },
                                  "pollingInterval": {
                                    "format": "int32",
                                    "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                                    "type": "integer"
                                  },
                                  "rules": {
                                    "description": "Scaling rules.",
                                    "type": "array",
                                    "items": {
                                      "description": "Container App container scaling rule.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Scale Rule Name",
                                          "type": "string"
                                        },
                                        "azureQueue": {
                                          "description": "Azure Queue based scaling.",
                                          "type": "object",
                                          "properties": {
                                            "accountName": {
                                              "description": "Storage account name. required if using managed identity to authenticate",
                                              "type": "string"
                                            },
                                            "queueName": {
                                              "description": "Queue name.",
                                              "type": "string"
                                            },
                                            "queueLength": {
                                              "format": "int32",
                                              "description": "Queue length.",
                                              "type": "integer"
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the queue scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "custom": {
                                          "description": "Custom scale rule.",
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                              "type": "string"
                                            },
                                            "metadata": {
                                              "description": "Metadata properties to describe custom scale rule.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the custom scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "http": {
                                          "description": "HTTP requests based scaling.",
                                          "type": "object",
                                          "properties": {
                                            "metadata": {
                                              "description": "Metadata properties to describe http scale rule.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the custom scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "tcp": {
                                          "description": "Tcp requests based scaling.",
                                          "type": "object",
                                          "properties": {
                                            "metadata": {
                                              "description": "Metadata properties to describe tcp scale rule.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the tcp scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-ms-identifiers": [
                                                "triggerParameter"
                                              ]
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ]
                                  }
                                }
                              },
                              "volumes": {
                                "description": "List of volume definitions for the Container App.",
                                "type": "array",
                                "items": {
                                  "description": "Volume definitions for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Volume name.",
                                      "type": "string"
                                    },
                                    "storageType": {
                                      "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                      "enum": [
                                        "AzureFile",
                                        "EmptyDir",
                                        "Secret",
                                        "NfsAzureFile"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "StorageType",
                                        "modelAsString": true
                                      }
                                    },
                                    "storageName": {
                                      "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                      "type": "string"
                                    },
                                    "secrets": {
                                      "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                      "type": "array",
                                      "items": {
                                        "description": "Secret to be added to volume.",
                                        "type": "object",
                                        "properties": {
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the secret value.",
                                            "type": "string"
                                          },
                                          "path": {
                                            "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "secretRef"
                                      ]
                                    },
                                    "mountOptions": {
                                      "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "serviceBinds": {
                                "description": "List of container app services bound to the app",
                                "type": "array",
                                "items": {
                                  "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                                  "type": "object",
                                  "properties": {
                                    "serviceId": {
                                      "description": "Resource id of the target service",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the service bind",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifier": [
                                  "name"
                                ]
                              }
                            }
                          },
                          "active": {
                            "description": "Boolean describing if the Revision is Active",
                            "type": "boolean",
                            "readOnly": true
                          },
                          "replicas": {
                            "format": "int32",
                            "description": "Number of pods currently running for this revision",
                            "type": "integer",
                            "readOnly": true
                          },
                          "trafficWeight": {
                            "format": "int32",
                            "description": "Traffic weight assigned to this revision",
                            "type": "integer",
                            "readOnly": true
                          },
                          "provisioningError": {
                            "description": "Optional Field - Platform Error Message",
                            "type": "string",
                            "readOnly": true
                          },
                          "healthState": {
                            "description": "Current health State of the revision",
                            "enum": [
                              "Healthy",
                              "Unhealthy",
                              "None"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "RevisionHealthState",
                              "modelAsString": true
                            }
                          },
                          "provisioningState": {
                            "description": "Current provisioning State of the revision",
                            "enum": [
                              "Provisioning",
                              "Provisioned",
                              "Failed",
                              "Deprovisioning",
                              "Deprovisioned"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "RevisionProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "runningState": {
                            "description": "Current running state of the revision",
                            "enum": [
                              "Running",
                              "Processing",
                              "Stopped",
                              "Degraded",
                              "Failed",
                              "Unknown"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "RevisionRunningState",
                              "modelAsString": true
                            }
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        },
        "x-ms-odata": "#/definitions/Revision"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectorProperties/revisionsApi/revisions/{revisionName}": {
      "get": {
        "tags": [
          "ContainerApps",
          "Diagnostics"
        ],
        "summary": "Get a revision of a Container App.",
        "operationId": "ContainerAppsDiagnostics_GetRevision",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "revisionName",
            "in": "path",
            "description": "Name of the Container App Revision.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container App Revision.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Revision resource specific properties",
                  "type": "object",
                  "properties": {
                    "createdTime": {
                      "format": "date-time",
                      "description": "Timestamp describing when the revision was created\nby controller",
                      "type": "string",
                      "readOnly": true
                    },
                    "lastActiveTime": {
                      "format": "date-time",
                      "description": "Timestamp describing when the revision was last active. Only meaningful when revision is inactive",
                      "type": "string",
                      "readOnly": true
                    },
                    "fqdn": {
                      "description": "Fully qualified domain name of the revision",
                      "type": "string",
                      "readOnly": true
                    },
                    "template": {
                      "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "revisionSuffix": {
                          "description": "User friendly suffix that is appended to the revision name",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "scale": {
                          "description": "Scaling properties for the Container App.",
                          "type": "object",
                          "properties": {
                            "minReplicas": {
                              "format": "int32",
                              "description": "Optional. Minimum number of container replicas.",
                              "type": "integer"
                            },
                            "maxReplicas": {
                              "format": "int32",
                              "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                              "type": "integer",
                              "default": 10
                            },
                            "cooldownPeriod": {
                              "format": "int32",
                              "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                              "type": "integer"
                            },
                            "pollingInterval": {
                              "format": "int32",
                              "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                              "type": "integer"
                            },
                            "rules": {
                              "description": "Scaling rules.",
                              "type": "array",
                              "items": {
                                "description": "Container App container scaling rule.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Scale Rule Name",
                                    "type": "string"
                                  },
                                  "azureQueue": {
                                    "description": "Azure Queue based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "accountName": {
                                        "description": "Storage account name. required if using managed identity to authenticate",
                                        "type": "string"
                                      },
                                      "queueName": {
                                        "description": "Queue name.",
                                        "type": "string"
                                      },
                                      "queueLength": {
                                        "format": "int32",
                                        "description": "Queue length.",
                                        "type": "integer"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the queue scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "custom": {
                                    "description": "Custom scale rule.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe custom scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "http": {
                                    "description": "HTTP requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe http scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcp": {
                                    "description": "Tcp requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe tcp scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the tcp scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "serviceBinds": {
                          "description": "List of container app services bound to the app",
                          "type": "array",
                          "items": {
                            "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                            "type": "object",
                            "properties": {
                              "serviceId": {
                                "description": "Resource id of the target service",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the service bind",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifier": [
                            "name"
                          ]
                        }
                      }
                    },
                    "active": {
                      "description": "Boolean describing if the Revision is Active",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "replicas": {
                      "format": "int32",
                      "description": "Number of pods currently running for this revision",
                      "type": "integer",
                      "readOnly": true
                    },
                    "trafficWeight": {
                      "format": "int32",
                      "description": "Traffic weight assigned to this revision",
                      "type": "integer",
                      "readOnly": true
                    },
                    "provisioningError": {
                      "description": "Optional Field - Platform Error Message",
                      "type": "string",
                      "readOnly": true
                    },
                    "healthState": {
                      "description": "Current health State of the revision",
                      "enum": [
                        "Healthy",
                        "Unhealthy",
                        "None"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "RevisionHealthState",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "description": "Current provisioning State of the revision",
                      "enum": [
                        "Provisioning",
                        "Provisioned",
                        "Failed",
                        "Deprovisioning",
                        "Deprovisioned"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "RevisionProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "runningState": {
                      "description": "Current running state of the revision",
                      "enum": [
                        "Running",
                        "Processing",
                        "Stopped",
                        "Degraded",
                        "Failed",
                        "Unknown"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "RevisionRunningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/detectorProperties/rootApi/": {
      "get": {
        "tags": [
          "ContainerApps",
          "Diagnostics"
        ],
        "summary": "Get the properties of a Container App.",
        "operationId": "ContainerAppsDiagnostics_GetRoot",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Container App.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "extendedLocation": {
                  "type": "object",
                  "description": "The complex type of the extended location.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the extended location."
                    },
                    "type": {
                      "description": "The type of the extended location.",
                      "type": "string",
                      "enum": [
                        "CustomLocation"
                      ],
                      "x-ms-enum": {
                        "name": "ExtendedLocationTypes",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "identity": {
                  "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "managedBy": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "workflowapp",
                    "functionapp"
                  ],
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "x-ms-enum": {
                    "name": "kind",
                    "modelAsString": true
                  },
                  "description": "Metadata to represent the container app kind, representing if a container app is workflowapp or functionapp."
                },
                "properties": {
                  "description": "ContainerApp resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Container App.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "runningStatus": {
                      "description": "Running status of the Container App.",
                      "enum": [
                        "Progressing",
                        "Running",
                        "Stopped",
                        "Suspended",
                        "Ready"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "ContainerAppRunningStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Progressing",
                            "description": "Container App is transitioning between Stopped and Running states."
                          },
                          {
                            "value": "Running",
                            "description": "Container App is in Running state."
                          },
                          {
                            "value": "Stopped",
                            "description": "Container App is in Stopped state."
                          },
                          {
                            "value": "Suspended",
                            "description": "Container App Job is in Suspended state."
                          },
                          {
                            "value": "Ready",
                            "description": "Container App Job is in Ready state."
                          }
                        ]
                      }
                    },
                    "managedEnvironmentId": {
                      "description": "Deprecated. Resource ID of the Container App's environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "workloadProfileName": {
                      "description": "Workload profile name to pin for container app execution.",
                      "type": "string"
                    },
                    "latestRevisionName": {
                      "description": "Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestReadyRevisionName": {
                      "description": "Name of the latest ready revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "latestRevisionFqdn": {
                      "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customDomainVerificationId": {
                      "description": "Id used to verify domain name ownership",
                      "type": "string",
                      "readOnly": true
                    },
                    "configuration": {
                      "description": "Non versioned Container App configuration properties.",
                      "type": "object",
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container app",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "activeRevisionsMode": {
                          "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
                          "enum": [
                            "Multiple",
                            "Single"
                          ],
                          "type": "string",
                          "default": "Single",
                          "x-ms-enum": {
                            "name": "ActiveRevisionsMode",
                            "modelAsString": true
                          }
                        },
                        "ingress": {
                          "description": "Ingress configurations.",
                          "type": "object",
                          "properties": {
                            "fqdn": {
                              "description": "Hostname.",
                              "type": "string",
                              "readOnly": true
                            },
                            "external": {
                              "description": "Bool indicating if app exposes an external http endpoint",
                              "default": false,
                              "type": "boolean"
                            },
                            "targetPort": {
                              "format": "int32",
                              "description": "Target Port in containers for traffic from ingress",
                              "type": "integer"
                            },
                            "exposedPort": {
                              "format": "int32",
                              "description": "Exposed Port in containers for TCP traffic from ingress",
                              "type": "integer"
                            },
                            "transport": {
                              "description": "Ingress transport protocol",
                              "enum": [
                                "auto",
                                "http",
                                "http2",
                                "tcp"
                              ],
                              "type": "string",
                              "default": "auto",
                              "x-ms-enum": {
                                "name": "IngressTransportMethod",
                                "modelAsString": true
                              }
                            },
                            "traffic": {
                              "description": "Traffic weights for app's revisions",
                              "type": "array",
                              "items": {
                                "description": "Traffic weight assigned to a revision",
                                "type": "object",
                                "properties": {
                                  "revisionName": {
                                    "description": "Name of a revision",
                                    "type": "string"
                                  },
                                  "weight": {
                                    "format": "int32",
                                    "description": "Traffic weight assigned to a revision",
                                    "type": "integer"
                                  },
                                  "latestRevision": {
                                    "description": "Indicates that the traffic weight belongs to a latest stable revision",
                                    "default": false,
                                    "type": "boolean"
                                  },
                                  "label": {
                                    "description": "Associates a traffic label with a revision",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "revisionName"
                              ]
                            },
                            "customDomains": {
                              "description": "custom domain bindings for Container Apps' hostnames.",
                              "type": "array",
                              "items": {
                                "description": "Custom Domain of a Container App",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Hostname.",
                                    "type": "string"
                                  },
                                  "bindingType": {
                                    "description": "Custom Domain binding type.",
                                    "enum": [
                                      "Disabled",
                                      "SniEnabled",
                                      "Auto"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "bindingType",
                                      "modelAsString": true
                                    }
                                  },
                                  "certificateId": {
                                    "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "allowInsecure": {
                              "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
                              "type": "boolean",
                              "default": false
                            },
                            "ipSecurityRestrictions": {
                              "description": "Rules to restrict incoming IP address.",
                              "type": "array",
                              "items": {
                                "description": "Rule to restrict incoming IP address.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "ipAddressRange",
                                  "action"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name for the IP restriction rule.",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
                                    "type": "string"
                                  },
                                  "ipAddressRange": {
                                    "description": "CIDR notation to match incoming IP address",
                                    "type": "string"
                                  },
                                  "action": {
                                    "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
                                    "enum": [
                                      "Allow",
                                      "Deny"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "action",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "stickySessions": {
                              "description": "Sticky Sessions for Single Revision Mode",
                              "type": "object",
                              "properties": {
                                "affinity": {
                                  "description": "Sticky Session Affinity",
                                  "enum": [
                                    "sticky",
                                    "none"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "affinity",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "clientCertificateMode": {
                              "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
                              "enum": [
                                "ignore",
                                "accept",
                                "require"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "IngressClientCertificateMode",
                                "modelAsString": true
                              }
                            },
                            "corsPolicy": {
                              "description": "CORS policy for container app",
                              "type": "object",
                              "required": [
                                "allowedOrigins"
                              ],
                              "properties": {
                                "allowedOrigins": {
                                  "description": "Specifies the content for the access-control-allow-origins header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedMethods": {
                                  "description": "Specifies the content for the access-control-allow-methods header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "allowedHeaders": {
                                  "description": "Specifies the content for the access-control-allow-headers header",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "exposeHeaders": {
                                  "description": "Specifies the content for the access-control-expose-headers header ",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "maxAge": {
                                  "format": "int32",
                                  "description": "Specifies the content for the access-control-max-age header",
                                  "type": "integer"
                                },
                                "allowCredentials": {
                                  "description": "Specifies whether the resource allows credentials",
                                  "type": "boolean"
                                }
                              }
                            },
                            "additionalPortMappings": {
                              "description": "Settings to expose additional ports on container app",
                              "type": "array",
                              "items": {
                                "description": "Port mappings of container app ingress",
                                "type": "object",
                                "required": [
                                  "external",
                                  "targetPort"
                                ],
                                "properties": {
                                  "external": {
                                    "description": "Specifies whether the app port is accessible outside of the environment",
                                    "type": "boolean"
                                  },
                                  "targetPort": {
                                    "format": "int32",
                                    "description": "Specifies the port user's container listens on",
                                    "type": "integer"
                                  },
                                  "exposedPort": {
                                    "format": "int32",
                                    "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
                                    "type": "integer"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "targetPort"
                              ]
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials for containers used by the Container app",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "dapr": {
                          "description": "Dapr configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Boolean indicating if the Dapr side car is enabled",
                              "type": "boolean",
                              "default": false
                            },
                            "appId": {
                              "description": "Dapr application identifier",
                              "type": "string"
                            },
                            "appProtocol": {
                              "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
                              "enum": [
                                "http",
                                "grpc"
                              ],
                              "type": "string",
                              "default": "http",
                              "x-ms-enum": {
                                "name": "appProtocol",
                                "modelAsString": true
                              }
                            },
                            "appPort": {
                              "format": "int32",
                              "description": "Tells Dapr which port your application is listening on",
                              "type": "integer"
                            },
                            "httpReadBufferSize": {
                              "type": "integer",
                              "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
                              "format": "int32"
                            },
                            "httpMaxRequestSize": {
                              "type": "integer",
                              "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
                              "format": "int32"
                            },
                            "logLevel": {
                              "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
                              "enum": [
                                "info",
                                "debug",
                                "warn",
                                "error"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "logLevel",
                                "modelAsString": true
                              }
                            },
                            "enableApiLogging": {
                              "description": "Enables API logging for the Dapr sidecar",
                              "type": "boolean"
                            },
                            "appHealth": {
                              "description": "Dapr application health check configuration",
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "description": "Boolean indicating if the health probe is enabled",
                                  "type": "boolean"
                                },
                                "path": {
                                  "description": "Path for the health probe",
                                  "type": "string"
                                },
                                "probeIntervalSeconds": {
                                  "description": "Interval for the health probe in seconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "probeTimeoutMilliseconds": {
                                  "description": "Timeout for the health probe in milliseconds",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                },
                                "threshold": {
                                  "description": "Threshold for the health probe",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 1
                                }
                              }
                            },
                            "maxConcurrency": {
                              "description": "Maximum number of concurrent requests, events handled by the Dapr sidecar",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "runtime": {
                          "description": "App runtime configuration for the Container App.",
                          "type": "object",
                          "properties": {
                            "java": {
                              "description": "Java app configuration",
                              "type": "object",
                              "properties": {
                                "enableMetrics": {
                                  "description": "Enable jmx core metrics for the java app",
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "maxInactiveRevisions": {
                          "format": "int32",
                          "description": "Optional. Max inactive revisions a Container App can have.",
                          "type": "integer"
                        },
                        "service": {
                          "description": "Container App to be a dev Container App Service",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "description": "Dev ContainerApp service type",
                              "type": "string"
                            }
                          }
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container App versioned application definition.",
                      "type": "object",
                      "properties": {
                        "revisionSuffix": {
                          "description": "User friendly suffix that is appended to the revision name",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                          "format": "int64",
                          "type": "integer"
                        },
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "scale": {
                          "description": "Scaling properties for the Container App.",
                          "type": "object",
                          "properties": {
                            "minReplicas": {
                              "format": "int32",
                              "description": "Optional. Minimum number of container replicas.",
                              "type": "integer"
                            },
                            "maxReplicas": {
                              "format": "int32",
                              "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                              "type": "integer",
                              "default": 10
                            },
                            "cooldownPeriod": {
                              "format": "int32",
                              "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                              "type": "integer"
                            },
                            "pollingInterval": {
                              "format": "int32",
                              "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                              "type": "integer"
                            },
                            "rules": {
                              "description": "Scaling rules.",
                              "type": "array",
                              "items": {
                                "description": "Container App container scaling rule.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Scale Rule Name",
                                    "type": "string"
                                  },
                                  "azureQueue": {
                                    "description": "Azure Queue based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "accountName": {
                                        "description": "Storage account name. required if using managed identity to authenticate",
                                        "type": "string"
                                      },
                                      "queueName": {
                                        "description": "Queue name.",
                                        "type": "string"
                                      },
                                      "queueLength": {
                                        "format": "int32",
                                        "description": "Queue length.",
                                        "type": "integer"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the queue scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "custom": {
                                    "description": "Custom scale rule.",
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe custom scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "http": {
                                    "description": "HTTP requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe http scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the custom scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "tcp": {
                                    "description": "Tcp requests based scaling.",
                                    "type": "object",
                                    "properties": {
                                      "metadata": {
                                        "description": "Metadata properties to describe tcp scale rule.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the tcp scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "triggerParameter"
                                        ]
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            }
                          }
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "serviceBinds": {
                          "description": "List of container app services bound to the app",
                          "type": "array",
                          "items": {
                            "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                            "type": "object",
                            "properties": {
                              "serviceId": {
                                "description": "Resource id of the target service",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the service bind",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifier": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses for container app.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container app.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/detectors": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "Diagnostics"
        ],
        "summary": "Get the list of diagnostics for a given Managed Environment.",
        "description": "Get the list of diagnostics for a Managed Environment used to host container apps.",
        "operationId": "ManagedEnvironmentDiagnostics_ListDetectors",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Diagnostics data collection for a resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of diagnostic data.",
                  "type": "array",
                  "items": {
                    "description": "Diagnostics data for a resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Diagnostics resource specific properties",
                        "type": "object",
                        "properties": {
                          "metadata": {
                            "description": "Metadata of the diagnostics response.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Unique detector name",
                                "type": "string",
                                "readOnly": true
                              },
                              "name": {
                                "description": "Display Name of the detector",
                                "type": "string",
                                "readOnly": true
                              },
                              "description": {
                                "description": "Details of the diagnostics info",
                                "type": "string",
                                "readOnly": true
                              },
                              "author": {
                                "description": "Authors' names of the detector",
                                "type": "string",
                                "readOnly": true
                              },
                              "category": {
                                "description": "Category of the detector",
                                "type": "string",
                                "readOnly": true
                              },
                              "supportTopicList": {
                                "description": "List of support topics",
                                "type": "array",
                                "items": {
                                  "description": "Support topic information",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "Unique topic identifier",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "pesId": {
                                      "description": "PES identifier",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "analysisTypes": {
                                "description": "List of analysis types",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "type": {
                                "description": "Authors' names of the detector",
                                "type": "string",
                                "readOnly": true
                              },
                              "score": {
                                "description": "Authors' names of the detector",
                                "type": "number",
                                "readOnly": true
                              }
                            }
                          },
                          "dataset": {
                            "description": "Set of data collections associated with the response.",
                            "type": "array",
                            "items": {
                              "description": "Diagnostics data returned from a detector",
                              "type": "object",
                              "properties": {
                                "table": {
                                  "description": "Table response",
                                  "type": "object",
                                  "properties": {
                                    "tableName": {
                                      "description": "Table name",
                                      "type": "string"
                                    },
                                    "columns": {
                                      "description": "Columns in the table",
                                      "type": "array",
                                      "items": {
                                        "description": "Diagnostics data column",
                                        "type": "object",
                                        "properties": {
                                          "columnName": {
                                            "description": "Column name",
                                            "type": "string"
                                          },
                                          "dataType": {
                                            "description": "Data type of the column",
                                            "type": "string"
                                          },
                                          "columnType": {
                                            "description": "Column type",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "columnName"
                                      ]
                                    },
                                    "rows": {
                                      "description": "Rows in the table",
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                },
                                "renderingProperties": {
                                  "description": "Details of the table response",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "format": "int32",
                                      "description": "Rendering type",
                                      "type": "integer"
                                    },
                                    "title": {
                                      "description": "Title of the table",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "Description of the table",
                                      "type": "string"
                                    },
                                    "isVisible": {
                                      "description": "Flag if the table should be rendered",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "status": {
                            "description": "Status of the diagnostics response.",
                            "type": "object",
                            "properties": {
                              "message": {
                                "description": "Diagnostic message",
                                "type": "string"
                              },
                              "statusId": {
                                "format": "int32",
                                "description": "Status",
                                "type": "integer"
                              }
                            }
                          },
                          "dataProviderMetadata": {
                            "description": "List of data providers' metadata.",
                            "type": "object",
                            "properties": {
                              "providerName": {
                                "description": "Name of data provider",
                                "type": "string"
                              },
                              "propertyBag": {
                                "description": "Collection of properties",
                                "type": "array",
                                "items": {
                                  "description": "Property details",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Property name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Property value",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/detectors/{detectorName}": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "Diagnostics"
        ],
        "summary": "Get the diagnostics data for a given Managed Environment.",
        "description": "Get the diagnostics data for a Managed Environment used to host container apps.",
        "operationId": "ManagedEnvironmentDiagnostics_GetDetector",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Name of the Managed Environment detector.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Diagnostics data for a resource.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Diagnostics resource specific properties",
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "description": "Metadata of the diagnostics response.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Unique detector name",
                          "type": "string",
                          "readOnly": true
                        },
                        "name": {
                          "description": "Display Name of the detector",
                          "type": "string",
                          "readOnly": true
                        },
                        "description": {
                          "description": "Details of the diagnostics info",
                          "type": "string",
                          "readOnly": true
                        },
                        "author": {
                          "description": "Authors' names of the detector",
                          "type": "string",
                          "readOnly": true
                        },
                        "category": {
                          "description": "Category of the detector",
                          "type": "string",
                          "readOnly": true
                        },
                        "supportTopicList": {
                          "description": "List of support topics",
                          "type": "array",
                          "items": {
                            "description": "Support topic information",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Unique topic identifier",
                                "type": "string",
                                "readOnly": true
                              },
                              "pesId": {
                                "description": "PES identifier",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        },
                        "analysisTypes": {
                          "description": "List of analysis types",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "type": {
                          "description": "Authors' names of the detector",
                          "type": "string",
                          "readOnly": true
                        },
                        "score": {
                          "description": "Authors' names of the detector",
                          "type": "number",
                          "readOnly": true
                        }
                      }
                    },
                    "dataset": {
                      "description": "Set of data collections associated with the response.",
                      "type": "array",
                      "items": {
                        "description": "Diagnostics data returned from a detector",
                        "type": "object",
                        "properties": {
                          "table": {
                            "description": "Table response",
                            "type": "object",
                            "properties": {
                              "tableName": {
                                "description": "Table name",
                                "type": "string"
                              },
                              "columns": {
                                "description": "Columns in the table",
                                "type": "array",
                                "items": {
                                  "description": "Diagnostics data column",
                                  "type": "object",
                                  "properties": {
                                    "columnName": {
                                      "description": "Column name",
                                      "type": "string"
                                    },
                                    "dataType": {
                                      "description": "Data type of the column",
                                      "type": "string"
                                    },
                                    "columnType": {
                                      "description": "Column type",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "columnName"
                                ]
                              },
                              "rows": {
                                "description": "Rows in the table",
                                "type": "array",
                                "items": {
                                  "type": "object"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "renderingProperties": {
                            "description": "Details of the table response",
                            "type": "object",
                            "properties": {
                              "type": {
                                "format": "int32",
                                "description": "Rendering type",
                                "type": "integer"
                              },
                              "title": {
                                "description": "Title of the table",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description of the table",
                                "type": "string"
                              },
                              "isVisible": {
                                "description": "Flag if the table should be rendered",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "status": {
                      "description": "Status of the diagnostics response.",
                      "type": "object",
                      "properties": {
                        "message": {
                          "description": "Diagnostic message",
                          "type": "string"
                        },
                        "statusId": {
                          "format": "int32",
                          "description": "Status",
                          "type": "integer"
                        }
                      }
                    },
                    "dataProviderMetadata": {
                      "description": "List of data providers' metadata.",
                      "type": "object",
                      "properties": {
                        "providerName": {
                          "description": "Name of data provider",
                          "type": "string"
                        },
                        "propertyBag": {
                          "description": "Collection of properties",
                          "type": "array",
                          "items": {
                            "description": "Property details",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Property name",
                                "type": "string"
                              },
                              "value": {
                                "description": "Property value",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/detectorProperties/rootApi/": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "Diagnostics"
        ],
        "summary": "Get the properties of a Managed Environment.",
        "description": "Get the properties of a Managed Environment used to host container apps.",
        "operationId": "ManagedEnvironmentsDiagnostics_GetRoot",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "An environment for hosting container apps",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "kind": {
                  "type": "string",
                  "description": "Kind of the Environment."
                },
                "identity": {
                  "description": "Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Managed environment resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Environment.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "InitializationInProgress",
                        "InfrastructureSetupInProgress",
                        "InfrastructureSetupComplete",
                        "ScheduledForDelete",
                        "UpgradeRequested",
                        "UpgradeFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EnvironmentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "daprAIInstrumentationKey": {
                      "type": "string",
                      "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "daprAIConnectionString": {
                      "type": "string",
                      "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "vnetConfiguration": {
                      "description": "Vnet configuration for the environment",
                      "type": "object",
                      "properties": {
                        "internal": {
                          "type": "boolean",
                          "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "infrastructureSubnetId": {
                          "type": "string",
                          "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "dockerBridgeCidr": {
                          "type": "string",
                          "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "platformReservedCidr": {
                          "type": "string",
                          "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "platformReservedDnsIP": {
                          "type": "string",
                          "description": " An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "defaultDomain": {
                      "description": "Default Domain Name for the cluster",
                      "type": "string",
                      "readOnly": true
                    },
                    "staticIp": {
                      "description": "Static IP of the Environment",
                      "type": "string",
                      "readOnly": true
                    },
                    "appLogsConfiguration": {
                      "description": "Cluster configuration which enables the log daemon to export app logs to configured destination.",
                      "type": "object",
                      "properties": {
                        "destination": {
                          "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
                          "type": "string"
                        },
                        "logAnalyticsConfiguration": {
                          "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
                          "type": "object",
                          "properties": {
                            "customerId": {
                              "description": "Log analytics customer id",
                              "type": "string"
                            },
                            "sharedKey": {
                              "description": "Log analytics customer key",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            }
                          }
                        }
                      }
                    },
                    "zoneRedundant": {
                      "description": "Whether or not this Managed Environment is zone-redundant.",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "customDomainConfiguration": {
                      "description": "Custom domain configuration for the environment",
                      "type": "object",
                      "properties": {
                        "customDomainVerificationId": {
                          "description": "Id used to verify domain name ownership",
                          "type": "string",
                          "readOnly": true
                        },
                        "dnsSuffix": {
                          "type": "string",
                          "description": "Dns suffix for the environment domain",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "certificateKeyVaultProperties": {
                          "description": "Certificate stored in Azure Key Vault.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "certificateValue": {
                          "format": "byte",
                          "description": "PFX or PEM blob",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "certificatePassword": {
                          "description": "Certificate password",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "expirationDate": {
                          "format": "date-time",
                          "description": "Certificate expiration date.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subjectName": {
                          "description": "Subject name of the certificate.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the Environment.",
                      "type": "string",
                      "readOnly": true
                    },
                    "workloadProfiles": {
                      "description": "Workload profiles configured for the Managed Environment.",
                      "type": "array",
                      "items": {
                        "description": "Workload profile to scope container app execution.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Workload profile type for the workloads to run on.",
                            "type": "string"
                          },
                          "workloadProfileType": {
                            "description": "Workload profile type for the workloads to run on.",
                            "type": "string"
                          },
                          "minimumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The minimum capacity."
                          },
                          "maximumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum capacity."
                          }
                        },
                        "required": [
                          "name",
                          "workloadProfileType"
                        ]
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "kedaConfiguration": {
                      "description": "The configuration of Keda component.",
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The version of Keda"
                        }
                      }
                    },
                    "daprConfiguration": {
                      "description": "The configuration of Dapr component.",
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The version of Dapr"
                        }
                      }
                    },
                    "infrastructureResourceGroup": {
                      "description": "Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "peerAuthentication": {
                      "description": "Peer authentication settings for the Managed Environment",
                      "type": "object",
                      "properties": {
                        "mtls": {
                          "description": "Mutual TLS authentication settings for the Managed Environment",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Boolean indicating whether the mutual TLS authentication is enabled"
                            }
                          }
                        }
                      }
                    },
                    "peerTrafficConfiguration": {
                      "description": "Peer traffic settings for the Managed Environment",
                      "type": "object",
                      "properties": {
                        "encryption": {
                          "description": "Peer traffic encryption settings for the Managed Environment",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Boolean indicating whether the peer traffic encryption is enabled"
                            }
                          }
                        }
                      }
                    },
                    "ingressConfiguration": {
                      "description": "Ingress configuration for the Managed Environment.",
                      "type": "object",
                      "properties": {
                        "workloadProfileName": {
                          "description": "Name of the workload profile used by the ingress component. Required.",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480 seconds.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "headerCountLimit": {
                          "description": "Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "requestIdleTimeout": {
                          "description": "Duration (in minutes) before idle requests are timed out. Must be between 4 and 30 inclusive. Defaults to 4 minutes.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections to the resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "description": "The group ids for the private endpoint resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "format": "arm-id",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Failed",
                                  "Canceled",
                                  "Waiting",
                                  "Updating",
                                  "Deleting",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/detectors": {
      "get": {
        "tags": [
          "Jobs",
          "Diagnostics"
        ],
        "summary": "Get the list of diagnostics for a given Container App Job.",
        "description": "Get the list of diagnostics for a Container App Job.",
        "operationId": "Jobs_ListDetectors",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Diagnostics data collection for a resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of diagnostic data.",
                  "type": "array",
                  "items": {
                    "description": "Diagnostics data for a resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Diagnostics resource specific properties",
                        "type": "object",
                        "properties": {
                          "metadata": {
                            "description": "Metadata of the diagnostics response.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Unique detector name",
                                "type": "string",
                                "readOnly": true
                              },
                              "name": {
                                "description": "Display Name of the detector",
                                "type": "string",
                                "readOnly": true
                              },
                              "description": {
                                "description": "Details of the diagnostics info",
                                "type": "string",
                                "readOnly": true
                              },
                              "author": {
                                "description": "Authors' names of the detector",
                                "type": "string",
                                "readOnly": true
                              },
                              "category": {
                                "description": "Category of the detector",
                                "type": "string",
                                "readOnly": true
                              },
                              "supportTopicList": {
                                "description": "List of support topics",
                                "type": "array",
                                "items": {
                                  "description": "Support topic information",
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "description": "Unique topic identifier",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "pesId": {
                                      "description": "PES identifier",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                }
                              },
                              "analysisTypes": {
                                "description": "List of analysis types",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "type": {
                                "description": "Authors' names of the detector",
                                "type": "string",
                                "readOnly": true
                              },
                              "score": {
                                "description": "Authors' names of the detector",
                                "type": "number",
                                "readOnly": true
                              }
                            }
                          },
                          "dataset": {
                            "description": "Set of data collections associated with the response.",
                            "type": "array",
                            "items": {
                              "description": "Diagnostics data returned from a detector",
                              "type": "object",
                              "properties": {
                                "table": {
                                  "description": "Table response",
                                  "type": "object",
                                  "properties": {
                                    "tableName": {
                                      "description": "Table name",
                                      "type": "string"
                                    },
                                    "columns": {
                                      "description": "Columns in the table",
                                      "type": "array",
                                      "items": {
                                        "description": "Diagnostics data column",
                                        "type": "object",
                                        "properties": {
                                          "columnName": {
                                            "description": "Column name",
                                            "type": "string"
                                          },
                                          "dataType": {
                                            "description": "Data type of the column",
                                            "type": "string"
                                          },
                                          "columnType": {
                                            "description": "Column type",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "columnName"
                                      ]
                                    },
                                    "rows": {
                                      "description": "Rows in the table",
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      },
                                      "x-ms-identifiers": []
                                    }
                                  }
                                },
                                "renderingProperties": {
                                  "description": "Details of the table response",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "format": "int32",
                                      "description": "Rendering type",
                                      "type": "integer"
                                    },
                                    "title": {
                                      "description": "Title of the table",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "Description of the table",
                                      "type": "string"
                                    },
                                    "isVisible": {
                                      "description": "Flag if the table should be rendered",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "status": {
                            "description": "Status of the diagnostics response.",
                            "type": "object",
                            "properties": {
                              "message": {
                                "description": "Diagnostic message",
                                "type": "string"
                              },
                              "statusId": {
                                "format": "int32",
                                "description": "Status",
                                "type": "integer"
                              }
                            }
                          },
                          "dataProviderMetadata": {
                            "description": "List of data providers' metadata.",
                            "type": "object",
                            "properties": {
                              "providerName": {
                                "description": "Name of data provider",
                                "type": "string"
                              },
                              "propertyBag": {
                                "description": "Collection of properties",
                                "type": "array",
                                "items": {
                                  "description": "Property details",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Property name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Property value",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/detectors/{detectorName}": {
      "get": {
        "tags": [
          "Jobs",
          "Diagnostics"
        ],
        "summary": "Get the diagnostics data for a given Container App Job.",
        "description": "Get the diagnostics data for a Container App Job.",
        "operationId": "Jobs_GetDetector",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "detectorName",
            "in": "path",
            "description": "Name of the Container App Job detector.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Diagnostics data for a resource.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Diagnostics resource specific properties",
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "description": "Metadata of the diagnostics response.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "Unique detector name",
                          "type": "string",
                          "readOnly": true
                        },
                        "name": {
                          "description": "Display Name of the detector",
                          "type": "string",
                          "readOnly": true
                        },
                        "description": {
                          "description": "Details of the diagnostics info",
                          "type": "string",
                          "readOnly": true
                        },
                        "author": {
                          "description": "Authors' names of the detector",
                          "type": "string",
                          "readOnly": true
                        },
                        "category": {
                          "description": "Category of the detector",
                          "type": "string",
                          "readOnly": true
                        },
                        "supportTopicList": {
                          "description": "List of support topics",
                          "type": "array",
                          "items": {
                            "description": "Support topic information",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "Unique topic identifier",
                                "type": "string",
                                "readOnly": true
                              },
                              "pesId": {
                                "description": "PES identifier",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          }
                        },
                        "analysisTypes": {
                          "description": "List of analysis types",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "type": {
                          "description": "Authors' names of the detector",
                          "type": "string",
                          "readOnly": true
                        },
                        "score": {
                          "description": "Authors' names of the detector",
                          "type": "number",
                          "readOnly": true
                        }
                      }
                    },
                    "dataset": {
                      "description": "Set of data collections associated with the response.",
                      "type": "array",
                      "items": {
                        "description": "Diagnostics data returned from a detector",
                        "type": "object",
                        "properties": {
                          "table": {
                            "description": "Table response",
                            "type": "object",
                            "properties": {
                              "tableName": {
                                "description": "Table name",
                                "type": "string"
                              },
                              "columns": {
                                "description": "Columns in the table",
                                "type": "array",
                                "items": {
                                  "description": "Diagnostics data column",
                                  "type": "object",
                                  "properties": {
                                    "columnName": {
                                      "description": "Column name",
                                      "type": "string"
                                    },
                                    "dataType": {
                                      "description": "Data type of the column",
                                      "type": "string"
                                    },
                                    "columnType": {
                                      "description": "Column type",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "columnName"
                                ]
                              },
                              "rows": {
                                "description": "Rows in the table",
                                "type": "array",
                                "items": {
                                  "type": "object"
                                },
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "renderingProperties": {
                            "description": "Details of the table response",
                            "type": "object",
                            "properties": {
                              "type": {
                                "format": "int32",
                                "description": "Rendering type",
                                "type": "integer"
                              },
                              "title": {
                                "description": "Title of the table",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description of the table",
                                "type": "string"
                              },
                              "isVisible": {
                                "description": "Flag if the table should be rendered",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "status": {
                      "description": "Status of the diagnostics response.",
                      "type": "object",
                      "properties": {
                        "message": {
                          "description": "Diagnostic message",
                          "type": "string"
                        },
                        "statusId": {
                          "format": "int32",
                          "description": "Status",
                          "type": "integer"
                        }
                      }
                    },
                    "dataProviderMetadata": {
                      "description": "List of data providers' metadata.",
                      "type": "object",
                      "properties": {
                        "providerName": {
                          "description": "Name of data provider",
                          "type": "string"
                        },
                        "propertyBag": {
                          "description": "Collection of properties",
                          "type": "array",
                          "items": {
                            "description": "Property details",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Property name",
                                "type": "string"
                              },
                              "value": {
                                "description": "Property value",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/detectorProperties/{apiName}": {
      "get": {
        "tags": [
          "Jobs",
          "Diagnostics"
        ],
        "summary": "Get the properties of a Container App Job.",
        "description": "Get the properties of a Container App Job.",
        "operationId": "Jobs_ProxyGet",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "apiName",
            "in": "path",
            "description": "Proxy API Name for Container App Job.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "Container App Job",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Container Apps Job resource specific properties.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Container Apps Job.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "JobProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "workloadProfileName": {
                      "description": "Workload profile name to pin for container apps job execution.",
                      "type": "string"
                    },
                    "configuration": {
                      "description": "Container Apps Job configuration properties.",
                      "type": "object",
                      "required": [
                        "replicaTimeout",
                        "triggerType"
                      ],
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container Apps Job",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "triggerType": {
                          "description": "Trigger type of the job",
                          "enum": [
                            "Schedule",
                            "Event",
                            "Manual"
                          ],
                          "type": "string",
                          "default": "Manual",
                          "x-ms-enum": {
                            "name": "TriggerType",
                            "modelAsString": true
                          }
                        },
                        "replicaTimeout": {
                          "description": "Maximum number of seconds a replica is allowed to run.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "replicaRetryLimit": {
                          "format": "int32",
                          "description": "Maximum number of retries before failing the job.",
                          "type": "integer"
                        },
                        "manualTriggerConfig": {
                          "type": "object",
                          "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "scheduleTriggerConfig": {
                          "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
                          "required": [
                            "cronExpression"
                          ],
                          "type": "object",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "cronExpression": {
                              "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job.",
                              "type": "string"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "eventTriggerConfig": {
                          "type": "object",
                          "description": "Trigger configuration of an event driven job.",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "scale": {
                              "description": "Scaling configurations for event driven jobs.",
                              "type": "object",
                              "properties": {
                                "pollingInterval": {
                                  "description": "Interval to check each event source in seconds. Defaults to 30s",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "minExecutions": {
                                  "format": "int32",
                                  "description": "Minimum number of job executions that are created for a trigger, default 0",
                                  "type": "integer",
                                  "default": 0
                                },
                                "maxExecutions": {
                                  "format": "int32",
                                  "description": "Maximum number of job executions that are created for a trigger, default 100.",
                                  "type": "integer",
                                  "default": 100
                                },
                                "rules": {
                                  "description": "Scaling rules.",
                                  "type": "array",
                                  "items": {
                                    "description": "Scaling rule.",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Scale Rule Name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe the scale rule.",
                                        "type": "object"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials used by a Container apps job",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container Apps job definition.",
                      "type": "object",
                      "properties": {
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses of a container apps job.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container apps job.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.App/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available RP operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "description": "Available operations of the service",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of available operation details",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "description": "Operation detail payload",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the operation",
                        "type": "string"
                      },
                      "isDataAction": {
                        "description": "Indicates whether the operation is a data action",
                        "type": "boolean"
                      },
                      "display": {
                        "description": "Display of the operation",
                        "type": "object",
                        "properties": {
                          "provider": {
                            "description": "Resource provider of the operation",
                            "type": "string"
                          },
                          "resource": {
                            "description": "Resource of the operation",
                            "type": "string"
                          },
                          "operation": {
                            "description": "Localized friendly name for the operation",
                            "type": "string"
                          },
                          "description": {
                            "description": "Localized friendly description for the operation",
                            "type": "string"
                          }
                        }
                      },
                      "origin": {
                        "description": "Origin of the operation",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/javaComponents": {
      "get": {
        "tags": [
          "JavaComponents"
        ],
        "summary": "Get the Java Components for a managed environment.",
        "operationId": "JavaComponents_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "description": "Java Components ARM resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Java Component.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Java Component resource specific properties",
                        "type": "object",
                        "required": [
                          "componentType"
                        ],
                        "properties": {
                          "componentType": {
                            "description": "Type of the Java Component.",
                            "enum": [
                              "SpringBootAdmin",
                              "SpringCloudEureka",
                              "SpringCloudConfig"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "JavaComponentType",
                              "modelAsString": true
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the Java Component.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting",
                              "InProgress"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "JavaComponentProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "configurations": {
                            "description": "List of Java Components configuration properties",
                            "type": "array",
                            "items": {
                              "description": "Configuration properties for a Java Component",
                              "type": "object",
                              "properties": {
                                "propertyName": {
                                  "description": "The name of the property",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The value of the property",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "propertyName"
                            ]
                          },
                          "scale": {
                            "description": "Java component scaling configurations",
                            "type": "object",
                            "properties": {
                              "minReplicas": {
                                "format": "int32",
                                "description": "Optional. Minimum number of Java component replicas. Defaults to 1 if not set",
                                "type": "integer"
                              },
                              "maxReplicas": {
                                "format": "int32",
                                "description": "Optional. Maximum number of Java component replicas",
                                "type": "integer"
                              }
                            }
                          },
                          "serviceBinds": {
                            "description": "List of Java Components that are bound to the Java component",
                            "type": "array",
                            "items": {
                              "description": "Configuration to bind a Java Component to another Java Component",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the service bind",
                                  "type": "string"
                                },
                                "serviceId": {
                                  "description": "Resource id of the target service",
                                  "format": "arm-id",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          }
                        },
                        "x-ms-client-flatten": true,
                        "discriminator": "componentType"
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/javaComponents/{name}": {
      "get": {
        "tags": [
          "JavaComponents"
        ],
        "summary": "Get a Java Component.",
        "operationId": "JavaComponents_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Java Component.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Java Component.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Java Component resource specific properties",
                  "type": "object",
                  "required": [
                    "componentType"
                  ],
                  "properties": {
                    "componentType": {
                      "description": "Type of the Java Component.",
                      "enum": [
                        "SpringBootAdmin",
                        "SpringCloudEureka",
                        "SpringCloudConfig"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "JavaComponentType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Java Component.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "InProgress"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "JavaComponentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "configurations": {
                      "description": "List of Java Components configuration properties",
                      "type": "array",
                      "items": {
                        "description": "Configuration properties for a Java Component",
                        "type": "object",
                        "properties": {
                          "propertyName": {
                            "description": "The name of the property",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the property",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "propertyName"
                      ]
                    },
                    "scale": {
                      "description": "Java component scaling configurations",
                      "type": "object",
                      "properties": {
                        "minReplicas": {
                          "format": "int32",
                          "description": "Optional. Minimum number of Java component replicas. Defaults to 1 if not set",
                          "type": "integer"
                        },
                        "maxReplicas": {
                          "format": "int32",
                          "description": "Optional. Maximum number of Java component replicas",
                          "type": "integer"
                        }
                      }
                    },
                    "serviceBinds": {
                      "description": "List of Java Components that are bound to the Java component",
                      "type": "array",
                      "items": {
                        "description": "Configuration to bind a Java Component to another Java Component",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the service bind",
                            "type": "string"
                          },
                          "serviceId": {
                            "description": "Resource id of the target service",
                            "format": "arm-id",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  },
                  "x-ms-client-flatten": true,
                  "discriminator": "componentType"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "JavaComponents"
        ],
        "summary": "Creates or updates a Java Component.",
        "description": "Creates or updates a Java Component in a Managed Environment.",
        "operationId": "JavaComponents_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Java Component.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "javaComponentEnvelope",
            "in": "body",
            "description": "Configuration details of the Java Component.",
            "required": true,
            "schema": {
              "description": "Java Component.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Java Component resource specific properties",
                  "type": "object",
                  "required": [
                    "componentType"
                  ],
                  "properties": {
                    "componentType": {
                      "description": "Type of the Java Component.",
                      "enum": [
                        "SpringBootAdmin",
                        "SpringCloudEureka",
                        "SpringCloudConfig"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "JavaComponentType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Java Component.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "InProgress"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "JavaComponentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "configurations": {
                      "description": "List of Java Components configuration properties",
                      "type": "array",
                      "items": {
                        "description": "Configuration properties for a Java Component",
                        "type": "object",
                        "properties": {
                          "propertyName": {
                            "description": "The name of the property",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the property",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "propertyName"
                      ]
                    },
                    "scale": {
                      "description": "Java component scaling configurations",
                      "type": "object",
                      "properties": {
                        "minReplicas": {
                          "format": "int32",
                          "description": "Optional. Minimum number of Java component replicas. Defaults to 1 if not set",
                          "type": "integer"
                        },
                        "maxReplicas": {
                          "format": "int32",
                          "description": "Optional. Maximum number of Java component replicas",
                          "type": "integer"
                        }
                      }
                    },
                    "serviceBinds": {
                      "description": "List of Java Components that are bound to the Java component",
                      "type": "array",
                      "items": {
                        "description": "Configuration to bind a Java Component to another Java Component",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the service bind",
                            "type": "string"
                          },
                          "serviceId": {
                            "description": "Resource id of the target service",
                            "format": "arm-id",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  },
                  "x-ms-client-flatten": true,
                  "discriminator": "componentType"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No change performed on the Java Component.",
            "schema": {
              "description": "Java Component.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Java Component resource specific properties",
                  "type": "object",
                  "required": [
                    "componentType"
                  ],
                  "properties": {
                    "componentType": {
                      "description": "Type of the Java Component.",
                      "enum": [
                        "SpringBootAdmin",
                        "SpringCloudEureka",
                        "SpringCloudConfig"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "JavaComponentType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Java Component.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "InProgress"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "JavaComponentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "configurations": {
                      "description": "List of Java Components configuration properties",
                      "type": "array",
                      "items": {
                        "description": "Configuration properties for a Java Component",
                        "type": "object",
                        "properties": {
                          "propertyName": {
                            "description": "The name of the property",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the property",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "propertyName"
                      ]
                    },
                    "scale": {
                      "description": "Java component scaling configurations",
                      "type": "object",
                      "properties": {
                        "minReplicas": {
                          "format": "int32",
                          "description": "Optional. Minimum number of Java component replicas. Defaults to 1 if not set",
                          "type": "integer"
                        },
                        "maxReplicas": {
                          "format": "int32",
                          "description": "Optional. Maximum number of Java component replicas",
                          "type": "integer"
                        }
                      }
                    },
                    "serviceBinds": {
                      "description": "List of Java Components that are bound to the Java component",
                      "type": "array",
                      "items": {
                        "description": "Configuration to bind a Java Component to another Java Component",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the service bind",
                            "type": "string"
                          },
                          "serviceId": {
                            "description": "Resource id of the target service",
                            "format": "arm-id",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  },
                  "x-ms-client-flatten": true,
                  "discriminator": "componentType"
                }
              }
            }
          },
          "201": {
            "description": "Java Component create or update has been started.",
            "schema": {
              "description": "Java Component.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Java Component resource specific properties",
                  "type": "object",
                  "required": [
                    "componentType"
                  ],
                  "properties": {
                    "componentType": {
                      "description": "Type of the Java Component.",
                      "enum": [
                        "SpringBootAdmin",
                        "SpringCloudEureka",
                        "SpringCloudConfig"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "JavaComponentType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Java Component.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "InProgress"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "JavaComponentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "configurations": {
                      "description": "List of Java Components configuration properties",
                      "type": "array",
                      "items": {
                        "description": "Configuration properties for a Java Component",
                        "type": "object",
                        "properties": {
                          "propertyName": {
                            "description": "The name of the property",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the property",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "propertyName"
                      ]
                    },
                    "scale": {
                      "description": "Java component scaling configurations",
                      "type": "object",
                      "properties": {
                        "minReplicas": {
                          "format": "int32",
                          "description": "Optional. Minimum number of Java component replicas. Defaults to 1 if not set",
                          "type": "integer"
                        },
                        "maxReplicas": {
                          "format": "int32",
                          "description": "Optional. Maximum number of Java component replicas",
                          "type": "integer"
                        }
                      }
                    },
                    "serviceBinds": {
                      "description": "List of Java Components that are bound to the Java component",
                      "type": "array",
                      "items": {
                        "description": "Configuration to bind a Java Component to another Java Component",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the service bind",
                            "type": "string"
                          },
                          "serviceId": {
                            "description": "Resource id of the target service",
                            "format": "arm-id",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  },
                  "x-ms-client-flatten": true,
                  "discriminator": "componentType"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "JavaComponents"
        ],
        "summary": "Update properties of a Java Component",
        "description": "Patches a Java Component using JSON Merge Patch",
        "operationId": "JavaComponents_Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Java Component.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "javaComponentEnvelope",
            "in": "body",
            "description": "Configuration details of the Java Component.",
            "required": true,
            "schema": {
              "description": "Java Component.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Java Component resource specific properties",
                  "type": "object",
                  "required": [
                    "componentType"
                  ],
                  "properties": {
                    "componentType": {
                      "description": "Type of the Java Component.",
                      "enum": [
                        "SpringBootAdmin",
                        "SpringCloudEureka",
                        "SpringCloudConfig"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "JavaComponentType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Java Component.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "InProgress"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "JavaComponentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "configurations": {
                      "description": "List of Java Components configuration properties",
                      "type": "array",
                      "items": {
                        "description": "Configuration properties for a Java Component",
                        "type": "object",
                        "properties": {
                          "propertyName": {
                            "description": "The name of the property",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the property",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "propertyName"
                      ]
                    },
                    "scale": {
                      "description": "Java component scaling configurations",
                      "type": "object",
                      "properties": {
                        "minReplicas": {
                          "format": "int32",
                          "description": "Optional. Minimum number of Java component replicas. Defaults to 1 if not set",
                          "type": "integer"
                        },
                        "maxReplicas": {
                          "format": "int32",
                          "description": "Optional. Maximum number of Java component replicas",
                          "type": "integer"
                        }
                      }
                    },
                    "serviceBinds": {
                      "description": "List of Java Components that are bound to the Java component",
                      "type": "array",
                      "items": {
                        "description": "Configuration to bind a Java Component to another Java Component",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the service bind",
                            "type": "string"
                          },
                          "serviceId": {
                            "description": "Resource id of the target service",
                            "format": "arm-id",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  },
                  "x-ms-client-flatten": true,
                  "discriminator": "componentType"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "description": "Java Component.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Java Component resource specific properties",
                  "type": "object",
                  "required": [
                    "componentType"
                  ],
                  "properties": {
                    "componentType": {
                      "description": "Type of the Java Component.",
                      "enum": [
                        "SpringBootAdmin",
                        "SpringCloudEureka",
                        "SpringCloudConfig"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "JavaComponentType",
                        "modelAsString": true
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Java Component.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting",
                        "InProgress"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "JavaComponentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "configurations": {
                      "description": "List of Java Components configuration properties",
                      "type": "array",
                      "items": {
                        "description": "Configuration properties for a Java Component",
                        "type": "object",
                        "properties": {
                          "propertyName": {
                            "description": "The name of the property",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the property",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "propertyName"
                      ]
                    },
                    "scale": {
                      "description": "Java component scaling configurations",
                      "type": "object",
                      "properties": {
                        "minReplicas": {
                          "format": "int32",
                          "description": "Optional. Minimum number of Java component replicas. Defaults to 1 if not set",
                          "type": "integer"
                        },
                        "maxReplicas": {
                          "format": "int32",
                          "description": "Optional. Maximum number of Java component replicas",
                          "type": "integer"
                        }
                      }
                    },
                    "serviceBinds": {
                      "description": "List of Java Components that are bound to the Java component",
                      "type": "array",
                      "items": {
                        "description": "Configuration to bind a Java Component to another Java Component",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the service bind",
                            "type": "string"
                          },
                          "serviceId": {
                            "description": "Resource id of the target service",
                            "format": "arm-id",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  },
                  "x-ms-client-flatten": true,
                  "discriminator": "componentType"
                }
              }
            }
          },
          "202": {
            "description": "Patch operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "JavaComponents"
        ],
        "summary": "Delete.",
        "description": "Delete a Java Component.",
        "operationId": "JavaComponents_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "name",
            "in": "path",
            "description": "Name of the Java Component.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Delete operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Java Component does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get the Container Apps Jobs in a given subscription.",
        "operationId": "Jobs_ListBySubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container Apps Jobs collection ARM resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Container App Job",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "identity": {
                        "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "description": "Container Apps Job resource specific properties.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the Container Apps Job.",
                            "enum": [
                              "InProgress",
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "JobProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "environmentId": {
                            "description": "Resource ID of environment.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "workloadProfileName": {
                            "description": "Workload profile name to pin for container apps job execution.",
                            "type": "string"
                          },
                          "configuration": {
                            "description": "Container Apps Job configuration properties.",
                            "type": "object",
                            "required": [
                              "replicaTimeout",
                              "triggerType"
                            ],
                            "properties": {
                              "secrets": {
                                "description": "Collection of secrets used by a Container Apps Job",
                                "type": "array",
                                "items": {
                                  "description": "Secret definition.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Secret Name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Secret Value.",
                                      "type": "string",
                                      "x-ms-mutability": [
                                        "create",
                                        "update"
                                      ],
                                      "x-ms-secret": true
                                    },
                                    "identity": {
                                      "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                      "type": "string"
                                    },
                                    "keyVaultUrl": {
                                      "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "triggerType": {
                                "description": "Trigger type of the job",
                                "enum": [
                                  "Schedule",
                                  "Event",
                                  "Manual"
                                ],
                                "type": "string",
                                "default": "Manual",
                                "x-ms-enum": {
                                  "name": "TriggerType",
                                  "modelAsString": true
                                }
                              },
                              "replicaTimeout": {
                                "description": "Maximum number of seconds a replica is allowed to run.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "replicaRetryLimit": {
                                "format": "int32",
                                "description": "Maximum number of retries before failing the job.",
                                "type": "integer"
                              },
                              "manualTriggerConfig": {
                                "type": "object",
                                "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
                                "properties": {
                                  "replicaCompletionCount": {
                                    "description": "Minimum number of successful replica completions before overall job completion.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "parallelism": {
                                    "description": "Number of parallel replicas of a job that can run at a given time.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              },
                              "scheduleTriggerConfig": {
                                "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
                                "required": [
                                  "cronExpression"
                                ],
                                "type": "object",
                                "properties": {
                                  "replicaCompletionCount": {
                                    "description": "Minimum number of successful replica completions before overall job completion.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "cronExpression": {
                                    "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job.",
                                    "type": "string"
                                  },
                                  "parallelism": {
                                    "description": "Number of parallel replicas of a job that can run at a given time.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              },
                              "eventTriggerConfig": {
                                "type": "object",
                                "description": "Trigger configuration of an event driven job.",
                                "properties": {
                                  "replicaCompletionCount": {
                                    "description": "Minimum number of successful replica completions before overall job completion.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "parallelism": {
                                    "description": "Number of parallel replicas of a job that can run at a given time.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "scale": {
                                    "description": "Scaling configurations for event driven jobs.",
                                    "type": "object",
                                    "properties": {
                                      "pollingInterval": {
                                        "description": "Interval to check each event source in seconds. Defaults to 30s",
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "minExecutions": {
                                        "format": "int32",
                                        "description": "Minimum number of job executions that are created for a trigger, default 0",
                                        "type": "integer",
                                        "default": 0
                                      },
                                      "maxExecutions": {
                                        "format": "int32",
                                        "description": "Maximum number of job executions that are created for a trigger, default 100.",
                                        "type": "integer",
                                        "default": 100
                                      },
                                      "rules": {
                                        "description": "Scaling rules.",
                                        "type": "array",
                                        "items": {
                                          "description": "Scaling rule.",
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "description": "Scale Rule Name",
                                              "type": "string"
                                            },
                                            "type": {
                                              "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
                                              "type": "string"
                                            },
                                            "metadata": {
                                              "description": "Metadata properties to describe the scale rule.",
                                              "type": "object"
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "registries": {
                                "description": "Collection of private container registry credentials used by a Container apps job",
                                "type": "array",
                                "items": {
                                  "description": "Container App Private Registry",
                                  "type": "object",
                                  "properties": {
                                    "server": {
                                      "description": "Container Registry Server",
                                      "type": "string"
                                    },
                                    "username": {
                                      "description": "Container Registry Username",
                                      "type": "string"
                                    },
                                    "passwordSecretRef": {
                                      "description": "The name of the Secret that contains the registry login password",
                                      "type": "string"
                                    },
                                    "identity": {
                                      "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "server"
                                ]
                              },
                              "identitySettings": {
                                "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.",
                                "type": "array",
                                "items": {
                                  "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                                  "type": "object",
                                  "required": [
                                    "identity"
                                  ],
                                  "properties": {
                                    "identity": {
                                      "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                      "type": "string"
                                    },
                                    "lifecycle": {
                                      "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                      "enum": [
                                        "Init",
                                        "Main",
                                        "None",
                                        "All"
                                      ],
                                      "type": "string",
                                      "default": "All",
                                      "x-ms-enum": {
                                        "name": "IdentitySettingsLifeCycle",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "identity"
                                ]
                              }
                            }
                          },
                          "template": {
                            "description": "Container Apps job definition.",
                            "type": "object",
                            "properties": {
                              "initContainers": {
                                "description": "List of specialized containers that run before app containers.",
                                "type": "array",
                                "items": {
                                  "description": "Container App init container definition",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "volumeMounts": {
                                      "description": "Container volume mounts.",
                                      "type": "array",
                                      "items": {
                                        "description": "Volume mount for the Container App.",
                                        "type": "object",
                                        "properties": {
                                          "volumeName": {
                                            "description": "This must match the Name of a Volume.",
                                            "type": "string"
                                          },
                                          "mountPath": {
                                            "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                            "type": "string"
                                          },
                                          "subPath": {
                                            "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "volumeName"
                                      ]
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "containers": {
                                "description": "List of container definitions for the Container App.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container definition",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "volumeMounts": {
                                      "description": "Container volume mounts.",
                                      "type": "array",
                                      "items": {
                                        "description": "Volume mount for the Container App.",
                                        "type": "object",
                                        "properties": {
                                          "volumeName": {
                                            "description": "This must match the Name of a Volume.",
                                            "type": "string"
                                          },
                                          "mountPath": {
                                            "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                            "type": "string"
                                          },
                                          "subPath": {
                                            "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "volumeName"
                                      ]
                                    },
                                    "probes": {
                                      "description": "List of probes for the container.",
                                      "type": "array",
                                      "items": {
                                        "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                        "type": "object",
                                        "properties": {
                                          "failureThreshold": {
                                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "httpGet": {
                                            "description": "HTTPGet specifies the http request to perform.",
                                            "type": "object",
                                            "required": [
                                              "port"
                                            ],
                                            "properties": {
                                              "host": {
                                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                "type": "string"
                                              },
                                              "httpHeaders": {
                                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                                "type": "array",
                                                "items": {
                                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                                  "type": "object",
                                                  "required": [
                                                    "name",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "name": {
                                                      "description": "The header field name",
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "description": "The header field value",
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "x-ms-identifiers": [
                                                  "name"
                                                ]
                                              },
                                              "path": {
                                                "description": "Path to access on the HTTP server.",
                                                "type": "string"
                                              },
                                              "port": {
                                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "scheme": {
                                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                                "enum": [
                                                  "HTTP",
                                                  "HTTPS"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "name": "Scheme",
                                                  "modelAsString": true
                                                }
                                              }
                                            }
                                          },
                                          "initialDelaySeconds": {
                                            "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "periodSeconds": {
                                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "successThreshold": {
                                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "tcpSocket": {
                                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                            "type": "object",
                                            "required": [
                                              "port"
                                            ],
                                            "properties": {
                                              "host": {
                                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                                "type": "string"
                                              },
                                              "port": {
                                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                "type": "integer",
                                                "format": "int32"
                                              }
                                            }
                                          },
                                          "terminationGracePeriodSeconds": {
                                            "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "timeoutSeconds": {
                                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "type": {
                                            "description": "The type of probe.",
                                            "enum": [
                                              "Liveness",
                                              "Readiness",
                                              "Startup"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "name": "Type",
                                              "modelAsString": true
                                            }
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "type"
                                      ]
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "volumes": {
                                "description": "List of volume definitions for the Container App.",
                                "type": "array",
                                "items": {
                                  "description": "Volume definitions for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Volume name.",
                                      "type": "string"
                                    },
                                    "storageType": {
                                      "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                      "enum": [
                                        "AzureFile",
                                        "EmptyDir",
                                        "Secret",
                                        "NfsAzureFile"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "StorageType",
                                        "modelAsString": true
                                      }
                                    },
                                    "storageName": {
                                      "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                      "type": "string"
                                    },
                                    "secrets": {
                                      "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                      "type": "array",
                                      "items": {
                                        "description": "Secret to be added to volume.",
                                        "type": "object",
                                        "properties": {
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the secret value.",
                                            "type": "string"
                                          },
                                          "path": {
                                            "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "secretRef"
                                      ]
                                    },
                                    "mountOptions": {
                                      "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              }
                            }
                          },
                          "outboundIpAddresses": {
                            "description": "Outbound IP Addresses of a container apps job.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "eventStreamEndpoint": {
                            "description": "The endpoint of the eventstream of the container apps job.",
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get the Container Apps Jobs in a given resource group.",
        "operationId": "Jobs_ListByResourceGroup",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container Apps Jobs collection ARM resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Container App Job",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "identity": {
                        "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "description": "Container Apps Job resource specific properties.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the Container Apps Job.",
                            "enum": [
                              "InProgress",
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "JobProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "environmentId": {
                            "description": "Resource ID of environment.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "workloadProfileName": {
                            "description": "Workload profile name to pin for container apps job execution.",
                            "type": "string"
                          },
                          "configuration": {
                            "description": "Container Apps Job configuration properties.",
                            "type": "object",
                            "required": [
                              "replicaTimeout",
                              "triggerType"
                            ],
                            "properties": {
                              "secrets": {
                                "description": "Collection of secrets used by a Container Apps Job",
                                "type": "array",
                                "items": {
                                  "description": "Secret definition.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Secret Name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Secret Value.",
                                      "type": "string",
                                      "x-ms-mutability": [
                                        "create",
                                        "update"
                                      ],
                                      "x-ms-secret": true
                                    },
                                    "identity": {
                                      "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                      "type": "string"
                                    },
                                    "keyVaultUrl": {
                                      "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "triggerType": {
                                "description": "Trigger type of the job",
                                "enum": [
                                  "Schedule",
                                  "Event",
                                  "Manual"
                                ],
                                "type": "string",
                                "default": "Manual",
                                "x-ms-enum": {
                                  "name": "TriggerType",
                                  "modelAsString": true
                                }
                              },
                              "replicaTimeout": {
                                "description": "Maximum number of seconds a replica is allowed to run.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "replicaRetryLimit": {
                                "format": "int32",
                                "description": "Maximum number of retries before failing the job.",
                                "type": "integer"
                              },
                              "manualTriggerConfig": {
                                "type": "object",
                                "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
                                "properties": {
                                  "replicaCompletionCount": {
                                    "description": "Minimum number of successful replica completions before overall job completion.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "parallelism": {
                                    "description": "Number of parallel replicas of a job that can run at a given time.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              },
                              "scheduleTriggerConfig": {
                                "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
                                "required": [
                                  "cronExpression"
                                ],
                                "type": "object",
                                "properties": {
                                  "replicaCompletionCount": {
                                    "description": "Minimum number of successful replica completions before overall job completion.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "cronExpression": {
                                    "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job.",
                                    "type": "string"
                                  },
                                  "parallelism": {
                                    "description": "Number of parallel replicas of a job that can run at a given time.",
                                    "format": "int32",
                                    "type": "integer"
                                  }
                                }
                              },
                              "eventTriggerConfig": {
                                "type": "object",
                                "description": "Trigger configuration of an event driven job.",
                                "properties": {
                                  "replicaCompletionCount": {
                                    "description": "Minimum number of successful replica completions before overall job completion.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "parallelism": {
                                    "description": "Number of parallel replicas of a job that can run at a given time.",
                                    "format": "int32",
                                    "type": "integer"
                                  },
                                  "scale": {
                                    "description": "Scaling configurations for event driven jobs.",
                                    "type": "object",
                                    "properties": {
                                      "pollingInterval": {
                                        "description": "Interval to check each event source in seconds. Defaults to 30s",
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "minExecutions": {
                                        "format": "int32",
                                        "description": "Minimum number of job executions that are created for a trigger, default 0",
                                        "type": "integer",
                                        "default": 0
                                      },
                                      "maxExecutions": {
                                        "format": "int32",
                                        "description": "Maximum number of job executions that are created for a trigger, default 100.",
                                        "type": "integer",
                                        "default": 100
                                      },
                                      "rules": {
                                        "description": "Scaling rules.",
                                        "type": "array",
                                        "items": {
                                          "description": "Scaling rule.",
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "description": "Scale Rule Name",
                                              "type": "string"
                                            },
                                            "type": {
                                              "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
                                              "type": "string"
                                            },
                                            "metadata": {
                                              "description": "Metadata properties to describe the scale rule.",
                                              "type": "object"
                                            },
                                            "auth": {
                                              "description": "Authentication secrets for the scale rule.",
                                              "type": "array",
                                              "items": {
                                                "description": "Auth Secrets for Scale Rule",
                                                "type": "object",
                                                "properties": {
                                                  "secretRef": {
                                                    "description": "Name of the secret from which to pull the auth params.",
                                                    "type": "string"
                                                  },
                                                  "triggerParameter": {
                                                    "description": "Trigger Parameter that uses the secret",
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "identity": {
                                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "registries": {
                                "description": "Collection of private container registry credentials used by a Container apps job",
                                "type": "array",
                                "items": {
                                  "description": "Container App Private Registry",
                                  "type": "object",
                                  "properties": {
                                    "server": {
                                      "description": "Container Registry Server",
                                      "type": "string"
                                    },
                                    "username": {
                                      "description": "Container Registry Username",
                                      "type": "string"
                                    },
                                    "passwordSecretRef": {
                                      "description": "The name of the Secret that contains the registry login password",
                                      "type": "string"
                                    },
                                    "identity": {
                                      "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "server"
                                ]
                              },
                              "identitySettings": {
                                "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.",
                                "type": "array",
                                "items": {
                                  "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                                  "type": "object",
                                  "required": [
                                    "identity"
                                  ],
                                  "properties": {
                                    "identity": {
                                      "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                      "type": "string"
                                    },
                                    "lifecycle": {
                                      "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                      "enum": [
                                        "Init",
                                        "Main",
                                        "None",
                                        "All"
                                      ],
                                      "type": "string",
                                      "default": "All",
                                      "x-ms-enum": {
                                        "name": "IdentitySettingsLifeCycle",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "identity"
                                ]
                              }
                            }
                          },
                          "template": {
                            "description": "Container Apps job definition.",
                            "type": "object",
                            "properties": {
                              "initContainers": {
                                "description": "List of specialized containers that run before app containers.",
                                "type": "array",
                                "items": {
                                  "description": "Container App init container definition",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "volumeMounts": {
                                      "description": "Container volume mounts.",
                                      "type": "array",
                                      "items": {
                                        "description": "Volume mount for the Container App.",
                                        "type": "object",
                                        "properties": {
                                          "volumeName": {
                                            "description": "This must match the Name of a Volume.",
                                            "type": "string"
                                          },
                                          "mountPath": {
                                            "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                            "type": "string"
                                          },
                                          "subPath": {
                                            "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "volumeName"
                                      ]
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "containers": {
                                "description": "List of container definitions for the Container App.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container definition",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "volumeMounts": {
                                      "description": "Container volume mounts.",
                                      "type": "array",
                                      "items": {
                                        "description": "Volume mount for the Container App.",
                                        "type": "object",
                                        "properties": {
                                          "volumeName": {
                                            "description": "This must match the Name of a Volume.",
                                            "type": "string"
                                          },
                                          "mountPath": {
                                            "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                            "type": "string"
                                          },
                                          "subPath": {
                                            "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "volumeName"
                                      ]
                                    },
                                    "probes": {
                                      "description": "List of probes for the container.",
                                      "type": "array",
                                      "items": {
                                        "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                        "type": "object",
                                        "properties": {
                                          "failureThreshold": {
                                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "httpGet": {
                                            "description": "HTTPGet specifies the http request to perform.",
                                            "type": "object",
                                            "required": [
                                              "port"
                                            ],
                                            "properties": {
                                              "host": {
                                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                                "type": "string"
                                              },
                                              "httpHeaders": {
                                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                                "type": "array",
                                                "items": {
                                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                                  "type": "object",
                                                  "required": [
                                                    "name",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "name": {
                                                      "description": "The header field name",
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "description": "The header field value",
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "x-ms-identifiers": [
                                                  "name"
                                                ]
                                              },
                                              "path": {
                                                "description": "Path to access on the HTTP server.",
                                                "type": "string"
                                              },
                                              "port": {
                                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                "type": "integer",
                                                "format": "int32"
                                              },
                                              "scheme": {
                                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                                "enum": [
                                                  "HTTP",
                                                  "HTTPS"
                                                ],
                                                "type": "string",
                                                "x-ms-enum": {
                                                  "name": "Scheme",
                                                  "modelAsString": true
                                                }
                                              }
                                            }
                                          },
                                          "initialDelaySeconds": {
                                            "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "periodSeconds": {
                                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "successThreshold": {
                                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "tcpSocket": {
                                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                            "type": "object",
                                            "required": [
                                              "port"
                                            ],
                                            "properties": {
                                              "host": {
                                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                                "type": "string"
                                              },
                                              "port": {
                                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                                "type": "integer",
                                                "format": "int32"
                                              }
                                            }
                                          },
                                          "terminationGracePeriodSeconds": {
                                            "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "timeoutSeconds": {
                                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "type": {
                                            "description": "The type of probe.",
                                            "enum": [
                                              "Liveness",
                                              "Readiness",
                                              "Startup"
                                            ],
                                            "type": "string",
                                            "x-ms-enum": {
                                              "name": "Type",
                                              "modelAsString": true
                                            }
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "type"
                                      ]
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "volumes": {
                                "description": "List of volume definitions for the Container App.",
                                "type": "array",
                                "items": {
                                  "description": "Volume definitions for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Volume name.",
                                      "type": "string"
                                    },
                                    "storageType": {
                                      "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                      "enum": [
                                        "AzureFile",
                                        "EmptyDir",
                                        "Secret",
                                        "NfsAzureFile"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "StorageType",
                                        "modelAsString": true
                                      }
                                    },
                                    "storageName": {
                                      "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                      "type": "string"
                                    },
                                    "secrets": {
                                      "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                      "type": "array",
                                      "items": {
                                        "description": "Secret to be added to volume.",
                                        "type": "object",
                                        "properties": {
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the secret value.",
                                            "type": "string"
                                          },
                                          "path": {
                                            "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "secretRef"
                                      ]
                                    },
                                    "mountOptions": {
                                      "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              }
                            }
                          },
                          "outboundIpAddresses": {
                            "description": "Outbound IP Addresses of a container apps job.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "eventStreamEndpoint": {
                            "description": "The endpoint of the eventstream of the container apps job.",
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get the properties of a Container Apps Job.",
        "operationId": "Jobs_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "Container App Job",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Container Apps Job resource specific properties.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Container Apps Job.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "JobProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "workloadProfileName": {
                      "description": "Workload profile name to pin for container apps job execution.",
                      "type": "string"
                    },
                    "configuration": {
                      "description": "Container Apps Job configuration properties.",
                      "type": "object",
                      "required": [
                        "replicaTimeout",
                        "triggerType"
                      ],
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container Apps Job",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "triggerType": {
                          "description": "Trigger type of the job",
                          "enum": [
                            "Schedule",
                            "Event",
                            "Manual"
                          ],
                          "type": "string",
                          "default": "Manual",
                          "x-ms-enum": {
                            "name": "TriggerType",
                            "modelAsString": true
                          }
                        },
                        "replicaTimeout": {
                          "description": "Maximum number of seconds a replica is allowed to run.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "replicaRetryLimit": {
                          "format": "int32",
                          "description": "Maximum number of retries before failing the job.",
                          "type": "integer"
                        },
                        "manualTriggerConfig": {
                          "type": "object",
                          "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "scheduleTriggerConfig": {
                          "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
                          "required": [
                            "cronExpression"
                          ],
                          "type": "object",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "cronExpression": {
                              "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job.",
                              "type": "string"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "eventTriggerConfig": {
                          "type": "object",
                          "description": "Trigger configuration of an event driven job.",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "scale": {
                              "description": "Scaling configurations for event driven jobs.",
                              "type": "object",
                              "properties": {
                                "pollingInterval": {
                                  "description": "Interval to check each event source in seconds. Defaults to 30s",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "minExecutions": {
                                  "format": "int32",
                                  "description": "Minimum number of job executions that are created for a trigger, default 0",
                                  "type": "integer",
                                  "default": 0
                                },
                                "maxExecutions": {
                                  "format": "int32",
                                  "description": "Maximum number of job executions that are created for a trigger, default 100.",
                                  "type": "integer",
                                  "default": 100
                                },
                                "rules": {
                                  "description": "Scaling rules.",
                                  "type": "array",
                                  "items": {
                                    "description": "Scaling rule.",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Scale Rule Name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe the scale rule.",
                                        "type": "object"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials used by a Container apps job",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container Apps job definition.",
                      "type": "object",
                      "properties": {
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses of a container apps job.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container apps job.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Jobs"
        ],
        "summary": "Create or Update a Container Apps Job.",
        "description": "Create or Update a Container Apps Job.",
        "operationId": "Jobs_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "JobEnvelope",
            "in": "body",
            "description": "Properties used to create a container apps job",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Container App Job",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Container Apps Job resource specific properties.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Container Apps Job.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "JobProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "workloadProfileName": {
                      "description": "Workload profile name to pin for container apps job execution.",
                      "type": "string"
                    },
                    "configuration": {
                      "description": "Container Apps Job configuration properties.",
                      "type": "object",
                      "required": [
                        "replicaTimeout",
                        "triggerType"
                      ],
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container Apps Job",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "triggerType": {
                          "description": "Trigger type of the job",
                          "enum": [
                            "Schedule",
                            "Event",
                            "Manual"
                          ],
                          "type": "string",
                          "default": "Manual",
                          "x-ms-enum": {
                            "name": "TriggerType",
                            "modelAsString": true
                          }
                        },
                        "replicaTimeout": {
                          "description": "Maximum number of seconds a replica is allowed to run.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "replicaRetryLimit": {
                          "format": "int32",
                          "description": "Maximum number of retries before failing the job.",
                          "type": "integer"
                        },
                        "manualTriggerConfig": {
                          "type": "object",
                          "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "scheduleTriggerConfig": {
                          "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
                          "required": [
                            "cronExpression"
                          ],
                          "type": "object",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "cronExpression": {
                              "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job.",
                              "type": "string"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "eventTriggerConfig": {
                          "type": "object",
                          "description": "Trigger configuration of an event driven job.",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "scale": {
                              "description": "Scaling configurations for event driven jobs.",
                              "type": "object",
                              "properties": {
                                "pollingInterval": {
                                  "description": "Interval to check each event source in seconds. Defaults to 30s",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "minExecutions": {
                                  "format": "int32",
                                  "description": "Minimum number of job executions that are created for a trigger, default 0",
                                  "type": "integer",
                                  "default": 0
                                },
                                "maxExecutions": {
                                  "format": "int32",
                                  "description": "Maximum number of job executions that are created for a trigger, default 100.",
                                  "type": "integer",
                                  "default": 100
                                },
                                "rules": {
                                  "description": "Scaling rules.",
                                  "type": "array",
                                  "items": {
                                    "description": "Scaling rule.",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Scale Rule Name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe the scale rule.",
                                        "type": "object"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials used by a Container apps job",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container Apps job definition.",
                      "type": "object",
                      "properties": {
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses of a container apps job.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container apps job.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "No change performed on the Container Apps Job.",
            "schema": {
              "type": "object",
              "description": "Container App Job",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Container Apps Job resource specific properties.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Container Apps Job.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "JobProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "workloadProfileName": {
                      "description": "Workload profile name to pin for container apps job execution.",
                      "type": "string"
                    },
                    "configuration": {
                      "description": "Container Apps Job configuration properties.",
                      "type": "object",
                      "required": [
                        "replicaTimeout",
                        "triggerType"
                      ],
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container Apps Job",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "triggerType": {
                          "description": "Trigger type of the job",
                          "enum": [
                            "Schedule",
                            "Event",
                            "Manual"
                          ],
                          "type": "string",
                          "default": "Manual",
                          "x-ms-enum": {
                            "name": "TriggerType",
                            "modelAsString": true
                          }
                        },
                        "replicaTimeout": {
                          "description": "Maximum number of seconds a replica is allowed to run.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "replicaRetryLimit": {
                          "format": "int32",
                          "description": "Maximum number of retries before failing the job.",
                          "type": "integer"
                        },
                        "manualTriggerConfig": {
                          "type": "object",
                          "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "scheduleTriggerConfig": {
                          "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
                          "required": [
                            "cronExpression"
                          ],
                          "type": "object",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "cronExpression": {
                              "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job.",
                              "type": "string"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "eventTriggerConfig": {
                          "type": "object",
                          "description": "Trigger configuration of an event driven job.",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "scale": {
                              "description": "Scaling configurations for event driven jobs.",
                              "type": "object",
                              "properties": {
                                "pollingInterval": {
                                  "description": "Interval to check each event source in seconds. Defaults to 30s",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "minExecutions": {
                                  "format": "int32",
                                  "description": "Minimum number of job executions that are created for a trigger, default 0",
                                  "type": "integer",
                                  "default": 0
                                },
                                "maxExecutions": {
                                  "format": "int32",
                                  "description": "Maximum number of job executions that are created for a trigger, default 100.",
                                  "type": "integer",
                                  "default": 100
                                },
                                "rules": {
                                  "description": "Scaling rules.",
                                  "type": "array",
                                  "items": {
                                    "description": "Scaling rule.",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Scale Rule Name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe the scale rule.",
                                        "type": "object"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials used by a Container apps job",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container Apps job definition.",
                      "type": "object",
                      "properties": {
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses of a container apps job.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container apps job.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "201": {
            "description": "Container Apps Job create has been started.",
            "schema": {
              "type": "object",
              "description": "Container App Job",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Container Apps Job resource specific properties.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Container Apps Job.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "JobProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "workloadProfileName": {
                      "description": "Workload profile name to pin for container apps job execution.",
                      "type": "string"
                    },
                    "configuration": {
                      "description": "Container Apps Job configuration properties.",
                      "type": "object",
                      "required": [
                        "replicaTimeout",
                        "triggerType"
                      ],
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container Apps Job",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "triggerType": {
                          "description": "Trigger type of the job",
                          "enum": [
                            "Schedule",
                            "Event",
                            "Manual"
                          ],
                          "type": "string",
                          "default": "Manual",
                          "x-ms-enum": {
                            "name": "TriggerType",
                            "modelAsString": true
                          }
                        },
                        "replicaTimeout": {
                          "description": "Maximum number of seconds a replica is allowed to run.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "replicaRetryLimit": {
                          "format": "int32",
                          "description": "Maximum number of retries before failing the job.",
                          "type": "integer"
                        },
                        "manualTriggerConfig": {
                          "type": "object",
                          "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "scheduleTriggerConfig": {
                          "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
                          "required": [
                            "cronExpression"
                          ],
                          "type": "object",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "cronExpression": {
                              "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job.",
                              "type": "string"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "eventTriggerConfig": {
                          "type": "object",
                          "description": "Trigger configuration of an event driven job.",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "scale": {
                              "description": "Scaling configurations for event driven jobs.",
                              "type": "object",
                              "properties": {
                                "pollingInterval": {
                                  "description": "Interval to check each event source in seconds. Defaults to 30s",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "minExecutions": {
                                  "format": "int32",
                                  "description": "Minimum number of job executions that are created for a trigger, default 0",
                                  "type": "integer",
                                  "default": 0
                                },
                                "maxExecutions": {
                                  "format": "int32",
                                  "description": "Maximum number of job executions that are created for a trigger, default 100.",
                                  "type": "integer",
                                  "default": 100
                                },
                                "rules": {
                                  "description": "Scaling rules.",
                                  "type": "array",
                                  "items": {
                                    "description": "Scaling rule.",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Scale Rule Name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe the scale rule.",
                                        "type": "object"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials used by a Container apps job",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container Apps job definition.",
                      "type": "object",
                      "properties": {
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses of a container apps job.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container apps job.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Jobs"
        ],
        "summary": "Delete a Container Apps Job.",
        "description": "Delete a Container Apps Job.",
        "operationId": "Jobs_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Container Apps Job deleted successfully."
          },
          "202": {
            "description": "Delete operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Container Apps Job does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "Jobs"
        ],
        "summary": "Update properties of a Container Apps Job",
        "description": "Patches a Container Apps Job using JSON Merge Patch",
        "operationId": "Jobs_Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "JobEnvelope",
            "in": "body",
            "required": true,
            "description": "Properties used to create a container apps job",
            "schema": {
              "type": "object",
              "description": "Container Apps Job resource specific properties.",
              "properties": {
                "identity": {
                  "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ]
                    },
                    "configuration": {
                      "description": "Container Apps Job configuration properties.",
                      "type": "object",
                      "required": [
                        "replicaTimeout",
                        "triggerType"
                      ],
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container Apps Job",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "triggerType": {
                          "description": "Trigger type of the job",
                          "enum": [
                            "Schedule",
                            "Event",
                            "Manual"
                          ],
                          "type": "string",
                          "default": "Manual",
                          "x-ms-enum": {
                            "name": "TriggerType",
                            "modelAsString": true
                          }
                        },
                        "replicaTimeout": {
                          "description": "Maximum number of seconds a replica is allowed to run.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "replicaRetryLimit": {
                          "format": "int32",
                          "description": "Maximum number of retries before failing the job.",
                          "type": "integer"
                        },
                        "manualTriggerConfig": {
                          "type": "object",
                          "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "scheduleTriggerConfig": {
                          "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
                          "required": [
                            "cronExpression"
                          ],
                          "type": "object",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "cronExpression": {
                              "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job.",
                              "type": "string"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "eventTriggerConfig": {
                          "type": "object",
                          "description": "Trigger configuration of an event driven job.",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "scale": {
                              "description": "Scaling configurations for event driven jobs.",
                              "type": "object",
                              "properties": {
                                "pollingInterval": {
                                  "description": "Interval to check each event source in seconds. Defaults to 30s",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "minExecutions": {
                                  "format": "int32",
                                  "description": "Minimum number of job executions that are created for a trigger, default 0",
                                  "type": "integer",
                                  "default": 0
                                },
                                "maxExecutions": {
                                  "format": "int32",
                                  "description": "Maximum number of job executions that are created for a trigger, default 100.",
                                  "type": "integer",
                                  "default": 100
                                },
                                "rules": {
                                  "description": "Scaling rules.",
                                  "type": "array",
                                  "items": {
                                    "description": "Scaling rule.",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Scale Rule Name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe the scale rule.",
                                        "type": "object"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials used by a Container apps job",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container Apps job definition.",
                      "type": "object",
                      "properties": {
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses of a container apps job.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container apps job.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "type": "object",
              "description": "Container App Job",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Container Apps Job resource specific properties.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Container Apps Job.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "JobProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "environmentId": {
                      "description": "Resource ID of environment.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "workloadProfileName": {
                      "description": "Workload profile name to pin for container apps job execution.",
                      "type": "string"
                    },
                    "configuration": {
                      "description": "Container Apps Job configuration properties.",
                      "type": "object",
                      "required": [
                        "replicaTimeout",
                        "triggerType"
                      ],
                      "properties": {
                        "secrets": {
                          "description": "Collection of secrets used by a Container Apps Job",
                          "type": "array",
                          "items": {
                            "description": "Secret definition.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Secret Name.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Secret Value.",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "triggerType": {
                          "description": "Trigger type of the job",
                          "enum": [
                            "Schedule",
                            "Event",
                            "Manual"
                          ],
                          "type": "string",
                          "default": "Manual",
                          "x-ms-enum": {
                            "name": "TriggerType",
                            "modelAsString": true
                          }
                        },
                        "replicaTimeout": {
                          "description": "Maximum number of seconds a replica is allowed to run.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "replicaRetryLimit": {
                          "format": "int32",
                          "description": "Maximum number of retries before failing the job.",
                          "type": "integer"
                        },
                        "manualTriggerConfig": {
                          "type": "object",
                          "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "scheduleTriggerConfig": {
                          "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
                          "required": [
                            "cronExpression"
                          ],
                          "type": "object",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "cronExpression": {
                              "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job.",
                              "type": "string"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            }
                          }
                        },
                        "eventTriggerConfig": {
                          "type": "object",
                          "description": "Trigger configuration of an event driven job.",
                          "properties": {
                            "replicaCompletionCount": {
                              "description": "Minimum number of successful replica completions before overall job completion.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "parallelism": {
                              "description": "Number of parallel replicas of a job that can run at a given time.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "scale": {
                              "description": "Scaling configurations for event driven jobs.",
                              "type": "object",
                              "properties": {
                                "pollingInterval": {
                                  "description": "Interval to check each event source in seconds. Defaults to 30s",
                                  "format": "int32",
                                  "type": "integer"
                                },
                                "minExecutions": {
                                  "format": "int32",
                                  "description": "Minimum number of job executions that are created for a trigger, default 0",
                                  "type": "integer",
                                  "default": 0
                                },
                                "maxExecutions": {
                                  "format": "int32",
                                  "description": "Maximum number of job executions that are created for a trigger, default 100.",
                                  "type": "integer",
                                  "default": 100
                                },
                                "rules": {
                                  "description": "Scaling rules.",
                                  "type": "array",
                                  "items": {
                                    "description": "Scaling rule.",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Scale Rule Name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "Metadata properties to describe the scale rule.",
                                        "type": "object"
                                      },
                                      "auth": {
                                        "description": "Authentication secrets for the scale rule.",
                                        "type": "array",
                                        "items": {
                                          "description": "Auth Secrets for Scale Rule",
                                          "type": "object",
                                          "properties": {
                                            "secretRef": {
                                              "description": "Name of the secret from which to pull the auth params.",
                                              "type": "string"
                                            },
                                            "triggerParameter": {
                                              "description": "Trigger Parameter that uses the secret",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "identity": {
                                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "registries": {
                          "description": "Collection of private container registry credentials used by a Container apps job",
                          "type": "array",
                          "items": {
                            "description": "Container App Private Registry",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Container Registry Server",
                                "type": "string"
                              },
                              "username": {
                                "description": "Container Registry Username",
                                "type": "string"
                              },
                              "passwordSecretRef": {
                                "description": "The name of the Secret that contains the registry login password",
                                "type": "string"
                              },
                              "identity": {
                                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "server"
                          ]
                        },
                        "identitySettings": {
                          "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.",
                          "type": "array",
                          "items": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                            "type": "object",
                            "required": [
                              "identity"
                            ],
                            "properties": {
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              },
                              "lifecycle": {
                                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                                "enum": [
                                  "Init",
                                  "Main",
                                  "None",
                                  "All"
                                ],
                                "type": "string",
                                "default": "All",
                                "x-ms-enum": {
                                  "name": "IdentitySettingsLifeCycle",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "identity"
                          ]
                        }
                      }
                    },
                    "template": {
                      "description": "Container Apps job definition.",
                      "type": "object",
                      "properties": {
                        "initContainers": {
                          "description": "List of specialized containers that run before app containers.",
                          "type": "array",
                          "items": {
                            "description": "Container App init container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "containers": {
                          "description": "List of container definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Container App container definition",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              },
                              "volumeMounts": {
                                "description": "Container volume mounts.",
                                "type": "array",
                                "items": {
                                  "description": "Volume mount for the Container App.",
                                  "type": "object",
                                  "properties": {
                                    "volumeName": {
                                      "description": "This must match the Name of a Volume.",
                                      "type": "string"
                                    },
                                    "mountPath": {
                                      "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                      "type": "string"
                                    },
                                    "subPath": {
                                      "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "volumeName"
                                ]
                              },
                              "probes": {
                                "description": "List of probes for the container.",
                                "type": "array",
                                "items": {
                                  "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                  "type": "object",
                                  "properties": {
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ]
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                          "enum": [
                                            "HTTP",
                                            "HTTPS"
                                          ],
                                          "type": "string",
                                          "x-ms-enum": {
                                            "name": "Scheme",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "type": {
                                      "description": "The type of probe.",
                                      "enum": [
                                        "Liveness",
                                        "Readiness",
                                        "Startup"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "Type",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "type"
                                ]
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "volumes": {
                          "description": "List of volume definitions for the Container App.",
                          "type": "array",
                          "items": {
                            "description": "Volume definitions for the Container App.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Volume name.",
                                "type": "string"
                              },
                              "storageType": {
                                "description": "Storage type for the volume. If not provided, use EmptyDir.",
                                "enum": [
                                  "AzureFile",
                                  "EmptyDir",
                                  "Secret",
                                  "NfsAzureFile"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true
                                }
                              },
                              "storageName": {
                                "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                                "type": "string"
                              },
                              "secrets": {
                                "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                                "type": "array",
                                "items": {
                                  "description": "Secret to be added to volume.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the secret value.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "secretRef"
                                ]
                              },
                              "mountOptions": {
                                "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    },
                    "outboundIpAddresses": {
                      "description": "Outbound IP Addresses of a container apps job.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the container apps job.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "202": {
            "description": "Patch operation is in progress.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/start": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Start a Container Apps Job",
        "operationId": "Jobs_Start",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "template",
            "in": "body",
            "description": "Properties used to start a job execution.",
            "required": false,
            "schema": {
              "description": "Job's execution template, containing container configuration for a job's execution",
              "type": "object",
              "properties": {
                "containers": {
                  "description": "List of container definitions for the Container Apps Job.",
                  "type": "array",
                  "items": {
                    "description": "Container Apps Jobs execution container definition.",
                    "type": "object",
                    "properties": {
                      "image": {
                        "description": "Container image tag.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Custom container name.",
                        "type": "string"
                      },
                      "command": {
                        "description": "Container start command.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "args": {
                        "description": "Container start command arguments.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "description": "Container environment variables.",
                        "type": "array",
                        "items": {
                          "description": "Container App container environment variable.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Environment variable name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Non-secret environment variable value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the environment variable value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "resources": {
                        "description": "Container resource requirements.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "format": "double",
                            "description": "Required CPU in cores, e.g. 0.5",
                            "type": "number"
                          },
                          "memory": {
                            "description": "Required memory, e.g. \"250Mb\"",
                            "type": "string"
                          },
                          "ephemeralStorage": {
                            "description": "Ephemeral Storage, e.g. \"1Gi\"",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "initContainers": {
                  "description": "List of specialized containers that run before job containers.",
                  "type": "array",
                  "items": {
                    "description": "Container Apps Jobs execution container definition.",
                    "type": "object",
                    "properties": {
                      "image": {
                        "description": "Container image tag.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Custom container name.",
                        "type": "string"
                      },
                      "command": {
                        "description": "Container start command.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "args": {
                        "description": "Container start command arguments.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "description": "Container environment variables.",
                        "type": "array",
                        "items": {
                          "description": "Container App container environment variable.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Environment variable name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Non-secret environment variable value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the environment variable value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "resources": {
                        "description": "Container resource requirements.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "format": "double",
                            "description": "Required CPU in cores, e.g. 0.5",
                            "type": "number"
                          },
                          "memory": {
                            "description": "Required memory, e.g. \"250Mb\"",
                            "type": "string"
                          },
                          "ephemeralStorage": {
                            "description": "Ephemeral Storage, e.g. \"1Gi\"",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container App's Job execution name.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Job execution name.",
                  "type": "string"
                },
                "id": {
                  "description": "Job execution Id.",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "OK",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/executions/{jobExecutionName}/stop": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Terminates execution of a running container apps job",
        "operationId": "Jobs_StopExecution",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobExecutionName",
            "in": "path",
            "description": "Job execution name.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Container Apps Jobs terminated successfully."
          },
          "202": {
            "description": "OK",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/stop": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Terminates execution of a running container apps job",
        "operationId": "Jobs_StopMultipleExecutions",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all the job executions that were requested to be stopped",
            "schema": {
              "description": "Container App executions collection ARM resource.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Container Apps Job execution.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Job execution Name.",
                        "type": "string"
                      },
                      "id": {
                        "description": "Job execution Id.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Job execution type",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Container Apps Job execution specific properties.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Current running State of the job",
                            "enum": [
                              "Running",
                              "Processing",
                              "Stopped",
                              "Degraded",
                              "Failed",
                              "Unknown",
                              "Succeeded"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "JobExecutionRunningState",
                              "modelAsString": true
                            }
                          },
                          "startTime": {
                            "description": "Job execution start time.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "endTime": {
                            "description": "Job execution end time.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "template": {
                            "description": "Job's execution template, containing container configuration for a job's execution",
                            "type": "object",
                            "properties": {
                              "containers": {
                                "description": "List of container definitions for the Container Apps Job.",
                                "type": "array",
                                "items": {
                                  "description": "Container Apps Jobs execution container definition.",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "initContainers": {
                                "description": "List of specialized containers that run before job containers.",
                                "type": "array",
                                "items": {
                                  "description": "Container Apps Jobs execution container definition.",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              }
                            }
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          },
          "202": {
            "description": "OK",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/executions": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get a Container Apps Job's executions",
        "operationId": "JobsExecutions_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "The filter to apply on the operation.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container App executions collection ARM resource.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Container Apps Job execution.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Job execution Name.",
                        "type": "string"
                      },
                      "id": {
                        "description": "Job execution Id.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Job execution type",
                        "type": "string"
                      },
                      "properties": {
                        "description": "Container Apps Job execution specific properties.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Current running State of the job",
                            "enum": [
                              "Running",
                              "Processing",
                              "Stopped",
                              "Degraded",
                              "Failed",
                              "Unknown",
                              "Succeeded"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "JobExecutionRunningState",
                              "modelAsString": true
                            }
                          },
                          "startTime": {
                            "description": "Job execution start time.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "endTime": {
                            "description": "Job execution end time.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "template": {
                            "description": "Job's execution template, containing container configuration for a job's execution",
                            "type": "object",
                            "properties": {
                              "containers": {
                                "description": "List of container definitions for the Container Apps Job.",
                                "type": "array",
                                "items": {
                                  "description": "Container Apps Jobs execution container definition.",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "initContainers": {
                                "description": "List of specialized containers that run before job containers.",
                                "type": "array",
                                "items": {
                                  "description": "Container Apps Jobs execution container definition.",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        },
                                        "ephemeralStorage": {
                                          "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              }
                            }
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/executions/{jobExecutionName}": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Get details of a single job execution",
        "operationId": "JobExecution",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "jobExecutionName",
            "in": "path",
            "description": "Job execution name.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container Apps Job execution.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Job execution Name.",
                  "type": "string"
                },
                "id": {
                  "description": "Job execution Id.",
                  "type": "string"
                },
                "type": {
                  "description": "Job execution type",
                  "type": "string"
                },
                "properties": {
                  "description": "Container Apps Job execution specific properties.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Current running State of the job",
                      "enum": [
                        "Running",
                        "Processing",
                        "Stopped",
                        "Degraded",
                        "Failed",
                        "Unknown",
                        "Succeeded"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "JobExecutionRunningState",
                        "modelAsString": true
                      }
                    },
                    "startTime": {
                      "description": "Job execution start time.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "endTime": {
                      "description": "Job execution end time.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "template": {
                      "description": "Job's execution template, containing container configuration for a job's execution",
                      "type": "object",
                      "properties": {
                        "containers": {
                          "description": "List of container definitions for the Container Apps Job.",
                          "type": "array",
                          "items": {
                            "description": "Container Apps Jobs execution container definition.",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "initContainers": {
                          "description": "List of specialized containers that run before job containers.",
                          "type": "array",
                          "items": {
                            "description": "Container Apps Jobs execution container definition.",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  },
                                  "ephemeralStorage": {
                                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/jobs/{jobName}/listSecrets": {
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "List secrets for a container apps job",
        "operationId": "Jobs_ListSecrets",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "jobName",
            "in": "path",
            "description": "Job Name",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container Apps Job Secrets Collection ARM resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Secret definition.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Secret Name.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Secret Value.",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "update"
                        ],
                        "x-ms-secret": true
                      },
                      "identity": {
                        "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                        "type": "string"
                      },
                      "keyVaultUrl": {
                        "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/providers/Microsoft.App/logicApps/{logicAppName}": {
      "get": {
        "tags": [
          "LogicApps"
        ],
        "summary": "Gets a logic app extension resource.",
        "operationId": "LogicApps_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "logicAppName",
            "in": "path",
            "description": "Name of the Logic App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "A logic app extension resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "LogicApps_CreateOrUpdate",
        "tags": [
          "LogicApps"
        ],
        "description": "Create or update a Logic App extension resource",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "logicAppName",
            "in": "path",
            "description": "Name of the Logic App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Logic app resource properties.",
            "schema": {
              "type": "object",
              "description": "A logic app extension resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "description": "A logic app extension resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "description": "A logic app extension resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "LogicApps_Delete",
        "tags": [
          "LogicApps"
        ],
        "description": "Deletes a Logic App extension resource",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "logicAppName",
            "in": "path",
            "description": "Name of the Logic App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "204": {
            "description": "Extension resource does not exist"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/providers/Microsoft.App/logicApps/{logicAppName}/workflows": {
      "get": {
        "tags": [
          "LogicApps"
        ],
        "summary": "List the workflows for a logic app.",
        "operationId": "LogicApps_ListWorkflows",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "logicAppName",
            "in": "path",
            "description": "Name of the Logic App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow information returned.",
            "schema": {
              "$ref": "#/definitions/WorkflowEnvelopeCollection"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/providers/Microsoft.App/logicApps/{logicAppName}/workflows/{workflowName}": {
      "get": {
        "tags": [
          "LogicApps"
        ],
        "summary": "Get workflow information by its name",
        "operationId": "LogicApps_GetWorkflow",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "logicAppName",
            "in": "path",
            "description": "Name of the Logic App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "workflowName",
            "in": "path",
            "description": "Workflow name.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "minLength": 3,
            "maxLength": 63
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow information returned.",
            "schema": {
              "$ref": "#/definitions/WorkflowEnvelope"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/providers/Microsoft.App/logicApps/{logicAppName}/listWorkflowsConnections": {
      "post": {
        "tags": [
          "LogicApps"
        ],
        "summary": "Gets logic app's connections.",
        "operationId": "LogicApps_ListWorkflowsConnections",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "logicAppName",
            "in": "path",
            "description": "Name of the Logic App.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Connections information returned.",
            "schema": {
              "$ref": "#/definitions/WorkflowEnvelope"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/managedEnvironments": {
      "get": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Get all Environments for a subscription.",
        "description": "Get all Managed Environments for a subscription.",
        "operationId": "ManagedEnvironments_ListBySubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of Environments",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "An environment for hosting container apps",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "kind": {
                        "type": "string",
                        "description": "Kind of the Environment."
                      },
                      "identity": {
                        "description": "Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "description": "Managed environment resource specific properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the Environment.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Waiting",
                              "InitializationInProgress",
                              "InfrastructureSetupInProgress",
                              "InfrastructureSetupComplete",
                              "ScheduledForDelete",
                              "UpgradeRequested",
                              "UpgradeFailed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EnvironmentProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "daprAIInstrumentationKey": {
                            "type": "string",
                            "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
                            "x-ms-secret": true
                          },
                          "daprAIConnectionString": {
                            "type": "string",
                            "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                            "x-ms-secret": true
                          },
                          "vnetConfiguration": {
                            "description": "Vnet configuration for the environment",
                            "type": "object",
                            "properties": {
                              "internal": {
                                "type": "boolean",
                                "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "infrastructureSubnetId": {
                                "type": "string",
                                "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "dockerBridgeCidr": {
                                "type": "string",
                                "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "platformReservedCidr": {
                                "type": "string",
                                "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "platformReservedDnsIP": {
                                "type": "string",
                                "description": " An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              }
                            }
                          },
                          "deploymentErrors": {
                            "description": "Any errors that occurred during deployment or deployment validation",
                            "type": "string",
                            "readOnly": true
                          },
                          "defaultDomain": {
                            "description": "Default Domain Name for the cluster",
                            "type": "string",
                            "readOnly": true
                          },
                          "staticIp": {
                            "description": "Static IP of the Environment",
                            "type": "string",
                            "readOnly": true
                          },
                          "appLogsConfiguration": {
                            "description": "Cluster configuration which enables the log daemon to export app logs to configured destination.",
                            "type": "object",
                            "properties": {
                              "destination": {
                                "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
                                "type": "string"
                              },
                              "logAnalyticsConfiguration": {
                                "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
                                "type": "object",
                                "properties": {
                                  "customerId": {
                                    "description": "Log analytics customer id",
                                    "type": "string"
                                  },
                                  "sharedKey": {
                                    "description": "Log analytics customer key",
                                    "type": "string",
                                    "x-ms-mutability": [
                                      "create",
                                      "update"
                                    ],
                                    "x-ms-secret": true
                                  }
                                }
                              }
                            }
                          },
                          "zoneRedundant": {
                            "description": "Whether or not this Managed Environment is zone-redundant.",
                            "type": "boolean",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "customDomainConfiguration": {
                            "description": "Custom domain configuration for the environment",
                            "type": "object",
                            "properties": {
                              "customDomainVerificationId": {
                                "description": "Id used to verify domain name ownership",
                                "type": "string",
                                "readOnly": true
                              },
                              "dnsSuffix": {
                                "type": "string",
                                "description": "Dns suffix for the environment domain",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "certificateKeyVaultProperties": {
                                "description": "Certificate stored in Azure Key Vault.",
                                "type": "object",
                                "properties": {
                                  "identity": {
                                    "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                    "type": "string"
                                  },
                                  "keyVaultUrl": {
                                    "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                                    "type": "string",
                                    "format": "uri"
                                  }
                                }
                              },
                              "certificateValue": {
                                "format": "byte",
                                "description": "PFX or PEM blob",
                                "type": "string",
                                "x-ms-secret": true
                              },
                              "certificatePassword": {
                                "description": "Certificate password",
                                "type": "string",
                                "x-ms-secret": true
                              },
                              "expirationDate": {
                                "format": "date-time",
                                "description": "Certificate expiration date.",
                                "type": "string",
                                "readOnly": true
                              },
                              "thumbprint": {
                                "description": "Certificate thumbprint.",
                                "type": "string",
                                "readOnly": true
                              },
                              "subjectName": {
                                "description": "Subject name of the certificate.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "eventStreamEndpoint": {
                            "description": "The endpoint of the eventstream of the Environment.",
                            "type": "string",
                            "readOnly": true
                          },
                          "workloadProfiles": {
                            "description": "Workload profiles configured for the Managed Environment.",
                            "type": "array",
                            "items": {
                              "description": "Workload profile to scope container app execution.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Workload profile type for the workloads to run on.",
                                  "type": "string"
                                },
                                "workloadProfileType": {
                                  "description": "Workload profile type for the workloads to run on.",
                                  "type": "string"
                                },
                                "minimumCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The minimum capacity."
                                },
                                "maximumCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum capacity."
                                }
                              },
                              "required": [
                                "name",
                                "workloadProfileType"
                              ]
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "kedaConfiguration": {
                            "description": "The configuration of Keda component.",
                            "type": "object",
                            "properties": {
                              "version": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The version of Keda"
                              }
                            }
                          },
                          "daprConfiguration": {
                            "description": "The configuration of Dapr component.",
                            "type": "object",
                            "properties": {
                              "version": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The version of Dapr"
                              }
                            }
                          },
                          "infrastructureResourceGroup": {
                            "description": "Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "peerAuthentication": {
                            "description": "Peer authentication settings for the Managed Environment",
                            "type": "object",
                            "properties": {
                              "mtls": {
                                "description": "Mutual TLS authentication settings for the Managed Environment",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether the mutual TLS authentication is enabled"
                                  }
                                }
                              }
                            }
                          },
                          "peerTrafficConfiguration": {
                            "description": "Peer traffic settings for the Managed Environment",
                            "type": "object",
                            "properties": {
                              "encryption": {
                                "description": "Peer traffic encryption settings for the Managed Environment",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether the peer traffic encryption is enabled"
                                  }
                                }
                              }
                            }
                          },
                          "ingressConfiguration": {
                            "description": "Ingress configuration for the Managed Environment.",
                            "type": "object",
                            "properties": {
                              "workloadProfileName": {
                                "description": "Name of the workload profile used by the ingress component. Required.",
                                "type": "string"
                              },
                              "terminationGracePeriodSeconds": {
                                "description": "Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480 seconds.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "headerCountLimit": {
                                "description": "Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "requestIdleTimeout": {
                                "description": "Duration (in minutes) before idle requests are timed out. Must be between 4 and 30 inclusive. Defaults to 4 minutes.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "description": "Private endpoint connections to the resource.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true
                                },
                                "systemData": {
                                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                },
                                "properties": {
                                  "x-ms-client-flatten": true,
                                  "description": "Resource properties.",
                                  "type": "object",
                                  "properties": {
                                    "groupIds": {
                                      "description": "The group ids for the private endpoint resource.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "privateEndpoint": {
                                      "description": "The resource of private end point.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "format": "arm-id",
                                          "description": "The ARM identifier for Private Endpoint"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "Succeeded",
                                        "Failed",
                                        "Canceled",
                                        "Waiting",
                                        "Updating",
                                        "Deleting",
                                        "Pending"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              },
                              "description": "The Private Endpoint Connection resource."
                            },
                            "readOnly": true
                          },
                          "publicNetworkAccess": {
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.",
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            }
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments": {
      "get": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Get all the Environments in a resource group.",
        "description": "Get all the Managed Environments in a resource group.",
        "operationId": "ManagedEnvironments_ListByResourceGroup",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of Environments",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "An environment for hosting container apps",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "kind": {
                        "type": "string",
                        "description": "Kind of the Environment."
                      },
                      "identity": {
                        "description": "Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "description": "Managed environment resource specific properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the Environment.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Waiting",
                              "InitializationInProgress",
                              "InfrastructureSetupInProgress",
                              "InfrastructureSetupComplete",
                              "ScheduledForDelete",
                              "UpgradeRequested",
                              "UpgradeFailed"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "EnvironmentProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "daprAIInstrumentationKey": {
                            "type": "string",
                            "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
                            "x-ms-secret": true
                          },
                          "daprAIConnectionString": {
                            "type": "string",
                            "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                            "x-ms-secret": true
                          },
                          "vnetConfiguration": {
                            "description": "Vnet configuration for the environment",
                            "type": "object",
                            "properties": {
                              "internal": {
                                "type": "boolean",
                                "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "infrastructureSubnetId": {
                                "type": "string",
                                "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "dockerBridgeCidr": {
                                "type": "string",
                                "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "platformReservedCidr": {
                                "type": "string",
                                "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "platformReservedDnsIP": {
                                "type": "string",
                                "description": " An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              }
                            }
                          },
                          "deploymentErrors": {
                            "description": "Any errors that occurred during deployment or deployment validation",
                            "type": "string",
                            "readOnly": true
                          },
                          "defaultDomain": {
                            "description": "Default Domain Name for the cluster",
                            "type": "string",
                            "readOnly": true
                          },
                          "staticIp": {
                            "description": "Static IP of the Environment",
                            "type": "string",
                            "readOnly": true
                          },
                          "appLogsConfiguration": {
                            "description": "Cluster configuration which enables the log daemon to export app logs to configured destination.",
                            "type": "object",
                            "properties": {
                              "destination": {
                                "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
                                "type": "string"
                              },
                              "logAnalyticsConfiguration": {
                                "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
                                "type": "object",
                                "properties": {
                                  "customerId": {
                                    "description": "Log analytics customer id",
                                    "type": "string"
                                  },
                                  "sharedKey": {
                                    "description": "Log analytics customer key",
                                    "type": "string",
                                    "x-ms-mutability": [
                                      "create",
                                      "update"
                                    ],
                                    "x-ms-secret": true
                                  }
                                }
                              }
                            }
                          },
                          "zoneRedundant": {
                            "description": "Whether or not this Managed Environment is zone-redundant.",
                            "type": "boolean",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "customDomainConfiguration": {
                            "description": "Custom domain configuration for the environment",
                            "type": "object",
                            "properties": {
                              "customDomainVerificationId": {
                                "description": "Id used to verify domain name ownership",
                                "type": "string",
                                "readOnly": true
                              },
                              "dnsSuffix": {
                                "type": "string",
                                "description": "Dns suffix for the environment domain",
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "certificateKeyVaultProperties": {
                                "description": "Certificate stored in Azure Key Vault.",
                                "type": "object",
                                "properties": {
                                  "identity": {
                                    "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                    "type": "string"
                                  },
                                  "keyVaultUrl": {
                                    "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                                    "type": "string",
                                    "format": "uri"
                                  }
                                }
                              },
                              "certificateValue": {
                                "format": "byte",
                                "description": "PFX or PEM blob",
                                "type": "string",
                                "x-ms-secret": true
                              },
                              "certificatePassword": {
                                "description": "Certificate password",
                                "type": "string",
                                "x-ms-secret": true
                              },
                              "expirationDate": {
                                "format": "date-time",
                                "description": "Certificate expiration date.",
                                "type": "string",
                                "readOnly": true
                              },
                              "thumbprint": {
                                "description": "Certificate thumbprint.",
                                "type": "string",
                                "readOnly": true
                              },
                              "subjectName": {
                                "description": "Subject name of the certificate.",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "eventStreamEndpoint": {
                            "description": "The endpoint of the eventstream of the Environment.",
                            "type": "string",
                            "readOnly": true
                          },
                          "workloadProfiles": {
                            "description": "Workload profiles configured for the Managed Environment.",
                            "type": "array",
                            "items": {
                              "description": "Workload profile to scope container app execution.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Workload profile type for the workloads to run on.",
                                  "type": "string"
                                },
                                "workloadProfileType": {
                                  "description": "Workload profile type for the workloads to run on.",
                                  "type": "string"
                                },
                                "minimumCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The minimum capacity."
                                },
                                "maximumCount": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The maximum capacity."
                                }
                              },
                              "required": [
                                "name",
                                "workloadProfileType"
                              ]
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "kedaConfiguration": {
                            "description": "The configuration of Keda component.",
                            "type": "object",
                            "properties": {
                              "version": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The version of Keda"
                              }
                            }
                          },
                          "daprConfiguration": {
                            "description": "The configuration of Dapr component.",
                            "type": "object",
                            "properties": {
                              "version": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The version of Dapr"
                              }
                            }
                          },
                          "infrastructureResourceGroup": {
                            "description": "Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "peerAuthentication": {
                            "description": "Peer authentication settings for the Managed Environment",
                            "type": "object",
                            "properties": {
                              "mtls": {
                                "description": "Mutual TLS authentication settings for the Managed Environment",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether the mutual TLS authentication is enabled"
                                  }
                                }
                              }
                            }
                          },
                          "peerTrafficConfiguration": {
                            "description": "Peer traffic settings for the Managed Environment",
                            "type": "object",
                            "properties": {
                              "encryption": {
                                "description": "Peer traffic encryption settings for the Managed Environment",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Boolean indicating whether the peer traffic encryption is enabled"
                                  }
                                }
                              }
                            }
                          },
                          "ingressConfiguration": {
                            "description": "Ingress configuration for the Managed Environment.",
                            "type": "object",
                            "properties": {
                              "workloadProfileName": {
                                "description": "Name of the workload profile used by the ingress component. Required.",
                                "type": "string"
                              },
                              "terminationGracePeriodSeconds": {
                                "description": "Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480 seconds.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "headerCountLimit": {
                                "description": "Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "requestIdleTimeout": {
                                "description": "Duration (in minutes) before idle requests are timed out. Must be between 4 and 30 inclusive. Defaults to 4 minutes.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "description": "Private endpoint connections to the resource.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true
                                },
                                "systemData": {
                                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                },
                                "properties": {
                                  "x-ms-client-flatten": true,
                                  "description": "Resource properties.",
                                  "type": "object",
                                  "properties": {
                                    "groupIds": {
                                      "description": "The group ids for the private endpoint resource.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "privateEndpoint": {
                                      "description": "The resource of private end point.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "readOnly": true,
                                          "type": "string",
                                          "format": "arm-id",
                                          "description": "The ARM identifier for Private Endpoint"
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected",
                                            "Disconnected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "readOnly": true,
                                      "enum": [
                                        "Succeeded",
                                        "Failed",
                                        "Canceled",
                                        "Waiting",
                                        "Updating",
                                        "Deleting",
                                        "Pending"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              },
                              "description": "The Private Endpoint Connection resource."
                            },
                            "readOnly": true
                          },
                          "publicNetworkAccess": {
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.",
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PublicNetworkAccess",
                              "modelAsString": true
                            }
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}": {
      "get": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Get the properties of a Managed Environment.",
        "description": "Get the properties of a Managed Environment used to host container apps.",
        "operationId": "ManagedEnvironments_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "An environment for hosting container apps",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "kind": {
                  "type": "string",
                  "description": "Kind of the Environment."
                },
                "identity": {
                  "description": "Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Managed environment resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Environment.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "InitializationInProgress",
                        "InfrastructureSetupInProgress",
                        "InfrastructureSetupComplete",
                        "ScheduledForDelete",
                        "UpgradeRequested",
                        "UpgradeFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EnvironmentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "daprAIInstrumentationKey": {
                      "type": "string",
                      "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "daprAIConnectionString": {
                      "type": "string",
                      "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "vnetConfiguration": {
                      "description": "Vnet configuration for the environment",
                      "type": "object",
                      "properties": {
                        "internal": {
                          "type": "boolean",
                          "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "infrastructureSubnetId": {
                          "type": "string",
                          "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "dockerBridgeCidr": {
                          "type": "string",
                          "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "platformReservedCidr": {
                          "type": "string",
                          "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "platformReservedDnsIP": {
                          "type": "string",
                          "description": " An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "defaultDomain": {
                      "description": "Default Domain Name for the cluster",
                      "type": "string",
                      "readOnly": true
                    },
                    "staticIp": {
                      "description": "Static IP of the Environment",
                      "type": "string",
                      "readOnly": true
                    },
                    "appLogsConfiguration": {
                      "description": "Cluster configuration which enables the log daemon to export app logs to configured destination.",
                      "type": "object",
                      "properties": {
                        "destination": {
                          "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
                          "type": "string"
                        },
                        "logAnalyticsConfiguration": {
                          "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
                          "type": "object",
                          "properties": {
                            "customerId": {
                              "description": "Log analytics customer id",
                              "type": "string"
                            },
                            "sharedKey": {
                              "description": "Log analytics customer key",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            }
                          }
                        }
                      }
                    },
                    "zoneRedundant": {
                      "description": "Whether or not this Managed Environment is zone-redundant.",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "customDomainConfiguration": {
                      "description": "Custom domain configuration for the environment",
                      "type": "object",
                      "properties": {
                        "customDomainVerificationId": {
                          "description": "Id used to verify domain name ownership",
                          "type": "string",
                          "readOnly": true
                        },
                        "dnsSuffix": {
                          "type": "string",
                          "description": "Dns suffix for the environment domain",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "certificateKeyVaultProperties": {
                          "description": "Certificate stored in Azure Key Vault.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "certificateValue": {
                          "format": "byte",
                          "description": "PFX or PEM blob",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "certificatePassword": {
                          "description": "Certificate password",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "expirationDate": {
                          "format": "date-time",
                          "description": "Certificate expiration date.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subjectName": {
                          "description": "Subject name of the certificate.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the Environment.",
                      "type": "string",
                      "readOnly": true
                    },
                    "workloadProfiles": {
                      "description": "Workload profiles configured for the Managed Environment.",
                      "type": "array",
                      "items": {
                        "description": "Workload profile to scope container app execution.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Workload profile type for the workloads to run on.",
                            "type": "string"
                          },
                          "workloadProfileType": {
                            "description": "Workload profile type for the workloads to run on.",
                            "type": "string"
                          },
                          "minimumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The minimum capacity."
                          },
                          "maximumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum capacity."
                          }
                        },
                        "required": [
                          "name",
                          "workloadProfileType"
                        ]
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "kedaConfiguration": {
                      "description": "The configuration of Keda component.",
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The version of Keda"
                        }
                      }
                    },
                    "daprConfiguration": {
                      "description": "The configuration of Dapr component.",
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The version of Dapr"
                        }
                      }
                    },
                    "infrastructureResourceGroup": {
                      "description": "Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "peerAuthentication": {
                      "description": "Peer authentication settings for the Managed Environment",
                      "type": "object",
                      "properties": {
                        "mtls": {
                          "description": "Mutual TLS authentication settings for the Managed Environment",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Boolean indicating whether the mutual TLS authentication is enabled"
                            }
                          }
                        }
                      }
                    },
                    "peerTrafficConfiguration": {
                      "description": "Peer traffic settings for the Managed Environment",
                      "type": "object",
                      "properties": {
                        "encryption": {
                          "description": "Peer traffic encryption settings for the Managed Environment",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Boolean indicating whether the peer traffic encryption is enabled"
                            }
                          }
                        }
                      }
                    },
                    "ingressConfiguration": {
                      "description": "Ingress configuration for the Managed Environment.",
                      "type": "object",
                      "properties": {
                        "workloadProfileName": {
                          "description": "Name of the workload profile used by the ingress component. Required.",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480 seconds.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "headerCountLimit": {
                          "description": "Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "requestIdleTimeout": {
                          "description": "Duration (in minutes) before idle requests are timed out. Must be between 4 and 30 inclusive. Defaults to 4 minutes.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections to the resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "description": "The group ids for the private endpoint resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "format": "arm-id",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Failed",
                                  "Canceled",
                                  "Waiting",
                                  "Updating",
                                  "Deleting",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Creates or updates a Managed Environment.",
        "description": "Creates or updates a Managed Environment used to host container apps.",
        "operationId": "ManagedEnvironments_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentEnvelope",
            "in": "body",
            "description": "Configuration details of the Environment.",
            "required": true,
            "schema": {
              "description": "An environment for hosting container apps",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "kind": {
                  "type": "string",
                  "description": "Kind of the Environment."
                },
                "identity": {
                  "description": "Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Managed environment resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Environment.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "InitializationInProgress",
                        "InfrastructureSetupInProgress",
                        "InfrastructureSetupComplete",
                        "ScheduledForDelete",
                        "UpgradeRequested",
                        "UpgradeFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EnvironmentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "daprAIInstrumentationKey": {
                      "type": "string",
                      "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "daprAIConnectionString": {
                      "type": "string",
                      "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "vnetConfiguration": {
                      "description": "Vnet configuration for the environment",
                      "type": "object",
                      "properties": {
                        "internal": {
                          "type": "boolean",
                          "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "infrastructureSubnetId": {
                          "type": "string",
                          "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "dockerBridgeCidr": {
                          "type": "string",
                          "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "platformReservedCidr": {
                          "type": "string",
                          "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "platformReservedDnsIP": {
                          "type": "string",
                          "description": " An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "defaultDomain": {
                      "description": "Default Domain Name for the cluster",
                      "type": "string",
                      "readOnly": true
                    },
                    "staticIp": {
                      "description": "Static IP of the Environment",
                      "type": "string",
                      "readOnly": true
                    },
                    "appLogsConfiguration": {
                      "description": "Cluster configuration which enables the log daemon to export app logs to configured destination.",
                      "type": "object",
                      "properties": {
                        "destination": {
                          "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
                          "type": "string"
                        },
                        "logAnalyticsConfiguration": {
                          "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
                          "type": "object",
                          "properties": {
                            "customerId": {
                              "description": "Log analytics customer id",
                              "type": "string"
                            },
                            "sharedKey": {
                              "description": "Log analytics customer key",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            }
                          }
                        }
                      }
                    },
                    "zoneRedundant": {
                      "description": "Whether or not this Managed Environment is zone-redundant.",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "customDomainConfiguration": {
                      "description": "Custom domain configuration for the environment",
                      "type": "object",
                      "properties": {
                        "customDomainVerificationId": {
                          "description": "Id used to verify domain name ownership",
                          "type": "string",
                          "readOnly": true
                        },
                        "dnsSuffix": {
                          "type": "string",
                          "description": "Dns suffix for the environment domain",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "certificateKeyVaultProperties": {
                          "description": "Certificate stored in Azure Key Vault.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "certificateValue": {
                          "format": "byte",
                          "description": "PFX or PEM blob",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "certificatePassword": {
                          "description": "Certificate password",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "expirationDate": {
                          "format": "date-time",
                          "description": "Certificate expiration date.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subjectName": {
                          "description": "Subject name of the certificate.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the Environment.",
                      "type": "string",
                      "readOnly": true
                    },
                    "workloadProfiles": {
                      "description": "Workload profiles configured for the Managed Environment.",
                      "type": "array",
                      "items": {
                        "description": "Workload profile to scope container app execution.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Workload profile type for the workloads to run on.",
                            "type": "string"
                          },
                          "workloadProfileType": {
                            "description": "Workload profile type for the workloads to run on.",
                            "type": "string"
                          },
                          "minimumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The minimum capacity."
                          },
                          "maximumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum capacity."
                          }
                        },
                        "required": [
                          "name",
                          "workloadProfileType"
                        ]
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "kedaConfiguration": {
                      "description": "The configuration of Keda component.",
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The version of Keda"
                        }
                      }
                    },
                    "daprConfiguration": {
                      "description": "The configuration of Dapr component.",
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The version of Dapr"
                        }
                      }
                    },
                    "infrastructureResourceGroup": {
                      "description": "Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "peerAuthentication": {
                      "description": "Peer authentication settings for the Managed Environment",
                      "type": "object",
                      "properties": {
                        "mtls": {
                          "description": "Mutual TLS authentication settings for the Managed Environment",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Boolean indicating whether the mutual TLS authentication is enabled"
                            }
                          }
                        }
                      }
                    },
                    "peerTrafficConfiguration": {
                      "description": "Peer traffic settings for the Managed Environment",
                      "type": "object",
                      "properties": {
                        "encryption": {
                          "description": "Peer traffic encryption settings for the Managed Environment",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Boolean indicating whether the peer traffic encryption is enabled"
                            }
                          }
                        }
                      }
                    },
                    "ingressConfiguration": {
                      "description": "Ingress configuration for the Managed Environment.",
                      "type": "object",
                      "properties": {
                        "workloadProfileName": {
                          "description": "Name of the workload profile used by the ingress component. Required.",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480 seconds.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "headerCountLimit": {
                          "description": "Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "requestIdleTimeout": {
                          "description": "Duration (in minutes) before idle requests are timed out. Must be between 4 and 30 inclusive. Defaults to 4 minutes.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections to the resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "description": "The group ids for the private endpoint resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "format": "arm-id",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Failed",
                                  "Canceled",
                                  "Waiting",
                                  "Updating",
                                  "Deleting",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "An environment for hosting container apps",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "kind": {
                  "type": "string",
                  "description": "Kind of the Environment."
                },
                "identity": {
                  "description": "Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Managed environment resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Environment.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "InitializationInProgress",
                        "InfrastructureSetupInProgress",
                        "InfrastructureSetupComplete",
                        "ScheduledForDelete",
                        "UpgradeRequested",
                        "UpgradeFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EnvironmentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "daprAIInstrumentationKey": {
                      "type": "string",
                      "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "daprAIConnectionString": {
                      "type": "string",
                      "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "vnetConfiguration": {
                      "description": "Vnet configuration for the environment",
                      "type": "object",
                      "properties": {
                        "internal": {
                          "type": "boolean",
                          "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "infrastructureSubnetId": {
                          "type": "string",
                          "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "dockerBridgeCidr": {
                          "type": "string",
                          "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "platformReservedCidr": {
                          "type": "string",
                          "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "platformReservedDnsIP": {
                          "type": "string",
                          "description": " An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "defaultDomain": {
                      "description": "Default Domain Name for the cluster",
                      "type": "string",
                      "readOnly": true
                    },
                    "staticIp": {
                      "description": "Static IP of the Environment",
                      "type": "string",
                      "readOnly": true
                    },
                    "appLogsConfiguration": {
                      "description": "Cluster configuration which enables the log daemon to export app logs to configured destination.",
                      "type": "object",
                      "properties": {
                        "destination": {
                          "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
                          "type": "string"
                        },
                        "logAnalyticsConfiguration": {
                          "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
                          "type": "object",
                          "properties": {
                            "customerId": {
                              "description": "Log analytics customer id",
                              "type": "string"
                            },
                            "sharedKey": {
                              "description": "Log analytics customer key",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            }
                          }
                        }
                      }
                    },
                    "zoneRedundant": {
                      "description": "Whether or not this Managed Environment is zone-redundant.",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "customDomainConfiguration": {
                      "description": "Custom domain configuration for the environment",
                      "type": "object",
                      "properties": {
                        "customDomainVerificationId": {
                          "description": "Id used to verify domain name ownership",
                          "type": "string",
                          "readOnly": true
                        },
                        "dnsSuffix": {
                          "type": "string",
                          "description": "Dns suffix for the environment domain",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "certificateKeyVaultProperties": {
                          "description": "Certificate stored in Azure Key Vault.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "certificateValue": {
                          "format": "byte",
                          "description": "PFX or PEM blob",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "certificatePassword": {
                          "description": "Certificate password",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "expirationDate": {
                          "format": "date-time",
                          "description": "Certificate expiration date.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subjectName": {
                          "description": "Subject name of the certificate.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the Environment.",
                      "type": "string",
                      "readOnly": true
                    },
                    "workloadProfiles": {
                      "description": "Workload profiles configured for the Managed Environment.",
                      "type": "array",
                      "items": {
                        "description": "Workload profile to scope container app execution.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Workload profile type for the workloads to run on.",
                            "type": "string"
                          },
                          "workloadProfileType": {
                            "description": "Workload profile type for the workloads to run on.",
                            "type": "string"
                          },
                          "minimumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The minimum capacity."
                          },
                          "maximumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum capacity."
                          }
                        },
                        "required": [
                          "name",
                          "workloadProfileType"
                        ]
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "kedaConfiguration": {
                      "description": "The configuration of Keda component.",
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The version of Keda"
                        }
                      }
                    },
                    "daprConfiguration": {
                      "description": "The configuration of Dapr component.",
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The version of Dapr"
                        }
                      }
                    },
                    "infrastructureResourceGroup": {
                      "description": "Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "peerAuthentication": {
                      "description": "Peer authentication settings for the Managed Environment",
                      "type": "object",
                      "properties": {
                        "mtls": {
                          "description": "Mutual TLS authentication settings for the Managed Environment",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Boolean indicating whether the mutual TLS authentication is enabled"
                            }
                          }
                        }
                      }
                    },
                    "peerTrafficConfiguration": {
                      "description": "Peer traffic settings for the Managed Environment",
                      "type": "object",
                      "properties": {
                        "encryption": {
                          "description": "Peer traffic encryption settings for the Managed Environment",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Boolean indicating whether the peer traffic encryption is enabled"
                            }
                          }
                        }
                      }
                    },
                    "ingressConfiguration": {
                      "description": "Ingress configuration for the Managed Environment.",
                      "type": "object",
                      "properties": {
                        "workloadProfileName": {
                          "description": "Name of the workload profile used by the ingress component. Required.",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480 seconds.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "headerCountLimit": {
                          "description": "Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "requestIdleTimeout": {
                          "description": "Duration (in minutes) before idle requests are timed out. Must be between 4 and 30 inclusive. Defaults to 4 minutes.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections to the resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "description": "The group ids for the private endpoint resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "format": "arm-id",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Failed",
                                  "Canceled",
                                  "Waiting",
                                  "Updating",
                                  "Deleting",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "An environment for hosting container apps",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "kind": {
                  "type": "string",
                  "description": "Kind of the Environment."
                },
                "identity": {
                  "description": "Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Managed environment resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Environment.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "InitializationInProgress",
                        "InfrastructureSetupInProgress",
                        "InfrastructureSetupComplete",
                        "ScheduledForDelete",
                        "UpgradeRequested",
                        "UpgradeFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EnvironmentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "daprAIInstrumentationKey": {
                      "type": "string",
                      "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "daprAIConnectionString": {
                      "type": "string",
                      "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "vnetConfiguration": {
                      "description": "Vnet configuration for the environment",
                      "type": "object",
                      "properties": {
                        "internal": {
                          "type": "boolean",
                          "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "infrastructureSubnetId": {
                          "type": "string",
                          "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "dockerBridgeCidr": {
                          "type": "string",
                          "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "platformReservedCidr": {
                          "type": "string",
                          "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "platformReservedDnsIP": {
                          "type": "string",
                          "description": " An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "defaultDomain": {
                      "description": "Default Domain Name for the cluster",
                      "type": "string",
                      "readOnly": true
                    },
                    "staticIp": {
                      "description": "Static IP of the Environment",
                      "type": "string",
                      "readOnly": true
                    },
                    "appLogsConfiguration": {
                      "description": "Cluster configuration which enables the log daemon to export app logs to configured destination.",
                      "type": "object",
                      "properties": {
                        "destination": {
                          "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
                          "type": "string"
                        },
                        "logAnalyticsConfiguration": {
                          "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
                          "type": "object",
                          "properties": {
                            "customerId": {
                              "description": "Log analytics customer id",
                              "type": "string"
                            },
                            "sharedKey": {
                              "description": "Log analytics customer key",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            }
                          }
                        }
                      }
                    },
                    "zoneRedundant": {
                      "description": "Whether or not this Managed Environment is zone-redundant.",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "customDomainConfiguration": {
                      "description": "Custom domain configuration for the environment",
                      "type": "object",
                      "properties": {
                        "customDomainVerificationId": {
                          "description": "Id used to verify domain name ownership",
                          "type": "string",
                          "readOnly": true
                        },
                        "dnsSuffix": {
                          "type": "string",
                          "description": "Dns suffix for the environment domain",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "certificateKeyVaultProperties": {
                          "description": "Certificate stored in Azure Key Vault.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "certificateValue": {
                          "format": "byte",
                          "description": "PFX or PEM blob",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "certificatePassword": {
                          "description": "Certificate password",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "expirationDate": {
                          "format": "date-time",
                          "description": "Certificate expiration date.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subjectName": {
                          "description": "Subject name of the certificate.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the Environment.",
                      "type": "string",
                      "readOnly": true
                    },
                    "workloadProfiles": {
                      "description": "Workload profiles configured for the Managed Environment.",
                      "type": "array",
                      "items": {
                        "description": "Workload profile to scope container app execution.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Workload profile type for the workloads to run on.",
                            "type": "string"
                          },
                          "workloadProfileType": {
                            "description": "Workload profile type for the workloads to run on.",
                            "type": "string"
                          },
                          "minimumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The minimum capacity."
                          },
                          "maximumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum capacity."
                          }
                        },
                        "required": [
                          "name",
                          "workloadProfileType"
                        ]
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "kedaConfiguration": {
                      "description": "The configuration of Keda component.",
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The version of Keda"
                        }
                      }
                    },
                    "daprConfiguration": {
                      "description": "The configuration of Dapr component.",
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The version of Dapr"
                        }
                      }
                    },
                    "infrastructureResourceGroup": {
                      "description": "Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "peerAuthentication": {
                      "description": "Peer authentication settings for the Managed Environment",
                      "type": "object",
                      "properties": {
                        "mtls": {
                          "description": "Mutual TLS authentication settings for the Managed Environment",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Boolean indicating whether the mutual TLS authentication is enabled"
                            }
                          }
                        }
                      }
                    },
                    "peerTrafficConfiguration": {
                      "description": "Peer traffic settings for the Managed Environment",
                      "type": "object",
                      "properties": {
                        "encryption": {
                          "description": "Peer traffic encryption settings for the Managed Environment",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Boolean indicating whether the peer traffic encryption is enabled"
                            }
                          }
                        }
                      }
                    },
                    "ingressConfiguration": {
                      "description": "Ingress configuration for the Managed Environment.",
                      "type": "object",
                      "properties": {
                        "workloadProfileName": {
                          "description": "Name of the workload profile used by the ingress component. Required.",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480 seconds.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "headerCountLimit": {
                          "description": "Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "requestIdleTimeout": {
                          "description": "Duration (in minutes) before idle requests are timed out. Must be between 4 and 30 inclusive. Defaults to 4 minutes.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections to the resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "description": "The group ids for the private endpoint resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "format": "arm-id",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Failed",
                                  "Canceled",
                                  "Waiting",
                                  "Updating",
                                  "Deleting",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Delete a Managed Environment.",
        "description": "Delete a Managed Environment if it does not have any container apps.",
        "operationId": "ManagedEnvironments_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "202": {
            "description": "Delete operation is in progress"
          },
          "204": {
            "description": "Environment does not exist"
          }
        }
      },
      "patch": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Update Managed Environment's properties.",
        "description": "Patches a Managed Environment using JSON Merge Patch",
        "operationId": "ManagedEnvironments_Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentEnvelope",
            "in": "body",
            "description": "Configuration details of the Environment.",
            "required": true,
            "schema": {
              "description": "An environment for hosting container apps",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "kind": {
                  "type": "string",
                  "description": "Kind of the Environment."
                },
                "identity": {
                  "description": "Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Managed environment resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Environment.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "InitializationInProgress",
                        "InfrastructureSetupInProgress",
                        "InfrastructureSetupComplete",
                        "ScheduledForDelete",
                        "UpgradeRequested",
                        "UpgradeFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EnvironmentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "daprAIInstrumentationKey": {
                      "type": "string",
                      "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "daprAIConnectionString": {
                      "type": "string",
                      "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "vnetConfiguration": {
                      "description": "Vnet configuration for the environment",
                      "type": "object",
                      "properties": {
                        "internal": {
                          "type": "boolean",
                          "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "infrastructureSubnetId": {
                          "type": "string",
                          "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "dockerBridgeCidr": {
                          "type": "string",
                          "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "platformReservedCidr": {
                          "type": "string",
                          "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "platformReservedDnsIP": {
                          "type": "string",
                          "description": " An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "defaultDomain": {
                      "description": "Default Domain Name for the cluster",
                      "type": "string",
                      "readOnly": true
                    },
                    "staticIp": {
                      "description": "Static IP of the Environment",
                      "type": "string",
                      "readOnly": true
                    },
                    "appLogsConfiguration": {
                      "description": "Cluster configuration which enables the log daemon to export app logs to configured destination.",
                      "type": "object",
                      "properties": {
                        "destination": {
                          "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
                          "type": "string"
                        },
                        "logAnalyticsConfiguration": {
                          "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
                          "type": "object",
                          "properties": {
                            "customerId": {
                              "description": "Log analytics customer id",
                              "type": "string"
                            },
                            "sharedKey": {
                              "description": "Log analytics customer key",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            }
                          }
                        }
                      }
                    },
                    "zoneRedundant": {
                      "description": "Whether or not this Managed Environment is zone-redundant.",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "customDomainConfiguration": {
                      "description": "Custom domain configuration for the environment",
                      "type": "object",
                      "properties": {
                        "customDomainVerificationId": {
                          "description": "Id used to verify domain name ownership",
                          "type": "string",
                          "readOnly": true
                        },
                        "dnsSuffix": {
                          "type": "string",
                          "description": "Dns suffix for the environment domain",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "certificateKeyVaultProperties": {
                          "description": "Certificate stored in Azure Key Vault.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "certificateValue": {
                          "format": "byte",
                          "description": "PFX or PEM blob",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "certificatePassword": {
                          "description": "Certificate password",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "expirationDate": {
                          "format": "date-time",
                          "description": "Certificate expiration date.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subjectName": {
                          "description": "Subject name of the certificate.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the Environment.",
                      "type": "string",
                      "readOnly": true
                    },
                    "workloadProfiles": {
                      "description": "Workload profiles configured for the Managed Environment.",
                      "type": "array",
                      "items": {
                        "description": "Workload profile to scope container app execution.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Workload profile type for the workloads to run on.",
                            "type": "string"
                          },
                          "workloadProfileType": {
                            "description": "Workload profile type for the workloads to run on.",
                            "type": "string"
                          },
                          "minimumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The minimum capacity."
                          },
                          "maximumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum capacity."
                          }
                        },
                        "required": [
                          "name",
                          "workloadProfileType"
                        ]
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "kedaConfiguration": {
                      "description": "The configuration of Keda component.",
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The version of Keda"
                        }
                      }
                    },
                    "daprConfiguration": {
                      "description": "The configuration of Dapr component.",
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The version of Dapr"
                        }
                      }
                    },
                    "infrastructureResourceGroup": {
                      "description": "Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "peerAuthentication": {
                      "description": "Peer authentication settings for the Managed Environment",
                      "type": "object",
                      "properties": {
                        "mtls": {
                          "description": "Mutual TLS authentication settings for the Managed Environment",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Boolean indicating whether the mutual TLS authentication is enabled"
                            }
                          }
                        }
                      }
                    },
                    "peerTrafficConfiguration": {
                      "description": "Peer traffic settings for the Managed Environment",
                      "type": "object",
                      "properties": {
                        "encryption": {
                          "description": "Peer traffic encryption settings for the Managed Environment",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Boolean indicating whether the peer traffic encryption is enabled"
                            }
                          }
                        }
                      }
                    },
                    "ingressConfiguration": {
                      "description": "Ingress configuration for the Managed Environment.",
                      "type": "object",
                      "properties": {
                        "workloadProfileName": {
                          "description": "Name of the workload profile used by the ingress component. Required.",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480 seconds.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "headerCountLimit": {
                          "description": "Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "requestIdleTimeout": {
                          "description": "Duration (in minutes) before idle requests are timed out. Must be between 4 and 30 inclusive. Defaults to 4 minutes.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections to the resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "description": "The group ids for the private endpoint resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "format": "arm-id",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Failed",
                                  "Canceled",
                                  "Waiting",
                                  "Updating",
                                  "Deleting",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "description": "An environment for hosting container apps",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "kind": {
                  "type": "string",
                  "description": "Kind of the Environment."
                },
                "identity": {
                  "description": "Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Managed environment resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Environment.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "InitializationInProgress",
                        "InfrastructureSetupInProgress",
                        "InfrastructureSetupComplete",
                        "ScheduledForDelete",
                        "UpgradeRequested",
                        "UpgradeFailed"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "EnvironmentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "daprAIInstrumentationKey": {
                      "type": "string",
                      "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "daprAIConnectionString": {
                      "type": "string",
                      "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                      "x-ms-secret": true
                    },
                    "vnetConfiguration": {
                      "description": "Vnet configuration for the environment",
                      "type": "object",
                      "properties": {
                        "internal": {
                          "type": "boolean",
                          "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "infrastructureSubnetId": {
                          "type": "string",
                          "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "dockerBridgeCidr": {
                          "type": "string",
                          "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "platformReservedCidr": {
                          "type": "string",
                          "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "platformReservedDnsIP": {
                          "type": "string",
                          "description": " An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        }
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "defaultDomain": {
                      "description": "Default Domain Name for the cluster",
                      "type": "string",
                      "readOnly": true
                    },
                    "staticIp": {
                      "description": "Static IP of the Environment",
                      "type": "string",
                      "readOnly": true
                    },
                    "appLogsConfiguration": {
                      "description": "Cluster configuration which enables the log daemon to export app logs to configured destination.",
                      "type": "object",
                      "properties": {
                        "destination": {
                          "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
                          "type": "string"
                        },
                        "logAnalyticsConfiguration": {
                          "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
                          "type": "object",
                          "properties": {
                            "customerId": {
                              "description": "Log analytics customer id",
                              "type": "string"
                            },
                            "sharedKey": {
                              "description": "Log analytics customer key",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            }
                          }
                        }
                      }
                    },
                    "zoneRedundant": {
                      "description": "Whether or not this Managed Environment is zone-redundant.",
                      "type": "boolean",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "customDomainConfiguration": {
                      "description": "Custom domain configuration for the environment",
                      "type": "object",
                      "properties": {
                        "customDomainVerificationId": {
                          "description": "Id used to verify domain name ownership",
                          "type": "string",
                          "readOnly": true
                        },
                        "dnsSuffix": {
                          "type": "string",
                          "description": "Dns suffix for the environment domain",
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "certificateKeyVaultProperties": {
                          "description": "Certificate stored in Azure Key Vault.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "certificateValue": {
                          "format": "byte",
                          "description": "PFX or PEM blob",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "certificatePassword": {
                          "description": "Certificate password",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "expirationDate": {
                          "format": "date-time",
                          "description": "Certificate expiration date.",
                          "type": "string",
                          "readOnly": true
                        },
                        "thumbprint": {
                          "description": "Certificate thumbprint.",
                          "type": "string",
                          "readOnly": true
                        },
                        "subjectName": {
                          "description": "Subject name of the certificate.",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "eventStreamEndpoint": {
                      "description": "The endpoint of the eventstream of the Environment.",
                      "type": "string",
                      "readOnly": true
                    },
                    "workloadProfiles": {
                      "description": "Workload profiles configured for the Managed Environment.",
                      "type": "array",
                      "items": {
                        "description": "Workload profile to scope container app execution.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Workload profile type for the workloads to run on.",
                            "type": "string"
                          },
                          "workloadProfileType": {
                            "description": "Workload profile type for the workloads to run on.",
                            "type": "string"
                          },
                          "minimumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The minimum capacity."
                          },
                          "maximumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The maximum capacity."
                          }
                        },
                        "required": [
                          "name",
                          "workloadProfileType"
                        ]
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "kedaConfiguration": {
                      "description": "The configuration of Keda component.",
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The version of Keda"
                        }
                      }
                    },
                    "daprConfiguration": {
                      "description": "The configuration of Dapr component.",
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The version of Dapr"
                        }
                      }
                    },
                    "infrastructureResourceGroup": {
                      "description": "Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "peerAuthentication": {
                      "description": "Peer authentication settings for the Managed Environment",
                      "type": "object",
                      "properties": {
                        "mtls": {
                          "description": "Mutual TLS authentication settings for the Managed Environment",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Boolean indicating whether the mutual TLS authentication is enabled"
                            }
                          }
                        }
                      }
                    },
                    "peerTrafficConfiguration": {
                      "description": "Peer traffic settings for the Managed Environment",
                      "type": "object",
                      "properties": {
                        "encryption": {
                          "description": "Peer traffic encryption settings for the Managed Environment",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean",
                              "description": "Boolean indicating whether the peer traffic encryption is enabled"
                            }
                          }
                        }
                      }
                    },
                    "ingressConfiguration": {
                      "description": "Ingress configuration for the Managed Environment.",
                      "type": "object",
                      "properties": {
                        "workloadProfileName": {
                          "description": "Name of the workload profile used by the ingress component. Required.",
                          "type": "string"
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480 seconds.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "headerCountLimit": {
                          "description": "Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "requestIdleTimeout": {
                          "description": "Duration (in minutes) before idle requests are timed out. Must be between 4 and 30 inclusive. Defaults to 4 minutes.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "description": "Private endpoint connections to the resource.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "x-ms-client-flatten": true,
                            "description": "Resource properties.",
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "description": "The group ids for the private endpoint resource.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The resource of private end point.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "readOnly": true,
                                    "type": "string",
                                    "format": "arm-id",
                                    "description": "The ARM identifier for Private Endpoint"
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected",
                                      "Disconnected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "Succeeded",
                                  "Failed",
                                  "Canceled",
                                  "Waiting",
                                  "Updating",
                                  "Deleting",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        },
                        "description": "The Private Endpoint Connection resource."
                      },
                      "readOnly": true
                    },
                    "publicNetworkAccess": {
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.",
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PublicNetworkAccess",
                        "modelAsString": true
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "202": {
            "description": "Patch operation is in progress."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/certificates": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "Certificates"
        ],
        "summary": "Get the Certificates in a given managed environment.",
        "operationId": "Certificates_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of Certificates.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Certificate used for Custom Domain bindings of Container Apps in a Managed Environment",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Certificate resource specific properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the certificate.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "DeleteFailed",
                              "Pending",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "CertificateProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "deploymentErrors": {
                            "description": "Any errors that occurred during deployment or deployment validation",
                            "type": "string",
                            "readOnly": true
                          },
                          "certificateKeyVaultProperties": {
                            "description": "Properties for a certificate stored in a Key Vault.",
                            "type": "object",
                            "properties": {
                              "identity": {
                                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                "type": "string"
                              },
                              "keyVaultUrl": {
                                "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                                "type": "string",
                                "format": "uri"
                              }
                            }
                          },
                          "password": {
                            "description": "Certificate password.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "subjectName": {
                            "description": "Subject name of the certificate.",
                            "type": "string",
                            "readOnly": true
                          },
                          "subjectAlternativeNames": {
                            "description": "Subject alternative names the certificate applies to.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "value": {
                            "format": "byte",
                            "description": "PFX or PEM blob",
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true
                          },
                          "issuer": {
                            "description": "Certificate issuer.",
                            "type": "string",
                            "readOnly": true
                          },
                          "issueDate": {
                            "format": "date-time",
                            "description": "Certificate issue Date.",
                            "type": "string",
                            "readOnly": true
                          },
                          "expirationDate": {
                            "format": "date-time",
                            "description": "Certificate expiration date.",
                            "type": "string",
                            "readOnly": true
                          },
                          "thumbprint": {
                            "description": "Certificate thumbprint.",
                            "type": "string",
                            "readOnly": true
                          },
                          "valid": {
                            "description": "Is the certificate valid?.",
                            "type": "boolean",
                            "readOnly": true
                          },
                          "publicKeyHash": {
                            "description": "Public key hash.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "x-ms-client-flatten": true
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/certificates/{certificateName}": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "Certificates"
        ],
        "summary": "Get the specified Certificate.",
        "operationId": "Certificates_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Certificate used for Custom Domain bindings of Container Apps in a Managed Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Certificate resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the certificate.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "DeleteFailed",
                        "Pending",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "certificateKeyVaultProperties": {
                      "description": "Properties for a certificate stored in a Key Vault.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                          "type": "string"
                        },
                        "keyVaultUrl": {
                          "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    },
                    "password": {
                      "description": "Certificate password.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "subjectName": {
                      "description": "Subject name of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "subjectAlternativeNames": {
                      "description": "Subject alternative names the certificate applies to.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "value": {
                      "format": "byte",
                      "description": "PFX or PEM blob",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "issuer": {
                      "description": "Certificate issuer.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issueDate": {
                      "format": "date-time",
                      "description": "Certificate issue Date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationDate": {
                      "format": "date-time",
                      "description": "Certificate expiration date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "Certificate thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "valid": {
                      "description": "Is the certificate valid?.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "publicKeyHash": {
                      "description": "Public key hash.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          }
        }
      },
      "put": {
        "tags": [
          "ManagedEnvironments",
          "Certificates"
        ],
        "summary": "Create or Update a Certificate.",
        "operationId": "Certificates_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "description": "Certificate to be created or updated",
            "schema": {
              "description": "Certificate used for Custom Domain bindings of Container Apps in a Managed Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Certificate resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the certificate.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "DeleteFailed",
                        "Pending",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "certificateKeyVaultProperties": {
                      "description": "Properties for a certificate stored in a Key Vault.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                          "type": "string"
                        },
                        "keyVaultUrl": {
                          "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    },
                    "password": {
                      "description": "Certificate password.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "subjectName": {
                      "description": "Subject name of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "subjectAlternativeNames": {
                      "description": "Subject alternative names the certificate applies to.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "value": {
                      "format": "byte",
                      "description": "PFX or PEM blob",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "issuer": {
                      "description": "Certificate issuer.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issueDate": {
                      "format": "date-time",
                      "description": "Certificate issue Date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationDate": {
                      "format": "date-time",
                      "description": "Certificate expiration date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "Certificate thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "valid": {
                      "description": "Is the certificate valid?.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "publicKeyHash": {
                      "description": "Public key hash.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Certificate used for Custom Domain bindings of Container Apps in a Managed Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Certificate resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the certificate.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "DeleteFailed",
                        "Pending",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "certificateKeyVaultProperties": {
                      "description": "Properties for a certificate stored in a Key Vault.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                          "type": "string"
                        },
                        "keyVaultUrl": {
                          "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    },
                    "password": {
                      "description": "Certificate password.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "subjectName": {
                      "description": "Subject name of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "subjectAlternativeNames": {
                      "description": "Subject alternative names the certificate applies to.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "value": {
                      "format": "byte",
                      "description": "PFX or PEM blob",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "issuer": {
                      "description": "Certificate issuer.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issueDate": {
                      "format": "date-time",
                      "description": "Certificate issue Date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationDate": {
                      "format": "date-time",
                      "description": "Certificate expiration date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "Certificate thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "valid": {
                      "description": "Is the certificate valid?.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "publicKeyHash": {
                      "description": "Public key hash.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedEnvironments",
          "Certificates"
        ],
        "summary": "Deletes the specified Certificate.",
        "operationId": "Certificates_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "204": {
            "description": "Certificate does not exist"
          }
        }
      },
      "patch": {
        "tags": [
          "ManagedEnvironments",
          "Certificates"
        ],
        "summary": "Update properties of a certificate",
        "description": "Patches a certificate. Currently only patching of tags is supported",
        "operationId": "Certificates_Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateName",
            "in": "path",
            "description": "Name of the Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificateEnvelope",
            "in": "body",
            "required": true,
            "description": "Properties of a certificate that need to be updated",
            "schema": {
              "description": "A certificate to update",
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application-specific metadata in the form of key-value pairs."
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Certificate updated successfully.",
            "schema": {
              "description": "Certificate used for Custom Domain bindings of Container Apps in a Managed Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Certificate resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the certificate.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "DeleteFailed",
                        "Pending",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    },
                    "certificateKeyVaultProperties": {
                      "description": "Properties for a certificate stored in a Key Vault.",
                      "type": "object",
                      "properties": {
                        "identity": {
                          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                          "type": "string"
                        },
                        "keyVaultUrl": {
                          "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    },
                    "password": {
                      "description": "Certificate password.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "subjectName": {
                      "description": "Subject name of the certificate.",
                      "type": "string",
                      "readOnly": true
                    },
                    "subjectAlternativeNames": {
                      "description": "Subject alternative names the certificate applies to.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "value": {
                      "format": "byte",
                      "description": "PFX or PEM blob",
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true
                    },
                    "issuer": {
                      "description": "Certificate issuer.",
                      "type": "string",
                      "readOnly": true
                    },
                    "issueDate": {
                      "format": "date-time",
                      "description": "Certificate issue Date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "expirationDate": {
                      "format": "date-time",
                      "description": "Certificate expiration date.",
                      "type": "string",
                      "readOnly": true
                    },
                    "thumbprint": {
                      "description": "Certificate thumbprint.",
                      "type": "string",
                      "readOnly": true
                    },
                    "valid": {
                      "description": "Is the certificate valid?.",
                      "type": "boolean",
                      "readOnly": true
                    },
                    "publicKeyHash": {
                      "description": "Public key hash.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/managedCertificates/{managedCertificateName}": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "ManagedCertificates"
        ],
        "summary": "Get the specified Managed Certificate.",
        "operationId": "ManagedCertificates_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managedCertificateName",
            "in": "path",
            "description": "Name of the Managed Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Managed certificates used for Custom Domain bindings of Container Apps in a Managed Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Certificate resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the certificate.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "DeleteFailed",
                        "Pending",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "subjectName": {
                      "description": "Subject name of the certificate.",
                      "type": "string"
                    },
                    "error": {
                      "description": "Any error occurred during the certificate provision.",
                      "type": "string",
                      "readOnly": true
                    },
                    "domainControlValidation": {
                      "description": "Selected type of domain control validation for managed certificates.",
                      "enum": [
                        "CNAME",
                        "HTTP",
                        "TXT"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedCertificateDomainControlValidation",
                        "modelAsString": true
                      }
                    },
                    "validationToken": {
                      "description": "A TXT token used for DNS TXT domain control validation when issuing this type of managed certificates.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          }
        }
      },
      "put": {
        "tags": [
          "ManagedEnvironments",
          "ManagedCertificates"
        ],
        "summary": "Create or Update a Managed Certificate.",
        "operationId": "ManagedCertificates_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managedCertificateName",
            "in": "path",
            "description": "Name of the Managed Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managedCertificateEnvelope",
            "in": "body",
            "description": "Managed Certificate to be created or updated",
            "schema": {
              "description": "Managed certificates used for Custom Domain bindings of Container Apps in a Managed Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Certificate resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the certificate.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "DeleteFailed",
                        "Pending",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "subjectName": {
                      "description": "Subject name of the certificate.",
                      "type": "string"
                    },
                    "error": {
                      "description": "Any error occurred during the certificate provision.",
                      "type": "string",
                      "readOnly": true
                    },
                    "domainControlValidation": {
                      "description": "Selected type of domain control validation for managed certificates.",
                      "enum": [
                        "CNAME",
                        "HTTP",
                        "TXT"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedCertificateDomainControlValidation",
                        "modelAsString": true
                      }
                    },
                    "validationToken": {
                      "description": "A TXT token used for DNS TXT domain control validation when issuing this type of managed certificates.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Managed certificates used for Custom Domain bindings of Container Apps in a Managed Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Certificate resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the certificate.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "DeleteFailed",
                        "Pending",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "subjectName": {
                      "description": "Subject name of the certificate.",
                      "type": "string"
                    },
                    "error": {
                      "description": "Any error occurred during the certificate provision.",
                      "type": "string",
                      "readOnly": true
                    },
                    "domainControlValidation": {
                      "description": "Selected type of domain control validation for managed certificates.",
                      "enum": [
                        "CNAME",
                        "HTTP",
                        "TXT"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedCertificateDomainControlValidation",
                        "modelAsString": true
                      }
                    },
                    "validationToken": {
                      "description": "A TXT token used for DNS TXT domain control validation when issuing this type of managed certificates.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Managed certificates used for Custom Domain bindings of Container Apps in a Managed Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Certificate resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the certificate.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "DeleteFailed",
                        "Pending",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "subjectName": {
                      "description": "Subject name of the certificate.",
                      "type": "string"
                    },
                    "error": {
                      "description": "Any error occurred during the certificate provision.",
                      "type": "string",
                      "readOnly": true
                    },
                    "domainControlValidation": {
                      "description": "Selected type of domain control validation for managed certificates.",
                      "enum": [
                        "CNAME",
                        "HTTP",
                        "TXT"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedCertificateDomainControlValidation",
                        "modelAsString": true
                      }
                    },
                    "validationToken": {
                      "description": "A TXT token used for DNS TXT domain control validation when issuing this type of managed certificates.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedEnvironments",
          "ManagedCertificates"
        ],
        "summary": "Deletes the specified Managed Certificate.",
        "operationId": "ManagedCertificates_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managedCertificateName",
            "in": "path",
            "description": "Name of the Managed Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "204": {
            "description": "Certificate does not exist"
          }
        }
      },
      "patch": {
        "tags": [
          "ManagedEnvironments",
          "ManagedCertificates"
        ],
        "summary": "Update tags of a managed certificate",
        "description": "Patches a managed certificate. Oly patching of tags is supported",
        "operationId": "ManagedCertificates_Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managedCertificateName",
            "in": "path",
            "description": "Name of the Managed Certificate.",
            "required": true,
            "type": "string"
          },
          {
            "name": "managedCertificateEnvelope",
            "in": "body",
            "required": true,
            "description": "Properties of a managed certificate that need to be updated",
            "schema": {
              "description": "A managed certificate to update",
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application-specific metadata in the form of key-value pairs."
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Managed Certificate updated successfully.",
            "schema": {
              "description": "Managed certificates used for Custom Domain bindings of Container Apps in a Managed Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Certificate resource specific properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the certificate.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "DeleteFailed",
                        "Pending",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "CertificateProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "subjectName": {
                      "description": "Subject name of the certificate.",
                      "type": "string"
                    },
                    "error": {
                      "description": "Any error occurred during the certificate provision.",
                      "type": "string",
                      "readOnly": true
                    },
                    "domainControlValidation": {
                      "description": "Selected type of domain control validation for managed certificates.",
                      "enum": [
                        "CNAME",
                        "HTTP",
                        "TXT"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ManagedCertificateDomainControlValidation",
                        "modelAsString": true
                      }
                    },
                    "validationToken": {
                      "description": "A TXT token used for DNS TXT domain control validation when issuing this type of managed certificates.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/managedCertificates": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "ManagedCertificates"
        ],
        "summary": "Get the Managed Certificates in a given managed environment.",
        "operationId": "ManagedCertificates_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of Managed Certificates.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Managed certificates used for Custom Domain bindings of Container Apps in a Managed Environment",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Certificate resource specific properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the certificate.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "DeleteFailed",
                              "Pending",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "CertificateProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "subjectName": {
                            "description": "Subject name of the certificate.",
                            "type": "string"
                          },
                          "error": {
                            "description": "Any error occurred during the certificate provision.",
                            "type": "string",
                            "readOnly": true
                          },
                          "domainControlValidation": {
                            "description": "Selected type of domain control validation for managed certificates.",
                            "enum": [
                              "CNAME",
                              "HTTP",
                              "TXT"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ManagedCertificateDomainControlValidation",
                              "modelAsString": true
                            }
                          },
                          "validationToken": {
                            "description": "A TXT token used for DNS TXT domain control validation when issuing this type of managed certificates.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "x-ms-client-flatten": true
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/checkNameAvailability": {
      "post": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Checks the resource name availability.",
        "description": "Checks if resource name is available.",
        "operationId": "Namespaces_CheckNameAvailability",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "checkNameAvailabilityRequest",
            "in": "body",
            "description": "The check name availability request.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The check availability request body.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the resource for which availability needs to be checked."
                },
                "type": {
                  "type": "string",
                  "description": "The resource type."
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "description": "The check availability result.",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Indicates if the resource name is available."
                },
                "reason": {
                  "type": "string",
                  "description": "The reason why the given name is not available.",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "CheckNameAvailabilityReason",
                    "modelAsString": true
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Detailed reason why the given name is available."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/getAuthtoken": {
      "post": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Get auth token for a managed environment",
        "description": "Checks if resource name is available.",
        "operationId": "ManagedEnvironments_GetAuthToken",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Environment Auth Token.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Environment auth token resource specific properties",
                  "type": "object",
                  "properties": {
                    "token": {
                      "description": "Auth token value.",
                      "type": "string",
                      "x-ms-secret": true,
                      "readOnly": true
                    },
                    "expires": {
                      "format": "date-time",
                      "description": "Token expiration date.",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/workloadProfileStates": {
      "get": {
        "tags": [
          "ManagedEnvironments"
        ],
        "summary": "Get all workload Profile States for a Managed Environment..",
        "description": "Get all workload Profile States for a Managed Environment.",
        "operationId": "ManagedEnvironments_ListWorkloadProfileStates",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of workloadProfileStates",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Collection of all the workload Profile States for a Managed Environment..",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Workload Profile resource specific properties.",
                        "type": "object",
                        "properties": {
                          "minimumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Minimum count of instances."
                          },
                          "maximumCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum count of nodes."
                          },
                          "currentCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Current count of nodes."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "PrivateEndpointConnections"
        ],
        "summary": "List private endpoint connections for a given managed environment.",
        "operationId": "ManagedEnvironmentPrivateEndpointConnections_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private endpoint connections",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Resource properties.",
                        "type": "object",
                        "properties": {
                          "groupIds": {
                            "description": "The group ids for the private endpoint resource.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "privateEndpoint": {
                            "description": "The resource of private end point.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "readOnly": true,
                                "type": "string",
                                "format": "arm-id",
                                "description": "The ARM identifier for Private Endpoint"
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "A collection of information about the state of the connection between service consumer and provider.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                "type": "string",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "Rejected",
                                  "Disconnected"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointServiceConnectionStatus",
                                  "modelAsString": true
                                }
                              },
                              "description": {
                                "type": "string",
                                "description": "The reason for approval/rejection of the connection."
                              },
                              "actionsRequired": {
                                "type": "string",
                                "description": "A message indicating if changes on the service provider require any updates on the consumer."
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state of the private endpoint connection resource.",
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Waiting",
                              "Updating",
                              "Deleting",
                              "Pending"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointConnectionProvisioningState",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "privateLinkServiceConnectionState"
                        ]
                      }
                    },
                    "description": "The Private Endpoint Connection resource."
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              },
              "description": "List of private endpoint connection associated with the specified resource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "PrivateEndpointConnections"
        ],
        "summary": "Get a private endpoint connection for a given managed environment.",
        "operationId": "ManagedEnvironmentPrivateEndpointConnections_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "description": "The group ids for the private endpoint resource.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "Updating",
                        "Deleting",
                        "Pending"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "description": "The Private Endpoint Connection resource."
            }
          }
        }
      },
      "put": {
        "tags": [
          "ManagedEnvironments",
          "PrivateEndpointConnections"
        ],
        "summary": "Update the state of a private endpoint connection for a given managed environment.",
        "operationId": "ManagedEnvironmentPrivateEndpointConnections_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "privateEndpointConnectionEnvelope",
            "in": "body",
            "description": "The resource of private endpoint and its properties",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "description": "The group ids for the private endpoint resource.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "Updating",
                        "Deleting",
                        "Pending"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "description": "The Private Endpoint Connection resource."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "description": "The group ids for the private endpoint resource.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "Updating",
                        "Deleting",
                        "Pending"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "description": "The Private Endpoint Connection resource."
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Resource properties.",
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "description": "The group ids for the private endpoint resource.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The resource of private end point.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "format": "arm-id",
                          "description": "The ARM identifier for Private Endpoint"
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected",
                            "Disconnected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "Updating",
                        "Deleting",
                        "Pending"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              },
              "description": "The Private Endpoint Connection resource."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedEnvironments",
          "PrivateEndpointConnections"
        ],
        "summary": "Delete a private endpoint connection for a given managed environment.",
        "operationId": "ManagedEnvironmentPrivateEndpointConnections_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection associated with the Azure resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No content. Already deleted."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/privateLinkResources": {
      "get": {
        "tags": [
          "ManagedEnvironments",
          "PrivateLinkResources"
        ],
        "summary": "List private link resources for a given managed environment.",
        "operationId": "ManagedEnvironmentPrivateLinkResources_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private link resources",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "description": "The private link resource group id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "description": "The private link resource required member names.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The private link resource private link DNS zone name."
                          }
                        }
                      }
                    },
                    "description": "A private link resource"
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              },
              "description": "A list of private link resources"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents": {
      "get": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Get the Dapr Components for a managed environment.",
        "operationId": "DaprComponents_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Dapr Components ARM resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Dapr Component.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Dapr Component resource specific properties",
                        "type": "object",
                        "properties": {
                          "componentType": {
                            "description": "Component type",
                            "type": "string"
                          },
                          "version": {
                            "description": "Component version",
                            "type": "string"
                          },
                          "ignoreErrors": {
                            "description": "Boolean describing if the component errors are ignores",
                            "type": "boolean",
                            "default": false
                          },
                          "initTimeout": {
                            "description": "Initialization timeout",
                            "type": "string"
                          },
                          "secrets": {
                            "description": "Collection of secrets used by a Dapr component",
                            "type": "array",
                            "items": {
                              "description": "Secret definition.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Secret Name.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Secret Value.",
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "create",
                                    "update"
                                  ],
                                  "x-ms-secret": true
                                },
                                "identity": {
                                  "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                  "type": "string"
                                },
                                "keyVaultUrl": {
                                  "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "secretStoreComponent": {
                            "description": "Name of a Dapr component to retrieve component secrets from",
                            "type": "string"
                          },
                          "metadata": {
                            "description": "Component metadata",
                            "type": "array",
                            "items": {
                              "description": "Dapr component metadata.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Metadata property name.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Metadata property value.",
                                  "type": "string"
                                },
                                "secretRef": {
                                  "description": "Name of the Dapr Component secret from which to pull the metadata property value.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "scopes": {
                            "description": "Names of container apps that can use this Dapr component",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the Dapr Component.",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "InProgress",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "DaprComponentProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "deploymentErrors": {
                            "description": "Any errors that occurred during deployment or deployment validation",
                            "type": "string",
                            "readOnly": true
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/{componentName}": {
      "get": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Get a dapr component.",
        "operationId": "DaprComponents_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Dapr Component.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Dapr Component resource specific properties",
                  "type": "object",
                  "properties": {
                    "componentType": {
                      "description": "Component type",
                      "type": "string"
                    },
                    "version": {
                      "description": "Component version",
                      "type": "string"
                    },
                    "ignoreErrors": {
                      "description": "Boolean describing if the component errors are ignores",
                      "type": "boolean",
                      "default": false
                    },
                    "initTimeout": {
                      "description": "Initialization timeout",
                      "type": "string"
                    },
                    "secrets": {
                      "description": "Collection of secrets used by a Dapr component",
                      "type": "array",
                      "items": {
                        "description": "Secret definition.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Secret Name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Secret Value.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          },
                          "identity": {
                            "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                            "type": "string"
                          },
                          "keyVaultUrl": {
                            "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "secretStoreComponent": {
                      "description": "Name of a Dapr component to retrieve component secrets from",
                      "type": "string"
                    },
                    "metadata": {
                      "description": "Component metadata",
                      "type": "array",
                      "items": {
                        "description": "Dapr component metadata.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Metadata property name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Metadata property value.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "Name of the Dapr Component secret from which to pull the metadata property value.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "scopes": {
                      "description": "Names of container apps that can use this Dapr component",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Dapr Component.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DaprComponentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Creates or updates a Dapr Component.",
        "description": "Creates or updates a Dapr Component in a Managed Environment.",
        "operationId": "DaprComponents_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "name": "daprComponentEnvelope",
            "in": "body",
            "description": "Configuration details of the Dapr Component.",
            "required": true,
            "schema": {
              "description": "Dapr Component.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Dapr Component resource specific properties",
                  "type": "object",
                  "properties": {
                    "componentType": {
                      "description": "Component type",
                      "type": "string"
                    },
                    "version": {
                      "description": "Component version",
                      "type": "string"
                    },
                    "ignoreErrors": {
                      "description": "Boolean describing if the component errors are ignores",
                      "type": "boolean",
                      "default": false
                    },
                    "initTimeout": {
                      "description": "Initialization timeout",
                      "type": "string"
                    },
                    "secrets": {
                      "description": "Collection of secrets used by a Dapr component",
                      "type": "array",
                      "items": {
                        "description": "Secret definition.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Secret Name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Secret Value.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          },
                          "identity": {
                            "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                            "type": "string"
                          },
                          "keyVaultUrl": {
                            "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "secretStoreComponent": {
                      "description": "Name of a Dapr component to retrieve component secrets from",
                      "type": "string"
                    },
                    "metadata": {
                      "description": "Component metadata",
                      "type": "array",
                      "items": {
                        "description": "Dapr component metadata.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Metadata property name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Metadata property value.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "Name of the Dapr Component secret from which to pull the metadata property value.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "scopes": {
                      "description": "Names of container apps that can use this Dapr component",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Dapr Component.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DaprComponentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Dapr Component.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Dapr Component resource specific properties",
                  "type": "object",
                  "properties": {
                    "componentType": {
                      "description": "Component type",
                      "type": "string"
                    },
                    "version": {
                      "description": "Component version",
                      "type": "string"
                    },
                    "ignoreErrors": {
                      "description": "Boolean describing if the component errors are ignores",
                      "type": "boolean",
                      "default": false
                    },
                    "initTimeout": {
                      "description": "Initialization timeout",
                      "type": "string"
                    },
                    "secrets": {
                      "description": "Collection of secrets used by a Dapr component",
                      "type": "array",
                      "items": {
                        "description": "Secret definition.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Secret Name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Secret Value.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          },
                          "identity": {
                            "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                            "type": "string"
                          },
                          "keyVaultUrl": {
                            "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "secretStoreComponent": {
                      "description": "Name of a Dapr component to retrieve component secrets from",
                      "type": "string"
                    },
                    "metadata": {
                      "description": "Component metadata",
                      "type": "array",
                      "items": {
                        "description": "Dapr component metadata.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Metadata property name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Metadata property value.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "Name of the Dapr Component secret from which to pull the metadata property value.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "scopes": {
                      "description": "Names of container apps that can use this Dapr component",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the Dapr Component.",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "InProgress",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "DaprComponentProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "deploymentErrors": {
                      "description": "Any errors that occurred during deployment or deployment validation",
                      "type": "string",
                      "readOnly": true
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "Delete a Dapr Component.",
        "description": "Delete a Dapr Component from a Managed Environment.",
        "operationId": "DaprComponents_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Delete operation completed"
          },
          "204": {
            "description": "Environment does not exist"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/daprComponents/{componentName}/listSecrets": {
      "post": {
        "tags": [
          "DaprComponents"
        ],
        "summary": "List secrets for a dapr component",
        "operationId": "DaprComponents_ListSecrets",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "componentName",
            "in": "path",
            "description": "Name of the Dapr Component.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Dapr component Secrets Collection for ListSecrets Action.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of secrets used by a Dapr component",
                  "type": "array",
                  "items": {
                    "description": "Dapr component Secret for ListSecrets Action",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Secret Name.",
                        "type": "string",
                        "readOnly": true
                      },
                      "value": {
                        "description": "Secret Value.",
                        "type": "string",
                        "x-ms-secret": true,
                        "readOnly": true
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/httpRouteConfigs/{httpRouteName}": {
      "get": {
        "tags": [
          "HttpRouteConfig"
        ],
        "summary": "Get the specified Http Route Config.",
        "operationId": "HttpRouteConfig_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "httpRouteName",
            "in": "path",
            "description": "Name of the Http Route Config Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A set of host names and http request routing rules for a Container App Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Http Route Config properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the Http Route Config",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "Updating",
                        "Deleting",
                        "Pending"
                      ],
                      "x-ms-enum": {
                        "name": "HttpRouteProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "provisioningErrors": {
                      "description": "List of errors when trying to reconcile http routes",
                      "type": "array",
                      "items": {
                        "description": "List of provisioning errors for a Http Route Config object",
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "description": "Timestamp error occured at",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "message": {
                            "description": "Description or error message",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "fqdn": {
                      "description": "FQDN of the route resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customDomains": {
                      "description": "Custom domain bindings for Http Routes' hostnames.",
                      "type": "array",
                      "items": {
                        "description": "Custom Domain of a Container App",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Hostname.",
                            "type": "string"
                          },
                          "bindingType": {
                            "description": "Custom Domain binding type.",
                            "enum": [
                              "Disabled",
                              "SniEnabled",
                              "Auto"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "bindingType",
                              "modelAsString": true
                            }
                          },
                          "certificateId": {
                            "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "rules": {
                      "description": "Routing Rules for the Http Route resource.",
                      "type": "array",
                      "items": {
                        "description": "A set of routing conditions and targets.",
                        "type": "object",
                        "properties": {
                          "targets": {
                            "description": "Targets- container apps, revisions, labels",
                            "type": "array",
                            "items": {
                              "description": "Targets - Container App Names, Revision Names, Labels.",
                              "type": "object",
                              "required": [
                                "containerApp"
                              ],
                              "properties": {
                                "containerApp": {
                                  "description": "Container App Name to route requests to",
                                  "type": "string"
                                },
                                "revision": {
                                  "description": "Revision to route requests to",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Label to route requests to",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "routes": {
                            "description": "Routing configuration that will allow matches on specific paths/headers.",
                            "type": "array",
                            "items": {
                              "description": "Http Routes, including paths to match on and whether or not rewrites are to be done.",
                              "type": "object",
                              "properties": {
                                "match": {
                                  "description": "Conditions route will match on",
                                  "type": "object",
                                  "properties": {
                                    "prefix": {
                                      "description": "match on all prefix's. Not exact",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "match on exact path",
                                      "type": "string"
                                    },
                                    "pathSeparatedPrefix": {
                                      "description": "match on all prefix's. Not exact",
                                      "type": "string"
                                    },
                                    "caseSensitive": {
                                      "description": "path case sensitive, default is true",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "action": {
                                  "description": "Once route is matched, what is the desired action",
                                  "type": "object",
                                  "properties": {
                                    "prefixRewrite": {
                                      "description": "Rewrite prefix, default is no rewrites",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of rule. Optional."
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          }
        }
      },
      "put": {
        "tags": [
          "HttpRouteConfig"
        ],
        "summary": "Create or Update a Http Route Config.",
        "operationId": "HttpRouteConfig_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "httpRouteName",
            "in": "path",
            "description": "Name of the Http Route Config Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "httpRouteConfigEnvelope",
            "in": "body",
            "description": "Http Route Config to be created or updated",
            "schema": {
              "description": "A set of host names and http request routing rules for a Container App Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Http Route Config properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the Http Route Config",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "Updating",
                        "Deleting",
                        "Pending"
                      ],
                      "x-ms-enum": {
                        "name": "HttpRouteProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "provisioningErrors": {
                      "description": "List of errors when trying to reconcile http routes",
                      "type": "array",
                      "items": {
                        "description": "List of provisioning errors for a Http Route Config object",
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "description": "Timestamp error occured at",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "message": {
                            "description": "Description or error message",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "fqdn": {
                      "description": "FQDN of the route resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customDomains": {
                      "description": "Custom domain bindings for Http Routes' hostnames.",
                      "type": "array",
                      "items": {
                        "description": "Custom Domain of a Container App",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Hostname.",
                            "type": "string"
                          },
                          "bindingType": {
                            "description": "Custom Domain binding type.",
                            "enum": [
                              "Disabled",
                              "SniEnabled",
                              "Auto"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "bindingType",
                              "modelAsString": true
                            }
                          },
                          "certificateId": {
                            "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "rules": {
                      "description": "Routing Rules for the Http Route resource.",
                      "type": "array",
                      "items": {
                        "description": "A set of routing conditions and targets.",
                        "type": "object",
                        "properties": {
                          "targets": {
                            "description": "Targets- container apps, revisions, labels",
                            "type": "array",
                            "items": {
                              "description": "Targets - Container App Names, Revision Names, Labels.",
                              "type": "object",
                              "required": [
                                "containerApp"
                              ],
                              "properties": {
                                "containerApp": {
                                  "description": "Container App Name to route requests to",
                                  "type": "string"
                                },
                                "revision": {
                                  "description": "Revision to route requests to",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Label to route requests to",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "routes": {
                            "description": "Routing configuration that will allow matches on specific paths/headers.",
                            "type": "array",
                            "items": {
                              "description": "Http Routes, including paths to match on and whether or not rewrites are to be done.",
                              "type": "object",
                              "properties": {
                                "match": {
                                  "description": "Conditions route will match on",
                                  "type": "object",
                                  "properties": {
                                    "prefix": {
                                      "description": "match on all prefix's. Not exact",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "match on exact path",
                                      "type": "string"
                                    },
                                    "pathSeparatedPrefix": {
                                      "description": "match on all prefix's. Not exact",
                                      "type": "string"
                                    },
                                    "caseSensitive": {
                                      "description": "path case sensitive, default is true",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "action": {
                                  "description": "Once route is matched, what is the desired action",
                                  "type": "object",
                                  "properties": {
                                    "prefixRewrite": {
                                      "description": "Rewrite prefix, default is no rewrites",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of rule. Optional."
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A set of host names and http request routing rules for a Container App Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Http Route Config properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the Http Route Config",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "Updating",
                        "Deleting",
                        "Pending"
                      ],
                      "x-ms-enum": {
                        "name": "HttpRouteProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "provisioningErrors": {
                      "description": "List of errors when trying to reconcile http routes",
                      "type": "array",
                      "items": {
                        "description": "List of provisioning errors for a Http Route Config object",
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "description": "Timestamp error occured at",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "message": {
                            "description": "Description or error message",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "fqdn": {
                      "description": "FQDN of the route resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customDomains": {
                      "description": "Custom domain bindings for Http Routes' hostnames.",
                      "type": "array",
                      "items": {
                        "description": "Custom Domain of a Container App",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Hostname.",
                            "type": "string"
                          },
                          "bindingType": {
                            "description": "Custom Domain binding type.",
                            "enum": [
                              "Disabled",
                              "SniEnabled",
                              "Auto"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "bindingType",
                              "modelAsString": true
                            }
                          },
                          "certificateId": {
                            "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "rules": {
                      "description": "Routing Rules for the Http Route resource.",
                      "type": "array",
                      "items": {
                        "description": "A set of routing conditions and targets.",
                        "type": "object",
                        "properties": {
                          "targets": {
                            "description": "Targets- container apps, revisions, labels",
                            "type": "array",
                            "items": {
                              "description": "Targets - Container App Names, Revision Names, Labels.",
                              "type": "object",
                              "required": [
                                "containerApp"
                              ],
                              "properties": {
                                "containerApp": {
                                  "description": "Container App Name to route requests to",
                                  "type": "string"
                                },
                                "revision": {
                                  "description": "Revision to route requests to",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Label to route requests to",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "routes": {
                            "description": "Routing configuration that will allow matches on specific paths/headers.",
                            "type": "array",
                            "items": {
                              "description": "Http Routes, including paths to match on and whether or not rewrites are to be done.",
                              "type": "object",
                              "properties": {
                                "match": {
                                  "description": "Conditions route will match on",
                                  "type": "object",
                                  "properties": {
                                    "prefix": {
                                      "description": "match on all prefix's. Not exact",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "match on exact path",
                                      "type": "string"
                                    },
                                    "pathSeparatedPrefix": {
                                      "description": "match on all prefix's. Not exact",
                                      "type": "string"
                                    },
                                    "caseSensitive": {
                                      "description": "path case sensitive, default is true",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "action": {
                                  "description": "Once route is matched, what is the desired action",
                                  "type": "object",
                                  "properties": {
                                    "prefixRewrite": {
                                      "description": "Rewrite prefix, default is no rewrites",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of rule. Optional."
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "A set of host names and http request routing rules for a Container App Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Http Route Config properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the Http Route Config",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "Updating",
                        "Deleting",
                        "Pending"
                      ],
                      "x-ms-enum": {
                        "name": "HttpRouteProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "provisioningErrors": {
                      "description": "List of errors when trying to reconcile http routes",
                      "type": "array",
                      "items": {
                        "description": "List of provisioning errors for a Http Route Config object",
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "description": "Timestamp error occured at",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "message": {
                            "description": "Description or error message",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "fqdn": {
                      "description": "FQDN of the route resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customDomains": {
                      "description": "Custom domain bindings for Http Routes' hostnames.",
                      "type": "array",
                      "items": {
                        "description": "Custom Domain of a Container App",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Hostname.",
                            "type": "string"
                          },
                          "bindingType": {
                            "description": "Custom Domain binding type.",
                            "enum": [
                              "Disabled",
                              "SniEnabled",
                              "Auto"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "bindingType",
                              "modelAsString": true
                            }
                          },
                          "certificateId": {
                            "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "rules": {
                      "description": "Routing Rules for the Http Route resource.",
                      "type": "array",
                      "items": {
                        "description": "A set of routing conditions and targets.",
                        "type": "object",
                        "properties": {
                          "targets": {
                            "description": "Targets- container apps, revisions, labels",
                            "type": "array",
                            "items": {
                              "description": "Targets - Container App Names, Revision Names, Labels.",
                              "type": "object",
                              "required": [
                                "containerApp"
                              ],
                              "properties": {
                                "containerApp": {
                                  "description": "Container App Name to route requests to",
                                  "type": "string"
                                },
                                "revision": {
                                  "description": "Revision to route requests to",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Label to route requests to",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "routes": {
                            "description": "Routing configuration that will allow matches on specific paths/headers.",
                            "type": "array",
                            "items": {
                              "description": "Http Routes, including paths to match on and whether or not rewrites are to be done.",
                              "type": "object",
                              "properties": {
                                "match": {
                                  "description": "Conditions route will match on",
                                  "type": "object",
                                  "properties": {
                                    "prefix": {
                                      "description": "match on all prefix's. Not exact",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "match on exact path",
                                      "type": "string"
                                    },
                                    "pathSeparatedPrefix": {
                                      "description": "match on all prefix's. Not exact",
                                      "type": "string"
                                    },
                                    "caseSensitive": {
                                      "description": "path case sensitive, default is true",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "action": {
                                  "description": "Once route is matched, what is the desired action",
                                  "type": "object",
                                  "properties": {
                                    "prefixRewrite": {
                                      "description": "Rewrite prefix, default is no rewrites",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of rule. Optional."
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          }
        }
      },
      "patch": {
        "tags": [
          "HttpRouteConfig"
        ],
        "summary": "Update tags of a Http Route Config object",
        "description": "Patches a Http Route Config resource. Only patching of tags is supported",
        "operationId": "HttpRouteConfig_Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "httpRouteName",
            "in": "path",
            "description": "Name of the Http Route Config Resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "httpRouteConfigEnvelope",
            "in": "body",
            "required": true,
            "description": "Properties of http route config that need to be updated",
            "schema": {
              "description": "A set of host names and http request routing rules for a Container App Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Http Route Config properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the Http Route Config",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "Updating",
                        "Deleting",
                        "Pending"
                      ],
                      "x-ms-enum": {
                        "name": "HttpRouteProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "provisioningErrors": {
                      "description": "List of errors when trying to reconcile http routes",
                      "type": "array",
                      "items": {
                        "description": "List of provisioning errors for a Http Route Config object",
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "description": "Timestamp error occured at",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "message": {
                            "description": "Description or error message",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "fqdn": {
                      "description": "FQDN of the route resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customDomains": {
                      "description": "Custom domain bindings for Http Routes' hostnames.",
                      "type": "array",
                      "items": {
                        "description": "Custom Domain of a Container App",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Hostname.",
                            "type": "string"
                          },
                          "bindingType": {
                            "description": "Custom Domain binding type.",
                            "enum": [
                              "Disabled",
                              "SniEnabled",
                              "Auto"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "bindingType",
                              "modelAsString": true
                            }
                          },
                          "certificateId": {
                            "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "rules": {
                      "description": "Routing Rules for the Http Route resource.",
                      "type": "array",
                      "items": {
                        "description": "A set of routing conditions and targets.",
                        "type": "object",
                        "properties": {
                          "targets": {
                            "description": "Targets- container apps, revisions, labels",
                            "type": "array",
                            "items": {
                              "description": "Targets - Container App Names, Revision Names, Labels.",
                              "type": "object",
                              "required": [
                                "containerApp"
                              ],
                              "properties": {
                                "containerApp": {
                                  "description": "Container App Name to route requests to",
                                  "type": "string"
                                },
                                "revision": {
                                  "description": "Revision to route requests to",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Label to route requests to",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "routes": {
                            "description": "Routing configuration that will allow matches on specific paths/headers.",
                            "type": "array",
                            "items": {
                              "description": "Http Routes, including paths to match on and whether or not rewrites are to be done.",
                              "type": "object",
                              "properties": {
                                "match": {
                                  "description": "Conditions route will match on",
                                  "type": "object",
                                  "properties": {
                                    "prefix": {
                                      "description": "match on all prefix's. Not exact",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "match on exact path",
                                      "type": "string"
                                    },
                                    "pathSeparatedPrefix": {
                                      "description": "match on all prefix's. Not exact",
                                      "type": "string"
                                    },
                                    "caseSensitive": {
                                      "description": "path case sensitive, default is true",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "action": {
                                  "description": "Once route is matched, what is the desired action",
                                  "type": "object",
                                  "properties": {
                                    "prefixRewrite": {
                                      "description": "Rewrite prefix, default is no rewrites",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of rule. Optional."
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Http Route Config updated successfully.",
            "schema": {
              "description": "A set of host names and http request routing rules for a Container App Environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Http Route Config properties",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The provisioning state of the Http Route Config",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Waiting",
                        "Updating",
                        "Deleting",
                        "Pending"
                      ],
                      "x-ms-enum": {
                        "name": "HttpRouteProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "provisioningErrors": {
                      "description": "List of errors when trying to reconcile http routes",
                      "type": "array",
                      "items": {
                        "description": "List of provisioning errors for a Http Route Config object",
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "description": "Timestamp error occured at",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "message": {
                            "description": "Description or error message",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "fqdn": {
                      "description": "FQDN of the route resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "customDomains": {
                      "description": "Custom domain bindings for Http Routes' hostnames.",
                      "type": "array",
                      "items": {
                        "description": "Custom Domain of a Container App",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Hostname.",
                            "type": "string"
                          },
                          "bindingType": {
                            "description": "Custom Domain binding type.",
                            "enum": [
                              "Disabled",
                              "SniEnabled",
                              "Auto"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "bindingType",
                              "modelAsString": true
                            }
                          },
                          "certificateId": {
                            "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "rules": {
                      "description": "Routing Rules for the Http Route resource.",
                      "type": "array",
                      "items": {
                        "description": "A set of routing conditions and targets.",
                        "type": "object",
                        "properties": {
                          "targets": {
                            "description": "Targets- container apps, revisions, labels",
                            "type": "array",
                            "items": {
                              "description": "Targets - Container App Names, Revision Names, Labels.",
                              "type": "object",
                              "required": [
                                "containerApp"
                              ],
                              "properties": {
                                "containerApp": {
                                  "description": "Container App Name to route requests to",
                                  "type": "string"
                                },
                                "revision": {
                                  "description": "Revision to route requests to",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Label to route requests to",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "routes": {
                            "description": "Routing configuration that will allow matches on specific paths/headers.",
                            "type": "array",
                            "items": {
                              "description": "Http Routes, including paths to match on and whether or not rewrites are to be done.",
                              "type": "object",
                              "properties": {
                                "match": {
                                  "description": "Conditions route will match on",
                                  "type": "object",
                                  "properties": {
                                    "prefix": {
                                      "description": "match on all prefix's. Not exact",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "match on exact path",
                                      "type": "string"
                                    },
                                    "pathSeparatedPrefix": {
                                      "description": "match on all prefix's. Not exact",
                                      "type": "string"
                                    },
                                    "caseSensitive": {
                                      "description": "path case sensitive, default is true",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "action": {
                                  "description": "Once route is matched, what is the desired action",
                                  "type": "object",
                                  "properties": {
                                    "prefixRewrite": {
                                      "description": "Rewrite prefix, default is no rewrites",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of rule. Optional."
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  }
                }
              },
              "x-ms-client-flatten": true
            }
          }
        }
      },
      "delete": {
        "tags": [
          "HttpRouteConfig"
        ],
        "summary": "Deletes the specified Http Route Config.",
        "operationId": "HttpRouteConfig_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "httpRouteName",
            "in": "path",
            "description": "Name of the Http Route Config Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Delete operation is in progress",
            "headers": {
              "location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Http Route does not exist"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/httpRouteConfigs": {
      "get": {
        "tags": [
          "HttpRouteConfig"
        ],
        "summary": "List the Http Route Configs in a given managed environment.",
        "operationId": "HttpRouteConfig_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Managed Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of rule based Http Route Config resources.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "A set of host names and http request routing rules for a Container App Environment",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Http Route Config properties",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The provisioning state of the Http Route Config",
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Waiting",
                              "Updating",
                              "Deleting",
                              "Pending"
                            ],
                            "x-ms-enum": {
                              "name": "HttpRouteProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "provisioningErrors": {
                            "description": "List of errors when trying to reconcile http routes",
                            "type": "array",
                            "items": {
                              "description": "List of provisioning errors for a Http Route Config object",
                              "type": "object",
                              "properties": {
                                "timestamp": {
                                  "description": "Timestamp error occured at",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                },
                                "message": {
                                  "description": "Description or error message",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "fqdn": {
                            "description": "FQDN of the route resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "customDomains": {
                            "description": "Custom domain bindings for Http Routes' hostnames.",
                            "type": "array",
                            "items": {
                              "description": "Custom Domain of a Container App",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Hostname.",
                                  "type": "string"
                                },
                                "bindingType": {
                                  "description": "Custom Domain binding type.",
                                  "enum": [
                                    "Disabled",
                                    "SniEnabled",
                                    "Auto"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "bindingType",
                                    "modelAsString": true
                                  }
                                },
                                "certificateId": {
                                  "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "rules": {
                            "description": "Routing Rules for the Http Route resource.",
                            "type": "array",
                            "items": {
                              "description": "A set of routing conditions and targets.",
                              "type": "object",
                              "properties": {
                                "targets": {
                                  "description": "Targets- container apps, revisions, labels",
                                  "type": "array",
                                  "items": {
                                    "description": "Targets - Container App Names, Revision Names, Labels.",
                                    "type": "object",
                                    "required": [
                                      "containerApp"
                                    ],
                                    "properties": {
                                      "containerApp": {
                                        "description": "Container App Name to route requests to",
                                        "type": "string"
                                      },
                                      "revision": {
                                        "description": "Revision to route requests to",
                                        "type": "string"
                                      },
                                      "label": {
                                        "description": "Label to route requests to",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "name"
                                  ]
                                },
                                "routes": {
                                  "description": "Routing configuration that will allow matches on specific paths/headers.",
                                  "type": "array",
                                  "items": {
                                    "description": "Http Routes, including paths to match on and whether or not rewrites are to be done.",
                                    "type": "object",
                                    "properties": {
                                      "match": {
                                        "description": "Conditions route will match on",
                                        "type": "object",
                                        "properties": {
                                          "prefix": {
                                            "description": "match on all prefix's. Not exact",
                                            "type": "string"
                                          },
                                          "path": {
                                            "description": "match on exact path",
                                            "type": "string"
                                          },
                                          "pathSeparatedPrefix": {
                                            "description": "match on all prefix's. Not exact",
                                            "type": "string"
                                          },
                                          "caseSensitive": {
                                            "description": "path case sensitive, default is true",
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "action": {
                                        "description": "Once route is matched, what is the desired action",
                                        "type": "object",
                                        "properties": {
                                          "prefixRewrite": {
                                            "description": "Rewrite prefix, default is no rewrites",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "name"
                                  ]
                                },
                                "description": {
                                  "type": "string",
                                  "description": "Description of rule. Optional."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          }
                        }
                      }
                    },
                    "x-ms-client-flatten": true
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/maintenanceConfigurations": {
      "get": {
        "tags": [
          "MaintenanceConfigurations"
        ],
        "operationId": "MaintenanceConfigurations_List",
        "description": "Gets all maintenance configurations in the specified Managed Environment.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "description": "The name of the Managed Environment.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully got the current maintenance configurations",
            "schema": {
              "type": "object",
              "description": "The response of list maintenance configuration resources.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Information about the Maintenance Configuration resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "scheduledEntries": {
                            "x-ms-client-name": "ScheduledEntries",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Maintenance schedule entry for a managed environment.",
                              "properties": {
                                "weekDay": {
                                  "type": "string",
                                  "description": "Day of the week when a managed environment can be patched.",
                                  "enum": [
                                    "Monday",
                                    "Tuesday",
                                    "Wednesday",
                                    "Thursday",
                                    "Friday",
                                    "Saturday",
                                    "Sunday"
                                  ],
                                  "x-ms-enum": {
                                    "name": "WeekDay",
                                    "modelAsString": false
                                  }
                                },
                                "startHourUtc": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Start hour after which managed environment maintenance can start from 0 to 23 hour."
                                },
                                "durationHours": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Length of maintenance window range from 8 to 24 hours."
                                }
                              },
                              "required": [
                                "weekDay",
                                "startHourUtc",
                                "durationHours"
                              ]
                            },
                            "x-ms-identifiers": [],
                            "description": "List of maintenance schedules for a managed environment."
                          }
                        },
                        "required": [
                          "scheduledEntries"
                        ]
                      }
                    }
                  },
                  "description": "Results of the list maintenance configuration resources."
                },
                "nextLink": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Link for next page of results."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/maintenanceConfigurations/{configName}": {
      "put": {
        "tags": [
          "MaintenanceConfigurations"
        ],
        "operationId": "MaintenanceConfigurations_CreateOrUpdate",
        "description": "Create or update the maintenance configuration for Managed Environment.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "description": "The name of the Managed Environment.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "configName",
            "description": "The name of the maintenance configuration.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "maintenanceConfigurationEnvelope",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Information about the Maintenance Configuration resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "scheduledEntries": {
                      "x-ms-client-name": "ScheduledEntries",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Maintenance schedule entry for a managed environment.",
                        "properties": {
                          "weekDay": {
                            "type": "string",
                            "description": "Day of the week when a managed environment can be patched.",
                            "enum": [
                              "Monday",
                              "Tuesday",
                              "Wednesday",
                              "Thursday",
                              "Friday",
                              "Saturday",
                              "Sunday"
                            ],
                            "x-ms-enum": {
                              "name": "WeekDay",
                              "modelAsString": false
                            }
                          },
                          "startHourUtc": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Start hour after which managed environment maintenance can start from 0 to 23 hour."
                          },
                          "durationHours": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Length of maintenance window range from 8 to 24 hours."
                          }
                        },
                        "required": [
                          "weekDay",
                          "startHourUtc",
                          "durationHours"
                        ]
                      },
                      "x-ms-identifiers": [],
                      "description": "List of maintenance schedules for a managed environment."
                    }
                  },
                  "required": [
                    "scheduledEntries"
                  ]
                }
              }
            },
            "description": "Parameters to set the maintenance configuration for ManagedEnvironment ."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The maintenance configuration was successfully updated.",
            "schema": {
              "type": "object",
              "description": "Information about the Maintenance Configuration resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "scheduledEntries": {
                      "x-ms-client-name": "ScheduledEntries",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Maintenance schedule entry for a managed environment.",
                        "properties": {
                          "weekDay": {
                            "type": "string",
                            "description": "Day of the week when a managed environment can be patched.",
                            "enum": [
                              "Monday",
                              "Tuesday",
                              "Wednesday",
                              "Thursday",
                              "Friday",
                              "Saturday",
                              "Sunday"
                            ],
                            "x-ms-enum": {
                              "name": "WeekDay",
                              "modelAsString": false
                            }
                          },
                          "startHourUtc": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Start hour after which managed environment maintenance can start from 0 to 23 hour."
                          },
                          "durationHours": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Length of maintenance window range from 8 to 24 hours."
                          }
                        },
                        "required": [
                          "weekDay",
                          "startHourUtc",
                          "durationHours"
                        ]
                      },
                      "x-ms-identifiers": [],
                      "description": "List of maintenance schedules for a managed environment."
                    }
                  },
                  "required": [
                    "scheduledEntries"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "The maintenance configuration was successfully created.",
            "schema": {
              "type": "object",
              "description": "Information about the Maintenance Configuration resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "scheduledEntries": {
                      "x-ms-client-name": "ScheduledEntries",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Maintenance schedule entry for a managed environment.",
                        "properties": {
                          "weekDay": {
                            "type": "string",
                            "description": "Day of the week when a managed environment can be patched.",
                            "enum": [
                              "Monday",
                              "Tuesday",
                              "Wednesday",
                              "Thursday",
                              "Friday",
                              "Saturday",
                              "Sunday"
                            ],
                            "x-ms-enum": {
                              "name": "WeekDay",
                              "modelAsString": false
                            }
                          },
                          "startHourUtc": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Start hour after which managed environment maintenance can start from 0 to 23 hour."
                          },
                          "durationHours": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Length of maintenance window range from 8 to 24 hours."
                          }
                        },
                        "required": [
                          "weekDay",
                          "startHourUtc",
                          "durationHours"
                        ]
                      },
                      "x-ms-identifiers": [],
                      "description": "List of maintenance schedules for a managed environment."
                    }
                  },
                  "required": [
                    "scheduledEntries"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MaintenanceConfigurations"
        ],
        "operationId": "MaintenanceConfigurations_Delete",
        "description": "Deletes the maintenance configuration of a ManagedEnvironment .",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "description": "The name of the Managed Environment.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "configName",
            "description": "The name of the maintenance configuration.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "204": {
            "description": "No content."
          }
        }
      },
      "get": {
        "tags": [
          "MaintenanceConfigurations"
        ],
        "operationId": "MaintenanceConfigurations_Get",
        "description": "Gets the maintenance configuration of a ManagedEnvironment .",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "description": "The name of the Managed Environment.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "configName",
            "description": "The name of the maintenance configuration.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Response of get maintenance configurations.",
            "schema": {
              "type": "object",
              "description": "Information about the Maintenance Configuration resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "scheduledEntries": {
                      "x-ms-client-name": "ScheduledEntries",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Maintenance schedule entry for a managed environment.",
                        "properties": {
                          "weekDay": {
                            "type": "string",
                            "description": "Day of the week when a managed environment can be patched.",
                            "enum": [
                              "Monday",
                              "Tuesday",
                              "Wednesday",
                              "Thursday",
                              "Friday",
                              "Saturday",
                              "Sunday"
                            ],
                            "x-ms-enum": {
                              "name": "WeekDay",
                              "modelAsString": false
                            }
                          },
                          "startHourUtc": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Start hour after which managed environment maintenance can start from 0 to 23 hour."
                          },
                          "durationHours": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Length of maintenance window range from 8 to 24 hours."
                          }
                        },
                        "required": [
                          "weekDay",
                          "startHourUtc",
                          "durationHours"
                        ]
                      },
                      "x-ms-identifiers": [],
                      "description": "List of maintenance schedules for a managed environment."
                    }
                  },
                  "required": [
                    "scheduledEntries"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/storages": {
      "get": {
        "tags": [
          "ManagedEnvironmentsStorages"
        ],
        "summary": "Get all storages for a managedEnvironment.",
        "description": "Get all storages for a managedEnvironment.",
        "operationId": "ManagedEnvironmentsStorages_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Collection of Storage for Environments",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of storage resources.",
                  "type": "array",
                  "items": {
                    "description": "Storage resource for managedEnvironment.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Storage properties",
                        "type": "object",
                        "properties": {
                          "azureFile": {
                            "description": "Azure file properties",
                            "type": "object",
                            "properties": {
                              "accountName": {
                                "description": "Storage account name for azure file.",
                                "type": "string"
                              },
                              "accountKey": {
                                "description": "Storage account key for azure file.",
                                "type": "string",
                                "x-ms-secret": true
                              },
                              "accountKeyVaultProperties": {
                                "description": "Storage account key stored as an Azure Key Vault secret.",
                                "type": "object",
                                "properties": {
                                  "identity": {
                                    "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                                    "type": "string"
                                  },
                                  "keyVaultUrl": {
                                    "description": "URL pointing to the Azure Key Vault secret.",
                                    "type": "string"
                                  }
                                }
                              },
                              "accessMode": {
                                "description": "Access mode for storage",
                                "enum": [
                                  "ReadOnly",
                                  "ReadWrite"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AccessMode",
                                  "modelAsString": true
                                }
                              },
                              "shareName": {
                                "description": "Azure file share name.",
                                "type": "string"
                              }
                            }
                          },
                          "nfsAzureFile": {
                            "description": "NFS Azure file properties",
                            "type": "object",
                            "properties": {
                              "server": {
                                "description": "Server for NFS azure file. Specify the Azure storage account server address.",
                                "type": "string"
                              },
                              "accessMode": {
                                "description": "Access mode for storage",
                                "enum": [
                                  "ReadOnly",
                                  "ReadWrite"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "AccessMode",
                                  "modelAsString": true
                                }
                              },
                              "shareName": {
                                "description": "NFS Azure file share name.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/storages/{storageName}": {
      "get": {
        "tags": [
          "ManagedEnvironmentsStorages"
        ],
        "summary": "Get storage for a managedEnvironment.",
        "description": "Get storage for a managedEnvironment.",
        "operationId": "ManagedEnvironmentsStorages_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Storage resource for managedEnvironment.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Storage properties",
                  "type": "object",
                  "properties": {
                    "azureFile": {
                      "description": "Azure file properties",
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "description": "Storage account name for azure file.",
                          "type": "string"
                        },
                        "accountKey": {
                          "description": "Storage account key for azure file.",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "accountKeyVaultProperties": {
                          "description": "Storage account key stored as an Azure Key Vault secret.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret.",
                              "type": "string"
                            }
                          }
                        },
                        "accessMode": {
                          "description": "Access mode for storage",
                          "enum": [
                            "ReadOnly",
                            "ReadWrite"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "AccessMode",
                            "modelAsString": true
                          }
                        },
                        "shareName": {
                          "description": "Azure file share name.",
                          "type": "string"
                        }
                      }
                    },
                    "nfsAzureFile": {
                      "description": "NFS Azure file properties",
                      "type": "object",
                      "properties": {
                        "server": {
                          "description": "Server for NFS azure file. Specify the Azure storage account server address.",
                          "type": "string"
                        },
                        "accessMode": {
                          "description": "Access mode for storage",
                          "enum": [
                            "ReadOnly",
                            "ReadWrite"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "AccessMode",
                            "modelAsString": true
                          }
                        },
                        "shareName": {
                          "description": "NFS Azure file share name.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ManagedEnvironmentsStorages"
        ],
        "summary": "Create or update storage for a managedEnvironment.",
        "description": "Create or update storage for a managedEnvironment.",
        "operationId": "ManagedEnvironmentsStorages_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageEnvelope",
            "in": "body",
            "description": "Configuration details of storage.",
            "required": true,
            "schema": {
              "description": "Storage resource for managedEnvironment.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Storage properties",
                  "type": "object",
                  "properties": {
                    "azureFile": {
                      "description": "Azure file properties",
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "description": "Storage account name for azure file.",
                          "type": "string"
                        },
                        "accountKey": {
                          "description": "Storage account key for azure file.",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "accountKeyVaultProperties": {
                          "description": "Storage account key stored as an Azure Key Vault secret.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret.",
                              "type": "string"
                            }
                          }
                        },
                        "accessMode": {
                          "description": "Access mode for storage",
                          "enum": [
                            "ReadOnly",
                            "ReadWrite"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "AccessMode",
                            "modelAsString": true
                          }
                        },
                        "shareName": {
                          "description": "Azure file share name.",
                          "type": "string"
                        }
                      }
                    },
                    "nfsAzureFile": {
                      "description": "NFS Azure file properties",
                      "type": "object",
                      "properties": {
                        "server": {
                          "description": "Server for NFS azure file. Specify the Azure storage account server address.",
                          "type": "string"
                        },
                        "accessMode": {
                          "description": "Access mode for storage",
                          "enum": [
                            "ReadOnly",
                            "ReadWrite"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "AccessMode",
                            "modelAsString": true
                          }
                        },
                        "shareName": {
                          "description": "NFS Azure file share name.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Storage resource for managedEnvironment.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Storage properties",
                  "type": "object",
                  "properties": {
                    "azureFile": {
                      "description": "Azure file properties",
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "description": "Storage account name for azure file.",
                          "type": "string"
                        },
                        "accountKey": {
                          "description": "Storage account key for azure file.",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "accountKeyVaultProperties": {
                          "description": "Storage account key stored as an Azure Key Vault secret.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret.",
                              "type": "string"
                            }
                          }
                        },
                        "accessMode": {
                          "description": "Access mode for storage",
                          "enum": [
                            "ReadOnly",
                            "ReadWrite"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "AccessMode",
                            "modelAsString": true
                          }
                        },
                        "shareName": {
                          "description": "Azure file share name.",
                          "type": "string"
                        }
                      }
                    },
                    "nfsAzureFile": {
                      "description": "NFS Azure file properties",
                      "type": "object",
                      "properties": {
                        "server": {
                          "description": "Server for NFS azure file. Specify the Azure storage account server address.",
                          "type": "string"
                        },
                        "accessMode": {
                          "description": "Access mode for storage",
                          "enum": [
                            "ReadOnly",
                            "ReadWrite"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "AccessMode",
                            "modelAsString": true
                          }
                        },
                        "shareName": {
                          "description": "NFS Azure file share name.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Storage resource for managedEnvironment.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Storage properties",
                  "type": "object",
                  "properties": {
                    "azureFile": {
                      "description": "Azure file properties",
                      "type": "object",
                      "properties": {
                        "accountName": {
                          "description": "Storage account name for azure file.",
                          "type": "string"
                        },
                        "accountKey": {
                          "description": "Storage account key for azure file.",
                          "type": "string",
                          "x-ms-secret": true
                        },
                        "accountKeyVaultProperties": {
                          "description": "Storage account key stored as an Azure Key Vault secret.",
                          "type": "object",
                          "properties": {
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "URL pointing to the Azure Key Vault secret.",
                              "type": "string"
                            }
                          }
                        },
                        "accessMode": {
                          "description": "Access mode for storage",
                          "enum": [
                            "ReadOnly",
                            "ReadWrite"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "AccessMode",
                            "modelAsString": true
                          }
                        },
                        "shareName": {
                          "description": "Azure file share name.",
                          "type": "string"
                        }
                      }
                    },
                    "nfsAzureFile": {
                      "description": "NFS Azure file properties",
                      "type": "object",
                      "properties": {
                        "server": {
                          "description": "Server for NFS azure file. Specify the Azure storage account server address.",
                          "type": "string"
                        },
                        "accessMode": {
                          "description": "Access mode for storage",
                          "enum": [
                            "ReadOnly",
                            "ReadWrite"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "AccessMode",
                            "modelAsString": true
                          }
                        },
                        "shareName": {
                          "description": "NFS Azure file share name.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ManagedEnvironmentsStorages"
        ],
        "summary": "Delete storage for a managedEnvironment.",
        "description": "Delete storage for a managedEnvironment.",
        "operationId": "ManagedEnvironmentsStorages_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageName",
            "in": "path",
            "description": "Name of the storage.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Storage does not exist"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/sessionPools": {
      "get": {
        "tags": [
          "ContainerAppsSessionPools"
        ],
        "summary": "Get the session pools in a given subscription.",
        "operationId": "ContainerAppsSessionPools_ListBySubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Session pool collection Azure resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Container App session pool.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "identity": {
                        "description": "Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "description": "Container App session pool resource specific properties",
                        "type": "object",
                        "properties": {
                          "environmentId": {
                            "description": "Resource ID of the session pool's environment.",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.App/managedEnvironments"
                                }
                              ]
                            },
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "containerType": {
                            "description": "The container type of the sessions.",
                            "enum": [
                              "CustomContainer",
                              "PythonLTS"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ContainerType",
                              "modelAsString": true
                            }
                          },
                          "poolManagementType": {
                            "description": "The pool management type of the session pool.",
                            "enum": [
                              "Manual",
                              "Dynamic"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PoolManagementType",
                              "modelAsString": true
                            }
                          },
                          "nodeCount": {
                            "description": "The number of nodes the session pool is using.",
                            "type": "integer",
                            "format": "int32",
                            "readOnly": true
                          },
                          "scaleConfiguration": {
                            "description": "The scale configuration of the session pool.",
                            "type": "object",
                            "properties": {
                              "maxConcurrentSessions": {
                                "description": "The maximum count of sessions at the same time.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "readySessionInstances": {
                                "description": "The minimum count of ready session instances.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "secrets": {
                            "description": "The secrets of the session pool.",
                            "type": "array",
                            "items": {
                              "description": "Secret definition.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Secret Name.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Secret Value.",
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "create",
                                    "update"
                                  ],
                                  "x-ms-secret": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "dynamicPoolConfiguration": {
                            "description": "The pool configuration if the poolManagementType is dynamic.",
                            "type": "object",
                            "properties": {
                              "lifecycleConfiguration": {
                                "description": "The lifecycle configuration of a session in the dynamic session pool",
                                "type": "object",
                                "properties": {
                                  "lifecycleType": {
                                    "description": "The lifecycle type of the session pool.",
                                    "enum": [
                                      "Timed",
                                      "OnContainerExit"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "LifecycleType",
                                      "modelAsString": true
                                    }
                                  },
                                  "cooldownPeriodInSeconds": {
                                    "description": "The cooldown period of a session in seconds when the lifecycle type is 'Timed'.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "maxAlivePeriodInSeconds": {
                                    "description": "The maximum alive period of a session in seconds when the lifecycle type is 'OnContainerExit'.",
                                    "type": "integer",
                                    "format": "int32"
                                  }
                                }
                              }
                            }
                          },
                          "customContainerTemplate": {
                            "description": "The custom container configuration if the containerType is CustomContainer.",
                            "type": "object",
                            "properties": {
                              "registryCredentials": {
                                "description": "Private container registry credentials for containers used by the sessions of the session pool.",
                                "type": "object",
                                "properties": {
                                  "server": {
                                    "description": "Container registry server.",
                                    "type": "string"
                                  },
                                  "username": {
                                    "description": "Container registry username.",
                                    "type": "string"
                                  },
                                  "passwordSecretRef": {
                                    "description": "The name of the secret that contains the registry login password",
                                    "type": "string"
                                  },
                                  "identity": {
                                    "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                    "type": "string"
                                  }
                                }
                              },
                              "containers": {
                                "description": "List of container definitions for the sessions of the session pool.",
                                "type": "array",
                                "items": {
                                  "description": "Container definitions for the sessions of the session pool.",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "ingress": {
                                "description": "Session pool ingress configuration.",
                                "type": "object",
                                "properties": {
                                  "targetPort": {
                                    "format": "int32",
                                    "description": "Target port in containers for traffic from ingress",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          },
                          "sessionNetworkConfiguration": {
                            "description": "The network configuration of the sessions in the session pool.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Network status for the sessions.",
                                "type": "string",
                                "enum": [
                                  "EgressEnabled",
                                  "EgressDisabled"
                                ],
                                "x-ms-enum": {
                                  "name": "SessionNetworkStatus",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "poolManagementEndpoint": {
                            "description": "The endpoint to manage the pool.",
                            "type": "string",
                            "format": "uri",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the session pool.",
                            "enum": [
                              "InProgress",
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "SessionPoolProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "managedIdentitySettings": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                            "type": "array",
                            "items": {
                              "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                              "type": "object",
                              "required": [
                                "identity"
                              ],
                              "properties": {
                                "identity": {
                                  "description": "The resource ID of a user-assigned managed identity that is assigned to the Session Pool, or 'system' for system-assigned identity.",
                                  "type": "string"
                                },
                                "lifecycle": {
                                  "description": "Use to select the lifecycle stages of a Session Pool during which the Managed Identity should be available.",
                                  "enum": [
                                    "None",
                                    "Main"
                                  ],
                                  "type": "string",
                                  "default": "None",
                                  "x-ms-enum": {
                                    "name": "IdentitySettingsLifeCycle",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "identity"
                            ]
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/sessionPools": {
      "get": {
        "tags": [
          "ContainerAppsSessionPools"
        ],
        "summary": "Get the session pools in a given resource group of a subscription.",
        "operationId": "ContainerAppsSessionPools_ListByResourceGroup",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Session pool collection Azure resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Container App session pool.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "identity": {
                        "description": "Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "description": "Container App session pool resource specific properties",
                        "type": "object",
                        "properties": {
                          "environmentId": {
                            "description": "Resource ID of the session pool's environment.",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.App/managedEnvironments"
                                }
                              ]
                            },
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "containerType": {
                            "description": "The container type of the sessions.",
                            "enum": [
                              "CustomContainer",
                              "PythonLTS"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ContainerType",
                              "modelAsString": true
                            }
                          },
                          "poolManagementType": {
                            "description": "The pool management type of the session pool.",
                            "enum": [
                              "Manual",
                              "Dynamic"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "PoolManagementType",
                              "modelAsString": true
                            }
                          },
                          "nodeCount": {
                            "description": "The number of nodes the session pool is using.",
                            "type": "integer",
                            "format": "int32",
                            "readOnly": true
                          },
                          "scaleConfiguration": {
                            "description": "The scale configuration of the session pool.",
                            "type": "object",
                            "properties": {
                              "maxConcurrentSessions": {
                                "description": "The maximum count of sessions at the same time.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "readySessionInstances": {
                                "description": "The minimum count of ready session instances.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "secrets": {
                            "description": "The secrets of the session pool.",
                            "type": "array",
                            "items": {
                              "description": "Secret definition.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Secret Name.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Secret Value.",
                                  "type": "string",
                                  "x-ms-mutability": [
                                    "create",
                                    "update"
                                  ],
                                  "x-ms-secret": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "dynamicPoolConfiguration": {
                            "description": "The pool configuration if the poolManagementType is dynamic.",
                            "type": "object",
                            "properties": {
                              "lifecycleConfiguration": {
                                "description": "The lifecycle configuration of a session in the dynamic session pool",
                                "type": "object",
                                "properties": {
                                  "lifecycleType": {
                                    "description": "The lifecycle type of the session pool.",
                                    "enum": [
                                      "Timed",
                                      "OnContainerExit"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "LifecycleType",
                                      "modelAsString": true
                                    }
                                  },
                                  "cooldownPeriodInSeconds": {
                                    "description": "The cooldown period of a session in seconds when the lifecycle type is 'Timed'.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "maxAlivePeriodInSeconds": {
                                    "description": "The maximum alive period of a session in seconds when the lifecycle type is 'OnContainerExit'.",
                                    "type": "integer",
                                    "format": "int32"
                                  }
                                }
                              }
                            }
                          },
                          "customContainerTemplate": {
                            "description": "The custom container configuration if the containerType is CustomContainer.",
                            "type": "object",
                            "properties": {
                              "registryCredentials": {
                                "description": "Private container registry credentials for containers used by the sessions of the session pool.",
                                "type": "object",
                                "properties": {
                                  "server": {
                                    "description": "Container registry server.",
                                    "type": "string"
                                  },
                                  "username": {
                                    "description": "Container registry username.",
                                    "type": "string"
                                  },
                                  "passwordSecretRef": {
                                    "description": "The name of the secret that contains the registry login password",
                                    "type": "string"
                                  },
                                  "identity": {
                                    "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                                    "type": "string"
                                  }
                                }
                              },
                              "containers": {
                                "description": "List of container definitions for the sessions of the session pool.",
                                "type": "array",
                                "items": {
                                  "description": "Container definitions for the sessions of the session pool.",
                                  "type": "object",
                                  "properties": {
                                    "image": {
                                      "description": "Container image tag.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Custom container name.",
                                      "type": "string"
                                    },
                                    "command": {
                                      "description": "Container start command.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "args": {
                                      "description": "Container start command arguments.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "env": {
                                      "description": "Container environment variables.",
                                      "type": "array",
                                      "items": {
                                        "description": "Container App container environment variable.",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Environment variable name.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Non-secret environment variable value.",
                                            "type": "string"
                                          },
                                          "secretRef": {
                                            "description": "Name of the Container App secret from which to pull the environment variable value.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "resources": {
                                      "description": "Container resource requirements.",
                                      "type": "object",
                                      "properties": {
                                        "cpu": {
                                          "format": "double",
                                          "description": "Required CPU in cores, e.g. 0.5",
                                          "type": "number"
                                        },
                                        "memory": {
                                          "description": "Required memory, e.g. \"250Mb\"",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "ingress": {
                                "description": "Session pool ingress configuration.",
                                "type": "object",
                                "properties": {
                                  "targetPort": {
                                    "format": "int32",
                                    "description": "Target port in containers for traffic from ingress",
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          },
                          "sessionNetworkConfiguration": {
                            "description": "The network configuration of the sessions in the session pool.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Network status for the sessions.",
                                "type": "string",
                                "enum": [
                                  "EgressEnabled",
                                  "EgressDisabled"
                                ],
                                "x-ms-enum": {
                                  "name": "SessionNetworkStatus",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "poolManagementEndpoint": {
                            "description": "The endpoint to manage the pool.",
                            "type": "string",
                            "format": "uri",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provisioning state of the session pool.",
                            "enum": [
                              "InProgress",
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleting"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "SessionPoolProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "managedIdentitySettings": {
                            "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                            "type": "array",
                            "items": {
                              "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                              "type": "object",
                              "required": [
                                "identity"
                              ],
                              "properties": {
                                "identity": {
                                  "description": "The resource ID of a user-assigned managed identity that is assigned to the Session Pool, or 'system' for system-assigned identity.",
                                  "type": "string"
                                },
                                "lifecycle": {
                                  "description": "Use to select the lifecycle stages of a Session Pool during which the Managed Identity should be available.",
                                  "enum": [
                                    "None",
                                    "Main"
                                  ],
                                  "type": "string",
                                  "default": "None",
                                  "x-ms-enum": {
                                    "name": "IdentitySettingsLifeCycle",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "identity"
                            ]
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/sessionPools/{sessionPoolName}": {
      "get": {
        "tags": [
          "ContainerAppsSessionPools"
        ],
        "summary": "Get the properties of a session pool.",
        "operationId": "ContainerAppsSessionPools_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "sessionPoolName",
            "in": "path",
            "description": "Name of the session pool.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Container App session pool.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Container App session pool resource specific properties",
                  "type": "object",
                  "properties": {
                    "environmentId": {
                      "description": "Resource ID of the session pool's environment.",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.App/managedEnvironments"
                          }
                        ]
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "containerType": {
                      "description": "The container type of the sessions.",
                      "enum": [
                        "CustomContainer",
                        "PythonLTS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ContainerType",
                        "modelAsString": true
                      }
                    },
                    "poolManagementType": {
                      "description": "The pool management type of the session pool.",
                      "enum": [
                        "Manual",
                        "Dynamic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PoolManagementType",
                        "modelAsString": true
                      }
                    },
                    "nodeCount": {
                      "description": "The number of nodes the session pool is using.",
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "scaleConfiguration": {
                      "description": "The scale configuration of the session pool.",
                      "type": "object",
                      "properties": {
                        "maxConcurrentSessions": {
                          "description": "The maximum count of sessions at the same time.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "readySessionInstances": {
                          "description": "The minimum count of ready session instances.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "secrets": {
                      "description": "The secrets of the session pool.",
                      "type": "array",
                      "items": {
                        "description": "Secret definition.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Secret Name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Secret Value.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "dynamicPoolConfiguration": {
                      "description": "The pool configuration if the poolManagementType is dynamic.",
                      "type": "object",
                      "properties": {
                        "lifecycleConfiguration": {
                          "description": "The lifecycle configuration of a session in the dynamic session pool",
                          "type": "object",
                          "properties": {
                            "lifecycleType": {
                              "description": "The lifecycle type of the session pool.",
                              "enum": [
                                "Timed",
                                "OnContainerExit"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "LifecycleType",
                                "modelAsString": true
                              }
                            },
                            "cooldownPeriodInSeconds": {
                              "description": "The cooldown period of a session in seconds when the lifecycle type is 'Timed'.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "maxAlivePeriodInSeconds": {
                              "description": "The maximum alive period of a session in seconds when the lifecycle type is 'OnContainerExit'.",
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      }
                    },
                    "customContainerTemplate": {
                      "description": "The custom container configuration if the containerType is CustomContainer.",
                      "type": "object",
                      "properties": {
                        "registryCredentials": {
                          "description": "Private container registry credentials for containers used by the sessions of the session pool.",
                          "type": "object",
                          "properties": {
                            "server": {
                              "description": "Container registry server.",
                              "type": "string"
                            },
                            "username": {
                              "description": "Container registry username.",
                              "type": "string"
                            },
                            "passwordSecretRef": {
                              "description": "The name of the secret that contains the registry login password",
                              "type": "string"
                            },
                            "identity": {
                              "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                              "type": "string"
                            }
                          }
                        },
                        "containers": {
                          "description": "List of container definitions for the sessions of the session pool.",
                          "type": "array",
                          "items": {
                            "description": "Container definitions for the sessions of the session pool.",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "ingress": {
                          "description": "Session pool ingress configuration.",
                          "type": "object",
                          "properties": {
                            "targetPort": {
                              "format": "int32",
                              "description": "Target port in containers for traffic from ingress",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "sessionNetworkConfiguration": {
                      "description": "The network configuration of the sessions in the session pool.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Network status for the sessions.",
                          "type": "string",
                          "enum": [
                            "EgressEnabled",
                            "EgressDisabled"
                          ],
                          "x-ms-enum": {
                            "name": "SessionNetworkStatus",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "poolManagementEndpoint": {
                      "description": "The endpoint to manage the pool.",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the session pool.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "SessionPoolProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "managedIdentitySettings": {
                      "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                      "type": "array",
                      "items": {
                        "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                        "type": "object",
                        "required": [
                          "identity"
                        ],
                        "properties": {
                          "identity": {
                            "description": "The resource ID of a user-assigned managed identity that is assigned to the Session Pool, or 'system' for system-assigned identity.",
                            "type": "string"
                          },
                          "lifecycle": {
                            "description": "Use to select the lifecycle stages of a Session Pool during which the Managed Identity should be available.",
                            "enum": [
                              "None",
                              "Main"
                            ],
                            "type": "string",
                            "default": "None",
                            "x-ms-enum": {
                              "name": "IdentitySettingsLifeCycle",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "identity"
                      ]
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContainerAppsSessionPools"
        ],
        "summary": "Create or update a session pool.",
        "description": "Create or update a session pool with the given properties.",
        "operationId": "ContainerAppsSessionPools_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "sessionPoolName",
            "in": "path",
            "description": "Name of the session pool.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "sessionPoolEnvelope",
            "in": "body",
            "description": "Properties used to create a session pool",
            "required": true,
            "schema": {
              "description": "Container App session pool.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Container App session pool resource specific properties",
                  "type": "object",
                  "properties": {
                    "environmentId": {
                      "description": "Resource ID of the session pool's environment.",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.App/managedEnvironments"
                          }
                        ]
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "containerType": {
                      "description": "The container type of the sessions.",
                      "enum": [
                        "CustomContainer",
                        "PythonLTS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ContainerType",
                        "modelAsString": true
                      }
                    },
                    "poolManagementType": {
                      "description": "The pool management type of the session pool.",
                      "enum": [
                        "Manual",
                        "Dynamic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PoolManagementType",
                        "modelAsString": true
                      }
                    },
                    "nodeCount": {
                      "description": "The number of nodes the session pool is using.",
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "scaleConfiguration": {
                      "description": "The scale configuration of the session pool.",
                      "type": "object",
                      "properties": {
                        "maxConcurrentSessions": {
                          "description": "The maximum count of sessions at the same time.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "readySessionInstances": {
                          "description": "The minimum count of ready session instances.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "secrets": {
                      "description": "The secrets of the session pool.",
                      "type": "array",
                      "items": {
                        "description": "Secret definition.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Secret Name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Secret Value.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "dynamicPoolConfiguration": {
                      "description": "The pool configuration if the poolManagementType is dynamic.",
                      "type": "object",
                      "properties": {
                        "lifecycleConfiguration": {
                          "description": "The lifecycle configuration of a session in the dynamic session pool",
                          "type": "object",
                          "properties": {
                            "lifecycleType": {
                              "description": "The lifecycle type of the session pool.",
                              "enum": [
                                "Timed",
                                "OnContainerExit"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "LifecycleType",
                                "modelAsString": true
                              }
                            },
                            "cooldownPeriodInSeconds": {
                              "description": "The cooldown period of a session in seconds when the lifecycle type is 'Timed'.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "maxAlivePeriodInSeconds": {
                              "description": "The maximum alive period of a session in seconds when the lifecycle type is 'OnContainerExit'.",
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      }
                    },
                    "customContainerTemplate": {
                      "description": "The custom container configuration if the containerType is CustomContainer.",
                      "type": "object",
                      "properties": {
                        "registryCredentials": {
                          "description": "Private container registry credentials for containers used by the sessions of the session pool.",
                          "type": "object",
                          "properties": {
                            "server": {
                              "description": "Container registry server.",
                              "type": "string"
                            },
                            "username": {
                              "description": "Container registry username.",
                              "type": "string"
                            },
                            "passwordSecretRef": {
                              "description": "The name of the secret that contains the registry login password",
                              "type": "string"
                            },
                            "identity": {
                              "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                              "type": "string"
                            }
                          }
                        },
                        "containers": {
                          "description": "List of container definitions for the sessions of the session pool.",
                          "type": "array",
                          "items": {
                            "description": "Container definitions for the sessions of the session pool.",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "ingress": {
                          "description": "Session pool ingress configuration.",
                          "type": "object",
                          "properties": {
                            "targetPort": {
                              "format": "int32",
                              "description": "Target port in containers for traffic from ingress",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "sessionNetworkConfiguration": {
                      "description": "The network configuration of the sessions in the session pool.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Network status for the sessions.",
                          "type": "string",
                          "enum": [
                            "EgressEnabled",
                            "EgressDisabled"
                          ],
                          "x-ms-enum": {
                            "name": "SessionNetworkStatus",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "poolManagementEndpoint": {
                      "description": "The endpoint to manage the pool.",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the session pool.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "SessionPoolProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "managedIdentitySettings": {
                      "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                      "type": "array",
                      "items": {
                        "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                        "type": "object",
                        "required": [
                          "identity"
                        ],
                        "properties": {
                          "identity": {
                            "description": "The resource ID of a user-assigned managed identity that is assigned to the Session Pool, or 'system' for system-assigned identity.",
                            "type": "string"
                          },
                          "lifecycle": {
                            "description": "Use to select the lifecycle stages of a Session Pool during which the Managed Identity should be available.",
                            "enum": [
                              "None",
                              "Main"
                            ],
                            "type": "string",
                            "default": "None",
                            "x-ms-enum": {
                              "name": "IdentitySettingsLifeCycle",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "identity"
                      ]
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Update succeeded",
            "schema": {
              "description": "Container App session pool.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Container App session pool resource specific properties",
                  "type": "object",
                  "properties": {
                    "environmentId": {
                      "description": "Resource ID of the session pool's environment.",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.App/managedEnvironments"
                          }
                        ]
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "containerType": {
                      "description": "The container type of the sessions.",
                      "enum": [
                        "CustomContainer",
                        "PythonLTS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ContainerType",
                        "modelAsString": true
                      }
                    },
                    "poolManagementType": {
                      "description": "The pool management type of the session pool.",
                      "enum": [
                        "Manual",
                        "Dynamic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PoolManagementType",
                        "modelAsString": true
                      }
                    },
                    "nodeCount": {
                      "description": "The number of nodes the session pool is using.",
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "scaleConfiguration": {
                      "description": "The scale configuration of the session pool.",
                      "type": "object",
                      "properties": {
                        "maxConcurrentSessions": {
                          "description": "The maximum count of sessions at the same time.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "readySessionInstances": {
                          "description": "The minimum count of ready session instances.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "secrets": {
                      "description": "The secrets of the session pool.",
                      "type": "array",
                      "items": {
                        "description": "Secret definition.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Secret Name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Secret Value.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "dynamicPoolConfiguration": {
                      "description": "The pool configuration if the poolManagementType is dynamic.",
                      "type": "object",
                      "properties": {
                        "lifecycleConfiguration": {
                          "description": "The lifecycle configuration of a session in the dynamic session pool",
                          "type": "object",
                          "properties": {
                            "lifecycleType": {
                              "description": "The lifecycle type of the session pool.",
                              "enum": [
                                "Timed",
                                "OnContainerExit"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "LifecycleType",
                                "modelAsString": true
                              }
                            },
                            "cooldownPeriodInSeconds": {
                              "description": "The cooldown period of a session in seconds when the lifecycle type is 'Timed'.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "maxAlivePeriodInSeconds": {
                              "description": "The maximum alive period of a session in seconds when the lifecycle type is 'OnContainerExit'.",
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      }
                    },
                    "customContainerTemplate": {
                      "description": "The custom container configuration if the containerType is CustomContainer.",
                      "type": "object",
                      "properties": {
                        "registryCredentials": {
                          "description": "Private container registry credentials for containers used by the sessions of the session pool.",
                          "type": "object",
                          "properties": {
                            "server": {
                              "description": "Container registry server.",
                              "type": "string"
                            },
                            "username": {
                              "description": "Container registry username.",
                              "type": "string"
                            },
                            "passwordSecretRef": {
                              "description": "The name of the secret that contains the registry login password",
                              "type": "string"
                            },
                            "identity": {
                              "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                              "type": "string"
                            }
                          }
                        },
                        "containers": {
                          "description": "List of container definitions for the sessions of the session pool.",
                          "type": "array",
                          "items": {
                            "description": "Container definitions for the sessions of the session pool.",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "ingress": {
                          "description": "Session pool ingress configuration.",
                          "type": "object",
                          "properties": {
                            "targetPort": {
                              "format": "int32",
                              "description": "Target port in containers for traffic from ingress",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "sessionNetworkConfiguration": {
                      "description": "The network configuration of the sessions in the session pool.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Network status for the sessions.",
                          "type": "string",
                          "enum": [
                            "EgressEnabled",
                            "EgressDisabled"
                          ],
                          "x-ms-enum": {
                            "name": "SessionNetworkStatus",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "poolManagementEndpoint": {
                      "description": "The endpoint to manage the pool.",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the session pool.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "SessionPoolProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "managedIdentitySettings": {
                      "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                      "type": "array",
                      "items": {
                        "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                        "type": "object",
                        "required": [
                          "identity"
                        ],
                        "properties": {
                          "identity": {
                            "description": "The resource ID of a user-assigned managed identity that is assigned to the Session Pool, or 'system' for system-assigned identity.",
                            "type": "string"
                          },
                          "lifecycle": {
                            "description": "Use to select the lifecycle stages of a Session Pool during which the Managed Identity should be available.",
                            "enum": [
                              "None",
                              "Main"
                            ],
                            "type": "string",
                            "default": "None",
                            "x-ms-enum": {
                              "name": "IdentitySettingsLifeCycle",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "identity"
                      ]
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "201": {
            "description": "Session pool creation has started.",
            "schema": {
              "description": "Container App session pool.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Container App session pool resource specific properties",
                  "type": "object",
                  "properties": {
                    "environmentId": {
                      "description": "Resource ID of the session pool's environment.",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.App/managedEnvironments"
                          }
                        ]
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "containerType": {
                      "description": "The container type of the sessions.",
                      "enum": [
                        "CustomContainer",
                        "PythonLTS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ContainerType",
                        "modelAsString": true
                      }
                    },
                    "poolManagementType": {
                      "description": "The pool management type of the session pool.",
                      "enum": [
                        "Manual",
                        "Dynamic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PoolManagementType",
                        "modelAsString": true
                      }
                    },
                    "nodeCount": {
                      "description": "The number of nodes the session pool is using.",
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "scaleConfiguration": {
                      "description": "The scale configuration of the session pool.",
                      "type": "object",
                      "properties": {
                        "maxConcurrentSessions": {
                          "description": "The maximum count of sessions at the same time.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "readySessionInstances": {
                          "description": "The minimum count of ready session instances.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "secrets": {
                      "description": "The secrets of the session pool.",
                      "type": "array",
                      "items": {
                        "description": "Secret definition.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Secret Name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Secret Value.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "dynamicPoolConfiguration": {
                      "description": "The pool configuration if the poolManagementType is dynamic.",
                      "type": "object",
                      "properties": {
                        "lifecycleConfiguration": {
                          "description": "The lifecycle configuration of a session in the dynamic session pool",
                          "type": "object",
                          "properties": {
                            "lifecycleType": {
                              "description": "The lifecycle type of the session pool.",
                              "enum": [
                                "Timed",
                                "OnContainerExit"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "LifecycleType",
                                "modelAsString": true
                              }
                            },
                            "cooldownPeriodInSeconds": {
                              "description": "The cooldown period of a session in seconds when the lifecycle type is 'Timed'.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "maxAlivePeriodInSeconds": {
                              "description": "The maximum alive period of a session in seconds when the lifecycle type is 'OnContainerExit'.",
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      }
                    },
                    "customContainerTemplate": {
                      "description": "The custom container configuration if the containerType is CustomContainer.",
                      "type": "object",
                      "properties": {
                        "registryCredentials": {
                          "description": "Private container registry credentials for containers used by the sessions of the session pool.",
                          "type": "object",
                          "properties": {
                            "server": {
                              "description": "Container registry server.",
                              "type": "string"
                            },
                            "username": {
                              "description": "Container registry username.",
                              "type": "string"
                            },
                            "passwordSecretRef": {
                              "description": "The name of the secret that contains the registry login password",
                              "type": "string"
                            },
                            "identity": {
                              "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                              "type": "string"
                            }
                          }
                        },
                        "containers": {
                          "description": "List of container definitions for the sessions of the session pool.",
                          "type": "array",
                          "items": {
                            "description": "Container definitions for the sessions of the session pool.",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "ingress": {
                          "description": "Session pool ingress configuration.",
                          "type": "object",
                          "properties": {
                            "targetPort": {
                              "format": "int32",
                              "description": "Target port in containers for traffic from ingress",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "sessionNetworkConfiguration": {
                      "description": "The network configuration of the sessions in the session pool.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Network status for the sessions.",
                          "type": "string",
                          "enum": [
                            "EgressEnabled",
                            "EgressDisabled"
                          ],
                          "x-ms-enum": {
                            "name": "SessionNetworkStatus",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "poolManagementEndpoint": {
                      "description": "The endpoint to manage the pool.",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the session pool.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "SessionPoolProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "managedIdentitySettings": {
                      "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                      "type": "array",
                      "items": {
                        "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                        "type": "object",
                        "required": [
                          "identity"
                        ],
                        "properties": {
                          "identity": {
                            "description": "The resource ID of a user-assigned managed identity that is assigned to the Session Pool, or 'system' for system-assigned identity.",
                            "type": "string"
                          },
                          "lifecycle": {
                            "description": "Use to select the lifecycle stages of a Session Pool during which the Managed Identity should be available.",
                            "enum": [
                              "None",
                              "Main"
                            ],
                            "type": "string",
                            "default": "None",
                            "x-ms-enum": {
                              "name": "IdentitySettingsLifeCycle",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "identity"
                      ]
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ContainerAppsSessionPools"
        ],
        "summary": "Update properties of a session pool",
        "description": "Patches a session pool using JSON merge patch",
        "operationId": "ContainerAppsSessionPools_Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "sessionPoolName",
            "in": "path",
            "description": "Name of the session pool.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "sessionPoolEnvelope",
            "in": "body",
            "description": "Properties used to create a session pool",
            "required": true,
            "schema": {
              "description": "Container App session pool updatable properties.",
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ],
                  "description": "Resource tags."
                },
                "identity": {
                  "description": "Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Session pool resource specific updatable properties.",
                  "type": "object",
                  "properties": {
                    "scaleConfiguration": {
                      "description": "The scale configuration of the session pool.",
                      "type": "object",
                      "properties": {
                        "maxConcurrentSessions": {
                          "description": "The maximum count of sessions at the same time.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "readySessionInstances": {
                          "description": "The minimum count of ready session instances.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "secrets": {
                      "description": "The secrets of the session pool.",
                      "type": "array",
                      "items": {
                        "description": "Secret definition.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Secret Name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Secret Value.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "dynamicPoolConfiguration": {
                      "description": "The pool configuration if the poolManagementType is dynamic.",
                      "type": "object",
                      "properties": {
                        "lifecycleConfiguration": {
                          "description": "The lifecycle configuration of a session in the dynamic session pool",
                          "type": "object",
                          "properties": {
                            "lifecycleType": {
                              "description": "The lifecycle type of the session pool.",
                              "enum": [
                                "Timed",
                                "OnContainerExit"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "LifecycleType",
                                "modelAsString": true
                              }
                            },
                            "cooldownPeriodInSeconds": {
                              "description": "The cooldown period of a session in seconds when the lifecycle type is 'Timed'.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "maxAlivePeriodInSeconds": {
                              "description": "The maximum alive period of a session in seconds when the lifecycle type is 'OnContainerExit'.",
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      }
                    },
                    "customContainerTemplate": {
                      "description": "The custom container configuration if the containerType is CustomContainer.",
                      "type": "object",
                      "properties": {
                        "registryCredentials": {
                          "description": "Private container registry credentials for containers used by the sessions of the session pool.",
                          "type": "object",
                          "properties": {
                            "server": {
                              "description": "Container registry server.",
                              "type": "string"
                            },
                            "username": {
                              "description": "Container registry username.",
                              "type": "string"
                            },
                            "passwordSecretRef": {
                              "description": "The name of the secret that contains the registry login password",
                              "type": "string"
                            },
                            "identity": {
                              "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                              "type": "string"
                            }
                          }
                        },
                        "containers": {
                          "description": "List of container definitions for the sessions of the session pool.",
                          "type": "array",
                          "items": {
                            "description": "Container definitions for the sessions of the session pool.",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "ingress": {
                          "description": "Session pool ingress configuration.",
                          "type": "object",
                          "properties": {
                            "targetPort": {
                              "format": "int32",
                              "description": "Target port in containers for traffic from ingress",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "sessionNetworkConfiguration": {
                      "description": "The network configuration of the sessions in the session pool.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Network status for the sessions.",
                          "type": "string",
                          "enum": [
                            "EgressEnabled",
                            "EgressDisabled"
                          ],
                          "x-ms-enum": {
                            "name": "SessionNetworkStatus",
                            "modelAsString": true
                          }
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Update succeeded",
            "schema": {
              "description": "Container App session pool.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Container App session pool resource specific properties",
                  "type": "object",
                  "properties": {
                    "environmentId": {
                      "description": "Resource ID of the session pool's environment.",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.App/managedEnvironments"
                          }
                        ]
                      },
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "containerType": {
                      "description": "The container type of the sessions.",
                      "enum": [
                        "CustomContainer",
                        "PythonLTS"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ContainerType",
                        "modelAsString": true
                      }
                    },
                    "poolManagementType": {
                      "description": "The pool management type of the session pool.",
                      "enum": [
                        "Manual",
                        "Dynamic"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "PoolManagementType",
                        "modelAsString": true
                      }
                    },
                    "nodeCount": {
                      "description": "The number of nodes the session pool is using.",
                      "type": "integer",
                      "format": "int32",
                      "readOnly": true
                    },
                    "scaleConfiguration": {
                      "description": "The scale configuration of the session pool.",
                      "type": "object",
                      "properties": {
                        "maxConcurrentSessions": {
                          "description": "The maximum count of sessions at the same time.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "readySessionInstances": {
                          "description": "The minimum count of ready session instances.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "secrets": {
                      "description": "The secrets of the session pool.",
                      "type": "array",
                      "items": {
                        "description": "Secret definition.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Secret Name.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Secret Value.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "dynamicPoolConfiguration": {
                      "description": "The pool configuration if the poolManagementType is dynamic.",
                      "type": "object",
                      "properties": {
                        "lifecycleConfiguration": {
                          "description": "The lifecycle configuration of a session in the dynamic session pool",
                          "type": "object",
                          "properties": {
                            "lifecycleType": {
                              "description": "The lifecycle type of the session pool.",
                              "enum": [
                                "Timed",
                                "OnContainerExit"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "LifecycleType",
                                "modelAsString": true
                              }
                            },
                            "cooldownPeriodInSeconds": {
                              "description": "The cooldown period of a session in seconds when the lifecycle type is 'Timed'.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "maxAlivePeriodInSeconds": {
                              "description": "The maximum alive period of a session in seconds when the lifecycle type is 'OnContainerExit'.",
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      }
                    },
                    "customContainerTemplate": {
                      "description": "The custom container configuration if the containerType is CustomContainer.",
                      "type": "object",
                      "properties": {
                        "registryCredentials": {
                          "description": "Private container registry credentials for containers used by the sessions of the session pool.",
                          "type": "object",
                          "properties": {
                            "server": {
                              "description": "Container registry server.",
                              "type": "string"
                            },
                            "username": {
                              "description": "Container registry username.",
                              "type": "string"
                            },
                            "passwordSecretRef": {
                              "description": "The name of the secret that contains the registry login password",
                              "type": "string"
                            },
                            "identity": {
                              "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                              "type": "string"
                            }
                          }
                        },
                        "containers": {
                          "description": "List of container definitions for the sessions of the session pool.",
                          "type": "array",
                          "items": {
                            "description": "Container definitions for the sessions of the session pool.",
                            "type": "object",
                            "properties": {
                              "image": {
                                "description": "Container image tag.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Custom container name.",
                                "type": "string"
                              },
                              "command": {
                                "description": "Container start command.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "args": {
                                "description": "Container start command arguments.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "Container environment variables.",
                                "type": "array",
                                "items": {
                                  "description": "Container App container environment variable.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Environment variable name.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Non-secret environment variable value.",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "resources": {
                                "description": "Container resource requirements.",
                                "type": "object",
                                "properties": {
                                  "cpu": {
                                    "format": "double",
                                    "description": "Required CPU in cores, e.g. 0.5",
                                    "type": "number"
                                  },
                                  "memory": {
                                    "description": "Required memory, e.g. \"250Mb\"",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "ingress": {
                          "description": "Session pool ingress configuration.",
                          "type": "object",
                          "properties": {
                            "targetPort": {
                              "format": "int32",
                              "description": "Target port in containers for traffic from ingress",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "sessionNetworkConfiguration": {
                      "description": "The network configuration of the sessions in the session pool.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Network status for the sessions.",
                          "type": "string",
                          "enum": [
                            "EgressEnabled",
                            "EgressDisabled"
                          ],
                          "x-ms-enum": {
                            "name": "SessionNetworkStatus",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "poolManagementEndpoint": {
                      "description": "The endpoint to manage the pool.",
                      "type": "string",
                      "format": "uri",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provisioning state of the session pool.",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleting"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "SessionPoolProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "managedIdentitySettings": {
                      "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                      "type": "array",
                      "items": {
                        "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                        "type": "object",
                        "required": [
                          "identity"
                        ],
                        "properties": {
                          "identity": {
                            "description": "The resource ID of a user-assigned managed identity that is assigned to the Session Pool, or 'system' for system-assigned identity.",
                            "type": "string"
                          },
                          "lifecycle": {
                            "description": "Use to select the lifecycle stages of a Session Pool during which the Managed Identity should be available.",
                            "enum": [
                              "None",
                              "Main"
                            ],
                            "type": "string",
                            "default": "None",
                            "x-ms-enum": {
                              "name": "IdentitySettingsLifeCycle",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "identity"
                      ]
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "202": {
            "description": "Session pool update has been started.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContainerAppsSessionPools"
        ],
        "summary": "Delete a session pool.",
        "description": "Delete the session pool with the given name.",
        "operationId": "ContainerAppsSessionPools_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "sessionPoolName",
            "in": "path",
            "description": "Name of the session pool.",
            "required": true,
            "type": "string",
            "pattern": "^[a-z][a-z0-9]*$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Session pool delete has been started.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Session pool does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/sourcecontrols": {
      "get": {
        "tags": [
          "ContainerAppsSourceControls"
        ],
        "summary": "Get the Container App SourceControls in a given resource group.",
        "operationId": "ContainerAppsSourceControls_ListByContainerApp",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "SourceControl collection ARM resource.",
              "required": [
                "value"
              ],
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of resources.",
                  "type": "array",
                  "items": {
                    "description": "Container App SourceControl.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "SourceControl resource specific properties",
                        "type": "object",
                        "properties": {
                          "operationState": {
                            "description": "Current provisioning State of the operation",
                            "enum": [
                              "InProgress",
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "SourceControlOperationState",
                              "modelAsString": true
                            }
                          },
                          "repoUrl": {
                            "description": "The repo url which will be integrated to ContainerApp.",
                            "type": "string"
                          },
                          "branch": {
                            "description": "The branch which will trigger the auto deployment",
                            "type": "string"
                          },
                          "githubActionConfiguration": {
                            "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
                            "type": "object",
                            "properties": {
                              "registryInfo": {
                                "description": "Registry configurations.",
                                "type": "object",
                                "properties": {
                                  "registryUrl": {
                                    "description": "registry server Url.",
                                    "type": "string"
                                  },
                                  "registryUserName": {
                                    "description": "registry username.",
                                    "type": "string"
                                  },
                                  "registryPassword": {
                                    "description": "registry secret.",
                                    "type": "string",
                                    "x-ms-mutability": [
                                      "create",
                                      "update"
                                    ],
                                    "x-ms-secret": true
                                  }
                                }
                              },
                              "azureCredentials": {
                                "description": "AzureCredentials configurations.",
                                "type": "object",
                                "properties": {
                                  "clientId": {
                                    "description": "Client Id.",
                                    "type": "string",
                                    "x-ms-mutability": [
                                      "create",
                                      "update"
                                    ],
                                    "x-ms-secret": true
                                  },
                                  "clientSecret": {
                                    "description": "Client Secret.",
                                    "type": "string",
                                    "x-ms-mutability": [
                                      "create",
                                      "update"
                                    ],
                                    "x-ms-secret": true
                                  },
                                  "tenantId": {
                                    "description": "Tenant Id.",
                                    "type": "string",
                                    "x-ms-mutability": [
                                      "create",
                                      "update"
                                    ],
                                    "x-ms-secret": true
                                  },
                                  "kind": {
                                    "description": "Kind of auth github does for deploying the template",
                                    "type": "string",
                                    "x-ms-mutability": [
                                      "create",
                                      "update"
                                    ]
                                  },
                                  "subscriptionId": {
                                    "description": "Subscription Id.",
                                    "type": "string"
                                  }
                                }
                              },
                              "contextPath": {
                                "description": "Context path",
                                "type": "string"
                              },
                              "githubPersonalAccessToken": {
                                "description": "One time Github PAT to configure github environment",
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "x-ms-secret": true
                              },
                              "image": {
                                "description": "Image name",
                                "type": "string"
                              },
                              "publishType": {
                                "description": "Code or Image",
                                "type": "string"
                              },
                              "os": {
                                "description": "Operation system",
                                "type": "string"
                              },
                              "runtimeStack": {
                                "description": "Runtime stack",
                                "type": "string"
                              },
                              "runtimeVersion": {
                                "description": "Runtime version",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to next page of resources.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/containerApps/{containerAppName}/sourcecontrols/{sourceControlName}": {
      "get": {
        "tags": [
          "ContainerAppsSourceControls"
        ],
        "summary": "Get a SourceControl of a Container App.",
        "operationId": "ContainerAppsSourceControls_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControlName",
            "in": "path",
            "description": "Name of the Container App SourceControl.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container App SourceControl.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "SourceControl resource specific properties",
                  "type": "object",
                  "properties": {
                    "operationState": {
                      "description": "Current provisioning State of the operation",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "SourceControlOperationState",
                        "modelAsString": true
                      }
                    },
                    "repoUrl": {
                      "description": "The repo url which will be integrated to ContainerApp.",
                      "type": "string"
                    },
                    "branch": {
                      "description": "The branch which will trigger the auto deployment",
                      "type": "string"
                    },
                    "githubActionConfiguration": {
                      "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
                      "type": "object",
                      "properties": {
                        "registryInfo": {
                          "description": "Registry configurations.",
                          "type": "object",
                          "properties": {
                            "registryUrl": {
                              "description": "registry server Url.",
                              "type": "string"
                            },
                            "registryUserName": {
                              "description": "registry username.",
                              "type": "string"
                            },
                            "registryPassword": {
                              "description": "registry secret.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            }
                          }
                        },
                        "azureCredentials": {
                          "description": "AzureCredentials configurations.",
                          "type": "object",
                          "properties": {
                            "clientId": {
                              "description": "Client Id.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "clientSecret": {
                              "description": "Client Secret.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "tenantId": {
                              "description": "Tenant Id.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "kind": {
                              "description": "Kind of auth github does for deploying the template",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ]
                            },
                            "subscriptionId": {
                              "description": "Subscription Id.",
                              "type": "string"
                            }
                          }
                        },
                        "contextPath": {
                          "description": "Context path",
                          "type": "string"
                        },
                        "githubPersonalAccessToken": {
                          "description": "One time Github PAT to configure github environment",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        },
                        "image": {
                          "description": "Image name",
                          "type": "string"
                        },
                        "publishType": {
                          "description": "Code or Image",
                          "type": "string"
                        },
                        "os": {
                          "description": "Operation system",
                          "type": "string"
                        },
                        "runtimeStack": {
                          "description": "Runtime stack",
                          "type": "string"
                        },
                        "runtimeVersion": {
                          "description": "Runtime version",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ContainerAppsSourceControls"
        ],
        "summary": "Create or update the SourceControl for a Container App.",
        "description": "Create or update the SourceControl for a Container App.",
        "operationId": "ContainerAppsSourceControls_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControlName",
            "in": "path",
            "description": "Name of the Container App SourceControl.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControlEnvelope",
            "in": "body",
            "description": "Properties used to create a Container App SourceControl",
            "required": true,
            "schema": {
              "description": "Container App SourceControl.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "SourceControl resource specific properties",
                  "type": "object",
                  "properties": {
                    "operationState": {
                      "description": "Current provisioning State of the operation",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "SourceControlOperationState",
                        "modelAsString": true
                      }
                    },
                    "repoUrl": {
                      "description": "The repo url which will be integrated to ContainerApp.",
                      "type": "string"
                    },
                    "branch": {
                      "description": "The branch which will trigger the auto deployment",
                      "type": "string"
                    },
                    "githubActionConfiguration": {
                      "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
                      "type": "object",
                      "properties": {
                        "registryInfo": {
                          "description": "Registry configurations.",
                          "type": "object",
                          "properties": {
                            "registryUrl": {
                              "description": "registry server Url.",
                              "type": "string"
                            },
                            "registryUserName": {
                              "description": "registry username.",
                              "type": "string"
                            },
                            "registryPassword": {
                              "description": "registry secret.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            }
                          }
                        },
                        "azureCredentials": {
                          "description": "AzureCredentials configurations.",
                          "type": "object",
                          "properties": {
                            "clientId": {
                              "description": "Client Id.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "clientSecret": {
                              "description": "Client Secret.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "tenantId": {
                              "description": "Tenant Id.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "kind": {
                              "description": "Kind of auth github does for deploying the template",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ]
                            },
                            "subscriptionId": {
                              "description": "Subscription Id.",
                              "type": "string"
                            }
                          }
                        },
                        "contextPath": {
                          "description": "Context path",
                          "type": "string"
                        },
                        "githubPersonalAccessToken": {
                          "description": "One time Github PAT to configure github environment",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        },
                        "image": {
                          "description": "Image name",
                          "type": "string"
                        },
                        "publishType": {
                          "description": "Code or Image",
                          "type": "string"
                        },
                        "os": {
                          "description": "Operation system",
                          "type": "string"
                        },
                        "runtimeStack": {
                          "description": "Runtime stack",
                          "type": "string"
                        },
                        "runtimeVersion": {
                          "description": "Runtime version",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Container App SourceControl.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "SourceControl resource specific properties",
                  "type": "object",
                  "properties": {
                    "operationState": {
                      "description": "Current provisioning State of the operation",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "SourceControlOperationState",
                        "modelAsString": true
                      }
                    },
                    "repoUrl": {
                      "description": "The repo url which will be integrated to ContainerApp.",
                      "type": "string"
                    },
                    "branch": {
                      "description": "The branch which will trigger the auto deployment",
                      "type": "string"
                    },
                    "githubActionConfiguration": {
                      "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
                      "type": "object",
                      "properties": {
                        "registryInfo": {
                          "description": "Registry configurations.",
                          "type": "object",
                          "properties": {
                            "registryUrl": {
                              "description": "registry server Url.",
                              "type": "string"
                            },
                            "registryUserName": {
                              "description": "registry username.",
                              "type": "string"
                            },
                            "registryPassword": {
                              "description": "registry secret.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            }
                          }
                        },
                        "azureCredentials": {
                          "description": "AzureCredentials configurations.",
                          "type": "object",
                          "properties": {
                            "clientId": {
                              "description": "Client Id.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "clientSecret": {
                              "description": "Client Secret.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "tenantId": {
                              "description": "Tenant Id.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "kind": {
                              "description": "Kind of auth github does for deploying the template",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ]
                            },
                            "subscriptionId": {
                              "description": "Subscription Id.",
                              "type": "string"
                            }
                          }
                        },
                        "contextPath": {
                          "description": "Context path",
                          "type": "string"
                        },
                        "githubPersonalAccessToken": {
                          "description": "One time Github PAT to configure github environment",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        },
                        "image": {
                          "description": "Image name",
                          "type": "string"
                        },
                        "publishType": {
                          "description": "Code or Image",
                          "type": "string"
                        },
                        "os": {
                          "description": "Operation system",
                          "type": "string"
                        },
                        "runtimeStack": {
                          "description": "Runtime stack",
                          "type": "string"
                        },
                        "runtimeVersion": {
                          "description": "Runtime version",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Container App SourceControl.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "SourceControl resource specific properties",
                  "type": "object",
                  "properties": {
                    "operationState": {
                      "description": "Current provisioning State of the operation",
                      "enum": [
                        "InProgress",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "SourceControlOperationState",
                        "modelAsString": true
                      }
                    },
                    "repoUrl": {
                      "description": "The repo url which will be integrated to ContainerApp.",
                      "type": "string"
                    },
                    "branch": {
                      "description": "The branch which will trigger the auto deployment",
                      "type": "string"
                    },
                    "githubActionConfiguration": {
                      "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
                      "type": "object",
                      "properties": {
                        "registryInfo": {
                          "description": "Registry configurations.",
                          "type": "object",
                          "properties": {
                            "registryUrl": {
                              "description": "registry server Url.",
                              "type": "string"
                            },
                            "registryUserName": {
                              "description": "registry username.",
                              "type": "string"
                            },
                            "registryPassword": {
                              "description": "registry secret.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            }
                          }
                        },
                        "azureCredentials": {
                          "description": "AzureCredentials configurations.",
                          "type": "object",
                          "properties": {
                            "clientId": {
                              "description": "Client Id.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "clientSecret": {
                              "description": "Client Secret.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "tenantId": {
                              "description": "Tenant Id.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "kind": {
                              "description": "Kind of auth github does for deploying the template",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ]
                            },
                            "subscriptionId": {
                              "description": "Subscription Id.",
                              "type": "string"
                            }
                          }
                        },
                        "contextPath": {
                          "description": "Context path",
                          "type": "string"
                        },
                        "githubPersonalAccessToken": {
                          "description": "One time Github PAT to configure github environment",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        },
                        "image": {
                          "description": "Image name",
                          "type": "string"
                        },
                        "publishType": {
                          "description": "Code or Image",
                          "type": "string"
                        },
                        "os": {
                          "description": "Operation system",
                          "type": "string"
                        },
                        "runtimeStack": {
                          "description": "Runtime stack",
                          "type": "string"
                        },
                        "runtimeVersion": {
                          "description": "Runtime version",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ContainerAppsSourceControls"
        ],
        "summary": "Delete a Container App SourceControl.",
        "description": "Delete a Container App SourceControl.",
        "operationId": "ContainerAppsSourceControls_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "containerAppName",
            "in": "path",
            "description": "Name of the Container App.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceControlName",
            "in": "path",
            "description": "Name of the Container App SourceControl.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Container App SourceControl deleted successfully."
          },
          "202": {
            "description": "Delete operation is in progress."
          },
          "204": {
            "description": "Container App SourceControl does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/getCustomDomainVerificationId": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "description": "Get the verification id of a subscription used for verifying custom domains",
        "operationId": "GetCustomDomainVerificationId",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The custom domain verification id has been returned successfully.",
            "schema": {
              "description": "Custom domain verification Id of a subscription",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.App/locations/{location}/usages": {
      "get": {
        "tags": [
          "Usages"
        ],
        "operationId": "Usages_List",
        "description": "Gets, for the specified location, the current resource usage information as well as the limits under the subscription.",
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The location for which resource usage is queried.",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "unit": {
                        "type": "string",
                        "description": "An enum describing the unit of usage measurement.",
                        "enum": [
                          "Count"
                        ],
                        "x-ms-enum": {
                          "name": "UsageUnit",
                          "modelAsString": false
                        }
                      },
                      "currentValue": {
                        "type": "number",
                        "format": "float",
                        "description": "The current usage of the resource."
                      },
                      "limit": {
                        "type": "number",
                        "format": "float",
                        "description": "The maximum permitted usage of the resource."
                      },
                      "name": {
                        "description": "The name of the type of usage.",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The name of the resource."
                          },
                          "localizedValue": {
                            "type": "string",
                            "description": "The localized name of the resource."
                          }
                        }
                      }
                    },
                    "required": [
                      "unit",
                      "currentValue",
                      "limit",
                      "name"
                    ],
                    "description": "Describes Compute Resource Usage."
                  },
                  "x-ms-identifiers": [
                    "name"
                  ],
                  "description": "The list of compute resource usages."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of compute resource usage information. Call ListNext() with this to fetch the next page of compute resource usage information."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.App/managedEnvironments/{environmentName}/usages": {
      "get": {
        "tags": [
          "Usages"
        ],
        "operationId": "ManagedEnvironmentUsages_List",
        "description": "Gets the current usage information as well as the limits for environment.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "environmentName",
            "in": "path",
            "description": "Name of the Environment.",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._]+$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "unit": {
                        "type": "string",
                        "description": "An enum describing the unit of usage measurement.",
                        "enum": [
                          "Count"
                        ],
                        "x-ms-enum": {
                          "name": "UsageUnit",
                          "modelAsString": false
                        }
                      },
                      "currentValue": {
                        "type": "number",
                        "format": "float",
                        "description": "The current usage of the resource."
                      },
                      "limit": {
                        "type": "number",
                        "format": "float",
                        "description": "The maximum permitted usage of the resource."
                      },
                      "name": {
                        "description": "The name of the type of usage.",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The name of the resource."
                          },
                          "localizedValue": {
                            "type": "string",
                            "description": "The localized name of the resource."
                          }
                        }
                      }
                    },
                    "required": [
                      "unit",
                      "currentValue",
                      "limit",
                      "name"
                    ],
                    "description": "Describes Compute Resource Usage."
                  },
                  "x-ms-identifiers": [
                    "name"
                  ],
                  "description": "The list of compute resource usages."
                },
                "nextLink": {
                  "type": "string",
                  "description": "The URI to fetch the next page of compute resource usage information. Call ListNext() with this to fetch the next page of compute resource usage information."
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AuthConfigCollection": {
      "description": "AuthConfig collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "Configuration settings for the Azure ContainerApp Service Authentication / Authorization feature.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "AuthConfig resource specific properties",
                "type": "object",
                "properties": {
                  "platform": {
                    "description": "The configuration settings of the platform of ContainerApp Service Authentication/Authorization.",
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
                        "type": "boolean"
                      },
                      "runtimeVersion": {
                        "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
                        "type": "string"
                      }
                    }
                  },
                  "globalValidation": {
                    "description": "The configuration settings that determines the validation flow of users using  Service Authentication/Authorization.",
                    "type": "object",
                    "properties": {
                      "unauthenticatedClientAction": {
                        "description": "The action to take when an unauthenticated client attempts to access the app.",
                        "enum": [
                          "RedirectToLoginPage",
                          "AllowAnonymous",
                          "Return401",
                          "Return403"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "UnauthenticatedClientActionV2",
                          "modelAsString": false
                        }
                      },
                      "redirectToProvider": {
                        "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\".",
                        "type": "string"
                      },
                      "excludedPaths": {
                        "description": "The paths for which unauthenticated flow would not be redirected to the login page.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "identityProviders": {
                    "description": "The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.",
                    "type": "object",
                    "properties": {
                      "azureActiveDirectory": {
                        "description": "The configuration settings of the Azure Active directory provider.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "description": "<code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                            "type": "boolean"
                          },
                          "registration": {
                            "description": "The configuration settings of the Azure Active Directory app registration.",
                            "type": "object",
                            "properties": {
                              "openIdIssuer": {
                                "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
                                "type": "string"
                              },
                              "clientId": {
                                "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
                                "type": "string"
                              },
                              "clientSecretSettingName": {
                                "description": "The app setting name that contains the client secret of the relying party application.",
                                "type": "string"
                              },
                              "clientSecretCertificateThumbprint": {
                                "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional.",
                                "type": "string"
                              },
                              "clientSecretCertificateSubjectAlternativeName": {
                                "description": "An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
                                "type": "string"
                              },
                              "clientSecretCertificateIssuer": {
                                "description": "An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
                                "type": "string"
                              }
                            }
                          },
                          "login": {
                            "description": "The configuration settings of the Azure Active Directory login flow.",
                            "type": "object",
                            "properties": {
                              "loginParameters": {
                                "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "disableWWWAuthenticate": {
                                "description": "<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.",
                                "type": "boolean"
                              }
                            }
                          },
                          "validation": {
                            "description": "The configuration settings of the Azure Active Directory token validation flow.",
                            "type": "object",
                            "properties": {
                              "jwtClaimChecks": {
                                "description": "The configuration settings of the checks that should be made while validating the JWT Claims.",
                                "type": "object",
                                "properties": {
                                  "allowedGroups": {
                                    "description": "The list of the allowed groups.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "allowedClientApplications": {
                                    "description": "The list of the allowed client applications.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "allowedAudiences": {
                                "description": "The list of audiences that can make successful authentication/authorization requests.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "defaultAuthorizationPolicy": {
                                "description": "The configuration settings of the default authorization policy.",
                                "type": "object",
                                "properties": {
                                  "allowedPrincipals": {
                                    "description": "The configuration settings of the Azure Active Directory allowed principals.",
                                    "type": "object",
                                    "properties": {
                                      "groups": {
                                        "description": "The list of the allowed groups.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "identities": {
                                        "description": "The list of the allowed identities.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "allowedApplications": {
                                    "description": "The configuration settings of the Azure Active Directory allowed applications.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "isAutoProvisioned": {
                            "description": "Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.\nThis is an internal flag primarily intended to support the Azure Management Portal. Users should not\nread or write to this property.",
                            "type": "boolean"
                          }
                        }
                      },
                      "facebook": {
                        "description": "The configuration settings of the Facebook provider.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "description": "<code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                            "type": "boolean"
                          },
                          "registration": {
                            "description": "The configuration settings of the app registration for the Facebook provider.",
                            "type": "object",
                            "properties": {
                              "appId": {
                                "description": "The App ID of the app used for login.",
                                "type": "string"
                              },
                              "appSecretSettingName": {
                                "description": "The app setting name that contains the app secret.",
                                "type": "string"
                              }
                            }
                          },
                          "graphApiVersion": {
                            "description": "The version of the Facebook api to be used while logging in.",
                            "type": "string"
                          },
                          "login": {
                            "description": "The configuration settings of the login flow.",
                            "type": "object",
                            "properties": {
                              "scopes": {
                                "description": "A list of the scopes that should be requested while authenticating.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "gitHub": {
                        "description": "The configuration settings of the GitHub provider.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "description": "<code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                            "type": "boolean"
                          },
                          "registration": {
                            "description": "The configuration settings of the app registration for the GitHub provider.",
                            "type": "object",
                            "properties": {
                              "clientId": {
                                "description": "The Client ID of the app used for login.",
                                "type": "string"
                              },
                              "clientSecretSettingName": {
                                "description": "The app setting name that contains the client secret.",
                                "type": "string"
                              }
                            }
                          },
                          "login": {
                            "description": "The configuration settings of the login flow.",
                            "type": "object",
                            "properties": {
                              "scopes": {
                                "description": "A list of the scopes that should be requested while authenticating.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "google": {
                        "description": "The configuration settings of the Google provider.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "description": "<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                            "type": "boolean"
                          },
                          "registration": {
                            "description": "The configuration settings of the app registration for the Google provider.",
                            "type": "object",
                            "properties": {
                              "clientId": {
                                "description": "The Client ID of the app used for login.",
                                "type": "string"
                              },
                              "clientSecretSettingName": {
                                "description": "The app setting name that contains the client secret.",
                                "type": "string"
                              }
                            }
                          },
                          "login": {
                            "description": "The configuration settings of the login flow.",
                            "type": "object",
                            "properties": {
                              "scopes": {
                                "description": "A list of the scopes that should be requested while authenticating.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "validation": {
                            "description": "The configuration settings of the Azure Active Directory token validation flow.",
                            "type": "object",
                            "properties": {
                              "allowedAudiences": {
                                "description": "The configuration settings of the allowed list of audiences from which to validate the JWT token.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "twitter": {
                        "description": "The configuration settings of the Twitter provider.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "description": "<code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                            "type": "boolean"
                          },
                          "registration": {
                            "description": "The configuration settings of the app registration for the Twitter provider.",
                            "type": "object",
                            "properties": {
                              "consumerKey": {
                                "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
                                "type": "string"
                              },
                              "consumerSecretSettingName": {
                                "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "apple": {
                        "description": "The configuration settings of the Apple provider.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "description": "<code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                            "type": "boolean"
                          },
                          "registration": {
                            "description": "The configuration settings of the Apple registration.",
                            "type": "object",
                            "properties": {
                              "clientId": {
                                "description": "The Client ID of the app used for login.",
                                "type": "string"
                              },
                              "clientSecretSettingName": {
                                "description": "The app setting name that contains the client secret.",
                                "type": "string"
                              }
                            }
                          },
                          "login": {
                            "description": "The configuration settings of the login flow.",
                            "type": "object",
                            "properties": {
                              "scopes": {
                                "description": "A list of the scopes that should be requested while authenticating.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "azureStaticWebApps": {
                        "description": "The configuration settings of the Azure Static Web Apps provider.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "description": "<code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                            "type": "boolean"
                          },
                          "registration": {
                            "description": "The configuration settings of the Azure Static Web Apps registration.",
                            "type": "object",
                            "properties": {
                              "clientId": {
                                "description": "The Client ID of the app used for login.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "customOpenIdConnectProviders": {
                        "description": "The map of the name of the alias of each custom Open ID Connect provider to the\nconfiguration settings of the custom Open ID Connect provider.",
                        "type": "object",
                        "additionalProperties": {
                          "description": "The configuration settings of the custom Open ID Connect provider.",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "<code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.",
                              "type": "boolean"
                            },
                            "registration": {
                              "description": "The configuration settings of the app registration for the custom Open ID Connect provider.",
                              "type": "object",
                              "properties": {
                                "clientId": {
                                  "description": "The client id of the custom Open ID Connect provider.",
                                  "type": "string"
                                },
                                "clientCredential": {
                                  "description": "The authentication credentials of the custom Open ID Connect provider.",
                                  "type": "object",
                                  "properties": {
                                    "method": {
                                      "description": "The method that should be used to authenticate the user.",
                                      "enum": [
                                        "ClientSecretPost"
                                      ],
                                      "type": "string",
                                      "x-ms-enum": {
                                        "name": "ClientCredentialMethod",
                                        "modelAsString": false
                                      }
                                    },
                                    "clientSecretSettingName": {
                                      "description": "The app setting that contains the client secret for the custom Open ID Connect provider.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "openIdConnectConfiguration": {
                                  "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider.",
                                  "type": "object",
                                  "properties": {
                                    "authorizationEndpoint": {
                                      "description": "The endpoint to be used to make an authorization request.",
                                      "type": "string"
                                    },
                                    "tokenEndpoint": {
                                      "description": "The endpoint to be used to request a token.",
                                      "type": "string"
                                    },
                                    "issuer": {
                                      "description": "The endpoint that issues the token.",
                                      "type": "string"
                                    },
                                    "certificationUri": {
                                      "description": "The endpoint that provides the keys necessary to validate the token.",
                                      "type": "string"
                                    },
                                    "wellKnownOpenIdConfiguration": {
                                      "description": "The endpoint that contains all the configuration endpoints for the provider.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "login": {
                              "description": "The configuration settings of the login flow of the custom Open ID Connect provider.",
                              "type": "object",
                              "properties": {
                                "nameClaimType": {
                                  "description": "The name of the claim that contains the users name.",
                                  "type": "string"
                                },
                                "scopes": {
                                  "description": "A list of the scopes that should be requested while authenticating.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "login": {
                    "description": "The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.",
                    "type": "object",
                    "properties": {
                      "routes": {
                        "description": "The routes that specify the endpoints used for login and logout requests.",
                        "type": "object",
                        "properties": {
                          "logoutEndpoint": {
                            "description": "The endpoint at which a logout request should be made.",
                            "type": "string"
                          }
                        }
                      },
                      "tokenStore": {
                        "description": "The configuration settings of the token store.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
                            "type": "boolean"
                          },
                          "tokenRefreshExtensionHours": {
                            "format": "double",
                            "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
                            "type": "number"
                          },
                          "azureBlobStorage": {
                            "description": "The configuration settings of the storage of the tokens if blob storage is used.",
                            "type": "object",
                            "required": [
                              "sasUrlSettingName"
                            ],
                            "properties": {
                              "sasUrlSettingName": {
                                "description": "The name of the app secrets containing the SAS URL of the blob storage containing the tokens.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "preserveUrlFragmentsForLogins": {
                        "description": "<code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.",
                        "type": "boolean"
                      },
                      "allowedExternalRedirectUrls": {
                        "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "cookieExpiration": {
                        "description": "The configuration settings of the session cookie's expiration.",
                        "type": "object",
                        "properties": {
                          "convention": {
                            "description": "The convention used when determining the session cookie's expiration.",
                            "enum": [
                              "FixedTime",
                              "IdentityProviderDerived"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "CookieExpirationConvention",
                              "modelAsString": false
                            }
                          },
                          "timeToExpiration": {
                            "description": "The time after the request is made when the session cookie should expire.",
                            "type": "string"
                          }
                        }
                      },
                      "nonce": {
                        "description": "The configuration settings of the nonce used in the login flow.",
                        "type": "object",
                        "properties": {
                          "validateNonce": {
                            "description": "<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.",
                            "type": "boolean"
                          },
                          "nonceExpirationInterval": {
                            "description": "The time after the request is made when the nonce should expire.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "httpSettings": {
                    "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.",
                    "type": "object",
                    "properties": {
                      "requireHttps": {
                        "description": "<code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.",
                        "type": "boolean"
                      },
                      "routes": {
                        "description": "The configuration settings of the paths HTTP requests.",
                        "type": "object",
                        "properties": {
                          "apiPrefix": {
                            "description": "The prefix that should precede all the authentication/authorization paths.",
                            "type": "string"
                          }
                        }
                      },
                      "forwardProxy": {
                        "description": "The configuration settings of a forward proxy used to make the requests.",
                        "type": "object",
                        "properties": {
                          "convention": {
                            "description": "The convention used to determine the url of the request made.",
                            "enum": [
                              "NoProxy",
                              "Standard",
                              "Custom"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ForwardProxyConvention",
                              "modelAsString": false
                            }
                          },
                          "customHostHeaderName": {
                            "description": "The name of the header containing the host of the request.",
                            "type": "string"
                          },
                          "customProtoHeaderName": {
                            "description": "The name of the header containing the scheme of the request.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "encryptionSettings": {
                    "description": "The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization.",
                    "type": "object",
                    "properties": {
                      "containerAppAuthEncryptionSecretName": {
                        "description": "The secret name which is referenced for EncryptionKey.",
                        "type": "string"
                      },
                      "containerAppAuthSigningSecretName": {
                        "description": "The secret name which is referenced for SigningKey.",
                        "type": "string"
                      }
                    }
                  }
                },
                "x-ms-client-flatten": true
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AuthConfig": {
      "description": "Configuration settings for the Azure ContainerApp Service Authentication / Authorization feature.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "AuthConfig resource specific properties",
          "type": "object",
          "properties": {
            "platform": {
              "description": "The configuration settings of the platform of ContainerApp Service Authentication/Authorization.",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
                  "type": "boolean"
                },
                "runtimeVersion": {
                  "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
                  "type": "string"
                }
              }
            },
            "globalValidation": {
              "description": "The configuration settings that determines the validation flow of users using  Service Authentication/Authorization.",
              "type": "object",
              "properties": {
                "unauthenticatedClientAction": {
                  "description": "The action to take when an unauthenticated client attempts to access the app.",
                  "enum": [
                    "RedirectToLoginPage",
                    "AllowAnonymous",
                    "Return401",
                    "Return403"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "UnauthenticatedClientActionV2",
                    "modelAsString": false
                  }
                },
                "redirectToProvider": {
                  "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\".",
                  "type": "string"
                },
                "excludedPaths": {
                  "description": "The paths for which unauthenticated flow would not be redirected to the login page.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "identityProviders": {
              "description": "The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.",
              "type": "object",
              "properties": {
                "azureActiveDirectory": {
                  "description": "The configuration settings of the Azure Active directory provider.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "<code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                      "type": "boolean"
                    },
                    "registration": {
                      "description": "The configuration settings of the Azure Active Directory app registration.",
                      "type": "object",
                      "properties": {
                        "openIdIssuer": {
                          "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
                          "type": "string"
                        },
                        "clientId": {
                          "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name that contains the client secret of the relying party application.",
                          "type": "string"
                        },
                        "clientSecretCertificateThumbprint": {
                          "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional.",
                          "type": "string"
                        },
                        "clientSecretCertificateSubjectAlternativeName": {
                          "description": "An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
                          "type": "string"
                        },
                        "clientSecretCertificateIssuer": {
                          "description": "An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
                          "type": "string"
                        }
                      }
                    },
                    "login": {
                      "description": "The configuration settings of the Azure Active Directory login flow.",
                      "type": "object",
                      "properties": {
                        "loginParameters": {
                          "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "disableWWWAuthenticate": {
                          "description": "<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.",
                          "type": "boolean"
                        }
                      }
                    },
                    "validation": {
                      "description": "The configuration settings of the Azure Active Directory token validation flow.",
                      "type": "object",
                      "properties": {
                        "jwtClaimChecks": {
                          "description": "The configuration settings of the checks that should be made while validating the JWT Claims.",
                          "type": "object",
                          "properties": {
                            "allowedGroups": {
                              "description": "The list of the allowed groups.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "allowedClientApplications": {
                              "description": "The list of the allowed client applications.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "allowedAudiences": {
                          "description": "The list of audiences that can make successful authentication/authorization requests.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "defaultAuthorizationPolicy": {
                          "description": "The configuration settings of the default authorization policy.",
                          "type": "object",
                          "properties": {
                            "allowedPrincipals": {
                              "description": "The configuration settings of the Azure Active Directory allowed principals.",
                              "type": "object",
                              "properties": {
                                "groups": {
                                  "description": "The list of the allowed groups.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "identities": {
                                  "description": "The list of the allowed identities.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "allowedApplications": {
                              "description": "The configuration settings of the Azure Active Directory allowed applications.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "isAutoProvisioned": {
                      "description": "Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.\nThis is an internal flag primarily intended to support the Azure Management Portal. Users should not\nread or write to this property.",
                      "type": "boolean"
                    }
                  }
                },
                "facebook": {
                  "description": "The configuration settings of the Facebook provider.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "<code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                      "type": "boolean"
                    },
                    "registration": {
                      "description": "The configuration settings of the app registration for the Facebook provider.",
                      "type": "object",
                      "properties": {
                        "appId": {
                          "description": "The App ID of the app used for login.",
                          "type": "string"
                        },
                        "appSecretSettingName": {
                          "description": "The app setting name that contains the app secret.",
                          "type": "string"
                        }
                      }
                    },
                    "graphApiVersion": {
                      "description": "The version of the Facebook api to be used while logging in.",
                      "type": "string"
                    },
                    "login": {
                      "description": "The configuration settings of the login flow.",
                      "type": "object",
                      "properties": {
                        "scopes": {
                          "description": "A list of the scopes that should be requested while authenticating.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "gitHub": {
                  "description": "The configuration settings of the GitHub provider.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "<code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                      "type": "boolean"
                    },
                    "registration": {
                      "description": "The configuration settings of the app registration for the GitHub provider.",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The Client ID of the app used for login.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name that contains the client secret.",
                          "type": "string"
                        }
                      }
                    },
                    "login": {
                      "description": "The configuration settings of the login flow.",
                      "type": "object",
                      "properties": {
                        "scopes": {
                          "description": "A list of the scopes that should be requested while authenticating.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "google": {
                  "description": "The configuration settings of the Google provider.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                      "type": "boolean"
                    },
                    "registration": {
                      "description": "The configuration settings of the app registration for the Google provider.",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The Client ID of the app used for login.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name that contains the client secret.",
                          "type": "string"
                        }
                      }
                    },
                    "login": {
                      "description": "The configuration settings of the login flow.",
                      "type": "object",
                      "properties": {
                        "scopes": {
                          "description": "A list of the scopes that should be requested while authenticating.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "validation": {
                      "description": "The configuration settings of the Azure Active Directory token validation flow.",
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "The configuration settings of the allowed list of audiences from which to validate the JWT token.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "twitter": {
                  "description": "The configuration settings of the Twitter provider.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "<code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                      "type": "boolean"
                    },
                    "registration": {
                      "description": "The configuration settings of the app registration for the Twitter provider.",
                      "type": "object",
                      "properties": {
                        "consumerKey": {
                          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
                          "type": "string"
                        },
                        "consumerSecretSettingName": {
                          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "apple": {
                  "description": "The configuration settings of the Apple provider.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "<code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                      "type": "boolean"
                    },
                    "registration": {
                      "description": "The configuration settings of the Apple registration.",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The Client ID of the app used for login.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name that contains the client secret.",
                          "type": "string"
                        }
                      }
                    },
                    "login": {
                      "description": "The configuration settings of the login flow.",
                      "type": "object",
                      "properties": {
                        "scopes": {
                          "description": "A list of the scopes that should be requested while authenticating.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "azureStaticWebApps": {
                  "description": "The configuration settings of the Azure Static Web Apps provider.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "<code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
                      "type": "boolean"
                    },
                    "registration": {
                      "description": "The configuration settings of the Azure Static Web Apps registration.",
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The Client ID of the app used for login.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "customOpenIdConnectProviders": {
                  "description": "The map of the name of the alias of each custom Open ID Connect provider to the\nconfiguration settings of the custom Open ID Connect provider.",
                  "type": "object",
                  "additionalProperties": {
                    "description": "The configuration settings of the custom Open ID Connect provider.",
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "description": "<code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.",
                        "type": "boolean"
                      },
                      "registration": {
                        "description": "The configuration settings of the app registration for the custom Open ID Connect provider.",
                        "type": "object",
                        "properties": {
                          "clientId": {
                            "description": "The client id of the custom Open ID Connect provider.",
                            "type": "string"
                          },
                          "clientCredential": {
                            "description": "The authentication credentials of the custom Open ID Connect provider.",
                            "type": "object",
                            "properties": {
                              "method": {
                                "description": "The method that should be used to authenticate the user.",
                                "enum": [
                                  "ClientSecretPost"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "ClientCredentialMethod",
                                  "modelAsString": false
                                }
                              },
                              "clientSecretSettingName": {
                                "description": "The app setting that contains the client secret for the custom Open ID Connect provider.",
                                "type": "string"
                              }
                            }
                          },
                          "openIdConnectConfiguration": {
                            "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider.",
                            "type": "object",
                            "properties": {
                              "authorizationEndpoint": {
                                "description": "The endpoint to be used to make an authorization request.",
                                "type": "string"
                              },
                              "tokenEndpoint": {
                                "description": "The endpoint to be used to request a token.",
                                "type": "string"
                              },
                              "issuer": {
                                "description": "The endpoint that issues the token.",
                                "type": "string"
                              },
                              "certificationUri": {
                                "description": "The endpoint that provides the keys necessary to validate the token.",
                                "type": "string"
                              },
                              "wellKnownOpenIdConfiguration": {
                                "description": "The endpoint that contains all the configuration endpoints for the provider.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "login": {
                        "description": "The configuration settings of the login flow of the custom Open ID Connect provider.",
                        "type": "object",
                        "properties": {
                          "nameClaimType": {
                            "description": "The name of the claim that contains the users name.",
                            "type": "string"
                          },
                          "scopes": {
                            "description": "A list of the scopes that should be requested while authenticating.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "login": {
              "description": "The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.",
              "type": "object",
              "properties": {
                "routes": {
                  "description": "The routes that specify the endpoints used for login and logout requests.",
                  "type": "object",
                  "properties": {
                    "logoutEndpoint": {
                      "description": "The endpoint at which a logout request should be made.",
                      "type": "string"
                    }
                  }
                },
                "tokenStore": {
                  "description": "The configuration settings of the token store.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
                      "type": "boolean"
                    },
                    "tokenRefreshExtensionHours": {
                      "format": "double",
                      "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
                      "type": "number"
                    },
                    "azureBlobStorage": {
                      "description": "The configuration settings of the storage of the tokens if blob storage is used.",
                      "type": "object",
                      "required": [
                        "sasUrlSettingName"
                      ],
                      "properties": {
                        "sasUrlSettingName": {
                          "description": "The name of the app secrets containing the SAS URL of the blob storage containing the tokens.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "preserveUrlFragmentsForLogins": {
                  "description": "<code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.",
                  "type": "boolean"
                },
                "allowedExternalRedirectUrls": {
                  "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "cookieExpiration": {
                  "description": "The configuration settings of the session cookie's expiration.",
                  "type": "object",
                  "properties": {
                    "convention": {
                      "description": "The convention used when determining the session cookie's expiration.",
                      "enum": [
                        "FixedTime",
                        "IdentityProviderDerived"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "CookieExpirationConvention",
                        "modelAsString": false
                      }
                    },
                    "timeToExpiration": {
                      "description": "The time after the request is made when the session cookie should expire.",
                      "type": "string"
                    }
                  }
                },
                "nonce": {
                  "description": "The configuration settings of the nonce used in the login flow.",
                  "type": "object",
                  "properties": {
                    "validateNonce": {
                      "description": "<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.",
                      "type": "boolean"
                    },
                    "nonceExpirationInterval": {
                      "description": "The time after the request is made when the nonce should expire.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "httpSettings": {
              "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.",
              "type": "object",
              "properties": {
                "requireHttps": {
                  "description": "<code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.",
                  "type": "boolean"
                },
                "routes": {
                  "description": "The configuration settings of the paths HTTP requests.",
                  "type": "object",
                  "properties": {
                    "apiPrefix": {
                      "description": "The prefix that should precede all the authentication/authorization paths.",
                      "type": "string"
                    }
                  }
                },
                "forwardProxy": {
                  "description": "The configuration settings of a forward proxy used to make the requests.",
                  "type": "object",
                  "properties": {
                    "convention": {
                      "description": "The convention used to determine the url of the request made.",
                      "enum": [
                        "NoProxy",
                        "Standard",
                        "Custom"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ForwardProxyConvention",
                        "modelAsString": false
                      }
                    },
                    "customHostHeaderName": {
                      "description": "The name of the header containing the host of the request.",
                      "type": "string"
                    },
                    "customProtoHeaderName": {
                      "description": "The name of the header containing the scheme of the request.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "encryptionSettings": {
              "description": "The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization.",
              "type": "object",
              "properties": {
                "containerAppAuthEncryptionSecretName": {
                  "description": "The secret name which is referenced for EncryptionKey.",
                  "type": "string"
                },
                "containerAppAuthSigningSecretName": {
                  "description": "The secret name which is referenced for SigningKey.",
                  "type": "string"
                }
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AuthPlatform": {
      "description": "The configuration settings of the platform of ContainerApp Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "runtimeVersion": {
          "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
          "type": "string"
        }
      }
    },
    "GlobalValidation": {
      "description": "The configuration settings that determines the validation flow of users using ContainerApp Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "unauthenticatedClientAction": {
          "description": "The action to take when an unauthenticated client attempts to access the app.",
          "enum": [
            "RedirectToLoginPage",
            "AllowAnonymous",
            "Return401",
            "Return403"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "UnauthenticatedClientActionV2",
            "modelAsString": false
          }
        },
        "redirectToProvider": {
          "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\".",
          "type": "string"
        },
        "excludedPaths": {
          "description": "The paths for which unauthenticated flow would not be redirected to the login page.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "HttpSettings": {
      "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "requireHttps": {
          "description": "<code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "routes": {
          "description": "The configuration settings of the paths HTTP requests.",
          "type": "object",
          "properties": {
            "apiPrefix": {
              "description": "The prefix that should precede all the authentication/authorization paths.",
              "type": "string"
            }
          }
        },
        "forwardProxy": {
          "description": "The configuration settings of a forward proxy used to make the requests.",
          "type": "object",
          "properties": {
            "convention": {
              "description": "The convention used to determine the url of the request made.",
              "enum": [
                "NoProxy",
                "Standard",
                "Custom"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ForwardProxyConvention",
                "modelAsString": false
              }
            },
            "customHostHeaderName": {
              "description": "The name of the header containing the host of the request.",
              "type": "string"
            },
            "customProtoHeaderName": {
              "description": "The name of the header containing the scheme of the request.",
              "type": "string"
            }
          }
        }
      }
    },
    "EncryptionSettings": {
      "description": "The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "containerAppAuthEncryptionSecretName": {
          "description": "The secret name which is referenced for EncryptionKey.",
          "type": "string"
        },
        "containerAppAuthSigningSecretName": {
          "description": "The secret name which is referenced for SigningKey.",
          "type": "string"
        }
      }
    },
    "HttpSettingsRoutes": {
      "description": "The configuration settings of the paths HTTP requests.",
      "type": "object",
      "properties": {
        "apiPrefix": {
          "description": "The prefix that should precede all the authentication/authorization paths.",
          "type": "string"
        }
      }
    },
    "ForwardProxy": {
      "description": "The configuration settings of a forward proxy used to make the requests.",
      "type": "object",
      "properties": {
        "convention": {
          "description": "The convention used to determine the url of the request made.",
          "enum": [
            "NoProxy",
            "Standard",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ForwardProxyConvention",
            "modelAsString": false
          }
        },
        "customHostHeaderName": {
          "description": "The name of the header containing the host of the request.",
          "type": "string"
        },
        "customProtoHeaderName": {
          "description": "The name of the header containing the scheme of the request.",
          "type": "string"
        }
      }
    },
    "Login": {
      "description": "The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "routes": {
          "description": "The routes that specify the endpoints used for login and logout requests.",
          "type": "object",
          "properties": {
            "logoutEndpoint": {
              "description": "The endpoint at which a logout request should be made.",
              "type": "string"
            }
          }
        },
        "tokenStore": {
          "description": "The configuration settings of the token store.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
              "type": "boolean"
            },
            "tokenRefreshExtensionHours": {
              "format": "double",
              "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
              "type": "number"
            },
            "azureBlobStorage": {
              "description": "The configuration settings of the storage of the tokens if blob storage is used.",
              "type": "object",
              "required": [
                "sasUrlSettingName"
              ],
              "properties": {
                "sasUrlSettingName": {
                  "description": "The name of the app secrets containing the SAS URL of the blob storage containing the tokens.",
                  "type": "string"
                }
              }
            }
          }
        },
        "preserveUrlFragmentsForLogins": {
          "description": "<code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "allowedExternalRedirectUrls": {
          "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cookieExpiration": {
          "description": "The configuration settings of the session cookie's expiration.",
          "type": "object",
          "properties": {
            "convention": {
              "description": "The convention used when determining the session cookie's expiration.",
              "enum": [
                "FixedTime",
                "IdentityProviderDerived"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "CookieExpirationConvention",
                "modelAsString": false
              }
            },
            "timeToExpiration": {
              "description": "The time after the request is made when the session cookie should expire.",
              "type": "string"
            }
          }
        },
        "nonce": {
          "description": "The configuration settings of the nonce used in the login flow.",
          "type": "object",
          "properties": {
            "validateNonce": {
              "description": "<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.",
              "type": "boolean"
            },
            "nonceExpirationInterval": {
              "description": "The time after the request is made when the nonce should expire.",
              "type": "string"
            }
          }
        }
      }
    },
    "LoginRoutes": {
      "description": "The routes that specify the endpoints used for login and logout requests.",
      "type": "object",
      "properties": {
        "logoutEndpoint": {
          "description": "The endpoint at which a logout request should be made.",
          "type": "string"
        }
      }
    },
    "TokenStore": {
      "description": "The configuration settings of the token store.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
          "type": "boolean"
        },
        "tokenRefreshExtensionHours": {
          "format": "double",
          "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
          "type": "number"
        },
        "azureBlobStorage": {
          "description": "The configuration settings of the storage of the tokens if blob storage is used.",
          "type": "object",
          "required": [
            "sasUrlSettingName"
          ],
          "properties": {
            "sasUrlSettingName": {
              "description": "The name of the app secrets containing the SAS URL of the blob storage containing the tokens.",
              "type": "string"
            }
          }
        }
      }
    },
    "BlobStorageTokenStore": {
      "description": "The configuration settings of the storage of the tokens if blob storage is used.",
      "type": "object",
      "required": [
        "sasUrlSettingName"
      ],
      "properties": {
        "sasUrlSettingName": {
          "description": "The name of the app secrets containing the SAS URL of the blob storage containing the tokens.",
          "type": "string"
        }
      }
    },
    "CookieExpiration": {
      "description": "The configuration settings of the session cookie's expiration.",
      "type": "object",
      "properties": {
        "convention": {
          "description": "The convention used when determining the session cookie's expiration.",
          "enum": [
            "FixedTime",
            "IdentityProviderDerived"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CookieExpirationConvention",
            "modelAsString": false
          }
        },
        "timeToExpiration": {
          "description": "The time after the request is made when the session cookie should expire.",
          "type": "string"
        }
      }
    },
    "Nonce": {
      "description": "The configuration settings of the nonce used in the login flow.",
      "type": "object",
      "properties": {
        "validateNonce": {
          "description": "<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "nonceExpirationInterval": {
          "description": "The time after the request is made when the nonce should expire.",
          "type": "string"
        }
      }
    },
    "IdentityProviders": {
      "description": "The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.",
      "type": "object",
      "properties": {
        "azureActiveDirectory": {
          "description": "The configuration settings of the Azure Active directory provider.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "<code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
              "type": "boolean"
            },
            "registration": {
              "description": "The configuration settings of the Azure Active Directory app registration.",
              "type": "object",
              "properties": {
                "openIdIssuer": {
                  "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
                  "type": "string"
                },
                "clientId": {
                  "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
                  "type": "string"
                },
                "clientSecretSettingName": {
                  "description": "The app setting name that contains the client secret of the relying party application.",
                  "type": "string"
                },
                "clientSecretCertificateThumbprint": {
                  "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional.",
                  "type": "string"
                },
                "clientSecretCertificateSubjectAlternativeName": {
                  "description": "An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
                  "type": "string"
                },
                "clientSecretCertificateIssuer": {
                  "description": "An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
                  "type": "string"
                }
              }
            },
            "login": {
              "description": "The configuration settings of the Azure Active Directory login flow.",
              "type": "object",
              "properties": {
                "loginParameters": {
                  "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "disableWWWAuthenticate": {
                  "description": "<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.",
                  "type": "boolean"
                }
              }
            },
            "validation": {
              "description": "The configuration settings of the Azure Active Directory token validation flow.",
              "type": "object",
              "properties": {
                "jwtClaimChecks": {
                  "description": "The configuration settings of the checks that should be made while validating the JWT Claims.",
                  "type": "object",
                  "properties": {
                    "allowedGroups": {
                      "description": "The list of the allowed groups.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowedClientApplications": {
                      "description": "The list of the allowed client applications.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "allowedAudiences": {
                  "description": "The list of audiences that can make successful authentication/authorization requests.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "defaultAuthorizationPolicy": {
                  "description": "The configuration settings of the default authorization policy.",
                  "type": "object",
                  "properties": {
                    "allowedPrincipals": {
                      "description": "The configuration settings of the Azure Active Directory allowed principals.",
                      "type": "object",
                      "properties": {
                        "groups": {
                          "description": "The list of the allowed groups.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "identities": {
                          "description": "The list of the allowed identities.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "allowedApplications": {
                      "description": "The configuration settings of the Azure Active Directory allowed applications.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "isAutoProvisioned": {
              "description": "Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.\nThis is an internal flag primarily intended to support the Azure Management Portal. Users should not\nread or write to this property.",
              "type": "boolean"
            }
          }
        },
        "facebook": {
          "description": "The configuration settings of the Facebook provider.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "<code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
              "type": "boolean"
            },
            "registration": {
              "description": "The configuration settings of the app registration for the Facebook provider.",
              "type": "object",
              "properties": {
                "appId": {
                  "description": "The App ID of the app used for login.",
                  "type": "string"
                },
                "appSecretSettingName": {
                  "description": "The app setting name that contains the app secret.",
                  "type": "string"
                }
              }
            },
            "graphApiVersion": {
              "description": "The version of the Facebook api to be used while logging in.",
              "type": "string"
            },
            "login": {
              "description": "The configuration settings of the login flow.",
              "type": "object",
              "properties": {
                "scopes": {
                  "description": "A list of the scopes that should be requested while authenticating.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "gitHub": {
          "description": "The configuration settings of the GitHub provider.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "<code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
              "type": "boolean"
            },
            "registration": {
              "description": "The configuration settings of the app registration for the GitHub provider.",
              "type": "object",
              "properties": {
                "clientId": {
                  "description": "The Client ID of the app used for login.",
                  "type": "string"
                },
                "clientSecretSettingName": {
                  "description": "The app setting name that contains the client secret.",
                  "type": "string"
                }
              }
            },
            "login": {
              "description": "The configuration settings of the login flow.",
              "type": "object",
              "properties": {
                "scopes": {
                  "description": "A list of the scopes that should be requested while authenticating.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "google": {
          "description": "The configuration settings of the Google provider.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
              "type": "boolean"
            },
            "registration": {
              "description": "The configuration settings of the app registration for the Google provider.",
              "type": "object",
              "properties": {
                "clientId": {
                  "description": "The Client ID of the app used for login.",
                  "type": "string"
                },
                "clientSecretSettingName": {
                  "description": "The app setting name that contains the client secret.",
                  "type": "string"
                }
              }
            },
            "login": {
              "description": "The configuration settings of the login flow.",
              "type": "object",
              "properties": {
                "scopes": {
                  "description": "A list of the scopes that should be requested while authenticating.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "validation": {
              "description": "The configuration settings of the Azure Active Directory token validation flow.",
              "type": "object",
              "properties": {
                "allowedAudiences": {
                  "description": "The configuration settings of the allowed list of audiences from which to validate the JWT token.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "twitter": {
          "description": "The configuration settings of the Twitter provider.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "<code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
              "type": "boolean"
            },
            "registration": {
              "description": "The configuration settings of the app registration for the Twitter provider.",
              "type": "object",
              "properties": {
                "consumerKey": {
                  "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
                  "type": "string"
                },
                "consumerSecretSettingName": {
                  "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in.",
                  "type": "string"
                }
              }
            }
          }
        },
        "apple": {
          "description": "The configuration settings of the Apple provider.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "<code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
              "type": "boolean"
            },
            "registration": {
              "description": "The configuration settings of the Apple registration.",
              "type": "object",
              "properties": {
                "clientId": {
                  "description": "The Client ID of the app used for login.",
                  "type": "string"
                },
                "clientSecretSettingName": {
                  "description": "The app setting name that contains the client secret.",
                  "type": "string"
                }
              }
            },
            "login": {
              "description": "The configuration settings of the login flow.",
              "type": "object",
              "properties": {
                "scopes": {
                  "description": "A list of the scopes that should be requested while authenticating.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "azureStaticWebApps": {
          "description": "The configuration settings of the Azure Static Web Apps provider.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "<code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
              "type": "boolean"
            },
            "registration": {
              "description": "The configuration settings of the Azure Static Web Apps registration.",
              "type": "object",
              "properties": {
                "clientId": {
                  "description": "The Client ID of the app used for login.",
                  "type": "string"
                }
              }
            }
          }
        },
        "customOpenIdConnectProviders": {
          "description": "The map of the name of the alias of each custom Open ID Connect provider to the\nconfiguration settings of the custom Open ID Connect provider.",
          "type": "object",
          "additionalProperties": {
            "description": "The configuration settings of the custom Open ID Connect provider.",
            "type": "object",
            "properties": {
              "enabled": {
                "description": "<code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.",
                "type": "boolean"
              },
              "registration": {
                "description": "The configuration settings of the app registration for the custom Open ID Connect provider.",
                "type": "object",
                "properties": {
                  "clientId": {
                    "description": "The client id of the custom Open ID Connect provider.",
                    "type": "string"
                  },
                  "clientCredential": {
                    "description": "The authentication credentials of the custom Open ID Connect provider.",
                    "type": "object",
                    "properties": {
                      "method": {
                        "description": "The method that should be used to authenticate the user.",
                        "enum": [
                          "ClientSecretPost"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "ClientCredentialMethod",
                          "modelAsString": false
                        }
                      },
                      "clientSecretSettingName": {
                        "description": "The app setting that contains the client secret for the custom Open ID Connect provider.",
                        "type": "string"
                      }
                    }
                  },
                  "openIdConnectConfiguration": {
                    "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider.",
                    "type": "object",
                    "properties": {
                      "authorizationEndpoint": {
                        "description": "The endpoint to be used to make an authorization request.",
                        "type": "string"
                      },
                      "tokenEndpoint": {
                        "description": "The endpoint to be used to request a token.",
                        "type": "string"
                      },
                      "issuer": {
                        "description": "The endpoint that issues the token.",
                        "type": "string"
                      },
                      "certificationUri": {
                        "description": "The endpoint that provides the keys necessary to validate the token.",
                        "type": "string"
                      },
                      "wellKnownOpenIdConfiguration": {
                        "description": "The endpoint that contains all the configuration endpoints for the provider.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "login": {
                "description": "The configuration settings of the login flow of the custom Open ID Connect provider.",
                "type": "object",
                "properties": {
                  "nameClaimType": {
                    "description": "The name of the claim that contains the users name.",
                    "type": "string"
                  },
                  "scopes": {
                    "description": "A list of the scopes that should be requested while authenticating.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "AzureActiveDirectory": {
      "description": "The configuration settings of the Azure Active directory provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "description": "The configuration settings of the Azure Active Directory app registration.",
          "type": "object",
          "properties": {
            "openIdIssuer": {
              "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
              "type": "string"
            },
            "clientId": {
              "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
              "type": "string"
            },
            "clientSecretSettingName": {
              "description": "The app setting name that contains the client secret of the relying party application.",
              "type": "string"
            },
            "clientSecretCertificateThumbprint": {
              "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional.",
              "type": "string"
            },
            "clientSecretCertificateSubjectAlternativeName": {
              "description": "An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
              "type": "string"
            },
            "clientSecretCertificateIssuer": {
              "description": "An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
              "type": "string"
            }
          }
        },
        "login": {
          "description": "The configuration settings of the Azure Active Directory login flow.",
          "type": "object",
          "properties": {
            "loginParameters": {
              "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "disableWWWAuthenticate": {
              "description": "<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.",
              "type": "boolean"
            }
          }
        },
        "validation": {
          "description": "The configuration settings of the Azure Active Directory token validation flow.",
          "type": "object",
          "properties": {
            "jwtClaimChecks": {
              "description": "The configuration settings of the checks that should be made while validating the JWT Claims.",
              "type": "object",
              "properties": {
                "allowedGroups": {
                  "description": "The list of the allowed groups.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedClientApplications": {
                  "description": "The list of the allowed client applications.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "allowedAudiences": {
              "description": "The list of audiences that can make successful authentication/authorization requests.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defaultAuthorizationPolicy": {
              "description": "The configuration settings of the default authorization policy.",
              "type": "object",
              "properties": {
                "allowedPrincipals": {
                  "description": "The configuration settings of the Azure Active Directory allowed principals.",
                  "type": "object",
                  "properties": {
                    "groups": {
                      "description": "The list of the allowed groups.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "identities": {
                      "description": "The list of the allowed identities.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "allowedApplications": {
                  "description": "The configuration settings of the Azure Active Directory allowed applications.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "isAutoProvisioned": {
          "description": "Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.\nThis is an internal flag primarily intended to support the Azure Management Portal. Users should not\nread or write to this property.",
          "type": "boolean"
        }
      }
    },
    "AzureActiveDirectoryLogin": {
      "description": "The configuration settings of the Azure Active Directory login flow.",
      "type": "object",
      "properties": {
        "loginParameters": {
          "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disableWWWAuthenticate": {
          "description": "<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.",
          "type": "boolean"
        }
      }
    },
    "AzureActiveDirectoryRegistration": {
      "description": "The configuration settings of the Azure Active Directory app registration.",
      "type": "object",
      "properties": {
        "openIdIssuer": {
          "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
          "type": "string"
        },
        "clientId": {
          "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
          "type": "string"
        },
        "clientSecretSettingName": {
          "description": "The app setting name that contains the client secret of the relying party application.",
          "type": "string"
        },
        "clientSecretCertificateThumbprint": {
          "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional.",
          "type": "string"
        },
        "clientSecretCertificateSubjectAlternativeName": {
          "description": "An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
          "type": "string"
        },
        "clientSecretCertificateIssuer": {
          "description": "An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
          "type": "string"
        }
      }
    },
    "AzureActiveDirectoryValidation": {
      "description": "The configuration settings of the Azure Active Directory token validation flow.",
      "type": "object",
      "properties": {
        "jwtClaimChecks": {
          "description": "The configuration settings of the checks that should be made while validating the JWT Claims.",
          "type": "object",
          "properties": {
            "allowedGroups": {
              "description": "The list of the allowed groups.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "allowedClientApplications": {
              "description": "The list of the allowed client applications.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "allowedAudiences": {
          "description": "The list of audiences that can make successful authentication/authorization requests.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultAuthorizationPolicy": {
          "description": "The configuration settings of the default authorization policy.",
          "type": "object",
          "properties": {
            "allowedPrincipals": {
              "description": "The configuration settings of the Azure Active Directory allowed principals.",
              "type": "object",
              "properties": {
                "groups": {
                  "description": "The list of the allowed groups.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "identities": {
                  "description": "The list of the allowed identities.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "allowedApplications": {
              "description": "The configuration settings of the Azure Active Directory allowed applications.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "JwtClaimChecks": {
      "description": "The configuration settings of the checks that should be made while validating the JWT Claims.",
      "type": "object",
      "properties": {
        "allowedGroups": {
          "description": "The list of the allowed groups.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedClientApplications": {
          "description": "The list of the allowed client applications.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DefaultAuthorizationPolicy": {
      "description": "The configuration settings of the Azure Active Directory default authorization policy.",
      "type": "object",
      "properties": {
        "allowedPrincipals": {
          "description": "The configuration settings of the Azure Active Directory allowed principals.",
          "type": "object",
          "properties": {
            "groups": {
              "description": "The list of the allowed groups.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "identities": {
              "description": "The list of the allowed identities.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "allowedApplications": {
          "description": "The configuration settings of the Azure Active Directory allowed applications.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AllowedPrincipals": {
      "description": "The configuration settings of the Azure Active Directory allowed principals.",
      "type": "object",
      "properties": {
        "groups": {
          "description": "The list of the allowed groups.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "identities": {
          "description": "The list of the allowed identities.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Facebook": {
      "description": "The configuration settings of the Facebook provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "description": "The configuration settings of the app registration for the Facebook provider.",
          "type": "object",
          "properties": {
            "appId": {
              "description": "The App ID of the app used for login.",
              "type": "string"
            },
            "appSecretSettingName": {
              "description": "The app setting name that contains the app secret.",
              "type": "string"
            }
          }
        },
        "graphApiVersion": {
          "description": "The version of the Facebook api to be used while logging in.",
          "type": "string"
        },
        "login": {
          "description": "The configuration settings of the login flow.",
          "type": "object",
          "properties": {
            "scopes": {
              "description": "A list of the scopes that should be requested while authenticating.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "AppRegistration": {
      "description": "The configuration settings of the app registration for providers that have app ids and app secrets",
      "type": "object",
      "properties": {
        "appId": {
          "description": "The App ID of the app used for login.",
          "type": "string"
        },
        "appSecretSettingName": {
          "description": "The app setting name that contains the app secret.",
          "type": "string"
        }
      }
    },
    "LoginScopes": {
      "description": "The configuration settings of the login flow, including the scopes that should be requested.",
      "type": "object",
      "properties": {
        "scopes": {
          "description": "A list of the scopes that should be requested while authenticating.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GitHub": {
      "description": "The configuration settings of the GitHub provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "description": "The configuration settings of the app registration for the GitHub provider.",
          "type": "object",
          "properties": {
            "clientId": {
              "description": "The Client ID of the app used for login.",
              "type": "string"
            },
            "clientSecretSettingName": {
              "description": "The app setting name that contains the client secret.",
              "type": "string"
            }
          }
        },
        "login": {
          "description": "The configuration settings of the login flow.",
          "type": "object",
          "properties": {
            "scopes": {
              "description": "A list of the scopes that should be requested while authenticating.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ClientRegistration": {
      "description": "The configuration settings of the app registration for providers that have client ids and client secrets",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The Client ID of the app used for login.",
          "type": "string"
        },
        "clientSecretSettingName": {
          "description": "The app setting name that contains the client secret.",
          "type": "string"
        }
      }
    },
    "Google": {
      "description": "The configuration settings of the Google provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "description": "The configuration settings of the app registration for the Google provider.",
          "type": "object",
          "properties": {
            "clientId": {
              "description": "The Client ID of the app used for login.",
              "type": "string"
            },
            "clientSecretSettingName": {
              "description": "The app setting name that contains the client secret.",
              "type": "string"
            }
          }
        },
        "login": {
          "description": "The configuration settings of the login flow.",
          "type": "object",
          "properties": {
            "scopes": {
              "description": "A list of the scopes that should be requested while authenticating.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "validation": {
          "description": "The configuration settings of the Azure Active Directory token validation flow.",
          "type": "object",
          "properties": {
            "allowedAudiences": {
              "description": "The configuration settings of the allowed list of audiences from which to validate the JWT token.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "AllowedAudiencesValidation": {
      "description": "The configuration settings of the Allowed Audiences validation flow.",
      "type": "object",
      "properties": {
        "allowedAudiences": {
          "description": "The configuration settings of the allowed list of audiences from which to validate the JWT token.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Twitter": {
      "description": "The configuration settings of the Twitter provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "description": "The configuration settings of the app registration for the Twitter provider.",
          "type": "object",
          "properties": {
            "consumerKey": {
              "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
              "type": "string"
            },
            "consumerSecretSettingName": {
              "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in.",
              "type": "string"
            }
          }
        }
      }
    },
    "TwitterRegistration": {
      "description": "The configuration settings of the app registration for the Twitter provider.",
      "type": "object",
      "properties": {
        "consumerKey": {
          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
          "type": "string"
        },
        "consumerSecretSettingName": {
          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in.",
          "type": "string"
        }
      }
    },
    "Apple": {
      "description": "The configuration settings of the Apple provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "description": "The configuration settings of the Apple registration.",
          "type": "object",
          "properties": {
            "clientId": {
              "description": "The Client ID of the app used for login.",
              "type": "string"
            },
            "clientSecretSettingName": {
              "description": "The app setting name that contains the client secret.",
              "type": "string"
            }
          }
        },
        "login": {
          "description": "The configuration settings of the login flow.",
          "type": "object",
          "properties": {
            "scopes": {
              "description": "A list of the scopes that should be requested while authenticating.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "AppleRegistration": {
      "description": "The configuration settings of the registration for the Apple provider",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The Client ID of the app used for login.",
          "type": "string"
        },
        "clientSecretSettingName": {
          "description": "The app setting name that contains the client secret.",
          "type": "string"
        }
      }
    },
    "AzureStaticWebApps": {
      "description": "The configuration settings of the Azure Static Web Apps provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "description": "The configuration settings of the Azure Static Web Apps registration.",
          "type": "object",
          "properties": {
            "clientId": {
              "description": "The Client ID of the app used for login.",
              "type": "string"
            }
          }
        }
      }
    },
    "AzureStaticWebAppsRegistration": {
      "description": "The configuration settings of the registration for the Azure Static Web Apps provider",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The Client ID of the app used for login.",
          "type": "string"
        }
      }
    },
    "CustomOpenIdConnectProvider": {
      "description": "The configuration settings of the custom Open ID Connect provider.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.",
          "type": "boolean"
        },
        "registration": {
          "description": "The configuration settings of the app registration for the custom Open ID Connect provider.",
          "type": "object",
          "properties": {
            "clientId": {
              "description": "The client id of the custom Open ID Connect provider.",
              "type": "string"
            },
            "clientCredential": {
              "description": "The authentication credentials of the custom Open ID Connect provider.",
              "type": "object",
              "properties": {
                "method": {
                  "description": "The method that should be used to authenticate the user.",
                  "enum": [
                    "ClientSecretPost"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "ClientCredentialMethod",
                    "modelAsString": false
                  }
                },
                "clientSecretSettingName": {
                  "description": "The app setting that contains the client secret for the custom Open ID Connect provider.",
                  "type": "string"
                }
              }
            },
            "openIdConnectConfiguration": {
              "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider.",
              "type": "object",
              "properties": {
                "authorizationEndpoint": {
                  "description": "The endpoint to be used to make an authorization request.",
                  "type": "string"
                },
                "tokenEndpoint": {
                  "description": "The endpoint to be used to request a token.",
                  "type": "string"
                },
                "issuer": {
                  "description": "The endpoint that issues the token.",
                  "type": "string"
                },
                "certificationUri": {
                  "description": "The endpoint that provides the keys necessary to validate the token.",
                  "type": "string"
                },
                "wellKnownOpenIdConfiguration": {
                  "description": "The endpoint that contains all the configuration endpoints for the provider.",
                  "type": "string"
                }
              }
            }
          }
        },
        "login": {
          "description": "The configuration settings of the login flow of the custom Open ID Connect provider.",
          "type": "object",
          "properties": {
            "nameClaimType": {
              "description": "The name of the claim that contains the users name.",
              "type": "string"
            },
            "scopes": {
              "description": "A list of the scopes that should be requested while authenticating.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "OpenIdConnectRegistration": {
      "description": "The configuration settings of the app registration for the custom Open ID Connect provider.",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "The client id of the custom Open ID Connect provider.",
          "type": "string"
        },
        "clientCredential": {
          "description": "The authentication credentials of the custom Open ID Connect provider.",
          "type": "object",
          "properties": {
            "method": {
              "description": "The method that should be used to authenticate the user.",
              "enum": [
                "ClientSecretPost"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ClientCredentialMethod",
                "modelAsString": false
              }
            },
            "clientSecretSettingName": {
              "description": "The app setting that contains the client secret for the custom Open ID Connect provider.",
              "type": "string"
            }
          }
        },
        "openIdConnectConfiguration": {
          "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider.",
          "type": "object",
          "properties": {
            "authorizationEndpoint": {
              "description": "The endpoint to be used to make an authorization request.",
              "type": "string"
            },
            "tokenEndpoint": {
              "description": "The endpoint to be used to request a token.",
              "type": "string"
            },
            "issuer": {
              "description": "The endpoint that issues the token.",
              "type": "string"
            },
            "certificationUri": {
              "description": "The endpoint that provides the keys necessary to validate the token.",
              "type": "string"
            },
            "wellKnownOpenIdConfiguration": {
              "description": "The endpoint that contains all the configuration endpoints for the provider.",
              "type": "string"
            }
          }
        }
      }
    },
    "OpenIdConnectClientCredential": {
      "description": "The authentication client credentials of the custom Open ID Connect provider.",
      "type": "object",
      "properties": {
        "method": {
          "description": "The method that should be used to authenticate the user.",
          "enum": [
            "ClientSecretPost"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ClientCredentialMethod",
            "modelAsString": false
          }
        },
        "clientSecretSettingName": {
          "description": "The app setting that contains the client secret for the custom Open ID Connect provider.",
          "type": "string"
        }
      }
    },
    "OpenIdConnectConfig": {
      "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider.",
      "type": "object",
      "properties": {
        "authorizationEndpoint": {
          "description": "The endpoint to be used to make an authorization request.",
          "type": "string"
        },
        "tokenEndpoint": {
          "description": "The endpoint to be used to request a token.",
          "type": "string"
        },
        "issuer": {
          "description": "The endpoint that issues the token.",
          "type": "string"
        },
        "certificationUri": {
          "description": "The endpoint that provides the keys necessary to validate the token.",
          "type": "string"
        },
        "wellKnownOpenIdConfiguration": {
          "description": "The endpoint that contains all the configuration endpoints for the provider.",
          "type": "string"
        }
      }
    },
    "OpenIdConnectLogin": {
      "description": "The configuration settings of the login flow of the custom Open ID Connect provider.",
      "type": "object",
      "properties": {
        "nameClaimType": {
          "description": "The name of the claim that contains the users name.",
          "type": "string"
        },
        "scopes": {
          "description": "A list of the scopes that should be requested while authenticating.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AvailableWorkloadProfile": {
      "description": "A workload profile with specific hardware configure to run container apps.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "type": "string",
          "description": "Region of the workload profile."
        },
        "properties": {
          "description": "Revision resource specific properties",
          "type": "object",
          "properties": {
            "category": {
              "description": "Used to categorize workload profiles.",
              "type": "string"
            },
            "applicability": {
              "type": "string",
              "description": "indicates whether the profile is default for the location.",
              "enum": [
                "LocationDefault",
                "Custom"
              ],
              "x-ms-enum": {
                "name": "Applicability",
                "modelAsString": true
              }
            },
            "cores": {
              "type": "integer",
              "format": "int32",
              "description": "Number of cores in CPU."
            },
            "memoryGiB": {
              "type": "integer",
              "format": "int32",
              "description": "Memory in GiB."
            },
            "gpus": {
              "type": "integer",
              "format": "int32",
              "description": "Number of GPUs."
            },
            "displayName": {
              "type": "string",
              "description": "The everyday name of the workload profile."
            }
          }
        }
      }
    },
    "AvailableWorkloadProfilesCollection": {
      "description": "Collection of available workload profiles in the location.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of workload profiles.",
          "type": "array",
          "items": {
            "description": "A workload profile with specific hardware configure to run container apps.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "location": {
                "type": "string",
                "description": "Region of the workload profile."
              },
              "properties": {
                "description": "Revision resource specific properties",
                "type": "object",
                "properties": {
                  "category": {
                    "description": "Used to categorize workload profiles.",
                    "type": "string"
                  },
                  "applicability": {
                    "type": "string",
                    "description": "indicates whether the profile is default for the location.",
                    "enum": [
                      "LocationDefault",
                      "Custom"
                    ],
                    "x-ms-enum": {
                      "name": "Applicability",
                      "modelAsString": true
                    }
                  },
                  "cores": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of cores in CPU."
                  },
                  "memoryGiB": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Memory in GiB."
                  },
                  "gpus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of GPUs."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The everyday name of the workload profile."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BillingMeter": {
      "description": "Billing meter.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "type": "string",
          "description": "Region for the billing meter."
        },
        "properties": {
          "description": "Revision resource specific properties",
          "type": "object",
          "properties": {
            "category": {
              "description": "Used to categorize billing meters.",
              "type": "string"
            },
            "meterType": {
              "type": "string",
              "description": "Billing meter type."
            },
            "displayName": {
              "type": "string",
              "description": "The everyday name of the billing meter."
            }
          }
        }
      }
    },
    "BillingMeterCollection": {
      "description": "Collection of billing meters.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of billing meters.",
          "type": "array",
          "items": {
            "description": "Billing meter.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "location": {
                "type": "string",
                "description": "Region for the billing meter."
              },
              "properties": {
                "description": "Revision resource specific properties",
                "type": "object",
                "properties": {
                  "category": {
                    "description": "Used to categorize billing meters.",
                    "type": "string"
                  },
                  "meterType": {
                    "type": "string",
                    "description": "Billing meter type."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The everyday name of the billing meter."
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConnectedEnvironment": {
      "description": "An environment for Kubernetes cluster specialized for web workloads by Azure App Service",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "type": "object",
          "description": "The complex type of the extended location.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "The type of the extended location.",
              "type": "string",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationTypes",
                "modelAsString": true
              }
            }
          }
        },
        "properties": {
          "description": "ConnectedEnvironment resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Kubernetes Environment.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Waiting",
                "InitializationInProgress",
                "InfrastructureSetupInProgress",
                "InfrastructureSetupComplete",
                "ScheduledForDelete"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ConnectedEnvironmentProvisioningState",
                "modelAsString": true
              }
            },
            "deploymentErrors": {
              "description": "Any errors that occurred during deployment or deployment validation",
              "type": "string",
              "readOnly": true
            },
            "defaultDomain": {
              "description": "Default Domain Name for the cluster",
              "type": "string",
              "readOnly": true
            },
            "staticIp": {
              "description": "Static IP of the connectedEnvironment",
              "type": "string"
            },
            "daprAIConnectionString": {
              "type": "string",
              "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
              "x-ms-secret": true
            },
            "customDomainConfiguration": {
              "description": "Custom domain configuration for the environment",
              "type": "object",
              "properties": {
                "customDomainVerificationId": {
                  "description": "Id used to verify domain name ownership",
                  "type": "string",
                  "readOnly": true
                },
                "dnsSuffix": {
                  "type": "string",
                  "description": "Dns suffix for the environment domain",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "certificateKeyVaultProperties": {
                  "description": "Certificate stored in Azure Key Vault.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                      "type": "string"
                    },
                    "keyVaultUrl": {
                      "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                      "type": "string",
                      "format": "uri"
                    }
                  }
                },
                "certificateValue": {
                  "format": "byte",
                  "description": "PFX or PEM blob",
                  "type": "string",
                  "x-ms-secret": true
                },
                "certificatePassword": {
                  "description": "Certificate password",
                  "type": "string",
                  "x-ms-secret": true
                },
                "expirationDate": {
                  "format": "date-time",
                  "description": "Certificate expiration date.",
                  "type": "string",
                  "readOnly": true
                },
                "thumbprint": {
                  "description": "Certificate thumbprint.",
                  "type": "string",
                  "readOnly": true
                },
                "subjectName": {
                  "description": "Subject name of the certificate.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ConnectedEnvironmentCollection": {
      "description": "Collection of connectedEnvironments",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "An environment for Kubernetes cluster specialized for web workloads by Azure App Service",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "extendedLocation": {
                "type": "object",
                "description": "The complex type of the extended location.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "The type of the extended location.",
                    "type": "string",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationTypes",
                      "modelAsString": true
                    }
                  }
                }
              },
              "properties": {
                "description": "ConnectedEnvironment resource specific properties",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the Kubernetes Environment.",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Waiting",
                      "InitializationInProgress",
                      "InfrastructureSetupInProgress",
                      "InfrastructureSetupComplete",
                      "ScheduledForDelete"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ConnectedEnvironmentProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "deploymentErrors": {
                    "description": "Any errors that occurred during deployment or deployment validation",
                    "type": "string",
                    "readOnly": true
                  },
                  "defaultDomain": {
                    "description": "Default Domain Name for the cluster",
                    "type": "string",
                    "readOnly": true
                  },
                  "staticIp": {
                    "description": "Static IP of the connectedEnvironment",
                    "type": "string"
                  },
                  "daprAIConnectionString": {
                    "type": "string",
                    "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                    "x-ms-secret": true
                  },
                  "customDomainConfiguration": {
                    "description": "Custom domain configuration for the environment",
                    "type": "object",
                    "properties": {
                      "customDomainVerificationId": {
                        "description": "Id used to verify domain name ownership",
                        "type": "string",
                        "readOnly": true
                      },
                      "dnsSuffix": {
                        "type": "string",
                        "description": "Dns suffix for the environment domain",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "certificateKeyVaultProperties": {
                        "description": "Certificate stored in Azure Key Vault.",
                        "type": "object",
                        "properties": {
                          "identity": {
                            "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                            "type": "string"
                          },
                          "keyVaultUrl": {
                            "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                            "type": "string",
                            "format": "uri"
                          }
                        }
                      },
                      "certificateValue": {
                        "format": "byte",
                        "description": "PFX or PEM blob",
                        "type": "string",
                        "x-ms-secret": true
                      },
                      "certificatePassword": {
                        "description": "Certificate password",
                        "type": "string",
                        "x-ms-secret": true
                      },
                      "expirationDate": {
                        "format": "date-time",
                        "description": "Certificate expiration date.",
                        "type": "string",
                        "readOnly": true
                      },
                      "thumbprint": {
                        "description": "Certificate thumbprint.",
                        "type": "string",
                        "readOnly": true
                      },
                      "subjectName": {
                        "description": "Subject name of the certificate.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  }
                },
                "x-ms-client-flatten": true
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConnectedEnvironmentPatchResource": {
      "type": "object",
      "description": "Connected environment patch properties",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        }
      }
    },
    "ConnectedEnvironmentStoragesCollection": {
      "description": "Collection of Storage for Environments",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of storage resources.",
          "type": "array",
          "items": {
            "description": "Storage resource for connectedEnvironment.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Storage properties",
                "type": "object",
                "properties": {
                  "azureFile": {
                    "description": "Azure file properties",
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "Storage account name for azure file.",
                        "type": "string"
                      },
                      "accountKey": {
                        "description": "Storage account key for azure file.",
                        "type": "string",
                        "x-ms-secret": true
                      },
                      "accountKeyVaultProperties": {
                        "description": "Storage account key stored as an Azure Key Vault secret.",
                        "type": "object",
                        "properties": {
                          "identity": {
                            "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                            "type": "string"
                          },
                          "keyVaultUrl": {
                            "description": "URL pointing to the Azure Key Vault secret.",
                            "type": "string"
                          }
                        }
                      },
                      "accessMode": {
                        "description": "Access mode for storage",
                        "enum": [
                          "ReadOnly",
                          "ReadWrite"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "AccessMode",
                          "modelAsString": true
                        }
                      },
                      "shareName": {
                        "description": "Azure file share name.",
                        "type": "string"
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the storage.",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "InProgress",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ConnectedEnvironmentStorageProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "deploymentErrors": {
                    "description": "Any errors that occurred during deployment or deployment validation",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "ConnectedEnvironmentStorage": {
      "description": "Storage resource for connectedEnvironment.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Storage properties",
          "type": "object",
          "properties": {
            "azureFile": {
              "description": "Azure file properties",
              "type": "object",
              "properties": {
                "accountName": {
                  "description": "Storage account name for azure file.",
                  "type": "string"
                },
                "accountKey": {
                  "description": "Storage account key for azure file.",
                  "type": "string",
                  "x-ms-secret": true
                },
                "accountKeyVaultProperties": {
                  "description": "Storage account key stored as an Azure Key Vault secret.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                      "type": "string"
                    },
                    "keyVaultUrl": {
                      "description": "URL pointing to the Azure Key Vault secret.",
                      "type": "string"
                    }
                  }
                },
                "accessMode": {
                  "description": "Access mode for storage",
                  "enum": [
                    "ReadOnly",
                    "ReadWrite"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "AccessMode",
                    "modelAsString": true
                  }
                },
                "shareName": {
                  "description": "Azure file share name.",
                  "type": "string"
                }
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the storage.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "InProgress",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ConnectedEnvironmentStorageProvisioningState",
                "modelAsString": true
              }
            },
            "deploymentErrors": {
              "description": "Any errors that occurred during deployment or deployment validation",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "Configuration": {
      "description": "Non versioned Container App configuration properties that define the mutable settings of a Container app",
      "type": "object",
      "properties": {
        "secrets": {
          "description": "Collection of secrets used by a Container app",
          "type": "array",
          "items": {
            "description": "Secret definition.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Secret Name.",
                "type": "string"
              },
              "value": {
                "description": "Secret Value.",
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "update"
                ],
                "x-ms-secret": true
              },
              "identity": {
                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                "type": "string"
              },
              "keyVaultUrl": {
                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "activeRevisionsMode": {
          "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
          "enum": [
            "Multiple",
            "Single"
          ],
          "type": "string",
          "default": "Single",
          "x-ms-enum": {
            "name": "ActiveRevisionsMode",
            "modelAsString": true
          }
        },
        "ingress": {
          "description": "Ingress configurations.",
          "type": "object",
          "properties": {
            "fqdn": {
              "description": "Hostname.",
              "type": "string",
              "readOnly": true
            },
            "external": {
              "description": "Bool indicating if app exposes an external http endpoint",
              "default": false,
              "type": "boolean"
            },
            "targetPort": {
              "format": "int32",
              "description": "Target Port in containers for traffic from ingress",
              "type": "integer"
            },
            "exposedPort": {
              "format": "int32",
              "description": "Exposed Port in containers for TCP traffic from ingress",
              "type": "integer"
            },
            "transport": {
              "description": "Ingress transport protocol",
              "enum": [
                "auto",
                "http",
                "http2",
                "tcp"
              ],
              "type": "string",
              "default": "auto",
              "x-ms-enum": {
                "name": "IngressTransportMethod",
                "modelAsString": true
              }
            },
            "traffic": {
              "description": "Traffic weights for app's revisions",
              "type": "array",
              "items": {
                "description": "Traffic weight assigned to a revision",
                "type": "object",
                "properties": {
                  "revisionName": {
                    "description": "Name of a revision",
                    "type": "string"
                  },
                  "weight": {
                    "format": "int32",
                    "description": "Traffic weight assigned to a revision",
                    "type": "integer"
                  },
                  "latestRevision": {
                    "description": "Indicates that the traffic weight belongs to a latest stable revision",
                    "default": false,
                    "type": "boolean"
                  },
                  "label": {
                    "description": "Associates a traffic label with a revision",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "revisionName"
              ]
            },
            "customDomains": {
              "description": "custom domain bindings for Container Apps' hostnames.",
              "type": "array",
              "items": {
                "description": "Custom Domain of a Container App",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Hostname.",
                    "type": "string"
                  },
                  "bindingType": {
                    "description": "Custom Domain binding type.",
                    "enum": [
                      "Disabled",
                      "SniEnabled",
                      "Auto"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "bindingType",
                      "modelAsString": true
                    }
                  },
                  "certificateId": {
                    "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "allowInsecure": {
              "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
              "type": "boolean",
              "default": false
            },
            "ipSecurityRestrictions": {
              "description": "Rules to restrict incoming IP address.",
              "type": "array",
              "items": {
                "description": "Rule to restrict incoming IP address.",
                "type": "object",
                "required": [
                  "name",
                  "ipAddressRange",
                  "action"
                ],
                "properties": {
                  "name": {
                    "description": "Name for the IP restriction rule.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
                    "type": "string"
                  },
                  "ipAddressRange": {
                    "description": "CIDR notation to match incoming IP address",
                    "type": "string"
                  },
                  "action": {
                    "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
                    "enum": [
                      "Allow",
                      "Deny"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "action",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "stickySessions": {
              "description": "Sticky Sessions for Single Revision Mode",
              "type": "object",
              "properties": {
                "affinity": {
                  "description": "Sticky Session Affinity",
                  "enum": [
                    "sticky",
                    "none"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "affinity",
                    "modelAsString": true
                  }
                }
              }
            },
            "clientCertificateMode": {
              "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
              "enum": [
                "ignore",
                "accept",
                "require"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "IngressClientCertificateMode",
                "modelAsString": true
              }
            },
            "corsPolicy": {
              "description": "CORS policy for container app",
              "type": "object",
              "required": [
                "allowedOrigins"
              ],
              "properties": {
                "allowedOrigins": {
                  "description": "Specifies the content for the access-control-allow-origins header",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedMethods": {
                  "description": "Specifies the content for the access-control-allow-methods header",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedHeaders": {
                  "description": "Specifies the content for the access-control-allow-headers header",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exposeHeaders": {
                  "description": "Specifies the content for the access-control-expose-headers header ",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "maxAge": {
                  "format": "int32",
                  "description": "Specifies the content for the access-control-max-age header",
                  "type": "integer"
                },
                "allowCredentials": {
                  "description": "Specifies whether the resource allows credentials",
                  "type": "boolean"
                }
              }
            },
            "additionalPortMappings": {
              "description": "Settings to expose additional ports on container app",
              "type": "array",
              "items": {
                "description": "Port mappings of container app ingress",
                "type": "object",
                "required": [
                  "external",
                  "targetPort"
                ],
                "properties": {
                  "external": {
                    "description": "Specifies whether the app port is accessible outside of the environment",
                    "type": "boolean"
                  },
                  "targetPort": {
                    "format": "int32",
                    "description": "Specifies the port user's container listens on",
                    "type": "integer"
                  },
                  "exposedPort": {
                    "format": "int32",
                    "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
                    "type": "integer"
                  }
                }
              },
              "x-ms-identifiers": [
                "targetPort"
              ]
            }
          }
        },
        "registries": {
          "description": "Collection of private container registry credentials for containers used by the Container app",
          "type": "array",
          "items": {
            "description": "Container App Private Registry",
            "type": "object",
            "properties": {
              "server": {
                "description": "Container Registry Server",
                "type": "string"
              },
              "username": {
                "description": "Container Registry Username",
                "type": "string"
              },
              "passwordSecretRef": {
                "description": "The name of the Secret that contains the registry login password",
                "type": "string"
              },
              "identity": {
                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "server"
          ]
        },
        "dapr": {
          "description": "Dapr configuration for the Container App.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Boolean indicating if the Dapr side car is enabled",
              "type": "boolean",
              "default": false
            },
            "appId": {
              "description": "Dapr application identifier",
              "type": "string"
            },
            "appProtocol": {
              "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
              "enum": [
                "http",
                "grpc"
              ],
              "type": "string",
              "default": "http",
              "x-ms-enum": {
                "name": "appProtocol",
                "modelAsString": true
              }
            },
            "appPort": {
              "format": "int32",
              "description": "Tells Dapr which port your application is listening on",
              "type": "integer"
            },
            "httpReadBufferSize": {
              "type": "integer",
              "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
              "format": "int32"
            },
            "httpMaxRequestSize": {
              "type": "integer",
              "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
              "format": "int32"
            },
            "logLevel": {
              "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
              "enum": [
                "info",
                "debug",
                "warn",
                "error"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "logLevel",
                "modelAsString": true
              }
            },
            "enableApiLogging": {
              "description": "Enables API logging for the Dapr sidecar",
              "type": "boolean"
            },
            "appHealth": {
              "description": "Dapr application health check configuration",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Boolean indicating if the health probe is enabled",
                  "type": "boolean"
                },
                "path": {
                  "description": "Path for the health probe",
                  "type": "string"
                },
                "probeIntervalSeconds": {
                  "description": "Interval for the health probe in seconds",
                  "format": "int32",
                  "type": "integer",
                  "minimum": 1
                },
                "probeTimeoutMilliseconds": {
                  "description": "Timeout for the health probe in milliseconds",
                  "format": "int32",
                  "type": "integer",
                  "minimum": 1
                },
                "threshold": {
                  "description": "Threshold for the health probe",
                  "format": "int32",
                  "type": "integer",
                  "minimum": 1
                }
              }
            },
            "maxConcurrency": {
              "description": "Maximum number of concurrent requests, events handled by the Dapr sidecar",
              "format": "int32",
              "type": "integer"
            }
          }
        },
        "runtime": {
          "description": "App runtime configuration for the Container App.",
          "type": "object",
          "properties": {
            "java": {
              "description": "Java app configuration",
              "type": "object",
              "properties": {
                "enableMetrics": {
                  "description": "Enable jmx core metrics for the java app",
                  "type": "boolean"
                }
              }
            }
          }
        },
        "maxInactiveRevisions": {
          "format": "int32",
          "description": "Optional. Max inactive revisions a Container App can have.",
          "type": "integer"
        },
        "service": {
          "description": "Container App to be a dev Container App Service",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "description": "Dev ContainerApp service type",
              "type": "string"
            }
          }
        },
        "identitySettings": {
          "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
          "type": "array",
          "items": {
            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
            "type": "object",
            "required": [
              "identity"
            ],
            "properties": {
              "identity": {
                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                "type": "string"
              },
              "lifecycle": {
                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                "enum": [
                  "Init",
                  "Main",
                  "None",
                  "All"
                ],
                "type": "string",
                "default": "All",
                "x-ms-enum": {
                  "name": "IdentitySettingsLifeCycle",
                  "modelAsString": true
                }
              }
            }
          },
          "x-ms-identifiers": [
            "identity"
          ]
        }
      }
    },
    "ContainerApp": {
      "description": "Container App.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "type": "object",
          "description": "The complex type of the extended location.",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the extended location."
            },
            "type": {
              "description": "The type of the extended location.",
              "type": "string",
              "enum": [
                "CustomLocation"
              ],
              "x-ms-enum": {
                "name": "ExtendedLocationTypes",
                "modelAsString": true
              }
            }
          }
        },
        "identity": {
          "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "managedBy": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
        },
        "kind": {
          "type": "string",
          "enum": [
            "workflowapp",
            "functionapp"
          ],
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-enum": {
            "name": "kind",
            "modelAsString": true
          },
          "description": "Metadata to represent the container app kind, representing if a container app is workflowapp or functionapp."
        },
        "properties": {
          "description": "ContainerApp resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Container App.",
              "enum": [
                "InProgress",
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ContainerAppProvisioningState",
                "modelAsString": true
              }
            },
            "runningStatus": {
              "description": "Running status of the Container App.",
              "enum": [
                "Progressing",
                "Running",
                "Stopped",
                "Suspended",
                "Ready"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ContainerAppRunningStatus",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Progressing",
                    "description": "Container App is transitioning between Stopped and Running states."
                  },
                  {
                    "value": "Running",
                    "description": "Container App is in Running state."
                  },
                  {
                    "value": "Stopped",
                    "description": "Container App is in Stopped state."
                  },
                  {
                    "value": "Suspended",
                    "description": "Container App Job is in Suspended state."
                  },
                  {
                    "value": "Ready",
                    "description": "Container App Job is in Ready state."
                  }
                ]
              }
            },
            "managedEnvironmentId": {
              "description": "Deprecated. Resource ID of the Container App's environment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "environmentId": {
              "description": "Resource ID of environment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "workloadProfileName": {
              "description": "Workload profile name to pin for container app execution.",
              "type": "string"
            },
            "latestRevisionName": {
              "description": "Name of the latest revision of the Container App.",
              "type": "string",
              "readOnly": true
            },
            "latestReadyRevisionName": {
              "description": "Name of the latest ready revision of the Container App.",
              "type": "string",
              "readOnly": true
            },
            "latestRevisionFqdn": {
              "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
              "type": "string",
              "readOnly": true
            },
            "customDomainVerificationId": {
              "description": "Id used to verify domain name ownership",
              "type": "string",
              "readOnly": true
            },
            "configuration": {
              "description": "Non versioned Container App configuration properties.",
              "type": "object",
              "properties": {
                "secrets": {
                  "description": "Collection of secrets used by a Container app",
                  "type": "array",
                  "items": {
                    "description": "Secret definition.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Secret Name.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Secret Value.",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "update"
                        ],
                        "x-ms-secret": true
                      },
                      "identity": {
                        "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                        "type": "string"
                      },
                      "keyVaultUrl": {
                        "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "activeRevisionsMode": {
                  "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
                  "enum": [
                    "Multiple",
                    "Single"
                  ],
                  "type": "string",
                  "default": "Single",
                  "x-ms-enum": {
                    "name": "ActiveRevisionsMode",
                    "modelAsString": true
                  }
                },
                "ingress": {
                  "description": "Ingress configurations.",
                  "type": "object",
                  "properties": {
                    "fqdn": {
                      "description": "Hostname.",
                      "type": "string",
                      "readOnly": true
                    },
                    "external": {
                      "description": "Bool indicating if app exposes an external http endpoint",
                      "default": false,
                      "type": "boolean"
                    },
                    "targetPort": {
                      "format": "int32",
                      "description": "Target Port in containers for traffic from ingress",
                      "type": "integer"
                    },
                    "exposedPort": {
                      "format": "int32",
                      "description": "Exposed Port in containers for TCP traffic from ingress",
                      "type": "integer"
                    },
                    "transport": {
                      "description": "Ingress transport protocol",
                      "enum": [
                        "auto",
                        "http",
                        "http2",
                        "tcp"
                      ],
                      "type": "string",
                      "default": "auto",
                      "x-ms-enum": {
                        "name": "IngressTransportMethod",
                        "modelAsString": true
                      }
                    },
                    "traffic": {
                      "description": "Traffic weights for app's revisions",
                      "type": "array",
                      "items": {
                        "description": "Traffic weight assigned to a revision",
                        "type": "object",
                        "properties": {
                          "revisionName": {
                            "description": "Name of a revision",
                            "type": "string"
                          },
                          "weight": {
                            "format": "int32",
                            "description": "Traffic weight assigned to a revision",
                            "type": "integer"
                          },
                          "latestRevision": {
                            "description": "Indicates that the traffic weight belongs to a latest stable revision",
                            "default": false,
                            "type": "boolean"
                          },
                          "label": {
                            "description": "Associates a traffic label with a revision",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "revisionName"
                      ]
                    },
                    "customDomains": {
                      "description": "custom domain bindings for Container Apps' hostnames.",
                      "type": "array",
                      "items": {
                        "description": "Custom Domain of a Container App",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Hostname.",
                            "type": "string"
                          },
                          "bindingType": {
                            "description": "Custom Domain binding type.",
                            "enum": [
                              "Disabled",
                              "SniEnabled",
                              "Auto"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "bindingType",
                              "modelAsString": true
                            }
                          },
                          "certificateId": {
                            "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "allowInsecure": {
                      "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
                      "type": "boolean",
                      "default": false
                    },
                    "ipSecurityRestrictions": {
                      "description": "Rules to restrict incoming IP address.",
                      "type": "array",
                      "items": {
                        "description": "Rule to restrict incoming IP address.",
                        "type": "object",
                        "required": [
                          "name",
                          "ipAddressRange",
                          "action"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name for the IP restriction rule.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
                            "type": "string"
                          },
                          "ipAddressRange": {
                            "description": "CIDR notation to match incoming IP address",
                            "type": "string"
                          },
                          "action": {
                            "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
                            "enum": [
                              "Allow",
                              "Deny"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "action",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "stickySessions": {
                      "description": "Sticky Sessions for Single Revision Mode",
                      "type": "object",
                      "properties": {
                        "affinity": {
                          "description": "Sticky Session Affinity",
                          "enum": [
                            "sticky",
                            "none"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "affinity",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "clientCertificateMode": {
                      "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
                      "enum": [
                        "ignore",
                        "accept",
                        "require"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "IngressClientCertificateMode",
                        "modelAsString": true
                      }
                    },
                    "corsPolicy": {
                      "description": "CORS policy for container app",
                      "type": "object",
                      "required": [
                        "allowedOrigins"
                      ],
                      "properties": {
                        "allowedOrigins": {
                          "description": "Specifies the content for the access-control-allow-origins header",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedMethods": {
                          "description": "Specifies the content for the access-control-allow-methods header",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedHeaders": {
                          "description": "Specifies the content for the access-control-allow-headers header",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "exposeHeaders": {
                          "description": "Specifies the content for the access-control-expose-headers header ",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "maxAge": {
                          "format": "int32",
                          "description": "Specifies the content for the access-control-max-age header",
                          "type": "integer"
                        },
                        "allowCredentials": {
                          "description": "Specifies whether the resource allows credentials",
                          "type": "boolean"
                        }
                      }
                    },
                    "additionalPortMappings": {
                      "description": "Settings to expose additional ports on container app",
                      "type": "array",
                      "items": {
                        "description": "Port mappings of container app ingress",
                        "type": "object",
                        "required": [
                          "external",
                          "targetPort"
                        ],
                        "properties": {
                          "external": {
                            "description": "Specifies whether the app port is accessible outside of the environment",
                            "type": "boolean"
                          },
                          "targetPort": {
                            "format": "int32",
                            "description": "Specifies the port user's container listens on",
                            "type": "integer"
                          },
                          "exposedPort": {
                            "format": "int32",
                            "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
                            "type": "integer"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "targetPort"
                      ]
                    }
                  }
                },
                "registries": {
                  "description": "Collection of private container registry credentials for containers used by the Container app",
                  "type": "array",
                  "items": {
                    "description": "Container App Private Registry",
                    "type": "object",
                    "properties": {
                      "server": {
                        "description": "Container Registry Server",
                        "type": "string"
                      },
                      "username": {
                        "description": "Container Registry Username",
                        "type": "string"
                      },
                      "passwordSecretRef": {
                        "description": "The name of the Secret that contains the registry login password",
                        "type": "string"
                      },
                      "identity": {
                        "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "server"
                  ]
                },
                "dapr": {
                  "description": "Dapr configuration for the Container App.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "Boolean indicating if the Dapr side car is enabled",
                      "type": "boolean",
                      "default": false
                    },
                    "appId": {
                      "description": "Dapr application identifier",
                      "type": "string"
                    },
                    "appProtocol": {
                      "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
                      "enum": [
                        "http",
                        "grpc"
                      ],
                      "type": "string",
                      "default": "http",
                      "x-ms-enum": {
                        "name": "appProtocol",
                        "modelAsString": true
                      }
                    },
                    "appPort": {
                      "format": "int32",
                      "description": "Tells Dapr which port your application is listening on",
                      "type": "integer"
                    },
                    "httpReadBufferSize": {
                      "type": "integer",
                      "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
                      "format": "int32"
                    },
                    "httpMaxRequestSize": {
                      "type": "integer",
                      "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
                      "format": "int32"
                    },
                    "logLevel": {
                      "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
                      "enum": [
                        "info",
                        "debug",
                        "warn",
                        "error"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "logLevel",
                        "modelAsString": true
                      }
                    },
                    "enableApiLogging": {
                      "description": "Enables API logging for the Dapr sidecar",
                      "type": "boolean"
                    },
                    "appHealth": {
                      "description": "Dapr application health check configuration",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Boolean indicating if the health probe is enabled",
                          "type": "boolean"
                        },
                        "path": {
                          "description": "Path for the health probe",
                          "type": "string"
                        },
                        "probeIntervalSeconds": {
                          "description": "Interval for the health probe in seconds",
                          "format": "int32",
                          "type": "integer",
                          "minimum": 1
                        },
                        "probeTimeoutMilliseconds": {
                          "description": "Timeout for the health probe in milliseconds",
                          "format": "int32",
                          "type": "integer",
                          "minimum": 1
                        },
                        "threshold": {
                          "description": "Threshold for the health probe",
                          "format": "int32",
                          "type": "integer",
                          "minimum": 1
                        }
                      }
                    },
                    "maxConcurrency": {
                      "description": "Maximum number of concurrent requests, events handled by the Dapr sidecar",
                      "format": "int32",
                      "type": "integer"
                    }
                  }
                },
                "runtime": {
                  "description": "App runtime configuration for the Container App.",
                  "type": "object",
                  "properties": {
                    "java": {
                      "description": "Java app configuration",
                      "type": "object",
                      "properties": {
                        "enableMetrics": {
                          "description": "Enable jmx core metrics for the java app",
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "maxInactiveRevisions": {
                  "format": "int32",
                  "description": "Optional. Max inactive revisions a Container App can have.",
                  "type": "integer"
                },
                "service": {
                  "description": "Container App to be a dev Container App Service",
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "description": "Dev ContainerApp service type",
                      "type": "string"
                    }
                  }
                },
                "identitySettings": {
                  "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
                  "type": "array",
                  "items": {
                    "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                    "type": "object",
                    "required": [
                      "identity"
                    ],
                    "properties": {
                      "identity": {
                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                        "type": "string"
                      },
                      "lifecycle": {
                        "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                        "enum": [
                          "Init",
                          "Main",
                          "None",
                          "All"
                        ],
                        "type": "string",
                        "default": "All",
                        "x-ms-enum": {
                          "name": "IdentitySettingsLifeCycle",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "identity"
                  ]
                }
              }
            },
            "template": {
              "description": "Container App versioned application definition.",
              "type": "object",
              "properties": {
                "revisionSuffix": {
                  "description": "User friendly suffix that is appended to the revision name",
                  "type": "string"
                },
                "terminationGracePeriodSeconds": {
                  "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                  "format": "int64",
                  "type": "integer"
                },
                "initContainers": {
                  "description": "List of specialized containers that run before app containers.",
                  "type": "array",
                  "items": {
                    "description": "Container App init container definition",
                    "type": "object",
                    "properties": {
                      "image": {
                        "description": "Container image tag.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Custom container name.",
                        "type": "string"
                      },
                      "command": {
                        "description": "Container start command.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "args": {
                        "description": "Container start command arguments.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "description": "Container environment variables.",
                        "type": "array",
                        "items": {
                          "description": "Container App container environment variable.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Environment variable name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Non-secret environment variable value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the environment variable value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "resources": {
                        "description": "Container resource requirements.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "format": "double",
                            "description": "Required CPU in cores, e.g. 0.5",
                            "type": "number"
                          },
                          "memory": {
                            "description": "Required memory, e.g. \"250Mb\"",
                            "type": "string"
                          },
                          "ephemeralStorage": {
                            "description": "Ephemeral Storage, e.g. \"1Gi\"",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "volumeMounts": {
                        "description": "Container volume mounts.",
                        "type": "array",
                        "items": {
                          "description": "Volume mount for the Container App.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "description": "This must match the Name of a Volume.",
                              "type": "string"
                            },
                            "mountPath": {
                              "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                              "type": "string"
                            },
                            "subPath": {
                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "volumeName"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "containers": {
                  "description": "List of container definitions for the Container App.",
                  "type": "array",
                  "items": {
                    "description": "Container App container definition",
                    "type": "object",
                    "properties": {
                      "image": {
                        "description": "Container image tag.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Custom container name.",
                        "type": "string"
                      },
                      "command": {
                        "description": "Container start command.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "args": {
                        "description": "Container start command arguments.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "description": "Container environment variables.",
                        "type": "array",
                        "items": {
                          "description": "Container App container environment variable.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Environment variable name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Non-secret environment variable value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the environment variable value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "resources": {
                        "description": "Container resource requirements.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "format": "double",
                            "description": "Required CPU in cores, e.g. 0.5",
                            "type": "number"
                          },
                          "memory": {
                            "description": "Required memory, e.g. \"250Mb\"",
                            "type": "string"
                          },
                          "ephemeralStorage": {
                            "description": "Ephemeral Storage, e.g. \"1Gi\"",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "volumeMounts": {
                        "description": "Container volume mounts.",
                        "type": "array",
                        "items": {
                          "description": "Volume mount for the Container App.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "description": "This must match the Name of a Volume.",
                              "type": "string"
                            },
                            "mountPath": {
                              "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                              "type": "string"
                            },
                            "subPath": {
                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "volumeName"
                        ]
                      },
                      "probes": {
                        "description": "List of probes for the container.",
                        "type": "array",
                        "items": {
                          "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                          "type": "object",
                          "properties": {
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "httpGet": {
                              "description": "HTTPGet specifies the http request to perform.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                  "type": "string"
                                },
                                "httpHeaders": {
                                  "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                  "type": "array",
                                  "items": {
                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "The header field name",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The header field value",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "name"
                                  ]
                                },
                                "path": {
                                  "description": "Path to access on the HTTP server.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "scheme": {
                                  "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                  "enum": [
                                    "HTTP",
                                    "HTTPS"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "Scheme",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "tcpSocket": {
                              "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "terminationGracePeriodSeconds": {
                              "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                              "type": "integer",
                              "format": "int64"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "description": "The type of probe.",
                              "enum": [
                                "Liveness",
                                "Readiness",
                                "Startup"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "Type",
                                "modelAsString": true
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "type"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "scale": {
                  "description": "Scaling properties for the Container App.",
                  "type": "object",
                  "properties": {
                    "minReplicas": {
                      "format": "int32",
                      "description": "Optional. Minimum number of container replicas.",
                      "type": "integer"
                    },
                    "maxReplicas": {
                      "format": "int32",
                      "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                      "type": "integer",
                      "default": 10
                    },
                    "cooldownPeriod": {
                      "format": "int32",
                      "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                      "type": "integer"
                    },
                    "pollingInterval": {
                      "format": "int32",
                      "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                      "type": "integer"
                    },
                    "rules": {
                      "description": "Scaling rules.",
                      "type": "array",
                      "items": {
                        "description": "Container App container scaling rule.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Scale Rule Name",
                            "type": "string"
                          },
                          "azureQueue": {
                            "description": "Azure Queue based scaling.",
                            "type": "object",
                            "properties": {
                              "accountName": {
                                "description": "Storage account name. required if using managed identity to authenticate",
                                "type": "string"
                              },
                              "queueName": {
                                "description": "Queue name.",
                                "type": "string"
                              },
                              "queueLength": {
                                "format": "int32",
                                "description": "Queue length.",
                                "type": "integer"
                              },
                              "auth": {
                                "description": "Authentication secrets for the queue scale rule.",
                                "type": "array",
                                "items": {
                                  "description": "Auth Secrets for Scale Rule",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the secret from which to pull the auth params.",
                                      "type": "string"
                                    },
                                    "triggerParameter": {
                                      "description": "Trigger Parameter that uses the secret",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "triggerParameter"
                                ]
                              },
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              }
                            }
                          },
                          "custom": {
                            "description": "Custom scale rule.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Metadata properties to describe custom scale rule.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "auth": {
                                "description": "Authentication secrets for the custom scale rule.",
                                "type": "array",
                                "items": {
                                  "description": "Auth Secrets for Scale Rule",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the secret from which to pull the auth params.",
                                      "type": "string"
                                    },
                                    "triggerParameter": {
                                      "description": "Trigger Parameter that uses the secret",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "triggerParameter"
                                ]
                              },
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              }
                            }
                          },
                          "http": {
                            "description": "HTTP requests based scaling.",
                            "type": "object",
                            "properties": {
                              "metadata": {
                                "description": "Metadata properties to describe http scale rule.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "auth": {
                                "description": "Authentication secrets for the custom scale rule.",
                                "type": "array",
                                "items": {
                                  "description": "Auth Secrets for Scale Rule",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the secret from which to pull the auth params.",
                                      "type": "string"
                                    },
                                    "triggerParameter": {
                                      "description": "Trigger Parameter that uses the secret",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "triggerParameter"
                                ]
                              },
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              }
                            }
                          },
                          "tcp": {
                            "description": "Tcp requests based scaling.",
                            "type": "object",
                            "properties": {
                              "metadata": {
                                "description": "Metadata properties to describe tcp scale rule.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "auth": {
                                "description": "Authentication secrets for the tcp scale rule.",
                                "type": "array",
                                "items": {
                                  "description": "Auth Secrets for Scale Rule",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the secret from which to pull the auth params.",
                                      "type": "string"
                                    },
                                    "triggerParameter": {
                                      "description": "Trigger Parameter that uses the secret",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "triggerParameter"
                                ]
                              },
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  }
                },
                "volumes": {
                  "description": "List of volume definitions for the Container App.",
                  "type": "array",
                  "items": {
                    "description": "Volume definitions for the Container App.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Volume name.",
                        "type": "string"
                      },
                      "storageType": {
                        "description": "Storage type for the volume. If not provided, use EmptyDir.",
                        "enum": [
                          "AzureFile",
                          "EmptyDir",
                          "Secret",
                          "NfsAzureFile"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "StorageType",
                          "modelAsString": true
                        }
                      },
                      "storageName": {
                        "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                        "type": "string"
                      },
                      "secrets": {
                        "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                        "type": "array",
                        "items": {
                          "description": "Secret to be added to volume.",
                          "type": "object",
                          "properties": {
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the secret value.",
                              "type": "string"
                            },
                            "path": {
                              "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "secretRef"
                        ]
                      },
                      "mountOptions": {
                        "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "serviceBinds": {
                  "description": "List of container app services bound to the app",
                  "type": "array",
                  "items": {
                    "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                    "type": "object",
                    "properties": {
                      "serviceId": {
                        "description": "Resource id of the target service",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the service bind",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifier": [
                    "name"
                  ]
                }
              }
            },
            "outboundIpAddresses": {
              "description": "Outbound IP Addresses for container app.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "eventStreamEndpoint": {
              "description": "The endpoint of the eventstream of the container app.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ContainerAppCollection": {
      "description": "Container App collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "Container App.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "extendedLocation": {
                "type": "object",
                "description": "The complex type of the extended location.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the extended location."
                  },
                  "type": {
                    "description": "The type of the extended location.",
                    "type": "string",
                    "enum": [
                      "CustomLocation"
                    ],
                    "x-ms-enum": {
                      "name": "ExtendedLocationTypes",
                      "modelAsString": true
                    }
                  }
                }
              },
              "identity": {
                "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "managedBy": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ],
                "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."
              },
              "kind": {
                "type": "string",
                "enum": [
                  "workflowapp",
                  "functionapp"
                ],
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "x-ms-enum": {
                  "name": "kind",
                  "modelAsString": true
                },
                "description": "Metadata to represent the container app kind, representing if a container app is workflowapp or functionapp."
              },
              "properties": {
                "description": "ContainerApp resource specific properties",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the Container App.",
                    "enum": [
                      "InProgress",
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ContainerAppProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "runningStatus": {
                    "description": "Running status of the Container App.",
                    "enum": [
                      "Progressing",
                      "Running",
                      "Stopped",
                      "Suspended",
                      "Ready"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ContainerAppRunningStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Progressing",
                          "description": "Container App is transitioning between Stopped and Running states."
                        },
                        {
                          "value": "Running",
                          "description": "Container App is in Running state."
                        },
                        {
                          "value": "Stopped",
                          "description": "Container App is in Stopped state."
                        },
                        {
                          "value": "Suspended",
                          "description": "Container App Job is in Suspended state."
                        },
                        {
                          "value": "Ready",
                          "description": "Container App Job is in Ready state."
                        }
                      ]
                    }
                  },
                  "managedEnvironmentId": {
                    "description": "Deprecated. Resource ID of the Container App's environment.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "environmentId": {
                    "description": "Resource ID of environment.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "workloadProfileName": {
                    "description": "Workload profile name to pin for container app execution.",
                    "type": "string"
                  },
                  "latestRevisionName": {
                    "description": "Name of the latest revision of the Container App.",
                    "type": "string",
                    "readOnly": true
                  },
                  "latestReadyRevisionName": {
                    "description": "Name of the latest ready revision of the Container App.",
                    "type": "string",
                    "readOnly": true
                  },
                  "latestRevisionFqdn": {
                    "description": "Fully Qualified Domain Name of the latest revision of the Container App.",
                    "type": "string",
                    "readOnly": true
                  },
                  "customDomainVerificationId": {
                    "description": "Id used to verify domain name ownership",
                    "type": "string",
                    "readOnly": true
                  },
                  "configuration": {
                    "description": "Non versioned Container App configuration properties.",
                    "type": "object",
                    "properties": {
                      "secrets": {
                        "description": "Collection of secrets used by a Container app",
                        "type": "array",
                        "items": {
                          "description": "Secret definition.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Secret Name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Secret Value.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "activeRevisionsMode": {
                        "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
                        "enum": [
                          "Multiple",
                          "Single"
                        ],
                        "type": "string",
                        "default": "Single",
                        "x-ms-enum": {
                          "name": "ActiveRevisionsMode",
                          "modelAsString": true
                        }
                      },
                      "ingress": {
                        "description": "Ingress configurations.",
                        "type": "object",
                        "properties": {
                          "fqdn": {
                            "description": "Hostname.",
                            "type": "string",
                            "readOnly": true
                          },
                          "external": {
                            "description": "Bool indicating if app exposes an external http endpoint",
                            "default": false,
                            "type": "boolean"
                          },
                          "targetPort": {
                            "format": "int32",
                            "description": "Target Port in containers for traffic from ingress",
                            "type": "integer"
                          },
                          "exposedPort": {
                            "format": "int32",
                            "description": "Exposed Port in containers for TCP traffic from ingress",
                            "type": "integer"
                          },
                          "transport": {
                            "description": "Ingress transport protocol",
                            "enum": [
                              "auto",
                              "http",
                              "http2",
                              "tcp"
                            ],
                            "type": "string",
                            "default": "auto",
                            "x-ms-enum": {
                              "name": "IngressTransportMethod",
                              "modelAsString": true
                            }
                          },
                          "traffic": {
                            "description": "Traffic weights for app's revisions",
                            "type": "array",
                            "items": {
                              "description": "Traffic weight assigned to a revision",
                              "type": "object",
                              "properties": {
                                "revisionName": {
                                  "description": "Name of a revision",
                                  "type": "string"
                                },
                                "weight": {
                                  "format": "int32",
                                  "description": "Traffic weight assigned to a revision",
                                  "type": "integer"
                                },
                                "latestRevision": {
                                  "description": "Indicates that the traffic weight belongs to a latest stable revision",
                                  "default": false,
                                  "type": "boolean"
                                },
                                "label": {
                                  "description": "Associates a traffic label with a revision",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "revisionName"
                            ]
                          },
                          "customDomains": {
                            "description": "custom domain bindings for Container Apps' hostnames.",
                            "type": "array",
                            "items": {
                              "description": "Custom Domain of a Container App",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Hostname.",
                                  "type": "string"
                                },
                                "bindingType": {
                                  "description": "Custom Domain binding type.",
                                  "enum": [
                                    "Disabled",
                                    "SniEnabled",
                                    "Auto"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "bindingType",
                                    "modelAsString": true
                                  }
                                },
                                "certificateId": {
                                  "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "allowInsecure": {
                            "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
                            "type": "boolean",
                            "default": false
                          },
                          "ipSecurityRestrictions": {
                            "description": "Rules to restrict incoming IP address.",
                            "type": "array",
                            "items": {
                              "description": "Rule to restrict incoming IP address.",
                              "type": "object",
                              "required": [
                                "name",
                                "ipAddressRange",
                                "action"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name for the IP restriction rule.",
                                  "type": "string"
                                },
                                "description": {
                                  "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
                                  "type": "string"
                                },
                                "ipAddressRange": {
                                  "description": "CIDR notation to match incoming IP address",
                                  "type": "string"
                                },
                                "action": {
                                  "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
                                  "enum": [
                                    "Allow",
                                    "Deny"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "action",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "stickySessions": {
                            "description": "Sticky Sessions for Single Revision Mode",
                            "type": "object",
                            "properties": {
                              "affinity": {
                                "description": "Sticky Session Affinity",
                                "enum": [
                                  "sticky",
                                  "none"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "affinity",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "clientCertificateMode": {
                            "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
                            "enum": [
                              "ignore",
                              "accept",
                              "require"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "IngressClientCertificateMode",
                              "modelAsString": true
                            }
                          },
                          "corsPolicy": {
                            "description": "CORS policy for container app",
                            "type": "object",
                            "required": [
                              "allowedOrigins"
                            ],
                            "properties": {
                              "allowedOrigins": {
                                "description": "Specifies the content for the access-control-allow-origins header",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "allowedMethods": {
                                "description": "Specifies the content for the access-control-allow-methods header",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "allowedHeaders": {
                                "description": "Specifies the content for the access-control-allow-headers header",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "exposeHeaders": {
                                "description": "Specifies the content for the access-control-expose-headers header ",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "maxAge": {
                                "format": "int32",
                                "description": "Specifies the content for the access-control-max-age header",
                                "type": "integer"
                              },
                              "allowCredentials": {
                                "description": "Specifies whether the resource allows credentials",
                                "type": "boolean"
                              }
                            }
                          },
                          "additionalPortMappings": {
                            "description": "Settings to expose additional ports on container app",
                            "type": "array",
                            "items": {
                              "description": "Port mappings of container app ingress",
                              "type": "object",
                              "required": [
                                "external",
                                "targetPort"
                              ],
                              "properties": {
                                "external": {
                                  "description": "Specifies whether the app port is accessible outside of the environment",
                                  "type": "boolean"
                                },
                                "targetPort": {
                                  "format": "int32",
                                  "description": "Specifies the port user's container listens on",
                                  "type": "integer"
                                },
                                "exposedPort": {
                                  "format": "int32",
                                  "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
                                  "type": "integer"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "targetPort"
                            ]
                          }
                        }
                      },
                      "registries": {
                        "description": "Collection of private container registry credentials for containers used by the Container app",
                        "type": "array",
                        "items": {
                          "description": "Container App Private Registry",
                          "type": "object",
                          "properties": {
                            "server": {
                              "description": "Container Registry Server",
                              "type": "string"
                            },
                            "username": {
                              "description": "Container Registry Username",
                              "type": "string"
                            },
                            "passwordSecretRef": {
                              "description": "The name of the Secret that contains the registry login password",
                              "type": "string"
                            },
                            "identity": {
                              "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "server"
                        ]
                      },
                      "dapr": {
                        "description": "Dapr configuration for the Container App.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "description": "Boolean indicating if the Dapr side car is enabled",
                            "type": "boolean",
                            "default": false
                          },
                          "appId": {
                            "description": "Dapr application identifier",
                            "type": "string"
                          },
                          "appProtocol": {
                            "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
                            "enum": [
                              "http",
                              "grpc"
                            ],
                            "type": "string",
                            "default": "http",
                            "x-ms-enum": {
                              "name": "appProtocol",
                              "modelAsString": true
                            }
                          },
                          "appPort": {
                            "format": "int32",
                            "description": "Tells Dapr which port your application is listening on",
                            "type": "integer"
                          },
                          "httpReadBufferSize": {
                            "type": "integer",
                            "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
                            "format": "int32"
                          },
                          "httpMaxRequestSize": {
                            "type": "integer",
                            "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
                            "format": "int32"
                          },
                          "logLevel": {
                            "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
                            "enum": [
                              "info",
                              "debug",
                              "warn",
                              "error"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "logLevel",
                              "modelAsString": true
                            }
                          },
                          "enableApiLogging": {
                            "description": "Enables API logging for the Dapr sidecar",
                            "type": "boolean"
                          },
                          "appHealth": {
                            "description": "Dapr application health check configuration",
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Boolean indicating if the health probe is enabled",
                                "type": "boolean"
                              },
                              "path": {
                                "description": "Path for the health probe",
                                "type": "string"
                              },
                              "probeIntervalSeconds": {
                                "description": "Interval for the health probe in seconds",
                                "format": "int32",
                                "type": "integer",
                                "minimum": 1
                              },
                              "probeTimeoutMilliseconds": {
                                "description": "Timeout for the health probe in milliseconds",
                                "format": "int32",
                                "type": "integer",
                                "minimum": 1
                              },
                              "threshold": {
                                "description": "Threshold for the health probe",
                                "format": "int32",
                                "type": "integer",
                                "minimum": 1
                              }
                            }
                          },
                          "maxConcurrency": {
                            "description": "Maximum number of concurrent requests, events handled by the Dapr sidecar",
                            "format": "int32",
                            "type": "integer"
                          }
                        }
                      },
                      "runtime": {
                        "description": "App runtime configuration for the Container App.",
                        "type": "object",
                        "properties": {
                          "java": {
                            "description": "Java app configuration",
                            "type": "object",
                            "properties": {
                              "enableMetrics": {
                                "description": "Enable jmx core metrics for the java app",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      },
                      "maxInactiveRevisions": {
                        "format": "int32",
                        "description": "Optional. Max inactive revisions a Container App can have.",
                        "type": "integer"
                      },
                      "service": {
                        "description": "Container App to be a dev Container App Service",
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "type": {
                            "description": "Dev ContainerApp service type",
                            "type": "string"
                          }
                        }
                      },
                      "identitySettings": {
                        "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
                        "type": "array",
                        "items": {
                          "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                          "type": "object",
                          "required": [
                            "identity"
                          ],
                          "properties": {
                            "identity": {
                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                              "type": "string"
                            },
                            "lifecycle": {
                              "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                              "enum": [
                                "Init",
                                "Main",
                                "None",
                                "All"
                              ],
                              "type": "string",
                              "default": "All",
                              "x-ms-enum": {
                                "name": "IdentitySettingsLifeCycle",
                                "modelAsString": true
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "identity"
                        ]
                      }
                    }
                  },
                  "template": {
                    "description": "Container App versioned application definition.",
                    "type": "object",
                    "properties": {
                      "revisionSuffix": {
                        "description": "User friendly suffix that is appended to the revision name",
                        "type": "string"
                      },
                      "terminationGracePeriodSeconds": {
                        "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                        "format": "int64",
                        "type": "integer"
                      },
                      "initContainers": {
                        "description": "List of specialized containers that run before app containers.",
                        "type": "array",
                        "items": {
                          "description": "Container App init container definition",
                          "type": "object",
                          "properties": {
                            "image": {
                              "description": "Container image tag.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Custom container name.",
                              "type": "string"
                            },
                            "command": {
                              "description": "Container start command.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "args": {
                              "description": "Container start command arguments.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "env": {
                              "description": "Container environment variables.",
                              "type": "array",
                              "items": {
                                "description": "Container App container environment variable.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Environment variable name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Non-secret environment variable value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "Name of the Container App secret from which to pull the environment variable value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Container resource requirements.",
                              "type": "object",
                              "properties": {
                                "cpu": {
                                  "format": "double",
                                  "description": "Required CPU in cores, e.g. 0.5",
                                  "type": "number"
                                },
                                "memory": {
                                  "description": "Required memory, e.g. \"250Mb\"",
                                  "type": "string"
                                },
                                "ephemeralStorage": {
                                  "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "volumeMounts": {
                              "description": "Container volume mounts.",
                              "type": "array",
                              "items": {
                                "description": "Volume mount for the Container App.",
                                "type": "object",
                                "properties": {
                                  "volumeName": {
                                    "description": "This must match the Name of a Volume.",
                                    "type": "string"
                                  },
                                  "mountPath": {
                                    "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                    "type": "string"
                                  },
                                  "subPath": {
                                    "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "volumeName"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "containers": {
                        "description": "List of container definitions for the Container App.",
                        "type": "array",
                        "items": {
                          "description": "Container App container definition",
                          "type": "object",
                          "properties": {
                            "image": {
                              "description": "Container image tag.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Custom container name.",
                              "type": "string"
                            },
                            "command": {
                              "description": "Container start command.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "args": {
                              "description": "Container start command arguments.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "env": {
                              "description": "Container environment variables.",
                              "type": "array",
                              "items": {
                                "description": "Container App container environment variable.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Environment variable name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Non-secret environment variable value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "Name of the Container App secret from which to pull the environment variable value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Container resource requirements.",
                              "type": "object",
                              "properties": {
                                "cpu": {
                                  "format": "double",
                                  "description": "Required CPU in cores, e.g. 0.5",
                                  "type": "number"
                                },
                                "memory": {
                                  "description": "Required memory, e.g. \"250Mb\"",
                                  "type": "string"
                                },
                                "ephemeralStorage": {
                                  "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "volumeMounts": {
                              "description": "Container volume mounts.",
                              "type": "array",
                              "items": {
                                "description": "Volume mount for the Container App.",
                                "type": "object",
                                "properties": {
                                  "volumeName": {
                                    "description": "This must match the Name of a Volume.",
                                    "type": "string"
                                  },
                                  "mountPath": {
                                    "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                    "type": "string"
                                  },
                                  "subPath": {
                                    "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "volumeName"
                              ]
                            },
                            "probes": {
                              "description": "List of probes for the container.",
                              "type": "array",
                              "items": {
                                "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                "type": "object",
                                "properties": {
                                  "failureThreshold": {
                                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "httpGet": {
                                    "description": "HTTPGet specifies the http request to perform.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                        "type": "array",
                                        "items": {
                                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "value"
                                          ],
                                          "properties": {
                                            "name": {
                                              "description": "The header field name",
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The header field value",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "name"
                                        ]
                                      },
                                      "path": {
                                        "description": "Path to access on the HTTP server.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "scheme": {
                                        "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                        "enum": [
                                          "HTTP",
                                          "HTTPS"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "Scheme",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  },
                                  "initialDelaySeconds": {
                                    "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "periodSeconds": {
                                    "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "successThreshold": {
                                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "timeoutSeconds": {
                                    "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "type": {
                                    "description": "The type of probe.",
                                    "enum": [
                                      "Liveness",
                                      "Readiness",
                                      "Startup"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "Type",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "type"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "scale": {
                        "description": "Scaling properties for the Container App.",
                        "type": "object",
                        "properties": {
                          "minReplicas": {
                            "format": "int32",
                            "description": "Optional. Minimum number of container replicas.",
                            "type": "integer"
                          },
                          "maxReplicas": {
                            "format": "int32",
                            "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                            "type": "integer",
                            "default": 10
                          },
                          "cooldownPeriod": {
                            "format": "int32",
                            "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                            "type": "integer"
                          },
                          "pollingInterval": {
                            "format": "int32",
                            "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                            "type": "integer"
                          },
                          "rules": {
                            "description": "Scaling rules.",
                            "type": "array",
                            "items": {
                              "description": "Container App container scaling rule.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Scale Rule Name",
                                  "type": "string"
                                },
                                "azureQueue": {
                                  "description": "Azure Queue based scaling.",
                                  "type": "object",
                                  "properties": {
                                    "accountName": {
                                      "description": "Storage account name. required if using managed identity to authenticate",
                                      "type": "string"
                                    },
                                    "queueName": {
                                      "description": "Queue name.",
                                      "type": "string"
                                    },
                                    "queueLength": {
                                      "format": "int32",
                                      "description": "Queue length.",
                                      "type": "integer"
                                    },
                                    "auth": {
                                      "description": "Authentication secrets for the queue scale rule.",
                                      "type": "array",
                                      "items": {
                                        "description": "Auth Secrets for Scale Rule",
                                        "type": "object",
                                        "properties": {
                                          "secretRef": {
                                            "description": "Name of the secret from which to pull the auth params.",
                                            "type": "string"
                                          },
                                          "triggerParameter": {
                                            "description": "Trigger Parameter that uses the secret",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "triggerParameter"
                                      ]
                                    },
                                    "identity": {
                                      "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "custom": {
                                  "description": "Custom scale rule.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "description": "Metadata properties to describe custom scale rule.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "auth": {
                                      "description": "Authentication secrets for the custom scale rule.",
                                      "type": "array",
                                      "items": {
                                        "description": "Auth Secrets for Scale Rule",
                                        "type": "object",
                                        "properties": {
                                          "secretRef": {
                                            "description": "Name of the secret from which to pull the auth params.",
                                            "type": "string"
                                          },
                                          "triggerParameter": {
                                            "description": "Trigger Parameter that uses the secret",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "triggerParameter"
                                      ]
                                    },
                                    "identity": {
                                      "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "http": {
                                  "description": "HTTP requests based scaling.",
                                  "type": "object",
                                  "properties": {
                                    "metadata": {
                                      "description": "Metadata properties to describe http scale rule.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "auth": {
                                      "description": "Authentication secrets for the custom scale rule.",
                                      "type": "array",
                                      "items": {
                                        "description": "Auth Secrets for Scale Rule",
                                        "type": "object",
                                        "properties": {
                                          "secretRef": {
                                            "description": "Name of the secret from which to pull the auth params.",
                                            "type": "string"
                                          },
                                          "triggerParameter": {
                                            "description": "Trigger Parameter that uses the secret",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "triggerParameter"
                                      ]
                                    },
                                    "identity": {
                                      "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "tcp": {
                                  "description": "Tcp requests based scaling.",
                                  "type": "object",
                                  "properties": {
                                    "metadata": {
                                      "description": "Metadata properties to describe tcp scale rule.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "auth": {
                                      "description": "Authentication secrets for the tcp scale rule.",
                                      "type": "array",
                                      "items": {
                                        "description": "Auth Secrets for Scale Rule",
                                        "type": "object",
                                        "properties": {
                                          "secretRef": {
                                            "description": "Name of the secret from which to pull the auth params.",
                                            "type": "string"
                                          },
                                          "triggerParameter": {
                                            "description": "Trigger Parameter that uses the secret",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "triggerParameter"
                                      ]
                                    },
                                    "identity": {
                                      "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          }
                        }
                      },
                      "volumes": {
                        "description": "List of volume definitions for the Container App.",
                        "type": "array",
                        "items": {
                          "description": "Volume definitions for the Container App.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Volume name.",
                              "type": "string"
                            },
                            "storageType": {
                              "description": "Storage type for the volume. If not provided, use EmptyDir.",
                              "enum": [
                                "AzureFile",
                                "EmptyDir",
                                "Secret",
                                "NfsAzureFile"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "StorageType",
                                "modelAsString": true
                              }
                            },
                            "storageName": {
                              "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                              "type": "string"
                            },
                            "secrets": {
                              "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                              "type": "array",
                              "items": {
                                "description": "Secret to be added to volume.",
                                "type": "object",
                                "properties": {
                                  "secretRef": {
                                    "description": "Name of the Container App secret from which to pull the secret value.",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "secretRef"
                              ]
                            },
                            "mountOptions": {
                              "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "serviceBinds": {
                        "description": "List of container app services bound to the app",
                        "type": "array",
                        "items": {
                          "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                          "type": "object",
                          "properties": {
                            "serviceId": {
                              "description": "Resource id of the target service",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the service bind",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifier": [
                          "name"
                        ]
                      }
                    }
                  },
                  "outboundIpAddresses": {
                    "description": "Outbound IP Addresses for container app.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "eventStreamEndpoint": {
                    "description": "The endpoint of the eventstream of the container app.",
                    "type": "string",
                    "readOnly": true
                  }
                },
                "x-ms-client-flatten": true
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Dapr": {
      "description": "Container App Dapr configuration.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Boolean indicating if the Dapr side car is enabled",
          "type": "boolean",
          "default": false
        },
        "appId": {
          "description": "Dapr application identifier",
          "type": "string"
        },
        "appProtocol": {
          "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
          "enum": [
            "http",
            "grpc"
          ],
          "type": "string",
          "default": "http",
          "x-ms-enum": {
            "name": "appProtocol",
            "modelAsString": true
          }
        },
        "appPort": {
          "format": "int32",
          "description": "Tells Dapr which port your application is listening on",
          "type": "integer"
        },
        "httpReadBufferSize": {
          "type": "integer",
          "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
          "format": "int32"
        },
        "httpMaxRequestSize": {
          "type": "integer",
          "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
          "format": "int32"
        },
        "logLevel": {
          "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
          "enum": [
            "info",
            "debug",
            "warn",
            "error"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "logLevel",
            "modelAsString": true
          }
        },
        "enableApiLogging": {
          "description": "Enables API logging for the Dapr sidecar",
          "type": "boolean"
        },
        "appHealth": {
          "description": "Dapr application health check configuration",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Boolean indicating if the health probe is enabled",
              "type": "boolean"
            },
            "path": {
              "description": "Path for the health probe",
              "type": "string"
            },
            "probeIntervalSeconds": {
              "description": "Interval for the health probe in seconds",
              "format": "int32",
              "type": "integer",
              "minimum": 1
            },
            "probeTimeoutMilliseconds": {
              "description": "Timeout for the health probe in milliseconds",
              "format": "int32",
              "type": "integer",
              "minimum": 1
            },
            "threshold": {
              "description": "Threshold for the health probe",
              "format": "int32",
              "type": "integer",
              "minimum": 1
            }
          }
        },
        "maxConcurrency": {
          "description": "Maximum number of concurrent requests, events handled by the Dapr sidecar",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Runtime": {
      "description": "Container App Runtime configuration.",
      "type": "object",
      "properties": {
        "java": {
          "description": "Java app configuration",
          "type": "object",
          "properties": {
            "enableMetrics": {
              "description": "Enable jmx core metrics for the java app",
              "type": "boolean"
            }
          }
        }
      }
    },
    "Ingress": {
      "description": "Container App Ingress configuration.",
      "type": "object",
      "properties": {
        "fqdn": {
          "description": "Hostname.",
          "type": "string",
          "readOnly": true
        },
        "external": {
          "description": "Bool indicating if app exposes an external http endpoint",
          "default": false,
          "type": "boolean"
        },
        "targetPort": {
          "format": "int32",
          "description": "Target Port in containers for traffic from ingress",
          "type": "integer"
        },
        "exposedPort": {
          "format": "int32",
          "description": "Exposed Port in containers for TCP traffic from ingress",
          "type": "integer"
        },
        "transport": {
          "description": "Ingress transport protocol",
          "enum": [
            "auto",
            "http",
            "http2",
            "tcp"
          ],
          "type": "string",
          "default": "auto",
          "x-ms-enum": {
            "name": "IngressTransportMethod",
            "modelAsString": true
          }
        },
        "traffic": {
          "description": "Traffic weights for app's revisions",
          "type": "array",
          "items": {
            "description": "Traffic weight assigned to a revision",
            "type": "object",
            "properties": {
              "revisionName": {
                "description": "Name of a revision",
                "type": "string"
              },
              "weight": {
                "format": "int32",
                "description": "Traffic weight assigned to a revision",
                "type": "integer"
              },
              "latestRevision": {
                "description": "Indicates that the traffic weight belongs to a latest stable revision",
                "default": false,
                "type": "boolean"
              },
              "label": {
                "description": "Associates a traffic label with a revision",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "revisionName"
          ]
        },
        "customDomains": {
          "description": "custom domain bindings for Container Apps' hostnames.",
          "type": "array",
          "items": {
            "description": "Custom Domain of a Container App",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "Hostname.",
                "type": "string"
              },
              "bindingType": {
                "description": "Custom Domain binding type.",
                "enum": [
                  "Disabled",
                  "SniEnabled",
                  "Auto"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "bindingType",
                  "modelAsString": true
                }
              },
              "certificateId": {
                "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "allowInsecure": {
          "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
          "type": "boolean",
          "default": false
        },
        "ipSecurityRestrictions": {
          "description": "Rules to restrict incoming IP address.",
          "type": "array",
          "items": {
            "description": "Rule to restrict incoming IP address.",
            "type": "object",
            "required": [
              "name",
              "ipAddressRange",
              "action"
            ],
            "properties": {
              "name": {
                "description": "Name for the IP restriction rule.",
                "type": "string"
              },
              "description": {
                "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
                "type": "string"
              },
              "ipAddressRange": {
                "description": "CIDR notation to match incoming IP address",
                "type": "string"
              },
              "action": {
                "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
                "enum": [
                  "Allow",
                  "Deny"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "action",
                  "modelAsString": true
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "stickySessions": {
          "description": "Sticky Sessions for Single Revision Mode",
          "type": "object",
          "properties": {
            "affinity": {
              "description": "Sticky Session Affinity",
              "enum": [
                "sticky",
                "none"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "affinity",
                "modelAsString": true
              }
            }
          }
        },
        "clientCertificateMode": {
          "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
          "enum": [
            "ignore",
            "accept",
            "require"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IngressClientCertificateMode",
            "modelAsString": true
          }
        },
        "corsPolicy": {
          "description": "CORS policy for container app",
          "type": "object",
          "required": [
            "allowedOrigins"
          ],
          "properties": {
            "allowedOrigins": {
              "description": "Specifies the content for the access-control-allow-origins header",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "allowedMethods": {
              "description": "Specifies the content for the access-control-allow-methods header",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "allowedHeaders": {
              "description": "Specifies the content for the access-control-allow-headers header",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "exposeHeaders": {
              "description": "Specifies the content for the access-control-expose-headers header ",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "maxAge": {
              "format": "int32",
              "description": "Specifies the content for the access-control-max-age header",
              "type": "integer"
            },
            "allowCredentials": {
              "description": "Specifies whether the resource allows credentials",
              "type": "boolean"
            }
          }
        },
        "additionalPortMappings": {
          "description": "Settings to expose additional ports on container app",
          "type": "array",
          "items": {
            "description": "Port mappings of container app ingress",
            "type": "object",
            "required": [
              "external",
              "targetPort"
            ],
            "properties": {
              "external": {
                "description": "Specifies whether the app port is accessible outside of the environment",
                "type": "boolean"
              },
              "targetPort": {
                "format": "int32",
                "description": "Specifies the port user's container listens on",
                "type": "integer"
              },
              "exposedPort": {
                "format": "int32",
                "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
                "type": "integer"
              }
            }
          },
          "x-ms-identifiers": [
            "targetPort"
          ]
        }
      }
    },
    "RegistryCredentials": {
      "description": "Container App Private Registry",
      "type": "object",
      "properties": {
        "server": {
          "description": "Container Registry Server",
          "type": "string"
        },
        "username": {
          "description": "Container Registry Username",
          "type": "string"
        },
        "passwordSecretRef": {
          "description": "The name of the Secret that contains the registry login password",
          "type": "string"
        },
        "identity": {
          "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
          "type": "string"
        }
      }
    },
    "SecretsCollection": {
      "description": "Container App Secrets Collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "Container App Secret.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Secret Name.",
                "type": "string",
                "readOnly": true
              },
              "value": {
                "description": "Secret Value.",
                "type": "string",
                "x-ms-secret": true,
                "readOnly": true
              },
              "identity": {
                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                "type": "string",
                "readOnly": true
              },
              "keyVaultUrl": {
                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ContainerAppSecret": {
      "description": "Container App Secret.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Secret Name.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "Secret Value.",
          "type": "string",
          "x-ms-secret": true,
          "readOnly": true
        },
        "identity": {
          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
          "type": "string",
          "readOnly": true
        },
        "keyVaultUrl": {
          "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TrafficWeight": {
      "description": "Traffic weight assigned to a revision",
      "type": "object",
      "properties": {
        "revisionName": {
          "description": "Name of a revision",
          "type": "string"
        },
        "weight": {
          "format": "int32",
          "description": "Traffic weight assigned to a revision",
          "type": "integer"
        },
        "latestRevision": {
          "description": "Indicates that the traffic weight belongs to a latest stable revision",
          "default": false,
          "type": "boolean"
        },
        "label": {
          "description": "Associates a traffic label with a revision",
          "type": "string"
        }
      }
    },
    "IpSecurityRestrictionRule": {
      "description": "Rule to restrict incoming IP address.",
      "type": "object",
      "required": [
        "name",
        "ipAddressRange",
        "action"
      ],
      "properties": {
        "name": {
          "description": "Name for the IP restriction rule.",
          "type": "string"
        },
        "description": {
          "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
          "type": "string"
        },
        "ipAddressRange": {
          "description": "CIDR notation to match incoming IP address",
          "type": "string"
        },
        "action": {
          "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
          "enum": [
            "Allow",
            "Deny"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "action",
            "modelAsString": true
          }
        }
      }
    },
    "CorsPolicy": {
      "description": "Cross-Origin-Resource-Sharing policy",
      "type": "object",
      "required": [
        "allowedOrigins"
      ],
      "properties": {
        "allowedOrigins": {
          "description": "Specifies the content for the access-control-allow-origins header",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedMethods": {
          "description": "Specifies the content for the access-control-allow-methods header",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedHeaders": {
          "description": "Specifies the content for the access-control-allow-headers header",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exposeHeaders": {
          "description": "Specifies the content for the access-control-expose-headers header ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxAge": {
          "format": "int32",
          "description": "Specifies the content for the access-control-max-age header",
          "type": "integer"
        },
        "allowCredentials": {
          "description": "Specifies whether the resource allows credentials",
          "type": "boolean"
        }
      }
    },
    "IngressPortMapping": {
      "description": "Port mappings of container app ingress",
      "type": "object",
      "required": [
        "external",
        "targetPort"
      ],
      "properties": {
        "external": {
          "description": "Specifies whether the app port is accessible outside of the environment",
          "type": "boolean"
        },
        "targetPort": {
          "format": "int32",
          "description": "Specifies the port user's container listens on",
          "type": "integer"
        },
        "exposedPort": {
          "format": "int32",
          "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
          "type": "integer"
        }
      }
    },
    "CustomHostnameAnalysisResult": {
      "description": "Custom domain analysis.",
      "type": "object",
      "properties": {
        "hostName": {
          "description": "Host name that was analyzed",
          "type": "string",
          "readOnly": true
        },
        "isHostnameAlreadyVerified": {
          "description": "<code>true</code> if hostname is already verified; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "customDomainVerificationTest": {
          "description": "DNS verification test result.",
          "enum": [
            "Passed",
            "Failed",
            "Skipped"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "DnsVerificationTestResult",
            "modelAsString": false
          }
        },
        "customDomainVerificationFailureInfo": {
          "description": "Raw failure information if DNS verification fails.",
          "type": "object",
          "properties": {
            "code": {
              "description": "Standardized string to programmatically identify the error.",
              "type": "string",
              "readOnly": true
            },
            "message": {
              "description": "Detailed error description and debugging information.",
              "type": "string",
              "readOnly": true
            },
            "target": {
              "description": "Detailed error description and debugging information.",
              "type": "string",
              "readOnly": true
            },
            "details": {
              "type": "array",
              "description": "Details or the error",
              "items": {
                "description": "Detailed errors.",
                "type": "object",
                "properties": {
                  "code": {
                    "description": "Standardized string to programmatically identify the error.",
                    "type": "string",
                    "readOnly": true
                  },
                  "message": {
                    "description": "Detailed error description and debugging information.",
                    "type": "string",
                    "readOnly": true
                  },
                  "target": {
                    "description": "Detailed error description and debugging information.",
                    "type": "string",
                    "readOnly": true
                  }
                },
                "readOnly": true
              },
              "x-ms-identifiers": [
                "code"
              ]
            }
          },
          "readOnly": true
        },
        "hasConflictOnManagedEnvironment": {
          "description": "<code>true</code> if there is a conflict on the Container App's managed environment; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "conflictWithEnvironmentCustomDomain": {
          "description": "<code>true</code> if there is a conflict on the Container App's managed environment level custom domain; otherwise, <code>false</code>.",
          "type": "boolean",
          "readOnly": true
        },
        "conflictingContainerAppResourceId": {
          "description": "Name of the conflicting Container App on the Managed Environment if it's within the same subscription.",
          "type": "string",
          "readOnly": true
        },
        "cNameRecords": {
          "description": "CName records visible for this hostname.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "txtRecords": {
          "description": "TXT records visible for this hostname.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "aRecords": {
          "description": "A records visible for this hostname.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "alternateCNameRecords": {
          "description": "Alternate CName records visible for this hostname.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "alternateTxtRecords": {
          "description": "Alternate TXT records visible for this hostname.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-ms-client-flatten": true
    },
    "ContainerAppAuthToken": {
      "description": "Container App Auth Token.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "Container App auth token resource specific properties",
          "type": "object",
          "properties": {
            "token": {
              "description": "Auth token value.",
              "type": "string",
              "x-ms-secret": true,
              "readOnly": true
            },
            "expires": {
              "format": "date-time",
              "description": "Token expiration date.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "Service": {
      "description": "Container App to be a dev service",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "Dev ContainerApp service type",
          "type": "string"
        }
      }
    },
    "Revision": {
      "description": "Container App Revision.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Revision resource specific properties",
          "type": "object",
          "properties": {
            "createdTime": {
              "format": "date-time",
              "description": "Timestamp describing when the revision was created\nby controller",
              "type": "string",
              "readOnly": true
            },
            "lastActiveTime": {
              "format": "date-time",
              "description": "Timestamp describing when the revision was last active. Only meaningful when revision is inactive",
              "type": "string",
              "readOnly": true
            },
            "fqdn": {
              "description": "Fully qualified domain name of the revision",
              "type": "string",
              "readOnly": true
            },
            "template": {
              "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
              "readOnly": true,
              "type": "object",
              "properties": {
                "revisionSuffix": {
                  "description": "User friendly suffix that is appended to the revision name",
                  "type": "string"
                },
                "terminationGracePeriodSeconds": {
                  "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                  "format": "int64",
                  "type": "integer"
                },
                "initContainers": {
                  "description": "List of specialized containers that run before app containers.",
                  "type": "array",
                  "items": {
                    "description": "Container App init container definition",
                    "type": "object",
                    "properties": {
                      "image": {
                        "description": "Container image tag.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Custom container name.",
                        "type": "string"
                      },
                      "command": {
                        "description": "Container start command.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "args": {
                        "description": "Container start command arguments.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "description": "Container environment variables.",
                        "type": "array",
                        "items": {
                          "description": "Container App container environment variable.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Environment variable name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Non-secret environment variable value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the environment variable value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "resources": {
                        "description": "Container resource requirements.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "format": "double",
                            "description": "Required CPU in cores, e.g. 0.5",
                            "type": "number"
                          },
                          "memory": {
                            "description": "Required memory, e.g. \"250Mb\"",
                            "type": "string"
                          },
                          "ephemeralStorage": {
                            "description": "Ephemeral Storage, e.g. \"1Gi\"",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "volumeMounts": {
                        "description": "Container volume mounts.",
                        "type": "array",
                        "items": {
                          "description": "Volume mount for the Container App.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "description": "This must match the Name of a Volume.",
                              "type": "string"
                            },
                            "mountPath": {
                              "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                              "type": "string"
                            },
                            "subPath": {
                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "volumeName"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "containers": {
                  "description": "List of container definitions for the Container App.",
                  "type": "array",
                  "items": {
                    "description": "Container App container definition",
                    "type": "object",
                    "properties": {
                      "image": {
                        "description": "Container image tag.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Custom container name.",
                        "type": "string"
                      },
                      "command": {
                        "description": "Container start command.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "args": {
                        "description": "Container start command arguments.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "description": "Container environment variables.",
                        "type": "array",
                        "items": {
                          "description": "Container App container environment variable.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Environment variable name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Non-secret environment variable value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the environment variable value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "resources": {
                        "description": "Container resource requirements.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "format": "double",
                            "description": "Required CPU in cores, e.g. 0.5",
                            "type": "number"
                          },
                          "memory": {
                            "description": "Required memory, e.g. \"250Mb\"",
                            "type": "string"
                          },
                          "ephemeralStorage": {
                            "description": "Ephemeral Storage, e.g. \"1Gi\"",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "volumeMounts": {
                        "description": "Container volume mounts.",
                        "type": "array",
                        "items": {
                          "description": "Volume mount for the Container App.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "description": "This must match the Name of a Volume.",
                              "type": "string"
                            },
                            "mountPath": {
                              "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                              "type": "string"
                            },
                            "subPath": {
                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "volumeName"
                        ]
                      },
                      "probes": {
                        "description": "List of probes for the container.",
                        "type": "array",
                        "items": {
                          "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                          "type": "object",
                          "properties": {
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "httpGet": {
                              "description": "HTTPGet specifies the http request to perform.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                  "type": "string"
                                },
                                "httpHeaders": {
                                  "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                  "type": "array",
                                  "items": {
                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "The header field name",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The header field value",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "name"
                                  ]
                                },
                                "path": {
                                  "description": "Path to access on the HTTP server.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "scheme": {
                                  "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                  "enum": [
                                    "HTTP",
                                    "HTTPS"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "Scheme",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "tcpSocket": {
                              "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "terminationGracePeriodSeconds": {
                              "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                              "type": "integer",
                              "format": "int64"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "description": "The type of probe.",
                              "enum": [
                                "Liveness",
                                "Readiness",
                                "Startup"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "Type",
                                "modelAsString": true
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "type"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "scale": {
                  "description": "Scaling properties for the Container App.",
                  "type": "object",
                  "properties": {
                    "minReplicas": {
                      "format": "int32",
                      "description": "Optional. Minimum number of container replicas.",
                      "type": "integer"
                    },
                    "maxReplicas": {
                      "format": "int32",
                      "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                      "type": "integer",
                      "default": 10
                    },
                    "cooldownPeriod": {
                      "format": "int32",
                      "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                      "type": "integer"
                    },
                    "pollingInterval": {
                      "format": "int32",
                      "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                      "type": "integer"
                    },
                    "rules": {
                      "description": "Scaling rules.",
                      "type": "array",
                      "items": {
                        "description": "Container App container scaling rule.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Scale Rule Name",
                            "type": "string"
                          },
                          "azureQueue": {
                            "description": "Azure Queue based scaling.",
                            "type": "object",
                            "properties": {
                              "accountName": {
                                "description": "Storage account name. required if using managed identity to authenticate",
                                "type": "string"
                              },
                              "queueName": {
                                "description": "Queue name.",
                                "type": "string"
                              },
                              "queueLength": {
                                "format": "int32",
                                "description": "Queue length.",
                                "type": "integer"
                              },
                              "auth": {
                                "description": "Authentication secrets for the queue scale rule.",
                                "type": "array",
                                "items": {
                                  "description": "Auth Secrets for Scale Rule",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the secret from which to pull the auth params.",
                                      "type": "string"
                                    },
                                    "triggerParameter": {
                                      "description": "Trigger Parameter that uses the secret",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "triggerParameter"
                                ]
                              },
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              }
                            }
                          },
                          "custom": {
                            "description": "Custom scale rule.",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Metadata properties to describe custom scale rule.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "auth": {
                                "description": "Authentication secrets for the custom scale rule.",
                                "type": "array",
                                "items": {
                                  "description": "Auth Secrets for Scale Rule",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the secret from which to pull the auth params.",
                                      "type": "string"
                                    },
                                    "triggerParameter": {
                                      "description": "Trigger Parameter that uses the secret",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "triggerParameter"
                                ]
                              },
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              }
                            }
                          },
                          "http": {
                            "description": "HTTP requests based scaling.",
                            "type": "object",
                            "properties": {
                              "metadata": {
                                "description": "Metadata properties to describe http scale rule.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "auth": {
                                "description": "Authentication secrets for the custom scale rule.",
                                "type": "array",
                                "items": {
                                  "description": "Auth Secrets for Scale Rule",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the secret from which to pull the auth params.",
                                      "type": "string"
                                    },
                                    "triggerParameter": {
                                      "description": "Trigger Parameter that uses the secret",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "triggerParameter"
                                ]
                              },
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              }
                            }
                          },
                          "tcp": {
                            "description": "Tcp requests based scaling.",
                            "type": "object",
                            "properties": {
                              "metadata": {
                                "description": "Metadata properties to describe tcp scale rule.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "auth": {
                                "description": "Authentication secrets for the tcp scale rule.",
                                "type": "array",
                                "items": {
                                  "description": "Auth Secrets for Scale Rule",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the secret from which to pull the auth params.",
                                      "type": "string"
                                    },
                                    "triggerParameter": {
                                      "description": "Trigger Parameter that uses the secret",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "triggerParameter"
                                ]
                              },
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ]
                    }
                  }
                },
                "volumes": {
                  "description": "List of volume definitions for the Container App.",
                  "type": "array",
                  "items": {
                    "description": "Volume definitions for the Container App.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Volume name.",
                        "type": "string"
                      },
                      "storageType": {
                        "description": "Storage type for the volume. If not provided, use EmptyDir.",
                        "enum": [
                          "AzureFile",
                          "EmptyDir",
                          "Secret",
                          "NfsAzureFile"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "StorageType",
                          "modelAsString": true
                        }
                      },
                      "storageName": {
                        "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                        "type": "string"
                      },
                      "secrets": {
                        "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                        "type": "array",
                        "items": {
                          "description": "Secret to be added to volume.",
                          "type": "object",
                          "properties": {
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the secret value.",
                              "type": "string"
                            },
                            "path": {
                              "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "secretRef"
                        ]
                      },
                      "mountOptions": {
                        "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "serviceBinds": {
                  "description": "List of container app services bound to the app",
                  "type": "array",
                  "items": {
                    "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                    "type": "object",
                    "properties": {
                      "serviceId": {
                        "description": "Resource id of the target service",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the service bind",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifier": [
                    "name"
                  ]
                }
              }
            },
            "active": {
              "description": "Boolean describing if the Revision is Active",
              "type": "boolean",
              "readOnly": true
            },
            "replicas": {
              "format": "int32",
              "description": "Number of pods currently running for this revision",
              "type": "integer",
              "readOnly": true
            },
            "trafficWeight": {
              "format": "int32",
              "description": "Traffic weight assigned to this revision",
              "type": "integer",
              "readOnly": true
            },
            "provisioningError": {
              "description": "Optional Field - Platform Error Message",
              "type": "string",
              "readOnly": true
            },
            "healthState": {
              "description": "Current health State of the revision",
              "enum": [
                "Healthy",
                "Unhealthy",
                "None"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "RevisionHealthState",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "description": "Current provisioning State of the revision",
              "enum": [
                "Provisioning",
                "Provisioned",
                "Failed",
                "Deprovisioning",
                "Deprovisioned"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "RevisionProvisioningState",
                "modelAsString": true
              }
            },
            "runningState": {
              "description": "Current running state of the revision",
              "enum": [
                "Running",
                "Processing",
                "Stopped",
                "Degraded",
                "Failed",
                "Unknown"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "RevisionRunningState",
                "modelAsString": true
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "RevisionCollection": {
      "description": "Container App Revisions collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "Container App Revision.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Revision resource specific properties",
                "type": "object",
                "properties": {
                  "createdTime": {
                    "format": "date-time",
                    "description": "Timestamp describing when the revision was created\nby controller",
                    "type": "string",
                    "readOnly": true
                  },
                  "lastActiveTime": {
                    "format": "date-time",
                    "description": "Timestamp describing when the revision was last active. Only meaningful when revision is inactive",
                    "type": "string",
                    "readOnly": true
                  },
                  "fqdn": {
                    "description": "Fully qualified domain name of the revision",
                    "type": "string",
                    "readOnly": true
                  },
                  "template": {
                    "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "revisionSuffix": {
                        "description": "User friendly suffix that is appended to the revision name",
                        "type": "string"
                      },
                      "terminationGracePeriodSeconds": {
                        "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
                        "format": "int64",
                        "type": "integer"
                      },
                      "initContainers": {
                        "description": "List of specialized containers that run before app containers.",
                        "type": "array",
                        "items": {
                          "description": "Container App init container definition",
                          "type": "object",
                          "properties": {
                            "image": {
                              "description": "Container image tag.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Custom container name.",
                              "type": "string"
                            },
                            "command": {
                              "description": "Container start command.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "args": {
                              "description": "Container start command arguments.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "env": {
                              "description": "Container environment variables.",
                              "type": "array",
                              "items": {
                                "description": "Container App container environment variable.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Environment variable name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Non-secret environment variable value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "Name of the Container App secret from which to pull the environment variable value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Container resource requirements.",
                              "type": "object",
                              "properties": {
                                "cpu": {
                                  "format": "double",
                                  "description": "Required CPU in cores, e.g. 0.5",
                                  "type": "number"
                                },
                                "memory": {
                                  "description": "Required memory, e.g. \"250Mb\"",
                                  "type": "string"
                                },
                                "ephemeralStorage": {
                                  "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "volumeMounts": {
                              "description": "Container volume mounts.",
                              "type": "array",
                              "items": {
                                "description": "Volume mount for the Container App.",
                                "type": "object",
                                "properties": {
                                  "volumeName": {
                                    "description": "This must match the Name of a Volume.",
                                    "type": "string"
                                  },
                                  "mountPath": {
                                    "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                    "type": "string"
                                  },
                                  "subPath": {
                                    "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "volumeName"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "containers": {
                        "description": "List of container definitions for the Container App.",
                        "type": "array",
                        "items": {
                          "description": "Container App container definition",
                          "type": "object",
                          "properties": {
                            "image": {
                              "description": "Container image tag.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Custom container name.",
                              "type": "string"
                            },
                            "command": {
                              "description": "Container start command.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "args": {
                              "description": "Container start command arguments.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "env": {
                              "description": "Container environment variables.",
                              "type": "array",
                              "items": {
                                "description": "Container App container environment variable.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Environment variable name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Non-secret environment variable value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "Name of the Container App secret from which to pull the environment variable value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Container resource requirements.",
                              "type": "object",
                              "properties": {
                                "cpu": {
                                  "format": "double",
                                  "description": "Required CPU in cores, e.g. 0.5",
                                  "type": "number"
                                },
                                "memory": {
                                  "description": "Required memory, e.g. \"250Mb\"",
                                  "type": "string"
                                },
                                "ephemeralStorage": {
                                  "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "volumeMounts": {
                              "description": "Container volume mounts.",
                              "type": "array",
                              "items": {
                                "description": "Volume mount for the Container App.",
                                "type": "object",
                                "properties": {
                                  "volumeName": {
                                    "description": "This must match the Name of a Volume.",
                                    "type": "string"
                                  },
                                  "mountPath": {
                                    "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                    "type": "string"
                                  },
                                  "subPath": {
                                    "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "volumeName"
                              ]
                            },
                            "probes": {
                              "description": "List of probes for the container.",
                              "type": "array",
                              "items": {
                                "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                "type": "object",
                                "properties": {
                                  "failureThreshold": {
                                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "httpGet": {
                                    "description": "HTTPGet specifies the http request to perform.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                        "type": "array",
                                        "items": {
                                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "value"
                                          ],
                                          "properties": {
                                            "name": {
                                              "description": "The header field name",
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The header field value",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "name"
                                        ]
                                      },
                                      "path": {
                                        "description": "Path to access on the HTTP server.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "scheme": {
                                        "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                        "enum": [
                                          "HTTP",
                                          "HTTPS"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "Scheme",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  },
                                  "initialDelaySeconds": {
                                    "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "periodSeconds": {
                                    "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "successThreshold": {
                                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "timeoutSeconds": {
                                    "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "type": {
                                    "description": "The type of probe.",
                                    "enum": [
                                      "Liveness",
                                      "Readiness",
                                      "Startup"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "Type",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "type"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "scale": {
                        "description": "Scaling properties for the Container App.",
                        "type": "object",
                        "properties": {
                          "minReplicas": {
                            "format": "int32",
                            "description": "Optional. Minimum number of container replicas.",
                            "type": "integer"
                          },
                          "maxReplicas": {
                            "format": "int32",
                            "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
                            "type": "integer",
                            "default": 10
                          },
                          "cooldownPeriod": {
                            "format": "int32",
                            "description": "Optional. KEDA Cooldown Period in seconds. Defaults to 300 seconds if not set.",
                            "type": "integer"
                          },
                          "pollingInterval": {
                            "format": "int32",
                            "description": "Optional. KEDA Polling Interval in seconds. Defaults to 30 seconds if not set.",
                            "type": "integer"
                          },
                          "rules": {
                            "description": "Scaling rules.",
                            "type": "array",
                            "items": {
                              "description": "Container App container scaling rule.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Scale Rule Name",
                                  "type": "string"
                                },
                                "azureQueue": {
                                  "description": "Azure Queue based scaling.",
                                  "type": "object",
                                  "properties": {
                                    "accountName": {
                                      "description": "Storage account name. required if using managed identity to authenticate",
                                      "type": "string"
                                    },
                                    "queueName": {
                                      "description": "Queue name.",
                                      "type": "string"
                                    },
                                    "queueLength": {
                                      "format": "int32",
                                      "description": "Queue length.",
                                      "type": "integer"
                                    },
                                    "auth": {
                                      "description": "Authentication secrets for the queue scale rule.",
                                      "type": "array",
                                      "items": {
                                        "description": "Auth Secrets for Scale Rule",
                                        "type": "object",
                                        "properties": {
                                          "secretRef": {
                                            "description": "Name of the secret from which to pull the auth params.",
                                            "type": "string"
                                          },
                                          "triggerParameter": {
                                            "description": "Trigger Parameter that uses the secret",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "triggerParameter"
                                      ]
                                    },
                                    "identity": {
                                      "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "custom": {
                                  "description": "Custom scale rule.",
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "description": "Metadata properties to describe custom scale rule.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "auth": {
                                      "description": "Authentication secrets for the custom scale rule.",
                                      "type": "array",
                                      "items": {
                                        "description": "Auth Secrets for Scale Rule",
                                        "type": "object",
                                        "properties": {
                                          "secretRef": {
                                            "description": "Name of the secret from which to pull the auth params.",
                                            "type": "string"
                                          },
                                          "triggerParameter": {
                                            "description": "Trigger Parameter that uses the secret",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "triggerParameter"
                                      ]
                                    },
                                    "identity": {
                                      "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "http": {
                                  "description": "HTTP requests based scaling.",
                                  "type": "object",
                                  "properties": {
                                    "metadata": {
                                      "description": "Metadata properties to describe http scale rule.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "auth": {
                                      "description": "Authentication secrets for the custom scale rule.",
                                      "type": "array",
                                      "items": {
                                        "description": "Auth Secrets for Scale Rule",
                                        "type": "object",
                                        "properties": {
                                          "secretRef": {
                                            "description": "Name of the secret from which to pull the auth params.",
                                            "type": "string"
                                          },
                                          "triggerParameter": {
                                            "description": "Trigger Parameter that uses the secret",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "triggerParameter"
                                      ]
                                    },
                                    "identity": {
                                      "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "tcp": {
                                  "description": "Tcp requests based scaling.",
                                  "type": "object",
                                  "properties": {
                                    "metadata": {
                                      "description": "Metadata properties to describe tcp scale rule.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "auth": {
                                      "description": "Authentication secrets for the tcp scale rule.",
                                      "type": "array",
                                      "items": {
                                        "description": "Auth Secrets for Scale Rule",
                                        "type": "object",
                                        "properties": {
                                          "secretRef": {
                                            "description": "Name of the secret from which to pull the auth params.",
                                            "type": "string"
                                          },
                                          "triggerParameter": {
                                            "description": "Trigger Parameter that uses the secret",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "triggerParameter"
                                      ]
                                    },
                                    "identity": {
                                      "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          }
                        }
                      },
                      "volumes": {
                        "description": "List of volume definitions for the Container App.",
                        "type": "array",
                        "items": {
                          "description": "Volume definitions for the Container App.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Volume name.",
                              "type": "string"
                            },
                            "storageType": {
                              "description": "Storage type for the volume. If not provided, use EmptyDir.",
                              "enum": [
                                "AzureFile",
                                "EmptyDir",
                                "Secret",
                                "NfsAzureFile"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "StorageType",
                                "modelAsString": true
                              }
                            },
                            "storageName": {
                              "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                              "type": "string"
                            },
                            "secrets": {
                              "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                              "type": "array",
                              "items": {
                                "description": "Secret to be added to volume.",
                                "type": "object",
                                "properties": {
                                  "secretRef": {
                                    "description": "Name of the Container App secret from which to pull the secret value.",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "secretRef"
                              ]
                            },
                            "mountOptions": {
                              "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "serviceBinds": {
                        "description": "List of container app services bound to the app",
                        "type": "array",
                        "items": {
                          "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
                          "type": "object",
                          "properties": {
                            "serviceId": {
                              "description": "Resource id of the target service",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the service bind",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifier": [
                          "name"
                        ]
                      }
                    }
                  },
                  "active": {
                    "description": "Boolean describing if the Revision is Active",
                    "type": "boolean",
                    "readOnly": true
                  },
                  "replicas": {
                    "format": "int32",
                    "description": "Number of pods currently running for this revision",
                    "type": "integer",
                    "readOnly": true
                  },
                  "trafficWeight": {
                    "format": "int32",
                    "description": "Traffic weight assigned to this revision",
                    "type": "integer",
                    "readOnly": true
                  },
                  "provisioningError": {
                    "description": "Optional Field - Platform Error Message",
                    "type": "string",
                    "readOnly": true
                  },
                  "healthState": {
                    "description": "Current health State of the revision",
                    "enum": [
                      "Healthy",
                      "Unhealthy",
                      "None"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "RevisionHealthState",
                      "modelAsString": true
                    }
                  },
                  "provisioningState": {
                    "description": "Current provisioning State of the revision",
                    "enum": [
                      "Provisioning",
                      "Provisioned",
                      "Failed",
                      "Deprovisioning",
                      "Deprovisioned"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "RevisionProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "runningState": {
                    "description": "Current running state of the revision",
                    "enum": [
                      "Running",
                      "Processing",
                      "Stopped",
                      "Degraded",
                      "Failed",
                      "Unknown"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "RevisionRunningState",
                      "modelAsString": true
                    }
                  }
                },
                "x-ms-client-flatten": true
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Replica": {
      "description": "Container App Revision Replica.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Replica resource specific properties",
          "type": "object",
          "properties": {
            "createdTime": {
              "type": "string",
              "description": "Timestamp describing when the pod was created by controller",
              "format": "date-time",
              "readOnly": true
            },
            "runningState": {
              "description": "Current running state of the replica",
              "enum": [
                "Running",
                "NotRunning",
                "Unknown"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "ContainerAppReplicaRunningState",
                "modelAsString": true
              }
            },
            "runningStateDetails": {
              "description": "The details of replica current running state",
              "type": "string",
              "readOnly": true
            },
            "containers": {
              "description": "The containers collection under a replica.",
              "type": "array",
              "items": {
                "description": "Container object under Container App Revision Replica.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The Name of the Container",
                    "type": "string"
                  },
                  "containerId": {
                    "description": "The Id of the Container",
                    "type": "string"
                  },
                  "ready": {
                    "description": "The container ready status",
                    "type": "boolean"
                  },
                  "started": {
                    "description": "The container start status",
                    "type": "boolean"
                  },
                  "restartCount": {
                    "format": "int32",
                    "description": "The container restart count",
                    "type": "integer"
                  },
                  "runningState": {
                    "description": "Current running state of the container",
                    "enum": [
                      "Running",
                      "Terminated",
                      "Waiting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ContainerAppContainerRunningState",
                      "modelAsString": true
                    }
                  },
                  "runningStateDetails": {
                    "description": "The details of container current running state",
                    "type": "string",
                    "readOnly": true
                  },
                  "logStreamEndpoint": {
                    "description": "Log Stream endpoint",
                    "type": "string",
                    "readOnly": true
                  },
                  "execEndpoint": {
                    "description": "Container exec endpoint",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "initContainers": {
              "description": "The init containers collection under a replica.",
              "type": "array",
              "items": {
                "description": "Container object under Container App Revision Replica.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The Name of the Container",
                    "type": "string"
                  },
                  "containerId": {
                    "description": "The Id of the Container",
                    "type": "string"
                  },
                  "ready": {
                    "description": "The container ready status",
                    "type": "boolean"
                  },
                  "started": {
                    "description": "The container start status",
                    "type": "boolean"
                  },
                  "restartCount": {
                    "format": "int32",
                    "description": "The container restart count",
                    "type": "integer"
                  },
                  "runningState": {
                    "description": "Current running state of the container",
                    "enum": [
                      "Running",
                      "Terminated",
                      "Waiting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ContainerAppContainerRunningState",
                      "modelAsString": true
                    }
                  },
                  "runningStateDetails": {
                    "description": "The details of container current running state",
                    "type": "string",
                    "readOnly": true
                  },
                  "logStreamEndpoint": {
                    "description": "Log Stream endpoint",
                    "type": "string",
                    "readOnly": true
                  },
                  "execEndpoint": {
                    "description": "Container exec endpoint",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ReplicaCollection": {
      "description": "Container App Revision Replicas collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "Container App Revision Replica.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Replica resource specific properties",
                "type": "object",
                "properties": {
                  "createdTime": {
                    "type": "string",
                    "description": "Timestamp describing when the pod was created by controller",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "runningState": {
                    "description": "Current running state of the replica",
                    "enum": [
                      "Running",
                      "NotRunning",
                      "Unknown"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "ContainerAppReplicaRunningState",
                      "modelAsString": true
                    }
                  },
                  "runningStateDetails": {
                    "description": "The details of replica current running state",
                    "type": "string",
                    "readOnly": true
                  },
                  "containers": {
                    "description": "The containers collection under a replica.",
                    "type": "array",
                    "items": {
                      "description": "Container object under Container App Revision Replica.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The Name of the Container",
                          "type": "string"
                        },
                        "containerId": {
                          "description": "The Id of the Container",
                          "type": "string"
                        },
                        "ready": {
                          "description": "The container ready status",
                          "type": "boolean"
                        },
                        "started": {
                          "description": "The container start status",
                          "type": "boolean"
                        },
                        "restartCount": {
                          "format": "int32",
                          "description": "The container restart count",
                          "type": "integer"
                        },
                        "runningState": {
                          "description": "Current running state of the container",
                          "enum": [
                            "Running",
                            "Terminated",
                            "Waiting"
                          ],
                          "type": "string",
                          "readOnly": true,
                          "x-ms-enum": {
                            "name": "ContainerAppContainerRunningState",
                            "modelAsString": true
                          }
                        },
                        "runningStateDetails": {
                          "description": "The details of container current running state",
                          "type": "string",
                          "readOnly": true
                        },
                        "logStreamEndpoint": {
                          "description": "Log Stream endpoint",
                          "type": "string",
                          "readOnly": true
                        },
                        "execEndpoint": {
                          "description": "Container exec endpoint",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "initContainers": {
                    "description": "The init containers collection under a replica.",
                    "type": "array",
                    "items": {
                      "description": "Container object under Container App Revision Replica.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The Name of the Container",
                          "type": "string"
                        },
                        "containerId": {
                          "description": "The Id of the Container",
                          "type": "string"
                        },
                        "ready": {
                          "description": "The container ready status",
                          "type": "boolean"
                        },
                        "started": {
                          "description": "The container start status",
                          "type": "boolean"
                        },
                        "restartCount": {
                          "format": "int32",
                          "description": "The container restart count",
                          "type": "integer"
                        },
                        "runningState": {
                          "description": "Current running state of the container",
                          "enum": [
                            "Running",
                            "Terminated",
                            "Waiting"
                          ],
                          "type": "string",
                          "readOnly": true,
                          "x-ms-enum": {
                            "name": "ContainerAppContainerRunningState",
                            "modelAsString": true
                          }
                        },
                        "runningStateDetails": {
                          "description": "The details of container current running state",
                          "type": "string",
                          "readOnly": true
                        },
                        "logStreamEndpoint": {
                          "description": "Log Stream endpoint",
                          "type": "string",
                          "readOnly": true
                        },
                        "execEndpoint": {
                          "description": "Container exec endpoint",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  }
                },
                "x-ms-client-flatten": true
              }
            }
          }
        }
      }
    },
    "ReplicaContainer": {
      "description": "Container object under Container App Revision Replica.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The Name of the Container",
          "type": "string"
        },
        "containerId": {
          "description": "The Id of the Container",
          "type": "string"
        },
        "ready": {
          "description": "The container ready status",
          "type": "boolean"
        },
        "started": {
          "description": "The container start status",
          "type": "boolean"
        },
        "restartCount": {
          "format": "int32",
          "description": "The container restart count",
          "type": "integer"
        },
        "runningState": {
          "description": "Current running state of the container",
          "enum": [
            "Running",
            "Terminated",
            "Waiting"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ContainerAppContainerRunningState",
            "modelAsString": true
          }
        },
        "runningStateDetails": {
          "description": "The details of container current running state",
          "type": "string",
          "readOnly": true
        },
        "logStreamEndpoint": {
          "description": "Log Stream endpoint",
          "type": "string",
          "readOnly": true
        },
        "execEndpoint": {
          "description": "Container exec endpoint",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiagnosticsCollection": {
      "description": "Diagnostics data collection for a resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of diagnostic data.",
          "type": "array",
          "items": {
            "description": "Diagnostics data for a resource.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Diagnostics resource specific properties",
                "type": "object",
                "properties": {
                  "metadata": {
                    "description": "Metadata of the diagnostics response.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique detector name",
                        "type": "string",
                        "readOnly": true
                      },
                      "name": {
                        "description": "Display Name of the detector",
                        "type": "string",
                        "readOnly": true
                      },
                      "description": {
                        "description": "Details of the diagnostics info",
                        "type": "string",
                        "readOnly": true
                      },
                      "author": {
                        "description": "Authors' names of the detector",
                        "type": "string",
                        "readOnly": true
                      },
                      "category": {
                        "description": "Category of the detector",
                        "type": "string",
                        "readOnly": true
                      },
                      "supportTopicList": {
                        "description": "List of support topics",
                        "type": "array",
                        "items": {
                          "description": "Support topic information",
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Unique topic identifier",
                              "type": "string",
                              "readOnly": true
                            },
                            "pesId": {
                              "description": "PES identifier",
                              "type": "string",
                              "readOnly": true
                            }
                          }
                        }
                      },
                      "analysisTypes": {
                        "description": "List of analysis types",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "type": {
                        "description": "Authors' names of the detector",
                        "type": "string",
                        "readOnly": true
                      },
                      "score": {
                        "description": "Authors' names of the detector",
                        "type": "number",
                        "readOnly": true
                      }
                    }
                  },
                  "dataset": {
                    "description": "Set of data collections associated with the response.",
                    "type": "array",
                    "items": {
                      "description": "Diagnostics data returned from a detector",
                      "type": "object",
                      "properties": {
                        "table": {
                          "description": "Table response",
                          "type": "object",
                          "properties": {
                            "tableName": {
                              "description": "Table name",
                              "type": "string"
                            },
                            "columns": {
                              "description": "Columns in the table",
                              "type": "array",
                              "items": {
                                "description": "Diagnostics data column",
                                "type": "object",
                                "properties": {
                                  "columnName": {
                                    "description": "Column name",
                                    "type": "string"
                                  },
                                  "dataType": {
                                    "description": "Data type of the column",
                                    "type": "string"
                                  },
                                  "columnType": {
                                    "description": "Column type",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "columnName"
                              ]
                            },
                            "rows": {
                              "description": "Rows in the table",
                              "type": "array",
                              "items": {
                                "type": "object"
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "renderingProperties": {
                          "description": "Details of the table response",
                          "type": "object",
                          "properties": {
                            "type": {
                              "format": "int32",
                              "description": "Rendering type",
                              "type": "integer"
                            },
                            "title": {
                              "description": "Title of the table",
                              "type": "string"
                            },
                            "description": {
                              "description": "Description of the table",
                              "type": "string"
                            },
                            "isVisible": {
                              "description": "Flag if the table should be rendered",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "status": {
                    "description": "Status of the diagnostics response.",
                    "type": "object",
                    "properties": {
                      "message": {
                        "description": "Diagnostic message",
                        "type": "string"
                      },
                      "statusId": {
                        "format": "int32",
                        "description": "Status",
                        "type": "integer"
                      }
                    }
                  },
                  "dataProviderMetadata": {
                    "description": "List of data providers' metadata.",
                    "type": "object",
                    "properties": {
                      "providerName": {
                        "description": "Name of data provider",
                        "type": "string"
                      },
                      "propertyBag": {
                        "description": "Collection of properties",
                        "type": "array",
                        "items": {
                          "description": "Property details",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Property name",
                              "type": "string"
                            },
                            "value": {
                              "description": "Property value",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Diagnostics": {
      "description": "Diagnostics data for a resource.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Diagnostics resource specific properties",
          "type": "object",
          "properties": {
            "metadata": {
              "description": "Metadata of the diagnostics response.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Unique detector name",
                  "type": "string",
                  "readOnly": true
                },
                "name": {
                  "description": "Display Name of the detector",
                  "type": "string",
                  "readOnly": true
                },
                "description": {
                  "description": "Details of the diagnostics info",
                  "type": "string",
                  "readOnly": true
                },
                "author": {
                  "description": "Authors' names of the detector",
                  "type": "string",
                  "readOnly": true
                },
                "category": {
                  "description": "Category of the detector",
                  "type": "string",
                  "readOnly": true
                },
                "supportTopicList": {
                  "description": "List of support topics",
                  "type": "array",
                  "items": {
                    "description": "Support topic information",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique topic identifier",
                        "type": "string",
                        "readOnly": true
                      },
                      "pesId": {
                        "description": "PES identifier",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  }
                },
                "analysisTypes": {
                  "description": "List of analysis types",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Authors' names of the detector",
                  "type": "string",
                  "readOnly": true
                },
                "score": {
                  "description": "Authors' names of the detector",
                  "type": "number",
                  "readOnly": true
                }
              }
            },
            "dataset": {
              "description": "Set of data collections associated with the response.",
              "type": "array",
              "items": {
                "description": "Diagnostics data returned from a detector",
                "type": "object",
                "properties": {
                  "table": {
                    "description": "Table response",
                    "type": "object",
                    "properties": {
                      "tableName": {
                        "description": "Table name",
                        "type": "string"
                      },
                      "columns": {
                        "description": "Columns in the table",
                        "type": "array",
                        "items": {
                          "description": "Diagnostics data column",
                          "type": "object",
                          "properties": {
                            "columnName": {
                              "description": "Column name",
                              "type": "string"
                            },
                            "dataType": {
                              "description": "Data type of the column",
                              "type": "string"
                            },
                            "columnType": {
                              "description": "Column type",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "columnName"
                        ]
                      },
                      "rows": {
                        "description": "Rows in the table",
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "renderingProperties": {
                    "description": "Details of the table response",
                    "type": "object",
                    "properties": {
                      "type": {
                        "format": "int32",
                        "description": "Rendering type",
                        "type": "integer"
                      },
                      "title": {
                        "description": "Title of the table",
                        "type": "string"
                      },
                      "description": {
                        "description": "Description of the table",
                        "type": "string"
                      },
                      "isVisible": {
                        "description": "Flag if the table should be rendered",
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "status": {
              "description": "Status of the diagnostics response.",
              "type": "object",
              "properties": {
                "message": {
                  "description": "Diagnostic message",
                  "type": "string"
                },
                "statusId": {
                  "format": "int32",
                  "description": "Status",
                  "type": "integer"
                }
              }
            },
            "dataProviderMetadata": {
              "description": "List of data providers' metadata.",
              "type": "object",
              "properties": {
                "providerName": {
                  "description": "Name of data provider",
                  "type": "string"
                },
                "propertyBag": {
                  "description": "Collection of properties",
                  "type": "array",
                  "items": {
                    "description": "Property details",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Property name",
                        "type": "string"
                      },
                      "value": {
                        "description": "Property value",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "DiagnosticsDefinition": {
      "description": "Metadata of the diagnostics response",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique detector name",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Display Name of the detector",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Details of the diagnostics info",
          "type": "string",
          "readOnly": true
        },
        "author": {
          "description": "Authors' names of the detector",
          "type": "string",
          "readOnly": true
        },
        "category": {
          "description": "Category of the detector",
          "type": "string",
          "readOnly": true
        },
        "supportTopicList": {
          "description": "List of support topics",
          "type": "array",
          "items": {
            "description": "Support topic information",
            "type": "object",
            "properties": {
              "id": {
                "description": "Unique topic identifier",
                "type": "string",
                "readOnly": true
              },
              "pesId": {
                "description": "PES identifier",
                "type": "string",
                "readOnly": true
              }
            }
          }
        },
        "analysisTypes": {
          "description": "List of analysis types",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "Authors' names of the detector",
          "type": "string",
          "readOnly": true
        },
        "score": {
          "description": "Authors' names of the detector",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "DiagnosticSupportTopic": {
      "description": "Support topic information",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique topic identifier",
          "type": "string",
          "readOnly": true
        },
        "pesId": {
          "description": "PES identifier",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiagnosticsDataApiResponse": {
      "description": "Diagnostics data returned from a detector",
      "type": "object",
      "properties": {
        "table": {
          "description": "Table response",
          "type": "object",
          "properties": {
            "tableName": {
              "description": "Table name",
              "type": "string"
            },
            "columns": {
              "description": "Columns in the table",
              "type": "array",
              "items": {
                "description": "Diagnostics data column",
                "type": "object",
                "properties": {
                  "columnName": {
                    "description": "Column name",
                    "type": "string"
                  },
                  "dataType": {
                    "description": "Data type of the column",
                    "type": "string"
                  },
                  "columnType": {
                    "description": "Column type",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "columnName"
              ]
            },
            "rows": {
              "description": "Rows in the table",
              "type": "array",
              "items": {
                "type": "object"
              },
              "x-ms-identifiers": []
            }
          }
        },
        "renderingProperties": {
          "description": "Details of the table response",
          "type": "object",
          "properties": {
            "type": {
              "format": "int32",
              "description": "Rendering type",
              "type": "integer"
            },
            "title": {
              "description": "Title of the table",
              "type": "string"
            },
            "description": {
              "description": "Description of the table",
              "type": "string"
            },
            "isVisible": {
              "description": "Flag if the table should be rendered",
              "type": "boolean"
            }
          }
        }
      }
    },
    "DiagnosticDataTableResponseObject": {
      "description": "Diagnostics data table",
      "type": "object",
      "properties": {
        "tableName": {
          "description": "Table name",
          "type": "string"
        },
        "columns": {
          "description": "Columns in the table",
          "type": "array",
          "items": {
            "description": "Diagnostics data column",
            "type": "object",
            "properties": {
              "columnName": {
                "description": "Column name",
                "type": "string"
              },
              "dataType": {
                "description": "Data type of the column",
                "type": "string"
              },
              "columnType": {
                "description": "Column type",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "columnName"
          ]
        },
        "rows": {
          "description": "Rows in the table",
          "type": "array",
          "items": {
            "type": "object"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "DiagnosticDataTableResponseColumn": {
      "description": "Diagnostics data column",
      "type": "object",
      "properties": {
        "columnName": {
          "description": "Column name",
          "type": "string"
        },
        "dataType": {
          "description": "Data type of the column",
          "type": "string"
        },
        "columnType": {
          "description": "Column type",
          "type": "string"
        }
      }
    },
    "DiagnosticRendering": {
      "description": "Rendering details of a diagnostics table",
      "type": "object",
      "properties": {
        "type": {
          "format": "int32",
          "description": "Rendering type",
          "type": "integer"
        },
        "title": {
          "description": "Title of the table",
          "type": "string"
        },
        "description": {
          "description": "Description of the table",
          "type": "string"
        },
        "isVisible": {
          "description": "Flag if the table should be rendered",
          "type": "boolean"
        }
      }
    },
    "DiagnosticsStatus": {
      "description": "Rendering details of a diagnostics table",
      "type": "object",
      "properties": {
        "message": {
          "description": "Diagnostic message",
          "type": "string"
        },
        "statusId": {
          "format": "int32",
          "description": "Status",
          "type": "integer"
        }
      }
    },
    "DiagnosticDataProviderMetadata": {
      "description": "Details of a diagnostics data provider",
      "type": "object",
      "properties": {
        "providerName": {
          "description": "Name of data provider",
          "type": "string"
        },
        "propertyBag": {
          "description": "Collection of properties",
          "type": "array",
          "items": {
            "description": "Property details",
            "type": "object",
            "properties": {
              "name": {
                "description": "Property name",
                "type": "string"
              },
              "value": {
                "description": "Property value",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "AvailableOperations": {
      "description": "Available operations of the service",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of available operation details",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "description": "Operation detail payload",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the operation",
                "type": "string"
              },
              "isDataAction": {
                "description": "Indicates whether the operation is a data action",
                "type": "boolean"
              },
              "display": {
                "description": "Display of the operation",
                "type": "object",
                "properties": {
                  "provider": {
                    "description": "Resource provider of the operation",
                    "type": "string"
                  },
                  "resource": {
                    "description": "Resource of the operation",
                    "type": "string"
                  },
                  "operation": {
                    "description": "Localized friendly name for the operation",
                    "type": "string"
                  },
                  "description": {
                    "description": "Localized friendly description for the operation",
                    "type": "string"
                  }
                }
              },
              "origin": {
                "description": "Origin of the operation",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "description": "URL client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "OperationDetail": {
      "description": "Operation detail payload",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation",
          "type": "string"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        },
        "display": {
          "description": "Display of the operation",
          "type": "object",
          "properties": {
            "provider": {
              "description": "Resource provider of the operation",
              "type": "string"
            },
            "resource": {
              "description": "Resource of the operation",
              "type": "string"
            },
            "operation": {
              "description": "Localized friendly name for the operation",
              "type": "string"
            },
            "description": {
              "description": "Localized friendly description for the operation",
              "type": "string"
            }
          }
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        }
      }
    },
    "OperationDisplay": {
      "description": "Operation display payload",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Resource provider of the operation",
          "type": "string"
        },
        "resource": {
          "description": "Resource of the operation",
          "type": "string"
        },
        "operation": {
          "description": "Localized friendly name for the operation",
          "type": "string"
        },
        "description": {
          "description": "Localized friendly description for the operation",
          "type": "string"
        }
      }
    },
    "JavaComponentConfigurationProperty": {
      "description": "Configuration properties for a Java Component",
      "type": "object",
      "properties": {
        "propertyName": {
          "description": "The name of the property",
          "type": "string"
        },
        "value": {
          "description": "The value of the property",
          "type": "string"
        }
      }
    },
    "JavaComponentServiceBind": {
      "description": "Configuration to bind a Java Component to another Java Component",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the service bind",
          "type": "string"
        },
        "serviceId": {
          "description": "Resource id of the target service",
          "format": "arm-id",
          "type": "string"
        }
      }
    },
    "JavaComponent": {
      "description": "Java Component.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Java Component resource specific properties",
          "type": "object",
          "required": [
            "componentType"
          ],
          "properties": {
            "componentType": {
              "description": "Type of the Java Component.",
              "enum": [
                "SpringBootAdmin",
                "SpringCloudEureka",
                "SpringCloudConfig"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "JavaComponentType",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the Java Component.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting",
                "InProgress"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "JavaComponentProvisioningState",
                "modelAsString": true
              }
            },
            "configurations": {
              "description": "List of Java Components configuration properties",
              "type": "array",
              "items": {
                "description": "Configuration properties for a Java Component",
                "type": "object",
                "properties": {
                  "propertyName": {
                    "description": "The name of the property",
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of the property",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "propertyName"
              ]
            },
            "scale": {
              "description": "Java component scaling configurations",
              "type": "object",
              "properties": {
                "minReplicas": {
                  "format": "int32",
                  "description": "Optional. Minimum number of Java component replicas. Defaults to 1 if not set",
                  "type": "integer"
                },
                "maxReplicas": {
                  "format": "int32",
                  "description": "Optional. Maximum number of Java component replicas",
                  "type": "integer"
                }
              }
            },
            "serviceBinds": {
              "description": "List of Java Components that are bound to the Java component",
              "type": "array",
              "items": {
                "description": "Configuration to bind a Java Component to another Java Component",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the service bind",
                    "type": "string"
                  },
                  "serviceId": {
                    "description": "Resource id of the target service",
                    "format": "arm-id",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            }
          },
          "x-ms-client-flatten": true,
          "discriminator": "componentType"
        }
      }
    },
    "JavaComponentProperties": {
      "description": "Java Component common properties.",
      "type": "object",
      "required": [
        "componentType"
      ],
      "properties": {
        "componentType": {
          "description": "Type of the Java Component.",
          "enum": [
            "SpringBootAdmin",
            "SpringCloudEureka",
            "SpringCloudConfig"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "JavaComponentType",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "description": "Provisioning state of the Java Component.",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleting",
            "InProgress"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "JavaComponentProvisioningState",
            "modelAsString": true
          }
        },
        "configurations": {
          "description": "List of Java Components configuration properties",
          "type": "array",
          "items": {
            "description": "Configuration properties for a Java Component",
            "type": "object",
            "properties": {
              "propertyName": {
                "description": "The name of the property",
                "type": "string"
              },
              "value": {
                "description": "The value of the property",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "propertyName"
          ]
        },
        "scale": {
          "description": "Java component scaling configurations",
          "type": "object",
          "properties": {
            "minReplicas": {
              "format": "int32",
              "description": "Optional. Minimum number of Java component replicas. Defaults to 1 if not set",
              "type": "integer"
            },
            "maxReplicas": {
              "format": "int32",
              "description": "Optional. Maximum number of Java component replicas",
              "type": "integer"
            }
          }
        },
        "serviceBinds": {
          "description": "List of Java Components that are bound to the Java component",
          "type": "array",
          "items": {
            "description": "Configuration to bind a Java Component to another Java Component",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the service bind",
                "type": "string"
              },
              "serviceId": {
                "description": "Resource id of the target service",
                "format": "arm-id",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "x-ms-client-flatten": true,
      "discriminator": "componentType"
    },
    "JavaComponentIngress": {
      "description": "Container App Ingress configuration.",
      "type": "object",
      "properties": {
        "fqdn": {
          "description": "Hostname of the Java Component endpoint",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SpringBootAdminComponent": {
      "description": "Spring Boot Admin properties.",
      "type": "object",
      "allOf": [
        {
          "description": "Java Component common properties.",
          "type": "object",
          "required": [
            "componentType"
          ],
          "properties": {
            "componentType": {
              "description": "Type of the Java Component.",
              "enum": [
                "SpringBootAdmin",
                "SpringCloudEureka",
                "SpringCloudConfig"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "JavaComponentType",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the Java Component.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting",
                "InProgress"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "JavaComponentProvisioningState",
                "modelAsString": true
              }
            },
            "configurations": {
              "description": "List of Java Components configuration properties",
              "type": "array",
              "items": {
                "description": "Configuration properties for a Java Component",
                "type": "object",
                "properties": {
                  "propertyName": {
                    "description": "The name of the property",
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of the property",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "propertyName"
              ]
            },
            "scale": {
              "description": "Java component scaling configurations",
              "type": "object",
              "properties": {
                "minReplicas": {
                  "format": "int32",
                  "description": "Optional. Minimum number of Java component replicas. Defaults to 1 if not set",
                  "type": "integer"
                },
                "maxReplicas": {
                  "format": "int32",
                  "description": "Optional. Maximum number of Java component replicas",
                  "type": "integer"
                }
              }
            },
            "serviceBinds": {
              "description": "List of Java Components that are bound to the Java component",
              "type": "array",
              "items": {
                "description": "Configuration to bind a Java Component to another Java Component",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the service bind",
                    "type": "string"
                  },
                  "serviceId": {
                    "description": "Resource id of the target service",
                    "format": "arm-id",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            }
          },
          "x-ms-client-flatten": true,
          "discriminator": "componentType"
        }
      ],
      "properties": {
        "ingress": {
          "description": "Java Component Ingress configurations.",
          "type": "object",
          "properties": {
            "fqdn": {
              "description": "Hostname of the Java Component endpoint",
              "type": "string",
              "readOnly": true
            }
          }
        }
      },
      "x-ms-discriminator-value": "SpringBootAdmin"
    },
    "SpringCloudEurekaComponent": {
      "description": "Spring Cloud Eureka properties.",
      "type": "object",
      "allOf": [
        {
          "description": "Java Component common properties.",
          "type": "object",
          "required": [
            "componentType"
          ],
          "properties": {
            "componentType": {
              "description": "Type of the Java Component.",
              "enum": [
                "SpringBootAdmin",
                "SpringCloudEureka",
                "SpringCloudConfig"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "JavaComponentType",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the Java Component.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting",
                "InProgress"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "JavaComponentProvisioningState",
                "modelAsString": true
              }
            },
            "configurations": {
              "description": "List of Java Components configuration properties",
              "type": "array",
              "items": {
                "description": "Configuration properties for a Java Component",
                "type": "object",
                "properties": {
                  "propertyName": {
                    "description": "The name of the property",
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of the property",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "propertyName"
              ]
            },
            "scale": {
              "description": "Java component scaling configurations",
              "type": "object",
              "properties": {
                "minReplicas": {
                  "format": "int32",
                  "description": "Optional. Minimum number of Java component replicas. Defaults to 1 if not set",
                  "type": "integer"
                },
                "maxReplicas": {
                  "format": "int32",
                  "description": "Optional. Maximum number of Java component replicas",
                  "type": "integer"
                }
              }
            },
            "serviceBinds": {
              "description": "List of Java Components that are bound to the Java component",
              "type": "array",
              "items": {
                "description": "Configuration to bind a Java Component to another Java Component",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the service bind",
                    "type": "string"
                  },
                  "serviceId": {
                    "description": "Resource id of the target service",
                    "format": "arm-id",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            }
          },
          "x-ms-client-flatten": true,
          "discriminator": "componentType"
        }
      ],
      "properties": {
        "ingress": {
          "description": "Java Component Ingress configurations.",
          "type": "object",
          "properties": {
            "fqdn": {
              "description": "Hostname of the Java Component endpoint",
              "type": "string",
              "readOnly": true
            }
          }
        }
      },
      "x-ms-discriminator-value": "SpringCloudEureka"
    },
    "SpringCloudConfigComponent": {
      "description": "Spring Cloud Config properties.",
      "type": "object",
      "allOf": [
        {
          "description": "Java Component common properties.",
          "type": "object",
          "required": [
            "componentType"
          ],
          "properties": {
            "componentType": {
              "description": "Type of the Java Component.",
              "enum": [
                "SpringBootAdmin",
                "SpringCloudEureka",
                "SpringCloudConfig"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "JavaComponentType",
                "modelAsString": true
              }
            },
            "provisioningState": {
              "description": "Provisioning state of the Java Component.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting",
                "InProgress"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "JavaComponentProvisioningState",
                "modelAsString": true
              }
            },
            "configurations": {
              "description": "List of Java Components configuration properties",
              "type": "array",
              "items": {
                "description": "Configuration properties for a Java Component",
                "type": "object",
                "properties": {
                  "propertyName": {
                    "description": "The name of the property",
                    "type": "string"
                  },
                  "value": {
                    "description": "The value of the property",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "propertyName"
              ]
            },
            "scale": {
              "description": "Java component scaling configurations",
              "type": "object",
              "properties": {
                "minReplicas": {
                  "format": "int32",
                  "description": "Optional. Minimum number of Java component replicas. Defaults to 1 if not set",
                  "type": "integer"
                },
                "maxReplicas": {
                  "format": "int32",
                  "description": "Optional. Maximum number of Java component replicas",
                  "type": "integer"
                }
              }
            },
            "serviceBinds": {
              "description": "List of Java Components that are bound to the Java component",
              "type": "array",
              "items": {
                "description": "Configuration to bind a Java Component to another Java Component",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the service bind",
                    "type": "string"
                  },
                  "serviceId": {
                    "description": "Resource id of the target service",
                    "format": "arm-id",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            }
          },
          "x-ms-client-flatten": true,
          "discriminator": "componentType"
        }
      ],
      "properties": {},
      "x-ms-discriminator-value": "SpringCloudConfig"
    },
    "JavaComponentsCollection": {
      "description": "Java Components ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "Java Component.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Java Component resource specific properties",
                "type": "object",
                "required": [
                  "componentType"
                ],
                "properties": {
                  "componentType": {
                    "description": "Type of the Java Component.",
                    "enum": [
                      "SpringBootAdmin",
                      "SpringCloudEureka",
                      "SpringCloudConfig"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "JavaComponentType",
                      "modelAsString": true
                    }
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the Java Component.",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Deleting",
                      "InProgress"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "JavaComponentProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "configurations": {
                    "description": "List of Java Components configuration properties",
                    "type": "array",
                    "items": {
                      "description": "Configuration properties for a Java Component",
                      "type": "object",
                      "properties": {
                        "propertyName": {
                          "description": "The name of the property",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the property",
                          "type": "string"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "propertyName"
                    ]
                  },
                  "scale": {
                    "description": "Java component scaling configurations",
                    "type": "object",
                    "properties": {
                      "minReplicas": {
                        "format": "int32",
                        "description": "Optional. Minimum number of Java component replicas. Defaults to 1 if not set",
                        "type": "integer"
                      },
                      "maxReplicas": {
                        "format": "int32",
                        "description": "Optional. Maximum number of Java component replicas",
                        "type": "integer"
                      }
                    }
                  },
                  "serviceBinds": {
                    "description": "List of Java Components that are bound to the Java component",
                    "type": "array",
                    "items": {
                      "description": "Configuration to bind a Java Component to another Java Component",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the service bind",
                          "type": "string"
                        },
                        "serviceId": {
                          "description": "Resource id of the target service",
                          "format": "arm-id",
                          "type": "string"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  }
                },
                "x-ms-client-flatten": true,
                "discriminator": "componentType"
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JobConfiguration": {
      "description": "Non versioned Container Apps Job configuration properties",
      "type": "object",
      "required": [
        "replicaTimeout",
        "triggerType"
      ],
      "properties": {
        "secrets": {
          "description": "Collection of secrets used by a Container Apps Job",
          "type": "array",
          "items": {
            "description": "Secret definition.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Secret Name.",
                "type": "string"
              },
              "value": {
                "description": "Secret Value.",
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "update"
                ],
                "x-ms-secret": true
              },
              "identity": {
                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                "type": "string"
              },
              "keyVaultUrl": {
                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "triggerType": {
          "description": "Trigger type of the job",
          "enum": [
            "Schedule",
            "Event",
            "Manual"
          ],
          "type": "string",
          "default": "Manual",
          "x-ms-enum": {
            "name": "TriggerType",
            "modelAsString": true
          }
        },
        "replicaTimeout": {
          "description": "Maximum number of seconds a replica is allowed to run.",
          "format": "int32",
          "type": "integer"
        },
        "replicaRetryLimit": {
          "format": "int32",
          "description": "Maximum number of retries before failing the job.",
          "type": "integer"
        },
        "manualTriggerConfig": {
          "type": "object",
          "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
          "properties": {
            "replicaCompletionCount": {
              "description": "Minimum number of successful replica completions before overall job completion.",
              "format": "int32",
              "type": "integer"
            },
            "parallelism": {
              "description": "Number of parallel replicas of a job that can run at a given time.",
              "format": "int32",
              "type": "integer"
            }
          }
        },
        "scheduleTriggerConfig": {
          "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
          "required": [
            "cronExpression"
          ],
          "type": "object",
          "properties": {
            "replicaCompletionCount": {
              "description": "Minimum number of successful replica completions before overall job completion.",
              "format": "int32",
              "type": "integer"
            },
            "cronExpression": {
              "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job.",
              "type": "string"
            },
            "parallelism": {
              "description": "Number of parallel replicas of a job that can run at a given time.",
              "format": "int32",
              "type": "integer"
            }
          }
        },
        "eventTriggerConfig": {
          "type": "object",
          "description": "Trigger configuration of an event driven job.",
          "properties": {
            "replicaCompletionCount": {
              "description": "Minimum number of successful replica completions before overall job completion.",
              "format": "int32",
              "type": "integer"
            },
            "parallelism": {
              "description": "Number of parallel replicas of a job that can run at a given time.",
              "format": "int32",
              "type": "integer"
            },
            "scale": {
              "description": "Scaling configurations for event driven jobs.",
              "type": "object",
              "properties": {
                "pollingInterval": {
                  "description": "Interval to check each event source in seconds. Defaults to 30s",
                  "format": "int32",
                  "type": "integer"
                },
                "minExecutions": {
                  "format": "int32",
                  "description": "Minimum number of job executions that are created for a trigger, default 0",
                  "type": "integer",
                  "default": 0
                },
                "maxExecutions": {
                  "format": "int32",
                  "description": "Maximum number of job executions that are created for a trigger, default 100.",
                  "type": "integer",
                  "default": 100
                },
                "rules": {
                  "description": "Scaling rules.",
                  "type": "array",
                  "items": {
                    "description": "Scaling rule.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Scale Rule Name",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
                        "type": "string"
                      },
                      "metadata": {
                        "description": "Metadata properties to describe the scale rule.",
                        "type": "object"
                      },
                      "auth": {
                        "description": "Authentication secrets for the scale rule.",
                        "type": "array",
                        "items": {
                          "description": "Auth Secrets for Scale Rule",
                          "type": "object",
                          "properties": {
                            "secretRef": {
                              "description": "Name of the secret from which to pull the auth params.",
                              "type": "string"
                            },
                            "triggerParameter": {
                              "description": "Trigger Parameter that uses the secret",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "registries": {
          "description": "Collection of private container registry credentials used by a Container apps job",
          "type": "array",
          "items": {
            "description": "Container App Private Registry",
            "type": "object",
            "properties": {
              "server": {
                "description": "Container Registry Server",
                "type": "string"
              },
              "username": {
                "description": "Container Registry Username",
                "type": "string"
              },
              "passwordSecretRef": {
                "description": "The name of the Secret that contains the registry login password",
                "type": "string"
              },
              "identity": {
                "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "server"
          ]
        },
        "identitySettings": {
          "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.",
          "type": "array",
          "items": {
            "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
            "type": "object",
            "required": [
              "identity"
            ],
            "properties": {
              "identity": {
                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                "type": "string"
              },
              "lifecycle": {
                "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                "enum": [
                  "Init",
                  "Main",
                  "None",
                  "All"
                ],
                "type": "string",
                "default": "All",
                "x-ms-enum": {
                  "name": "IdentitySettingsLifeCycle",
                  "modelAsString": true
                }
              }
            }
          },
          "x-ms-identifiers": [
            "identity"
          ]
        }
      }
    },
    "Job": {
      "type": "object",
      "description": "Container App Job",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "description": "Container Apps Job resource specific properties.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Container Apps Job.",
              "enum": [
                "InProgress",
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "JobProvisioningState",
                "modelAsString": true
              }
            },
            "environmentId": {
              "description": "Resource ID of environment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "workloadProfileName": {
              "description": "Workload profile name to pin for container apps job execution.",
              "type": "string"
            },
            "configuration": {
              "description": "Container Apps Job configuration properties.",
              "type": "object",
              "required": [
                "replicaTimeout",
                "triggerType"
              ],
              "properties": {
                "secrets": {
                  "description": "Collection of secrets used by a Container Apps Job",
                  "type": "array",
                  "items": {
                    "description": "Secret definition.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Secret Name.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Secret Value.",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "update"
                        ],
                        "x-ms-secret": true
                      },
                      "identity": {
                        "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                        "type": "string"
                      },
                      "keyVaultUrl": {
                        "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "triggerType": {
                  "description": "Trigger type of the job",
                  "enum": [
                    "Schedule",
                    "Event",
                    "Manual"
                  ],
                  "type": "string",
                  "default": "Manual",
                  "x-ms-enum": {
                    "name": "TriggerType",
                    "modelAsString": true
                  }
                },
                "replicaTimeout": {
                  "description": "Maximum number of seconds a replica is allowed to run.",
                  "format": "int32",
                  "type": "integer"
                },
                "replicaRetryLimit": {
                  "format": "int32",
                  "description": "Maximum number of retries before failing the job.",
                  "type": "integer"
                },
                "manualTriggerConfig": {
                  "type": "object",
                  "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
                  "properties": {
                    "replicaCompletionCount": {
                      "description": "Minimum number of successful replica completions before overall job completion.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parallelism": {
                      "description": "Number of parallel replicas of a job that can run at a given time.",
                      "format": "int32",
                      "type": "integer"
                    }
                  }
                },
                "scheduleTriggerConfig": {
                  "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
                  "required": [
                    "cronExpression"
                  ],
                  "type": "object",
                  "properties": {
                    "replicaCompletionCount": {
                      "description": "Minimum number of successful replica completions before overall job completion.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "cronExpression": {
                      "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job.",
                      "type": "string"
                    },
                    "parallelism": {
                      "description": "Number of parallel replicas of a job that can run at a given time.",
                      "format": "int32",
                      "type": "integer"
                    }
                  }
                },
                "eventTriggerConfig": {
                  "type": "object",
                  "description": "Trigger configuration of an event driven job.",
                  "properties": {
                    "replicaCompletionCount": {
                      "description": "Minimum number of successful replica completions before overall job completion.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parallelism": {
                      "description": "Number of parallel replicas of a job that can run at a given time.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "scale": {
                      "description": "Scaling configurations for event driven jobs.",
                      "type": "object",
                      "properties": {
                        "pollingInterval": {
                          "description": "Interval to check each event source in seconds. Defaults to 30s",
                          "format": "int32",
                          "type": "integer"
                        },
                        "minExecutions": {
                          "format": "int32",
                          "description": "Minimum number of job executions that are created for a trigger, default 0",
                          "type": "integer",
                          "default": 0
                        },
                        "maxExecutions": {
                          "format": "int32",
                          "description": "Maximum number of job executions that are created for a trigger, default 100.",
                          "type": "integer",
                          "default": 100
                        },
                        "rules": {
                          "description": "Scaling rules.",
                          "type": "array",
                          "items": {
                            "description": "Scaling rule.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Scale Rule Name",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Metadata properties to describe the scale rule.",
                                "type": "object"
                              },
                              "auth": {
                                "description": "Authentication secrets for the scale rule.",
                                "type": "array",
                                "items": {
                                  "description": "Auth Secrets for Scale Rule",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the secret from which to pull the auth params.",
                                      "type": "string"
                                    },
                                    "triggerParameter": {
                                      "description": "Trigger Parameter that uses the secret",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "registries": {
                  "description": "Collection of private container registry credentials used by a Container apps job",
                  "type": "array",
                  "items": {
                    "description": "Container App Private Registry",
                    "type": "object",
                    "properties": {
                      "server": {
                        "description": "Container Registry Server",
                        "type": "string"
                      },
                      "username": {
                        "description": "Container Registry Username",
                        "type": "string"
                      },
                      "passwordSecretRef": {
                        "description": "The name of the Secret that contains the registry login password",
                        "type": "string"
                      },
                      "identity": {
                        "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "server"
                  ]
                },
                "identitySettings": {
                  "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.",
                  "type": "array",
                  "items": {
                    "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                    "type": "object",
                    "required": [
                      "identity"
                    ],
                    "properties": {
                      "identity": {
                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                        "type": "string"
                      },
                      "lifecycle": {
                        "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                        "enum": [
                          "Init",
                          "Main",
                          "None",
                          "All"
                        ],
                        "type": "string",
                        "default": "All",
                        "x-ms-enum": {
                          "name": "IdentitySettingsLifeCycle",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "identity"
                  ]
                }
              }
            },
            "template": {
              "description": "Container Apps job definition.",
              "type": "object",
              "properties": {
                "initContainers": {
                  "description": "List of specialized containers that run before app containers.",
                  "type": "array",
                  "items": {
                    "description": "Container App init container definition",
                    "type": "object",
                    "properties": {
                      "image": {
                        "description": "Container image tag.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Custom container name.",
                        "type": "string"
                      },
                      "command": {
                        "description": "Container start command.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "args": {
                        "description": "Container start command arguments.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "description": "Container environment variables.",
                        "type": "array",
                        "items": {
                          "description": "Container App container environment variable.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Environment variable name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Non-secret environment variable value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the environment variable value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "resources": {
                        "description": "Container resource requirements.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "format": "double",
                            "description": "Required CPU in cores, e.g. 0.5",
                            "type": "number"
                          },
                          "memory": {
                            "description": "Required memory, e.g. \"250Mb\"",
                            "type": "string"
                          },
                          "ephemeralStorage": {
                            "description": "Ephemeral Storage, e.g. \"1Gi\"",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "volumeMounts": {
                        "description": "Container volume mounts.",
                        "type": "array",
                        "items": {
                          "description": "Volume mount for the Container App.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "description": "This must match the Name of a Volume.",
                              "type": "string"
                            },
                            "mountPath": {
                              "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                              "type": "string"
                            },
                            "subPath": {
                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "volumeName"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "containers": {
                  "description": "List of container definitions for the Container App.",
                  "type": "array",
                  "items": {
                    "description": "Container App container definition",
                    "type": "object",
                    "properties": {
                      "image": {
                        "description": "Container image tag.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Custom container name.",
                        "type": "string"
                      },
                      "command": {
                        "description": "Container start command.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "args": {
                        "description": "Container start command arguments.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "description": "Container environment variables.",
                        "type": "array",
                        "items": {
                          "description": "Container App container environment variable.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Environment variable name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Non-secret environment variable value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the environment variable value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "resources": {
                        "description": "Container resource requirements.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "format": "double",
                            "description": "Required CPU in cores, e.g. 0.5",
                            "type": "number"
                          },
                          "memory": {
                            "description": "Required memory, e.g. \"250Mb\"",
                            "type": "string"
                          },
                          "ephemeralStorage": {
                            "description": "Ephemeral Storage, e.g. \"1Gi\"",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "volumeMounts": {
                        "description": "Container volume mounts.",
                        "type": "array",
                        "items": {
                          "description": "Volume mount for the Container App.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "description": "This must match the Name of a Volume.",
                              "type": "string"
                            },
                            "mountPath": {
                              "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                              "type": "string"
                            },
                            "subPath": {
                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "volumeName"
                        ]
                      },
                      "probes": {
                        "description": "List of probes for the container.",
                        "type": "array",
                        "items": {
                          "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                          "type": "object",
                          "properties": {
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "httpGet": {
                              "description": "HTTPGet specifies the http request to perform.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                  "type": "string"
                                },
                                "httpHeaders": {
                                  "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                  "type": "array",
                                  "items": {
                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "The header field name",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The header field value",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "name"
                                  ]
                                },
                                "path": {
                                  "description": "Path to access on the HTTP server.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "scheme": {
                                  "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                  "enum": [
                                    "HTTP",
                                    "HTTPS"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "Scheme",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "tcpSocket": {
                              "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "terminationGracePeriodSeconds": {
                              "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                              "type": "integer",
                              "format": "int64"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "description": "The type of probe.",
                              "enum": [
                                "Liveness",
                                "Readiness",
                                "Startup"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "Type",
                                "modelAsString": true
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "type"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "volumes": {
                  "description": "List of volume definitions for the Container App.",
                  "type": "array",
                  "items": {
                    "description": "Volume definitions for the Container App.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Volume name.",
                        "type": "string"
                      },
                      "storageType": {
                        "description": "Storage type for the volume. If not provided, use EmptyDir.",
                        "enum": [
                          "AzureFile",
                          "EmptyDir",
                          "Secret",
                          "NfsAzureFile"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "StorageType",
                          "modelAsString": true
                        }
                      },
                      "storageName": {
                        "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                        "type": "string"
                      },
                      "secrets": {
                        "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                        "type": "array",
                        "items": {
                          "description": "Secret to be added to volume.",
                          "type": "object",
                          "properties": {
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the secret value.",
                              "type": "string"
                            },
                            "path": {
                              "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "secretRef"
                        ]
                      },
                      "mountOptions": {
                        "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            },
            "outboundIpAddresses": {
              "description": "Outbound IP Addresses of a container apps job.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "eventStreamEndpoint": {
              "description": "The endpoint of the eventstream of the container apps job.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "JobPatchProperties": {
      "type": "object",
      "description": "Container Apps Job resource specific properties.",
      "properties": {
        "identity": {
          "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "properties": {
          "type": "object",
          "properties": {
            "environmentId": {
              "description": "Resource ID of environment.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read",
                "update"
              ]
            },
            "configuration": {
              "description": "Container Apps Job configuration properties.",
              "type": "object",
              "required": [
                "replicaTimeout",
                "triggerType"
              ],
              "properties": {
                "secrets": {
                  "description": "Collection of secrets used by a Container Apps Job",
                  "type": "array",
                  "items": {
                    "description": "Secret definition.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Secret Name.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Secret Value.",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "update"
                        ],
                        "x-ms-secret": true
                      },
                      "identity": {
                        "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                        "type": "string"
                      },
                      "keyVaultUrl": {
                        "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "triggerType": {
                  "description": "Trigger type of the job",
                  "enum": [
                    "Schedule",
                    "Event",
                    "Manual"
                  ],
                  "type": "string",
                  "default": "Manual",
                  "x-ms-enum": {
                    "name": "TriggerType",
                    "modelAsString": true
                  }
                },
                "replicaTimeout": {
                  "description": "Maximum number of seconds a replica is allowed to run.",
                  "format": "int32",
                  "type": "integer"
                },
                "replicaRetryLimit": {
                  "format": "int32",
                  "description": "Maximum number of retries before failing the job.",
                  "type": "integer"
                },
                "manualTriggerConfig": {
                  "type": "object",
                  "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
                  "properties": {
                    "replicaCompletionCount": {
                      "description": "Minimum number of successful replica completions before overall job completion.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parallelism": {
                      "description": "Number of parallel replicas of a job that can run at a given time.",
                      "format": "int32",
                      "type": "integer"
                    }
                  }
                },
                "scheduleTriggerConfig": {
                  "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
                  "required": [
                    "cronExpression"
                  ],
                  "type": "object",
                  "properties": {
                    "replicaCompletionCount": {
                      "description": "Minimum number of successful replica completions before overall job completion.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "cronExpression": {
                      "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job.",
                      "type": "string"
                    },
                    "parallelism": {
                      "description": "Number of parallel replicas of a job that can run at a given time.",
                      "format": "int32",
                      "type": "integer"
                    }
                  }
                },
                "eventTriggerConfig": {
                  "type": "object",
                  "description": "Trigger configuration of an event driven job.",
                  "properties": {
                    "replicaCompletionCount": {
                      "description": "Minimum number of successful replica completions before overall job completion.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parallelism": {
                      "description": "Number of parallel replicas of a job that can run at a given time.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "scale": {
                      "description": "Scaling configurations for event driven jobs.",
                      "type": "object",
                      "properties": {
                        "pollingInterval": {
                          "description": "Interval to check each event source in seconds. Defaults to 30s",
                          "format": "int32",
                          "type": "integer"
                        },
                        "minExecutions": {
                          "format": "int32",
                          "description": "Minimum number of job executions that are created for a trigger, default 0",
                          "type": "integer",
                          "default": 0
                        },
                        "maxExecutions": {
                          "format": "int32",
                          "description": "Maximum number of job executions that are created for a trigger, default 100.",
                          "type": "integer",
                          "default": 100
                        },
                        "rules": {
                          "description": "Scaling rules.",
                          "type": "array",
                          "items": {
                            "description": "Scaling rule.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Scale Rule Name",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Metadata properties to describe the scale rule.",
                                "type": "object"
                              },
                              "auth": {
                                "description": "Authentication secrets for the scale rule.",
                                "type": "array",
                                "items": {
                                  "description": "Auth Secrets for Scale Rule",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Name of the secret from which to pull the auth params.",
                                      "type": "string"
                                    },
                                    "triggerParameter": {
                                      "description": "Trigger Parameter that uses the secret",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "identity": {
                                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "registries": {
                  "description": "Collection of private container registry credentials used by a Container apps job",
                  "type": "array",
                  "items": {
                    "description": "Container App Private Registry",
                    "type": "object",
                    "properties": {
                      "server": {
                        "description": "Container Registry Server",
                        "type": "string"
                      },
                      "username": {
                        "description": "Container Registry Username",
                        "type": "string"
                      },
                      "passwordSecretRef": {
                        "description": "The name of the Secret that contains the registry login password",
                        "type": "string"
                      },
                      "identity": {
                        "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "server"
                  ]
                },
                "identitySettings": {
                  "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.",
                  "type": "array",
                  "items": {
                    "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                    "type": "object",
                    "required": [
                      "identity"
                    ],
                    "properties": {
                      "identity": {
                        "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                        "type": "string"
                      },
                      "lifecycle": {
                        "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                        "enum": [
                          "Init",
                          "Main",
                          "None",
                          "All"
                        ],
                        "type": "string",
                        "default": "All",
                        "x-ms-enum": {
                          "name": "IdentitySettingsLifeCycle",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "identity"
                  ]
                }
              }
            },
            "template": {
              "description": "Container Apps job definition.",
              "type": "object",
              "properties": {
                "initContainers": {
                  "description": "List of specialized containers that run before app containers.",
                  "type": "array",
                  "items": {
                    "description": "Container App init container definition",
                    "type": "object",
                    "properties": {
                      "image": {
                        "description": "Container image tag.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Custom container name.",
                        "type": "string"
                      },
                      "command": {
                        "description": "Container start command.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "args": {
                        "description": "Container start command arguments.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "description": "Container environment variables.",
                        "type": "array",
                        "items": {
                          "description": "Container App container environment variable.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Environment variable name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Non-secret environment variable value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the environment variable value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "resources": {
                        "description": "Container resource requirements.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "format": "double",
                            "description": "Required CPU in cores, e.g. 0.5",
                            "type": "number"
                          },
                          "memory": {
                            "description": "Required memory, e.g. \"250Mb\"",
                            "type": "string"
                          },
                          "ephemeralStorage": {
                            "description": "Ephemeral Storage, e.g. \"1Gi\"",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "volumeMounts": {
                        "description": "Container volume mounts.",
                        "type": "array",
                        "items": {
                          "description": "Volume mount for the Container App.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "description": "This must match the Name of a Volume.",
                              "type": "string"
                            },
                            "mountPath": {
                              "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                              "type": "string"
                            },
                            "subPath": {
                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "volumeName"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "containers": {
                  "description": "List of container definitions for the Container App.",
                  "type": "array",
                  "items": {
                    "description": "Container App container definition",
                    "type": "object",
                    "properties": {
                      "image": {
                        "description": "Container image tag.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Custom container name.",
                        "type": "string"
                      },
                      "command": {
                        "description": "Container start command.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "args": {
                        "description": "Container start command arguments.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "description": "Container environment variables.",
                        "type": "array",
                        "items": {
                          "description": "Container App container environment variable.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Environment variable name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Non-secret environment variable value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the environment variable value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "resources": {
                        "description": "Container resource requirements.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "format": "double",
                            "description": "Required CPU in cores, e.g. 0.5",
                            "type": "number"
                          },
                          "memory": {
                            "description": "Required memory, e.g. \"250Mb\"",
                            "type": "string"
                          },
                          "ephemeralStorage": {
                            "description": "Ephemeral Storage, e.g. \"1Gi\"",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      },
                      "volumeMounts": {
                        "description": "Container volume mounts.",
                        "type": "array",
                        "items": {
                          "description": "Volume mount for the Container App.",
                          "type": "object",
                          "properties": {
                            "volumeName": {
                              "description": "This must match the Name of a Volume.",
                              "type": "string"
                            },
                            "mountPath": {
                              "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                              "type": "string"
                            },
                            "subPath": {
                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "volumeName"
                        ]
                      },
                      "probes": {
                        "description": "List of probes for the container.",
                        "type": "array",
                        "items": {
                          "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                          "type": "object",
                          "properties": {
                            "failureThreshold": {
                              "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "httpGet": {
                              "description": "HTTPGet specifies the http request to perform.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                  "type": "string"
                                },
                                "httpHeaders": {
                                  "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                  "type": "array",
                                  "items": {
                                    "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "The header field name",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The header field value",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "name"
                                  ]
                                },
                                "path": {
                                  "description": "Path to access on the HTTP server.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "scheme": {
                                  "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                  "enum": [
                                    "HTTP",
                                    "HTTPS"
                                  ],
                                  "type": "string",
                                  "x-ms-enum": {
                                    "name": "Scheme",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "initialDelaySeconds": {
                              "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "periodSeconds": {
                              "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "successThreshold": {
                              "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "tcpSocket": {
                              "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "host": {
                                  "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                  "type": "string"
                                },
                                "port": {
                                  "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            },
                            "terminationGracePeriodSeconds": {
                              "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                              "type": "integer",
                              "format": "int64"
                            },
                            "timeoutSeconds": {
                              "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "type": {
                              "description": "The type of probe.",
                              "enum": [
                                "Liveness",
                                "Readiness",
                                "Startup"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "Type",
                                "modelAsString": true
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "type"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "volumes": {
                  "description": "List of volume definitions for the Container App.",
                  "type": "array",
                  "items": {
                    "description": "Volume definitions for the Container App.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Volume name.",
                        "type": "string"
                      },
                      "storageType": {
                        "description": "Storage type for the volume. If not provided, use EmptyDir.",
                        "enum": [
                          "AzureFile",
                          "EmptyDir",
                          "Secret",
                          "NfsAzureFile"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "StorageType",
                          "modelAsString": true
                        }
                      },
                      "storageName": {
                        "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                        "type": "string"
                      },
                      "secrets": {
                        "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                        "type": "array",
                        "items": {
                          "description": "Secret to be added to volume.",
                          "type": "object",
                          "properties": {
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the secret value.",
                              "type": "string"
                            },
                            "path": {
                              "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "secretRef"
                        ]
                      },
                      "mountOptions": {
                        "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            },
            "outboundIpAddresses": {
              "description": "Outbound IP Addresses of a container apps job.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "eventStreamEndpoint": {
              "description": "The endpoint of the eventstream of the container apps job.",
              "type": "string"
            }
          }
        }
      }
    },
    "JobsCollection": {
      "description": "Container Apps Jobs collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Container App Job",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "identity": {
                "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "properties": {
                "description": "Container Apps Job resource specific properties.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the Container Apps Job.",
                    "enum": [
                      "InProgress",
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "JobProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "environmentId": {
                    "description": "Resource ID of environment.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "workloadProfileName": {
                    "description": "Workload profile name to pin for container apps job execution.",
                    "type": "string"
                  },
                  "configuration": {
                    "description": "Container Apps Job configuration properties.",
                    "type": "object",
                    "required": [
                      "replicaTimeout",
                      "triggerType"
                    ],
                    "properties": {
                      "secrets": {
                        "description": "Collection of secrets used by a Container Apps Job",
                        "type": "array",
                        "items": {
                          "description": "Secret definition.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Secret Name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Secret Value.",
                              "type": "string",
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "x-ms-secret": true
                            },
                            "identity": {
                              "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                              "type": "string"
                            },
                            "keyVaultUrl": {
                              "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "triggerType": {
                        "description": "Trigger type of the job",
                        "enum": [
                          "Schedule",
                          "Event",
                          "Manual"
                        ],
                        "type": "string",
                        "default": "Manual",
                        "x-ms-enum": {
                          "name": "TriggerType",
                          "modelAsString": true
                        }
                      },
                      "replicaTimeout": {
                        "description": "Maximum number of seconds a replica is allowed to run.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "replicaRetryLimit": {
                        "format": "int32",
                        "description": "Maximum number of retries before failing the job.",
                        "type": "integer"
                      },
                      "manualTriggerConfig": {
                        "type": "object",
                        "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
                        "properties": {
                          "replicaCompletionCount": {
                            "description": "Minimum number of successful replica completions before overall job completion.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "parallelism": {
                            "description": "Number of parallel replicas of a job that can run at a given time.",
                            "format": "int32",
                            "type": "integer"
                          }
                        }
                      },
                      "scheduleTriggerConfig": {
                        "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
                        "required": [
                          "cronExpression"
                        ],
                        "type": "object",
                        "properties": {
                          "replicaCompletionCount": {
                            "description": "Minimum number of successful replica completions before overall job completion.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "cronExpression": {
                            "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job.",
                            "type": "string"
                          },
                          "parallelism": {
                            "description": "Number of parallel replicas of a job that can run at a given time.",
                            "format": "int32",
                            "type": "integer"
                          }
                        }
                      },
                      "eventTriggerConfig": {
                        "type": "object",
                        "description": "Trigger configuration of an event driven job.",
                        "properties": {
                          "replicaCompletionCount": {
                            "description": "Minimum number of successful replica completions before overall job completion.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "parallelism": {
                            "description": "Number of parallel replicas of a job that can run at a given time.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "scale": {
                            "description": "Scaling configurations for event driven jobs.",
                            "type": "object",
                            "properties": {
                              "pollingInterval": {
                                "description": "Interval to check each event source in seconds. Defaults to 30s",
                                "format": "int32",
                                "type": "integer"
                              },
                              "minExecutions": {
                                "format": "int32",
                                "description": "Minimum number of job executions that are created for a trigger, default 0",
                                "type": "integer",
                                "default": 0
                              },
                              "maxExecutions": {
                                "format": "int32",
                                "description": "Maximum number of job executions that are created for a trigger, default 100.",
                                "type": "integer",
                                "default": 100
                              },
                              "rules": {
                                "description": "Scaling rules.",
                                "type": "array",
                                "items": {
                                  "description": "Scaling rule.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Scale Rule Name",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "description": "Metadata properties to describe the scale rule.",
                                      "type": "object"
                                    },
                                    "auth": {
                                      "description": "Authentication secrets for the scale rule.",
                                      "type": "array",
                                      "items": {
                                        "description": "Auth Secrets for Scale Rule",
                                        "type": "object",
                                        "properties": {
                                          "secretRef": {
                                            "description": "Name of the secret from which to pull the auth params.",
                                            "type": "string"
                                          },
                                          "triggerParameter": {
                                            "description": "Trigger Parameter that uses the secret",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "identity": {
                                      "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "registries": {
                        "description": "Collection of private container registry credentials used by a Container apps job",
                        "type": "array",
                        "items": {
                          "description": "Container App Private Registry",
                          "type": "object",
                          "properties": {
                            "server": {
                              "description": "Container Registry Server",
                              "type": "string"
                            },
                            "username": {
                              "description": "Container Registry Username",
                              "type": "string"
                            },
                            "passwordSecretRef": {
                              "description": "The name of the Secret that contains the registry login password",
                              "type": "string"
                            },
                            "identity": {
                              "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "server"
                        ]
                      },
                      "identitySettings": {
                        "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.",
                        "type": "array",
                        "items": {
                          "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
                          "type": "object",
                          "required": [
                            "identity"
                          ],
                          "properties": {
                            "identity": {
                              "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                              "type": "string"
                            },
                            "lifecycle": {
                              "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
                              "enum": [
                                "Init",
                                "Main",
                                "None",
                                "All"
                              ],
                              "type": "string",
                              "default": "All",
                              "x-ms-enum": {
                                "name": "IdentitySettingsLifeCycle",
                                "modelAsString": true
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "identity"
                        ]
                      }
                    }
                  },
                  "template": {
                    "description": "Container Apps job definition.",
                    "type": "object",
                    "properties": {
                      "initContainers": {
                        "description": "List of specialized containers that run before app containers.",
                        "type": "array",
                        "items": {
                          "description": "Container App init container definition",
                          "type": "object",
                          "properties": {
                            "image": {
                              "description": "Container image tag.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Custom container name.",
                              "type": "string"
                            },
                            "command": {
                              "description": "Container start command.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "args": {
                              "description": "Container start command arguments.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "env": {
                              "description": "Container environment variables.",
                              "type": "array",
                              "items": {
                                "description": "Container App container environment variable.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Environment variable name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Non-secret environment variable value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "Name of the Container App secret from which to pull the environment variable value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Container resource requirements.",
                              "type": "object",
                              "properties": {
                                "cpu": {
                                  "format": "double",
                                  "description": "Required CPU in cores, e.g. 0.5",
                                  "type": "number"
                                },
                                "memory": {
                                  "description": "Required memory, e.g. \"250Mb\"",
                                  "type": "string"
                                },
                                "ephemeralStorage": {
                                  "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "volumeMounts": {
                              "description": "Container volume mounts.",
                              "type": "array",
                              "items": {
                                "description": "Volume mount for the Container App.",
                                "type": "object",
                                "properties": {
                                  "volumeName": {
                                    "description": "This must match the Name of a Volume.",
                                    "type": "string"
                                  },
                                  "mountPath": {
                                    "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                    "type": "string"
                                  },
                                  "subPath": {
                                    "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "volumeName"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "containers": {
                        "description": "List of container definitions for the Container App.",
                        "type": "array",
                        "items": {
                          "description": "Container App container definition",
                          "type": "object",
                          "properties": {
                            "image": {
                              "description": "Container image tag.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Custom container name.",
                              "type": "string"
                            },
                            "command": {
                              "description": "Container start command.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "args": {
                              "description": "Container start command arguments.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "env": {
                              "description": "Container environment variables.",
                              "type": "array",
                              "items": {
                                "description": "Container App container environment variable.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Environment variable name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Non-secret environment variable value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "Name of the Container App secret from which to pull the environment variable value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Container resource requirements.",
                              "type": "object",
                              "properties": {
                                "cpu": {
                                  "format": "double",
                                  "description": "Required CPU in cores, e.g. 0.5",
                                  "type": "number"
                                },
                                "memory": {
                                  "description": "Required memory, e.g. \"250Mb\"",
                                  "type": "string"
                                },
                                "ephemeralStorage": {
                                  "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            },
                            "volumeMounts": {
                              "description": "Container volume mounts.",
                              "type": "array",
                              "items": {
                                "description": "Volume mount for the Container App.",
                                "type": "object",
                                "properties": {
                                  "volumeName": {
                                    "description": "This must match the Name of a Volume.",
                                    "type": "string"
                                  },
                                  "mountPath": {
                                    "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
                                    "type": "string"
                                  },
                                  "subPath": {
                                    "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "volumeName"
                              ]
                            },
                            "probes": {
                              "description": "List of probes for the container.",
                              "type": "array",
                              "items": {
                                "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
                                "type": "object",
                                "properties": {
                                  "failureThreshold": {
                                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "httpGet": {
                                    "description": "HTTPGet specifies the http request to perform.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                        "type": "array",
                                        "items": {
                                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "value"
                                          ],
                                          "properties": {
                                            "name": {
                                              "description": "The header field name",
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The header field value",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "name"
                                        ]
                                      },
                                      "path": {
                                        "description": "Path to access on the HTTP server.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "scheme": {
                                        "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                        "enum": [
                                          "HTTP",
                                          "HTTPS"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "Scheme",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  },
                                  "initialDelaySeconds": {
                                    "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "periodSeconds": {
                                    "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "successThreshold": {
                                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "tcpSocket": {
                                    "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "terminationGracePeriodSeconds": {
                                    "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "timeoutSeconds": {
                                    "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "type": {
                                    "description": "The type of probe.",
                                    "enum": [
                                      "Liveness",
                                      "Readiness",
                                      "Startup"
                                    ],
                                    "type": "string",
                                    "x-ms-enum": {
                                      "name": "Type",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "type"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "volumes": {
                        "description": "List of volume definitions for the Container App.",
                        "type": "array",
                        "items": {
                          "description": "Volume definitions for the Container App.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Volume name.",
                              "type": "string"
                            },
                            "storageType": {
                              "description": "Storage type for the volume. If not provided, use EmptyDir.",
                              "enum": [
                                "AzureFile",
                                "EmptyDir",
                                "Secret",
                                "NfsAzureFile"
                              ],
                              "type": "string",
                              "x-ms-enum": {
                                "name": "StorageType",
                                "modelAsString": true
                              }
                            },
                            "storageName": {
                              "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
                              "type": "string"
                            },
                            "secrets": {
                              "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
                              "type": "array",
                              "items": {
                                "description": "Secret to be added to volume.",
                                "type": "object",
                                "properties": {
                                  "secretRef": {
                                    "description": "Name of the Container App secret from which to pull the secret value.",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "secretRef"
                              ]
                            },
                            "mountOptions": {
                              "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      }
                    }
                  },
                  "outboundIpAddresses": {
                    "description": "Outbound IP Addresses of a container apps job.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "eventStreamEndpoint": {
                    "description": "The endpoint of the eventstream of the container apps job.",
                    "type": "string",
                    "readOnly": true
                  }
                },
                "x-ms-client-flatten": true
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "JobSecretsCollection": {
      "description": "Container Apps Job Secrets Collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "Secret definition.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Secret Name.",
                "type": "string"
              },
              "value": {
                "description": "Secret Value.",
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "update"
                ],
                "x-ms-secret": true
              },
              "identity": {
                "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                "type": "string"
              },
              "keyVaultUrl": {
                "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ReplicaCompletionCount": {
      "description": "Minimum number of successful replica completions before overall job completion.",
      "format": "int32",
      "type": "integer"
    },
    "Parallelism": {
      "description": "Number of parallel replicas of a job that can run at a given time.",
      "format": "int32",
      "type": "integer"
    },
    "PollingInterval": {
      "description": "Interval to check each event source in seconds. Defaults to 30s",
      "format": "int32",
      "type": "integer"
    },
    "JobScaleRule": {
      "description": "Scaling rule.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Scale Rule Name",
          "type": "string"
        },
        "type": {
          "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata properties to describe the scale rule.",
          "type": "object"
        },
        "auth": {
          "description": "Authentication secrets for the scale rule.",
          "type": "array",
          "items": {
            "description": "Auth Secrets for Scale Rule",
            "type": "object",
            "properties": {
              "secretRef": {
                "description": "Name of the secret from which to pull the auth params.",
                "type": "string"
              },
              "triggerParameter": {
                "description": "Trigger Parameter that uses the secret",
                "type": "string"
              }
            }
          }
        },
        "identity": {
          "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
          "type": "string"
        }
      }
    },
    "JobScale": {
      "description": "Scaling configurations for event driven jobs.",
      "type": "object",
      "properties": {
        "pollingInterval": {
          "description": "Interval to check each event source in seconds. Defaults to 30s",
          "format": "int32",
          "type": "integer"
        },
        "minExecutions": {
          "format": "int32",
          "description": "Minimum number of job executions that are created for a trigger, default 0",
          "type": "integer",
          "default": 0
        },
        "maxExecutions": {
          "format": "int32",
          "description": "Maximum number of job executions that are created for a trigger, default 100.",
          "type": "integer",
          "default": 100
        },
        "rules": {
          "description": "Scaling rules.",
          "type": "array",
          "items": {
            "description": "Scaling rule.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Scale Rule Name",
                "type": "string"
              },
              "type": {
                "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
                "type": "string"
              },
              "metadata": {
                "description": "Metadata properties to describe the scale rule.",
                "type": "object"
              },
              "auth": {
                "description": "Authentication secrets for the scale rule.",
                "type": "array",
                "items": {
                  "description": "Auth Secrets for Scale Rule",
                  "type": "object",
                  "properties": {
                    "secretRef": {
                      "description": "Name of the secret from which to pull the auth params.",
                      "type": "string"
                    },
                    "triggerParameter": {
                      "description": "Trigger Parameter that uses the secret",
                      "type": "string"
                    }
                  }
                }
              },
              "identity": {
                "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "JobExecutionBase": {
      "description": "Container App's Job execution name.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Job execution name.",
          "type": "string"
        },
        "id": {
          "description": "Job execution Id.",
          "type": "string"
        }
      }
    },
    "JobExecution": {
      "description": "Container Apps Job execution.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Job execution Name.",
          "type": "string"
        },
        "id": {
          "description": "Job execution Id.",
          "type": "string"
        },
        "type": {
          "description": "Job execution type",
          "type": "string"
        },
        "properties": {
          "description": "Container Apps Job execution specific properties.",
          "type": "object",
          "properties": {
            "status": {
              "description": "Current running State of the job",
              "enum": [
                "Running",
                "Processing",
                "Stopped",
                "Degraded",
                "Failed",
                "Unknown",
                "Succeeded"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "JobExecutionRunningState",
                "modelAsString": true
              }
            },
            "startTime": {
              "description": "Job execution start time.",
              "format": "date-time",
              "type": "string"
            },
            "endTime": {
              "description": "Job execution end time.",
              "format": "date-time",
              "type": "string"
            },
            "template": {
              "description": "Job's execution template, containing container configuration for a job's execution",
              "type": "object",
              "properties": {
                "containers": {
                  "description": "List of container definitions for the Container Apps Job.",
                  "type": "array",
                  "items": {
                    "description": "Container Apps Jobs execution container definition.",
                    "type": "object",
                    "properties": {
                      "image": {
                        "description": "Container image tag.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Custom container name.",
                        "type": "string"
                      },
                      "command": {
                        "description": "Container start command.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "args": {
                        "description": "Container start command arguments.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "description": "Container environment variables.",
                        "type": "array",
                        "items": {
                          "description": "Container App container environment variable.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Environment variable name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Non-secret environment variable value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the environment variable value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "resources": {
                        "description": "Container resource requirements.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "format": "double",
                            "description": "Required CPU in cores, e.g. 0.5",
                            "type": "number"
                          },
                          "memory": {
                            "description": "Required memory, e.g. \"250Mb\"",
                            "type": "string"
                          },
                          "ephemeralStorage": {
                            "description": "Ephemeral Storage, e.g. \"1Gi\"",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "initContainers": {
                  "description": "List of specialized containers that run before job containers.",
                  "type": "array",
                  "items": {
                    "description": "Container Apps Jobs execution container definition.",
                    "type": "object",
                    "properties": {
                      "image": {
                        "description": "Container image tag.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Custom container name.",
                        "type": "string"
                      },
                      "command": {
                        "description": "Container start command.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "args": {
                        "description": "Container start command arguments.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "description": "Container environment variables.",
                        "type": "array",
                        "items": {
                          "description": "Container App container environment variable.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Environment variable name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Non-secret environment variable value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the environment variable value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "resources": {
                        "description": "Container resource requirements.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "format": "double",
                            "description": "Required CPU in cores, e.g. 0.5",
                            "type": "number"
                          },
                          "memory": {
                            "description": "Required memory, e.g. \"250Mb\"",
                            "type": "string"
                          },
                          "ephemeralStorage": {
                            "description": "Ephemeral Storage, e.g. \"1Gi\"",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ContainerAppJobExecutions": {
      "description": "Container App executions collection ARM resource.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "Container Apps Job execution.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Job execution Name.",
                "type": "string"
              },
              "id": {
                "description": "Job execution Id.",
                "type": "string"
              },
              "type": {
                "description": "Job execution type",
                "type": "string"
              },
              "properties": {
                "description": "Container Apps Job execution specific properties.",
                "type": "object",
                "properties": {
                  "status": {
                    "description": "Current running State of the job",
                    "enum": [
                      "Running",
                      "Processing",
                      "Stopped",
                      "Degraded",
                      "Failed",
                      "Unknown",
                      "Succeeded"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "JobExecutionRunningState",
                      "modelAsString": true
                    }
                  },
                  "startTime": {
                    "description": "Job execution start time.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "endTime": {
                    "description": "Job execution end time.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "template": {
                    "description": "Job's execution template, containing container configuration for a job's execution",
                    "type": "object",
                    "properties": {
                      "containers": {
                        "description": "List of container definitions for the Container Apps Job.",
                        "type": "array",
                        "items": {
                          "description": "Container Apps Jobs execution container definition.",
                          "type": "object",
                          "properties": {
                            "image": {
                              "description": "Container image tag.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Custom container name.",
                              "type": "string"
                            },
                            "command": {
                              "description": "Container start command.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "args": {
                              "description": "Container start command arguments.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "env": {
                              "description": "Container environment variables.",
                              "type": "array",
                              "items": {
                                "description": "Container App container environment variable.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Environment variable name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Non-secret environment variable value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "Name of the Container App secret from which to pull the environment variable value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Container resource requirements.",
                              "type": "object",
                              "properties": {
                                "cpu": {
                                  "format": "double",
                                  "description": "Required CPU in cores, e.g. 0.5",
                                  "type": "number"
                                },
                                "memory": {
                                  "description": "Required memory, e.g. \"250Mb\"",
                                  "type": "string"
                                },
                                "ephemeralStorage": {
                                  "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "initContainers": {
                        "description": "List of specialized containers that run before job containers.",
                        "type": "array",
                        "items": {
                          "description": "Container Apps Jobs execution container definition.",
                          "type": "object",
                          "properties": {
                            "image": {
                              "description": "Container image tag.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Custom container name.",
                              "type": "string"
                            },
                            "command": {
                              "description": "Container start command.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "args": {
                              "description": "Container start command arguments.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "env": {
                              "description": "Container environment variables.",
                              "type": "array",
                              "items": {
                                "description": "Container App container environment variable.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Environment variable name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Non-secret environment variable value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "Name of the Container App secret from which to pull the environment variable value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Container resource requirements.",
                              "type": "object",
                              "properties": {
                                "cpu": {
                                  "format": "double",
                                  "description": "Required CPU in cores, e.g. 0.5",
                                  "type": "number"
                                },
                                "memory": {
                                  "description": "Required memory, e.g. \"250Mb\"",
                                  "type": "string"
                                },
                                "ephemeralStorage": {
                                  "description": "Ephemeral Storage, e.g. \"1Gi\"",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      }
                    }
                  }
                },
                "x-ms-client-flatten": true
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      },
      "required": [
        "value"
      ]
    },
    "JobExecutionNamesCollection": {
      "description": "Container App executions names list.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "Container App's Job execution name.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Job execution name.",
                "type": "string"
              },
              "id": {
                "description": "Job execution Id.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "JobExecutionTemplate": {
      "description": "Job's execution template, containing container configuration for a job's execution",
      "type": "object",
      "properties": {
        "containers": {
          "description": "List of container definitions for the Container Apps Job.",
          "type": "array",
          "items": {
            "description": "Container Apps Jobs execution container definition.",
            "type": "object",
            "properties": {
              "image": {
                "description": "Container image tag.",
                "type": "string"
              },
              "name": {
                "description": "Custom container name.",
                "type": "string"
              },
              "command": {
                "description": "Container start command.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "args": {
                "description": "Container start command arguments.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "env": {
                "description": "Container environment variables.",
                "type": "array",
                "items": {
                  "description": "Container App container environment variable.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Environment variable name.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Non-secret environment variable value.",
                      "type": "string"
                    },
                    "secretRef": {
                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                      "type": "string"
                    }
                  }
                },
                "x-ms-identifiers": [
                  "name"
                ]
              },
              "resources": {
                "description": "Container resource requirements.",
                "type": "object",
                "properties": {
                  "cpu": {
                    "format": "double",
                    "description": "Required CPU in cores, e.g. 0.5",
                    "type": "number"
                  },
                  "memory": {
                    "description": "Required memory, e.g. \"250Mb\"",
                    "type": "string"
                  },
                  "ephemeralStorage": {
                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "initContainers": {
          "description": "List of specialized containers that run before job containers.",
          "type": "array",
          "items": {
            "description": "Container Apps Jobs execution container definition.",
            "type": "object",
            "properties": {
              "image": {
                "description": "Container image tag.",
                "type": "string"
              },
              "name": {
                "description": "Custom container name.",
                "type": "string"
              },
              "command": {
                "description": "Container start command.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "args": {
                "description": "Container start command arguments.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "env": {
                "description": "Container environment variables.",
                "type": "array",
                "items": {
                  "description": "Container App container environment variable.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Environment variable name.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Non-secret environment variable value.",
                      "type": "string"
                    },
                    "secretRef": {
                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                      "type": "string"
                    }
                  }
                },
                "x-ms-identifiers": [
                  "name"
                ]
              },
              "resources": {
                "description": "Container resource requirements.",
                "type": "object",
                "properties": {
                  "cpu": {
                    "format": "double",
                    "description": "Required CPU in cores, e.g. 0.5",
                    "type": "number"
                  },
                  "memory": {
                    "description": "Required memory, e.g. \"250Mb\"",
                    "type": "string"
                  },
                  "ephemeralStorage": {
                    "description": "Ephemeral Storage, e.g. \"1Gi\"",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "JobExecutionContainer": {
      "description": "Container Apps Jobs execution container definition.",
      "type": "object",
      "properties": {
        "image": {
          "description": "Container image tag.",
          "type": "string"
        },
        "name": {
          "description": "Custom container name.",
          "type": "string"
        },
        "command": {
          "description": "Container start command.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "description": "Container start command arguments.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "description": "Container environment variables.",
          "type": "array",
          "items": {
            "description": "Container App container environment variable.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Environment variable name.",
                "type": "string"
              },
              "value": {
                "description": "Non-secret environment variable value.",
                "type": "string"
              },
              "secretRef": {
                "description": "Name of the Container App secret from which to pull the environment variable value.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "resources": {
          "description": "Container resource requirements.",
          "type": "object",
          "properties": {
            "cpu": {
              "format": "double",
              "description": "Required CPU in cores, e.g. 0.5",
              "type": "number"
            },
            "memory": {
              "description": "Required memory, e.g. \"250Mb\"",
              "type": "string"
            },
            "ephemeralStorage": {
              "description": "Ephemeral Storage, e.g. \"1Gi\"",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "LogicApp": {
      "type": "object",
      "description": "A logic app extension resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "WorkflowEnvelope": {
      "description": "Schema for the workflow object.",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "title": "Proxy Resource",
          "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            }
          }
        }
      ],
      "properties": {
        "kind": {
          "type": "string",
          "description": "Gets the logic app hybrid workflow kind.",
          "enum": [
            "Stateful",
            "Stateless",
            "Agentic"
          ],
          "x-ms-enum": {
            "name": "WorkflowKind",
            "modelAsString": true
          }
        },
        "properties": {
          "description": "Additional workflow properties.",
          "type": "object",
          "properties": {
            "files": {
              "description": "Gets or sets the files.",
              "type": "object",
              "properties": {}
            },
            "flowState": {
              "description": "Gets or sets the state of the workflow.",
              "type": "string",
              "enum": [
                "NotSpecified",
                "Completed",
                "Enabled",
                "Disabled",
                "Deleted",
                "Suspended"
              ],
              "x-ms-enum": {
                "name": "WorkflowState",
                "modelAsString": true
              }
            },
            "health": {
              "$ref": "#/definitions/WorkflowHealth",
              "description": "Gets or sets workflow health."
            }
          }
        }
      }
    },
    "WorkflowEnvelopeCollection": {
      "description": "Collection of workflow information elements.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowEnvelope"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "format": "uri",
          "readOnly": true
        }
      }
    },
    "WorkflowFiles": {
      "description": "Represents an object representing files in the form of { \"<filename>\" : \"<filecontent>\"}.",
      "type": "object",
      "properties": {}
    },
    "WorkflowHealth": {
      "description": "Represents the workflow health.",
      "required": [
        "state"
      ],
      "type": "object",
      "properties": {
        "state": {
          "description": "Gets or sets the workflow health state.",
          "enum": [
            "NotSpecified",
            "Healthy",
            "Unhealthy",
            "Unknown"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "WorkflowHealthState",
            "modelAsString": false
          }
        },
        "error": {
          "$ref": "#/definitions/ErrorEntity",
          "description": "Gets or sets the workflow error."
        }
      }
    },
    "WorkflowState": {
      "type": "string",
      "description": "The workflow state.",
      "enum": [
        "NotSpecified",
        "Completed",
        "Enabled",
        "Disabled",
        "Deleted",
        "Suspended"
      ],
      "x-ms-enum": {
        "name": "WorkflowState",
        "modelAsString": true
      }
    },
    "Object": {
      "type": "object",
      "description": "JSON object.",
      "properties": {}
    },
    "ErrorEntity": {
      "description": "Body of the error response returned from the API.",
      "type": "object",
      "properties": {
        "extendedCode": {
          "description": "Type of error.",
          "type": "string"
        },
        "messageTemplate": {
          "description": "Message template.",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters for the template.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "innerErrors": {
          "description": "Inner errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorEntity"
          },
          "x-ms-identifiers": []
        },
        "details": {
          "description": "Error Details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorEntity"
          },
          "x-ms-identifiers": []
        },
        "target": {
          "description": "The error target.",
          "type": "string"
        },
        "code": {
          "description": "Basic error code.",
          "type": "string"
        },
        "message": {
          "description": "Any details of the error.",
          "type": "string"
        }
      }
    },
    "AppLogsConfiguration": {
      "description": "Configuration of application logs",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
          "type": "string"
        },
        "logAnalyticsConfiguration": {
          "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
          "type": "object",
          "properties": {
            "customerId": {
              "description": "Log analytics customer id",
              "type": "string"
            },
            "sharedKey": {
              "description": "Log analytics customer key",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "x-ms-secret": true
            }
          }
        }
      }
    },
    "KedaConfiguration": {
      "type": "object",
      "description": "Configuration properties Keda component",
      "properties": {
        "version": {
          "type": "string",
          "readOnly": true,
          "description": "The version of Keda"
        }
      }
    },
    "DaprConfiguration": {
      "type": "object",
      "description": "Configuration properties Dapr component",
      "properties": {
        "version": {
          "type": "string",
          "readOnly": true,
          "description": "The version of Dapr"
        }
      }
    },
    "VnetConfiguration": {
      "type": "object",
      "description": "Configuration properties for apps environment to join a Virtual Network",
      "properties": {
        "internal": {
          "type": "boolean",
          "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "infrastructureSubnetId": {
          "type": "string",
          "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "dockerBridgeCidr": {
          "type": "string",
          "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "platformReservedCidr": {
          "type": "string",
          "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "platformReservedDnsIP": {
          "type": "string",
          "description": " An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "Mtls": {
      "type": "object",
      "description": "Configuration properties for mutual TLS authentication",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Boolean indicating whether the mutual TLS authentication is enabled"
        }
      }
    },
    "IngressConfiguration": {
      "description": "Settings for the ingress component, including workload profile, scaling, and connection handling.",
      "type": "object",
      "properties": {
        "workloadProfileName": {
          "description": "Name of the workload profile used by the ingress component. Required.",
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "description": "Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480 seconds.",
          "type": "integer",
          "format": "int32"
        },
        "headerCountLimit": {
          "description": "Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.",
          "type": "integer",
          "format": "int32"
        },
        "requestIdleTimeout": {
          "description": "Duration (in minutes) before idle requests are timed out. Must be between 4 and 30 inclusive. Defaults to 4 minutes.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ManagedEnvironment": {
      "description": "An environment for hosting container apps",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Kind of the Environment."
        },
        "identity": {
          "description": "Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "description": "Managed environment resource specific properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Environment.",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Waiting",
                "InitializationInProgress",
                "InfrastructureSetupInProgress",
                "InfrastructureSetupComplete",
                "ScheduledForDelete",
                "UpgradeRequested",
                "UpgradeFailed"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "EnvironmentProvisioningState",
                "modelAsString": true
              }
            },
            "daprAIInstrumentationKey": {
              "type": "string",
              "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
              "x-ms-secret": true
            },
            "daprAIConnectionString": {
              "type": "string",
              "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
              "x-ms-secret": true
            },
            "vnetConfiguration": {
              "description": "Vnet configuration for the environment",
              "type": "object",
              "properties": {
                "internal": {
                  "type": "boolean",
                  "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "infrastructureSubnetId": {
                  "type": "string",
                  "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "dockerBridgeCidr": {
                  "type": "string",
                  "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "platformReservedCidr": {
                  "type": "string",
                  "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "platformReservedDnsIP": {
                  "type": "string",
                  "description": " An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                }
              }
            },
            "deploymentErrors": {
              "description": "Any errors that occurred during deployment or deployment validation",
              "type": "string",
              "readOnly": true
            },
            "defaultDomain": {
              "description": "Default Domain Name for the cluster",
              "type": "string",
              "readOnly": true
            },
            "staticIp": {
              "description": "Static IP of the Environment",
              "type": "string",
              "readOnly": true
            },
            "appLogsConfiguration": {
              "description": "Cluster configuration which enables the log daemon to export app logs to configured destination.",
              "type": "object",
              "properties": {
                "destination": {
                  "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
                  "type": "string"
                },
                "logAnalyticsConfiguration": {
                  "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
                  "type": "object",
                  "properties": {
                    "customerId": {
                      "description": "Log analytics customer id",
                      "type": "string"
                    },
                    "sharedKey": {
                      "description": "Log analytics customer key",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "x-ms-secret": true
                    }
                  }
                }
              }
            },
            "zoneRedundant": {
              "description": "Whether or not this Managed Environment is zone-redundant.",
              "type": "boolean",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "customDomainConfiguration": {
              "description": "Custom domain configuration for the environment",
              "type": "object",
              "properties": {
                "customDomainVerificationId": {
                  "description": "Id used to verify domain name ownership",
                  "type": "string",
                  "readOnly": true
                },
                "dnsSuffix": {
                  "type": "string",
                  "description": "Dns suffix for the environment domain",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "certificateKeyVaultProperties": {
                  "description": "Certificate stored in Azure Key Vault.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                      "type": "string"
                    },
                    "keyVaultUrl": {
                      "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                      "type": "string",
                      "format": "uri"
                    }
                  }
                },
                "certificateValue": {
                  "format": "byte",
                  "description": "PFX or PEM blob",
                  "type": "string",
                  "x-ms-secret": true
                },
                "certificatePassword": {
                  "description": "Certificate password",
                  "type": "string",
                  "x-ms-secret": true
                },
                "expirationDate": {
                  "format": "date-time",
                  "description": "Certificate expiration date.",
                  "type": "string",
                  "readOnly": true
                },
                "thumbprint": {
                  "description": "Certificate thumbprint.",
                  "type": "string",
                  "readOnly": true
                },
                "subjectName": {
                  "description": "Subject name of the certificate.",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "eventStreamEndpoint": {
              "description": "The endpoint of the eventstream of the Environment.",
              "type": "string",
              "readOnly": true
            },
            "workloadProfiles": {
              "description": "Workload profiles configured for the Managed Environment.",
              "type": "array",
              "items": {
                "description": "Workload profile to scope container app execution.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Workload profile type for the workloads to run on.",
                    "type": "string"
                  },
                  "workloadProfileType": {
                    "description": "Workload profile type for the workloads to run on.",
                    "type": "string"
                  },
                  "minimumCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The minimum capacity."
                  },
                  "maximumCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The maximum capacity."
                  }
                },
                "required": [
                  "name",
                  "workloadProfileType"
                ]
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "kedaConfiguration": {
              "description": "The configuration of Keda component.",
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The version of Keda"
                }
              }
            },
            "daprConfiguration": {
              "description": "The configuration of Dapr component.",
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The version of Dapr"
                }
              }
            },
            "infrastructureResourceGroup": {
              "description": "Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "peerAuthentication": {
              "description": "Peer authentication settings for the Managed Environment",
              "type": "object",
              "properties": {
                "mtls": {
                  "description": "Mutual TLS authentication settings for the Managed Environment",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Boolean indicating whether the mutual TLS authentication is enabled"
                    }
                  }
                }
              }
            },
            "peerTrafficConfiguration": {
              "description": "Peer traffic settings for the Managed Environment",
              "type": "object",
              "properties": {
                "encryption": {
                  "description": "Peer traffic encryption settings for the Managed Environment",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Boolean indicating whether the peer traffic encryption is enabled"
                    }
                  }
                }
              }
            },
            "ingressConfiguration": {
              "description": "Ingress configuration for the Managed Environment.",
              "type": "object",
              "properties": {
                "workloadProfileName": {
                  "description": "Name of the workload profile used by the ingress component. Required.",
                  "type": "string"
                },
                "terminationGracePeriodSeconds": {
                  "description": "Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480 seconds.",
                  "type": "integer",
                  "format": "int32"
                },
                "headerCountLimit": {
                  "description": "Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.",
                  "type": "integer",
                  "format": "int32"
                },
                "requestIdleTimeout": {
                  "description": "Duration (in minutes) before idle requests are timed out. Must be between 4 and 30 inclusive. Defaults to 4 minutes.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "privateEndpointConnections": {
              "description": "Private endpoint connections to the resource.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the resource",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                    "readOnly": true
                  },
                  "systemData": {
                    "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource last modification (UTC)"
                      }
                    }
                  },
                  "properties": {
                    "x-ms-client-flatten": true,
                    "description": "Resource properties.",
                    "type": "object",
                    "properties": {
                      "groupIds": {
                        "description": "The group ids for the private endpoint resource.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "privateEndpoint": {
                        "description": "The resource of private end point.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "format": "arm-id",
                            "description": "The ARM identifier for Private Endpoint"
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected",
                              "Disconnected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Succeeded",
                          "Failed",
                          "Canceled",
                          "Waiting",
                          "Updating",
                          "Deleting",
                          "Pending"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                },
                "description": "The Private Endpoint Connection resource."
              },
              "readOnly": true
            },
            "publicNetworkAccess": {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.",
              "type": "string",
              "x-ms-enum": {
                "name": "PublicNetworkAccess",
                "modelAsString": true
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ManagedEnvironmentsCollection": {
      "description": "Collection of Environments",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "An environment for hosting container apps",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "kind": {
                "type": "string",
                "description": "Kind of the Environment."
              },
              "identity": {
                "description": "Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "properties": {
                "description": "Managed environment resource specific properties",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the Environment.",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Waiting",
                      "InitializationInProgress",
                      "InfrastructureSetupInProgress",
                      "InfrastructureSetupComplete",
                      "ScheduledForDelete",
                      "UpgradeRequested",
                      "UpgradeFailed"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "EnvironmentProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "daprAIInstrumentationKey": {
                    "type": "string",
                    "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
                    "x-ms-secret": true
                  },
                  "daprAIConnectionString": {
                    "type": "string",
                    "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
                    "x-ms-secret": true
                  },
                  "vnetConfiguration": {
                    "description": "Vnet configuration for the environment",
                    "type": "object",
                    "properties": {
                      "internal": {
                        "type": "boolean",
                        "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "infrastructureSubnetId": {
                        "type": "string",
                        "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "dockerBridgeCidr": {
                        "type": "string",
                        "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "platformReservedCidr": {
                        "type": "string",
                        "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "platformReservedDnsIP": {
                        "type": "string",
                        "description": " An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      }
                    }
                  },
                  "deploymentErrors": {
                    "description": "Any errors that occurred during deployment or deployment validation",
                    "type": "string",
                    "readOnly": true
                  },
                  "defaultDomain": {
                    "description": "Default Domain Name for the cluster",
                    "type": "string",
                    "readOnly": true
                  },
                  "staticIp": {
                    "description": "Static IP of the Environment",
                    "type": "string",
                    "readOnly": true
                  },
                  "appLogsConfiguration": {
                    "description": "Cluster configuration which enables the log daemon to export app logs to configured destination.",
                    "type": "object",
                    "properties": {
                      "destination": {
                        "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
                        "type": "string"
                      },
                      "logAnalyticsConfiguration": {
                        "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
                        "type": "object",
                        "properties": {
                          "customerId": {
                            "description": "Log analytics customer id",
                            "type": "string"
                          },
                          "sharedKey": {
                            "description": "Log analytics customer key",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          }
                        }
                      }
                    }
                  },
                  "zoneRedundant": {
                    "description": "Whether or not this Managed Environment is zone-redundant.",
                    "type": "boolean",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "customDomainConfiguration": {
                    "description": "Custom domain configuration for the environment",
                    "type": "object",
                    "properties": {
                      "customDomainVerificationId": {
                        "description": "Id used to verify domain name ownership",
                        "type": "string",
                        "readOnly": true
                      },
                      "dnsSuffix": {
                        "type": "string",
                        "description": "Dns suffix for the environment domain",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "certificateKeyVaultProperties": {
                        "description": "Certificate stored in Azure Key Vault.",
                        "type": "object",
                        "properties": {
                          "identity": {
                            "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                            "type": "string"
                          },
                          "keyVaultUrl": {
                            "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
                            "type": "string",
                            "format": "uri"
                          }
                        }
                      },
                      "certificateValue": {
                        "format": "byte",
                        "description": "PFX or PEM blob",
                        "type": "string",
                        "x-ms-secret": true
                      },
                      "certificatePassword": {
                        "description": "Certificate password",
                        "type": "string",
                        "x-ms-secret": true
                      },
                      "expirationDate": {
                        "format": "date-time",
                        "description": "Certificate expiration date.",
                        "type": "string",
                        "readOnly": true
                      },
                      "thumbprint": {
                        "description": "Certificate thumbprint.",
                        "type": "string",
                        "readOnly": true
                      },
                      "subjectName": {
                        "description": "Subject name of the certificate.",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "eventStreamEndpoint": {
                    "description": "The endpoint of the eventstream of the Environment.",
                    "type": "string",
                    "readOnly": true
                  },
                  "workloadProfiles": {
                    "description": "Workload profiles configured for the Managed Environment.",
                    "type": "array",
                    "items": {
                      "description": "Workload profile to scope container app execution.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Workload profile type for the workloads to run on.",
                          "type": "string"
                        },
                        "workloadProfileType": {
                          "description": "Workload profile type for the workloads to run on.",
                          "type": "string"
                        },
                        "minimumCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The minimum capacity."
                        },
                        "maximumCount": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum capacity."
                        }
                      },
                      "required": [
                        "name",
                        "workloadProfileType"
                      ]
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "kedaConfiguration": {
                    "description": "The configuration of Keda component.",
                    "type": "object",
                    "properties": {
                      "version": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The version of Keda"
                      }
                    }
                  },
                  "daprConfiguration": {
                    "description": "The configuration of Dapr component.",
                    "type": "object",
                    "properties": {
                      "version": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The version of Dapr"
                      }
                    }
                  },
                  "infrastructureResourceGroup": {
                    "description": "Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "peerAuthentication": {
                    "description": "Peer authentication settings for the Managed Environment",
                    "type": "object",
                    "properties": {
                      "mtls": {
                        "description": "Mutual TLS authentication settings for the Managed Environment",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "Boolean indicating whether the mutual TLS authentication is enabled"
                          }
                        }
                      }
                    }
                  },
                  "peerTrafficConfiguration": {
                    "description": "Peer traffic settings for the Managed Environment",
                    "type": "object",
                    "properties": {
                      "encryption": {
                        "description": "Peer traffic encryption settings for the Managed Environment",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "Boolean indicating whether the peer traffic encryption is enabled"
                          }
                        }
                      }
                    }
                  },
                  "ingressConfiguration": {
                    "description": "Ingress configuration for the Managed Environment.",
                    "type": "object",
                    "properties": {
                      "workloadProfileName": {
                        "description": "Name of the workload profile used by the ingress component. Required.",
                        "type": "string"
                      },
                      "terminationGracePeriodSeconds": {
                        "description": "Time (in seconds) to allow active connections to complete on termination. Must be between 0 and 3600. Defaults to 480 seconds.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "headerCountLimit": {
                        "description": "Maximum number of headers per request allowed by the ingress. Must be at least 1. Defaults to 100.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "requestIdleTimeout": {
                        "description": "Duration (in minutes) before idle requests are timed out. Must be between 4 and 30 inclusive. Defaults to 4 minutes.",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "privateEndpointConnections": {
                    "description": "Private endpoint connections to the resource.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                          "readOnly": true
                        },
                        "systemData": {
                          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "createdBy": {
                              "type": "string",
                              "description": "The identity that created the resource."
                            },
                            "createdByType": {
                              "type": "string",
                              "description": "The type of identity that created the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource creation (UTC)."
                            },
                            "lastModifiedBy": {
                              "type": "string",
                              "description": "The identity that last modified the resource."
                            },
                            "lastModifiedByType": {
                              "type": "string",
                              "description": "The type of identity that last modified the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "lastModifiedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource last modification (UTC)"
                            }
                          }
                        },
                        "properties": {
                          "x-ms-client-flatten": true,
                          "description": "Resource properties.",
                          "type": "object",
                          "properties": {
                            "groupIds": {
                              "description": "The group ids for the private endpoint resource.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "readOnly": true
                            },
                            "privateEndpoint": {
                              "description": "The resource of private end point.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "The ARM identifier for Private Endpoint"
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "A collection of information about the state of the connection between service consumer and provider.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                  "type": "string",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected",
                                    "Disconnected"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateEndpointServiceConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The reason for approval/rejection of the connection."
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "The provisioning state of the private endpoint connection resource.",
                              "type": "string",
                              "readOnly": true,
                              "enum": [
                                "Succeeded",
                                "Failed",
                                "Canceled",
                                "Waiting",
                                "Updating",
                                "Deleting",
                                "Pending"
                              ],
                              "x-ms-enum": {
                                "name": "PrivateEndpointConnectionProvisioningState",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "privateLinkServiceConnectionState"
                          ]
                        }
                      },
                      "description": "The Private Endpoint Connection resource."
                    },
                    "readOnly": true
                  },
                  "publicNetworkAccess": {
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.",
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PublicNetworkAccess",
                      "modelAsString": true
                    }
                  }
                },
                "x-ms-client-flatten": true
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "LogAnalyticsConfiguration": {
      "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
      "type": "object",
      "properties": {
        "customerId": {
          "description": "Log analytics customer id",
          "type": "string"
        },
        "sharedKey": {
          "description": "Log analytics customer key",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      }
    },
    "EnvironmentAuthToken": {
      "description": "Environment Auth Token.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "Environment auth token resource specific properties",
          "type": "object",
          "properties": {
            "token": {
              "description": "Auth token value.",
              "type": "string",
              "x-ms-secret": true,
              "readOnly": true
            },
            "expires": {
              "format": "date-time",
              "description": "Token expiration date.",
              "type": "string",
              "readOnly": true
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "WorkloadProfile": {
      "description": "Workload profile to scope container app execution.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Workload profile type for the workloads to run on.",
          "type": "string"
        },
        "workloadProfileType": {
          "description": "Workload profile type for the workloads to run on.",
          "type": "string"
        },
        "minimumCount": {
          "type": "integer",
          "format": "int32",
          "description": "The minimum capacity."
        },
        "maximumCount": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum capacity."
        }
      },
      "required": [
        "name",
        "workloadProfileType"
      ]
    },
    "workloadProfileStates": {
      "description": "Collection of all the workload Profile States for a Managed Environment..",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Workload Profile resource specific properties.",
          "type": "object",
          "properties": {
            "minimumCount": {
              "type": "integer",
              "format": "int32",
              "description": "Minimum count of instances."
            },
            "maximumCount": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum count of nodes."
            },
            "currentCount": {
              "type": "integer",
              "format": "int32",
              "description": "Current count of nodes."
            }
          }
        }
      }
    },
    "workloadProfileStatesCollection": {
      "description": "Collection of workloadProfileStates",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "Collection of all the workload Profile States for a Managed Environment..",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Workload Profile resource specific properties.",
                "type": "object",
                "properties": {
                  "minimumCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Minimum count of instances."
                  },
                  "maximumCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Maximum count of nodes."
                  },
                  "currentCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Current count of nodes."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HttpRouteConfig": {
      "description": "A set of host names and http request routing rules for a Container App Environment",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Http Route Config properties",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state of the Http Route Config",
              "type": "string",
              "readOnly": true,
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Waiting",
                "Updating",
                "Deleting",
                "Pending"
              ],
              "x-ms-enum": {
                "name": "HttpRouteProvisioningState",
                "modelAsString": true
              }
            },
            "provisioningErrors": {
              "description": "List of errors when trying to reconcile http routes",
              "type": "array",
              "items": {
                "description": "List of provisioning errors for a Http Route Config object",
                "type": "object",
                "properties": {
                  "timestamp": {
                    "description": "Timestamp error occured at",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "message": {
                    "description": "Description or error message",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            },
            "fqdn": {
              "description": "FQDN of the route resource.",
              "type": "string",
              "readOnly": true
            },
            "customDomains": {
              "description": "Custom domain bindings for Http Routes' hostnames.",
              "type": "array",
              "items": {
                "description": "Custom Domain of a Container App",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Hostname.",
                    "type": "string"
                  },
                  "bindingType": {
                    "description": "Custom Domain binding type.",
                    "enum": [
                      "Disabled",
                      "SniEnabled",
                      "Auto"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "bindingType",
                      "modelAsString": true
                    }
                  },
                  "certificateId": {
                    "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "rules": {
              "description": "Routing Rules for the Http Route resource.",
              "type": "array",
              "items": {
                "description": "A set of routing conditions and targets.",
                "type": "object",
                "properties": {
                  "targets": {
                    "description": "Targets- container apps, revisions, labels",
                    "type": "array",
                    "items": {
                      "description": "Targets - Container App Names, Revision Names, Labels.",
                      "type": "object",
                      "required": [
                        "containerApp"
                      ],
                      "properties": {
                        "containerApp": {
                          "description": "Container App Name to route requests to",
                          "type": "string"
                        },
                        "revision": {
                          "description": "Revision to route requests to",
                          "type": "string"
                        },
                        "label": {
                          "description": "Label to route requests to",
                          "type": "string"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "routes": {
                    "description": "Routing configuration that will allow matches on specific paths/headers.",
                    "type": "array",
                    "items": {
                      "description": "Http Routes, including paths to match on and whether or not rewrites are to be done.",
                      "type": "object",
                      "properties": {
                        "match": {
                          "description": "Conditions route will match on",
                          "type": "object",
                          "properties": {
                            "prefix": {
                              "description": "match on all prefix's. Not exact",
                              "type": "string"
                            },
                            "path": {
                              "description": "match on exact path",
                              "type": "string"
                            },
                            "pathSeparatedPrefix": {
                              "description": "match on all prefix's. Not exact",
                              "type": "string"
                            },
                            "caseSensitive": {
                              "description": "path case sensitive, default is true",
                              "type": "boolean"
                            }
                          }
                        },
                        "action": {
                          "description": "Once route is matched, what is the desired action",
                          "type": "object",
                          "properties": {
                            "prefixRewrite": {
                              "description": "Rewrite prefix, default is no rewrites",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of rule. Optional."
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            }
          }
        }
      },
      "x-ms-client-flatten": true
    },
    "HttpRouteProvisioningErrors": {
      "description": "List of provisioning errors for a Http Route Config object",
      "type": "object",
      "properties": {
        "timestamp": {
          "description": "Timestamp error occured at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "message": {
          "description": "Description or error message",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HttpRouteTarget": {
      "description": "Targets - Container App Names, Revision Names, Labels.",
      "type": "object",
      "required": [
        "containerApp"
      ],
      "properties": {
        "containerApp": {
          "description": "Container App Name to route requests to",
          "type": "string"
        },
        "revision": {
          "description": "Revision to route requests to",
          "type": "string"
        },
        "label": {
          "description": "Label to route requests to",
          "type": "string"
        }
      }
    },
    "HttpRouteMatch": {
      "description": "Criteria to match on",
      "type": "object",
      "properties": {
        "prefix": {
          "description": "match on all prefix's. Not exact",
          "type": "string"
        },
        "path": {
          "description": "match on exact path",
          "type": "string"
        },
        "pathSeparatedPrefix": {
          "description": "match on all prefix's. Not exact",
          "type": "string"
        },
        "caseSensitive": {
          "description": "path case sensitive, default is true",
          "type": "boolean"
        }
      }
    },
    "HttpRouteAction": {
      "description": "Action to perform once matching of routes is done",
      "type": "object",
      "properties": {
        "prefixRewrite": {
          "description": "Rewrite prefix, default is no rewrites",
          "type": "string"
        }
      }
    },
    "HttpRoute": {
      "description": "Http Routes, including paths to match on and whether or not rewrites are to be done.",
      "type": "object",
      "properties": {
        "match": {
          "description": "Conditions route will match on",
          "type": "object",
          "properties": {
            "prefix": {
              "description": "match on all prefix's. Not exact",
              "type": "string"
            },
            "path": {
              "description": "match on exact path",
              "type": "string"
            },
            "pathSeparatedPrefix": {
              "description": "match on all prefix's. Not exact",
              "type": "string"
            },
            "caseSensitive": {
              "description": "path case sensitive, default is true",
              "type": "boolean"
            }
          }
        },
        "action": {
          "description": "Once route is matched, what is the desired action",
          "type": "object",
          "properties": {
            "prefixRewrite": {
              "description": "Rewrite prefix, default is no rewrites",
              "type": "string"
            }
          }
        }
      }
    },
    "HttpRouteRule": {
      "description": "A set of routing conditions and targets.",
      "type": "object",
      "properties": {
        "targets": {
          "description": "Targets- container apps, revisions, labels",
          "type": "array",
          "items": {
            "description": "Targets - Container App Names, Revision Names, Labels.",
            "type": "object",
            "required": [
              "containerApp"
            ],
            "properties": {
              "containerApp": {
                "description": "Container App Name to route requests to",
                "type": "string"
              },
              "revision": {
                "description": "Revision to route requests to",
                "type": "string"
              },
              "label": {
                "description": "Label to route requests to",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "routes": {
          "description": "Routing configuration that will allow matches on specific paths/headers.",
          "type": "array",
          "items": {
            "description": "Http Routes, including paths to match on and whether or not rewrites are to be done.",
            "type": "object",
            "properties": {
              "match": {
                "description": "Conditions route will match on",
                "type": "object",
                "properties": {
                  "prefix": {
                    "description": "match on all prefix's. Not exact",
                    "type": "string"
                  },
                  "path": {
                    "description": "match on exact path",
                    "type": "string"
                  },
                  "pathSeparatedPrefix": {
                    "description": "match on all prefix's. Not exact",
                    "type": "string"
                  },
                  "caseSensitive": {
                    "description": "path case sensitive, default is true",
                    "type": "boolean"
                  }
                }
              },
              "action": {
                "description": "Once route is matched, what is the desired action",
                "type": "object",
                "properties": {
                  "prefixRewrite": {
                    "description": "Rewrite prefix, default is no rewrites",
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "description": {
          "type": "string",
          "description": "Description of rule. Optional."
        }
      }
    },
    "HttpRouteProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Waiting",
        "Updating",
        "Deleting",
        "Pending"
      ],
      "x-ms-enum": {
        "name": "HttpRouteProvisioningState",
        "modelAsString": true
      }
    },
    "HttpRouteConfigCollection": {
      "description": "Collection of rule based Http Route Config resources.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "A set of host names and http request routing rules for a Container App Environment",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Http Route Config properties",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The provisioning state of the Http Route Config",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Waiting",
                      "Updating",
                      "Deleting",
                      "Pending"
                    ],
                    "x-ms-enum": {
                      "name": "HttpRouteProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "provisioningErrors": {
                    "description": "List of errors when trying to reconcile http routes",
                    "type": "array",
                    "items": {
                      "description": "List of provisioning errors for a Http Route Config object",
                      "type": "object",
                      "properties": {
                        "timestamp": {
                          "description": "Timestamp error occured at",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "message": {
                          "description": "Description or error message",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "fqdn": {
                    "description": "FQDN of the route resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "customDomains": {
                    "description": "Custom domain bindings for Http Routes' hostnames.",
                    "type": "array",
                    "items": {
                      "description": "Custom Domain of a Container App",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Hostname.",
                          "type": "string"
                        },
                        "bindingType": {
                          "description": "Custom Domain binding type.",
                          "enum": [
                            "Disabled",
                            "SniEnabled",
                            "Auto"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "bindingType",
                            "modelAsString": true
                          }
                        },
                        "certificateId": {
                          "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
                          "type": "string"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "rules": {
                    "description": "Routing Rules for the Http Route resource.",
                    "type": "array",
                    "items": {
                      "description": "A set of routing conditions and targets.",
                      "type": "object",
                      "properties": {
                        "targets": {
                          "description": "Targets- container apps, revisions, labels",
                          "type": "array",
                          "items": {
                            "description": "Targets - Container App Names, Revision Names, Labels.",
                            "type": "object",
                            "required": [
                              "containerApp"
                            ],
                            "properties": {
                              "containerApp": {
                                "description": "Container App Name to route requests to",
                                "type": "string"
                              },
                              "revision": {
                                "description": "Revision to route requests to",
                                "type": "string"
                              },
                              "label": {
                                "description": "Label to route requests to",
                                "type": "string"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "routes": {
                          "description": "Routing configuration that will allow matches on specific paths/headers.",
                          "type": "array",
                          "items": {
                            "description": "Http Routes, including paths to match on and whether or not rewrites are to be done.",
                            "type": "object",
                            "properties": {
                              "match": {
                                "description": "Conditions route will match on",
                                "type": "object",
                                "properties": {
                                  "prefix": {
                                    "description": "match on all prefix's. Not exact",
                                    "type": "string"
                                  },
                                  "path": {
                                    "description": "match on exact path",
                                    "type": "string"
                                  },
                                  "pathSeparatedPrefix": {
                                    "description": "match on all prefix's. Not exact",
                                    "type": "string"
                                  },
                                  "caseSensitive": {
                                    "description": "path case sensitive, default is true",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "action": {
                                "description": "Once route is matched, what is the desired action",
                                "type": "object",
                                "properties": {
                                  "prefixRewrite": {
                                    "description": "Rewrite prefix, default is no rewrites",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "name"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of rule. Optional."
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  }
                }
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ScheduledEntry": {
      "type": "object",
      "description": "Maintenance schedule entry for a managed environment.",
      "properties": {
        "weekDay": {
          "type": "string",
          "description": "Day of the week when a managed environment can be patched.",
          "enum": [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "x-ms-enum": {
            "name": "WeekDay",
            "modelAsString": false
          }
        },
        "startHourUtc": {
          "type": "integer",
          "format": "int32",
          "description": "Start hour after which managed environment maintenance can start from 0 to 23 hour."
        },
        "durationHours": {
          "type": "integer",
          "format": "int32",
          "description": "Length of maintenance window range from 8 to 24 hours."
        }
      },
      "required": [
        "weekDay",
        "startHourUtc",
        "durationHours"
      ]
    },
    "ScheduledEntries": {
      "type": "object",
      "description": "List of maintenance schedules for a managed environment.",
      "properties": {
        "scheduledEntries": {
          "x-ms-client-name": "ScheduledEntries",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Maintenance schedule entry for a managed environment.",
            "properties": {
              "weekDay": {
                "type": "string",
                "description": "Day of the week when a managed environment can be patched.",
                "enum": [
                  "Monday",
                  "Tuesday",
                  "Wednesday",
                  "Thursday",
                  "Friday",
                  "Saturday",
                  "Sunday"
                ],
                "x-ms-enum": {
                  "name": "WeekDay",
                  "modelAsString": false
                }
              },
              "startHourUtc": {
                "type": "integer",
                "format": "int32",
                "description": "Start hour after which managed environment maintenance can start from 0 to 23 hour."
              },
              "durationHours": {
                "type": "integer",
                "format": "int32",
                "description": "Length of maintenance window range from 8 to 24 hours."
              }
            },
            "required": [
              "weekDay",
              "startHourUtc",
              "durationHours"
            ]
          },
          "x-ms-identifiers": [],
          "description": "List of maintenance schedules for a managed environment."
        }
      },
      "required": [
        "scheduledEntries"
      ]
    },
    "MaintenanceConfigurationResource": {
      "type": "object",
      "description": "Information about the Maintenance Configuration resource.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "scheduledEntries": {
              "x-ms-client-name": "ScheduledEntries",
              "type": "array",
              "items": {
                "type": "object",
                "description": "Maintenance schedule entry for a managed environment.",
                "properties": {
                  "weekDay": {
                    "type": "string",
                    "description": "Day of the week when a managed environment can be patched.",
                    "enum": [
                      "Monday",
                      "Tuesday",
                      "Wednesday",
                      "Thursday",
                      "Friday",
                      "Saturday",
                      "Sunday"
                    ],
                    "x-ms-enum": {
                      "name": "WeekDay",
                      "modelAsString": false
                    }
                  },
                  "startHourUtc": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Start hour after which managed environment maintenance can start from 0 to 23 hour."
                  },
                  "durationHours": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Length of maintenance window range from 8 to 24 hours."
                  }
                },
                "required": [
                  "weekDay",
                  "startHourUtc",
                  "durationHours"
                ]
              },
              "x-ms-identifiers": [],
              "description": "List of maintenance schedules for a managed environment."
            }
          },
          "required": [
            "scheduledEntries"
          ]
        }
      }
    },
    "MaintenanceConfigurationCollection": {
      "type": "object",
      "description": "The response of list maintenance configuration resources.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Information about the Maintenance Configuration resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "properties": {
                  "scheduledEntries": {
                    "x-ms-client-name": "ScheduledEntries",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Maintenance schedule entry for a managed environment.",
                      "properties": {
                        "weekDay": {
                          "type": "string",
                          "description": "Day of the week when a managed environment can be patched.",
                          "enum": [
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday",
                            "Sunday"
                          ],
                          "x-ms-enum": {
                            "name": "WeekDay",
                            "modelAsString": false
                          }
                        },
                        "startHourUtc": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Start hour after which managed environment maintenance can start from 0 to 23 hour."
                        },
                        "durationHours": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Length of maintenance window range from 8 to 24 hours."
                        }
                      },
                      "required": [
                        "weekDay",
                        "startHourUtc",
                        "durationHours"
                      ]
                    },
                    "x-ms-identifiers": [],
                    "description": "List of maintenance schedules for a managed environment."
                  }
                },
                "required": [
                  "scheduledEntries"
                ]
              }
            }
          },
          "description": "Results of the list maintenance configuration resources."
        },
        "nextLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link for next page of results."
        }
      }
    },
    "ManagedEnvironmentStoragesCollection": {
      "description": "Collection of Storage for Environments",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of storage resources.",
          "type": "array",
          "items": {
            "description": "Storage resource for managedEnvironment.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Storage properties",
                "type": "object",
                "properties": {
                  "azureFile": {
                    "description": "Azure file properties",
                    "type": "object",
                    "properties": {
                      "accountName": {
                        "description": "Storage account name for azure file.",
                        "type": "string"
                      },
                      "accountKey": {
                        "description": "Storage account key for azure file.",
                        "type": "string",
                        "x-ms-secret": true
                      },
                      "accountKeyVaultProperties": {
                        "description": "Storage account key stored as an Azure Key Vault secret.",
                        "type": "object",
                        "properties": {
                          "identity": {
                            "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                            "type": "string"
                          },
                          "keyVaultUrl": {
                            "description": "URL pointing to the Azure Key Vault secret.",
                            "type": "string"
                          }
                        }
                      },
                      "accessMode": {
                        "description": "Access mode for storage",
                        "enum": [
                          "ReadOnly",
                          "ReadWrite"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "AccessMode",
                          "modelAsString": true
                        }
                      },
                      "shareName": {
                        "description": "Azure file share name.",
                        "type": "string"
                      }
                    }
                  },
                  "nfsAzureFile": {
                    "description": "NFS Azure file properties",
                    "type": "object",
                    "properties": {
                      "server": {
                        "description": "Server for NFS azure file. Specify the Azure storage account server address.",
                        "type": "string"
                      },
                      "accessMode": {
                        "description": "Access mode for storage",
                        "enum": [
                          "ReadOnly",
                          "ReadWrite"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "AccessMode",
                          "modelAsString": true
                        }
                      },
                      "shareName": {
                        "description": "NFS Azure file share name.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ManagedEnvironmentStorage": {
      "description": "Storage resource for managedEnvironment.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Storage properties",
          "type": "object",
          "properties": {
            "azureFile": {
              "description": "Azure file properties",
              "type": "object",
              "properties": {
                "accountName": {
                  "description": "Storage account name for azure file.",
                  "type": "string"
                },
                "accountKey": {
                  "description": "Storage account key for azure file.",
                  "type": "string",
                  "x-ms-secret": true
                },
                "accountKeyVaultProperties": {
                  "description": "Storage account key stored as an Azure Key Vault secret.",
                  "type": "object",
                  "properties": {
                    "identity": {
                      "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
                      "type": "string"
                    },
                    "keyVaultUrl": {
                      "description": "URL pointing to the Azure Key Vault secret.",
                      "type": "string"
                    }
                  }
                },
                "accessMode": {
                  "description": "Access mode for storage",
                  "enum": [
                    "ReadOnly",
                    "ReadWrite"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "AccessMode",
                    "modelAsString": true
                  }
                },
                "shareName": {
                  "description": "Azure file share name.",
                  "type": "string"
                }
              }
            },
            "nfsAzureFile": {
              "description": "NFS Azure file properties",
              "type": "object",
              "properties": {
                "server": {
                  "description": "Server for NFS azure file. Specify the Azure storage account server address.",
                  "type": "string"
                },
                "accessMode": {
                  "description": "Access mode for storage",
                  "enum": [
                    "ReadOnly",
                    "ReadWrite"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "AccessMode",
                    "modelAsString": true
                  }
                },
                "shareName": {
                  "description": "NFS Azure file share name.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "ScaleConfiguration": {
      "description": "Scale configuration.",
      "type": "object",
      "properties": {
        "maxConcurrentSessions": {
          "description": "The maximum count of sessions at the same time.",
          "type": "integer",
          "format": "int32"
        },
        "readySessionInstances": {
          "description": "The minimum count of ready session instances.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SessionPoolSecret": {
      "description": "Secret definition.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Secret Name.",
          "type": "string"
        },
        "value": {
          "description": "Secret Value.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      }
    },
    "DynamicPoolConfiguration": {
      "description": "Dynamic pool configuration.",
      "type": "object",
      "properties": {
        "lifecycleConfiguration": {
          "description": "The lifecycle configuration of a session in the dynamic session pool",
          "type": "object",
          "properties": {
            "lifecycleType": {
              "description": "The lifecycle type of the session pool.",
              "enum": [
                "Timed",
                "OnContainerExit"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "LifecycleType",
                "modelAsString": true
              }
            },
            "cooldownPeriodInSeconds": {
              "description": "The cooldown period of a session in seconds when the lifecycle type is 'Timed'.",
              "type": "integer",
              "format": "int32"
            },
            "maxAlivePeriodInSeconds": {
              "description": "The maximum alive period of a session in seconds when the lifecycle type is 'OnContainerExit'.",
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "LifecycleConfiguration": {
      "description": "The lifecycle configuration properties of a session in the dynamic session pool",
      "type": "object",
      "properties": {
        "lifecycleType": {
          "description": "The lifecycle type of the session pool.",
          "enum": [
            "Timed",
            "OnContainerExit"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "LifecycleType",
            "modelAsString": true
          }
        },
        "cooldownPeriodInSeconds": {
          "description": "The cooldown period of a session in seconds when the lifecycle type is 'Timed'.",
          "type": "integer",
          "format": "int32"
        },
        "maxAlivePeriodInSeconds": {
          "description": "The maximum alive period of a session in seconds when the lifecycle type is 'OnContainerExit'.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SessionRegistryCredentials": {
      "description": "Session pool private registry credentials.",
      "type": "object",
      "properties": {
        "server": {
          "description": "Container registry server.",
          "type": "string"
        },
        "username": {
          "description": "Container registry username.",
          "type": "string"
        },
        "passwordSecretRef": {
          "description": "The name of the secret that contains the registry login password",
          "type": "string"
        },
        "identity": {
          "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
          "type": "string"
        }
      }
    },
    "SessionContainerResources": {
      "description": "Container resource requirements for sessions of the session pool.",
      "type": "object",
      "properties": {
        "cpu": {
          "format": "double",
          "description": "Required CPU in cores, e.g. 0.5",
          "type": "number"
        },
        "memory": {
          "description": "Required memory, e.g. \"250Mb\"",
          "type": "string"
        }
      }
    },
    "SessionContainer": {
      "description": "Container definitions for the sessions of the session pool.",
      "type": "object",
      "properties": {
        "image": {
          "description": "Container image tag.",
          "type": "string"
        },
        "name": {
          "description": "Custom container name.",
          "type": "string"
        },
        "command": {
          "description": "Container start command.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "description": "Container start command arguments.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "description": "Container environment variables.",
          "type": "array",
          "items": {
            "description": "Container App container environment variable.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Environment variable name.",
                "type": "string"
              },
              "value": {
                "description": "Non-secret environment variable value.",
                "type": "string"
              },
              "secretRef": {
                "description": "Name of the Container App secret from which to pull the environment variable value.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "resources": {
          "description": "Container resource requirements.",
          "type": "object",
          "properties": {
            "cpu": {
              "format": "double",
              "description": "Required CPU in cores, e.g. 0.5",
              "type": "number"
            },
            "memory": {
              "description": "Required memory, e.g. \"250Mb\"",
              "type": "string"
            }
          }
        }
      }
    },
    "SessionIngress": {
      "description": "Session pool ingress configuration.",
      "type": "object",
      "properties": {
        "targetPort": {
          "format": "int32",
          "description": "Target port in containers for traffic from ingress",
          "type": "integer"
        }
      }
    },
    "CustomContainerTemplate": {
      "description": "Custom container configuration.",
      "type": "object",
      "properties": {
        "registryCredentials": {
          "description": "Private container registry credentials for containers used by the sessions of the session pool.",
          "type": "object",
          "properties": {
            "server": {
              "description": "Container registry server.",
              "type": "string"
            },
            "username": {
              "description": "Container registry username.",
              "type": "string"
            },
            "passwordSecretRef": {
              "description": "The name of the secret that contains the registry login password",
              "type": "string"
            },
            "identity": {
              "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
              "type": "string"
            }
          }
        },
        "containers": {
          "description": "List of container definitions for the sessions of the session pool.",
          "type": "array",
          "items": {
            "description": "Container definitions for the sessions of the session pool.",
            "type": "object",
            "properties": {
              "image": {
                "description": "Container image tag.",
                "type": "string"
              },
              "name": {
                "description": "Custom container name.",
                "type": "string"
              },
              "command": {
                "description": "Container start command.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "args": {
                "description": "Container start command arguments.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "env": {
                "description": "Container environment variables.",
                "type": "array",
                "items": {
                  "description": "Container App container environment variable.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Environment variable name.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Non-secret environment variable value.",
                      "type": "string"
                    },
                    "secretRef": {
                      "description": "Name of the Container App secret from which to pull the environment variable value.",
                      "type": "string"
                    }
                  }
                },
                "x-ms-identifiers": [
                  "name"
                ]
              },
              "resources": {
                "description": "Container resource requirements.",
                "type": "object",
                "properties": {
                  "cpu": {
                    "format": "double",
                    "description": "Required CPU in cores, e.g. 0.5",
                    "type": "number"
                  },
                  "memory": {
                    "description": "Required memory, e.g. \"250Mb\"",
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "ingress": {
          "description": "Session pool ingress configuration.",
          "type": "object",
          "properties": {
            "targetPort": {
              "format": "int32",
              "description": "Target port in containers for traffic from ingress",
              "type": "integer"
            }
          }
        }
      }
    },
    "SessionNetworkConfiguration": {
      "description": "Session network configuration.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Network status for the sessions.",
          "type": "string",
          "enum": [
            "EgressEnabled",
            "EgressDisabled"
          ],
          "x-ms-enum": {
            "name": "SessionNetworkStatus",
            "modelAsString": true
          }
        }
      }
    },
    "SessionPool": {
      "description": "Container App session pool.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "description": "Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "description": "Container App session pool resource specific properties",
          "type": "object",
          "properties": {
            "environmentId": {
              "description": "Resource ID of the session pool's environment.",
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.App/managedEnvironments"
                  }
                ]
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "containerType": {
              "description": "The container type of the sessions.",
              "enum": [
                "CustomContainer",
                "PythonLTS"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ContainerType",
                "modelAsString": true
              }
            },
            "poolManagementType": {
              "description": "The pool management type of the session pool.",
              "enum": [
                "Manual",
                "Dynamic"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "PoolManagementType",
                "modelAsString": true
              }
            },
            "nodeCount": {
              "description": "The number of nodes the session pool is using.",
              "type": "integer",
              "format": "int32",
              "readOnly": true
            },
            "scaleConfiguration": {
              "description": "The scale configuration of the session pool.",
              "type": "object",
              "properties": {
                "maxConcurrentSessions": {
                  "description": "The maximum count of sessions at the same time.",
                  "type": "integer",
                  "format": "int32"
                },
                "readySessionInstances": {
                  "description": "The minimum count of ready session instances.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "secrets": {
              "description": "The secrets of the session pool.",
              "type": "array",
              "items": {
                "description": "Secret definition.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Secret Name.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Secret Value.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ],
                    "x-ms-secret": true
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "dynamicPoolConfiguration": {
              "description": "The pool configuration if the poolManagementType is dynamic.",
              "type": "object",
              "properties": {
                "lifecycleConfiguration": {
                  "description": "The lifecycle configuration of a session in the dynamic session pool",
                  "type": "object",
                  "properties": {
                    "lifecycleType": {
                      "description": "The lifecycle type of the session pool.",
                      "enum": [
                        "Timed",
                        "OnContainerExit"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "LifecycleType",
                        "modelAsString": true
                      }
                    },
                    "cooldownPeriodInSeconds": {
                      "description": "The cooldown period of a session in seconds when the lifecycle type is 'Timed'.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "maxAlivePeriodInSeconds": {
                      "description": "The maximum alive period of a session in seconds when the lifecycle type is 'OnContainerExit'.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            },
            "customContainerTemplate": {
              "description": "The custom container configuration if the containerType is CustomContainer.",
              "type": "object",
              "properties": {
                "registryCredentials": {
                  "description": "Private container registry credentials for containers used by the sessions of the session pool.",
                  "type": "object",
                  "properties": {
                    "server": {
                      "description": "Container registry server.",
                      "type": "string"
                    },
                    "username": {
                      "description": "Container registry username.",
                      "type": "string"
                    },
                    "passwordSecretRef": {
                      "description": "The name of the secret that contains the registry login password",
                      "type": "string"
                    },
                    "identity": {
                      "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                      "type": "string"
                    }
                  }
                },
                "containers": {
                  "description": "List of container definitions for the sessions of the session pool.",
                  "type": "array",
                  "items": {
                    "description": "Container definitions for the sessions of the session pool.",
                    "type": "object",
                    "properties": {
                      "image": {
                        "description": "Container image tag.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Custom container name.",
                        "type": "string"
                      },
                      "command": {
                        "description": "Container start command.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "args": {
                        "description": "Container start command arguments.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "description": "Container environment variables.",
                        "type": "array",
                        "items": {
                          "description": "Container App container environment variable.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Environment variable name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Non-secret environment variable value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the environment variable value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "resources": {
                        "description": "Container resource requirements.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "format": "double",
                            "description": "Required CPU in cores, e.g. 0.5",
                            "type": "number"
                          },
                          "memory": {
                            "description": "Required memory, e.g. \"250Mb\"",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "ingress": {
                  "description": "Session pool ingress configuration.",
                  "type": "object",
                  "properties": {
                    "targetPort": {
                      "format": "int32",
                      "description": "Target port in containers for traffic from ingress",
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "sessionNetworkConfiguration": {
              "description": "The network configuration of the sessions in the session pool.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Network status for the sessions.",
                  "type": "string",
                  "enum": [
                    "EgressEnabled",
                    "EgressDisabled"
                  ],
                  "x-ms-enum": {
                    "name": "SessionNetworkStatus",
                    "modelAsString": true
                  }
                }
              }
            },
            "poolManagementEndpoint": {
              "description": "The endpoint to manage the pool.",
              "type": "string",
              "format": "uri",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provisioning state of the session pool.",
              "enum": [
                "InProgress",
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleting"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "SessionPoolProvisioningState",
                "modelAsString": true
              }
            },
            "managedIdentitySettings": {
              "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
              "type": "array",
              "items": {
                "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                "type": "object",
                "required": [
                  "identity"
                ],
                "properties": {
                  "identity": {
                    "description": "The resource ID of a user-assigned managed identity that is assigned to the Session Pool, or 'system' for system-assigned identity.",
                    "type": "string"
                  },
                  "lifecycle": {
                    "description": "Use to select the lifecycle stages of a Session Pool during which the Managed Identity should be available.",
                    "enum": [
                      "None",
                      "Main"
                    ],
                    "type": "string",
                    "default": "None",
                    "x-ms-enum": {
                      "name": "IdentitySettingsLifeCycle",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "identity"
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ManagedIdentitySetting": {
      "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
      "type": "object",
      "required": [
        "identity"
      ],
      "properties": {
        "identity": {
          "description": "The resource ID of a user-assigned managed identity that is assigned to the Session Pool, or 'system' for system-assigned identity.",
          "type": "string"
        },
        "lifecycle": {
          "description": "Use to select the lifecycle stages of a Session Pool during which the Managed Identity should be available.",
          "enum": [
            "None",
            "Main"
          ],
          "type": "string",
          "default": "None",
          "x-ms-enum": {
            "name": "IdentitySettingsLifeCycle",
            "modelAsString": true
          }
        }
      }
    },
    "SessionPoolUpdatableProperties": {
      "description": "Container App session pool updatable properties.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "identity": {
          "description": "Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "description": "Session pool resource specific updatable properties.",
          "type": "object",
          "properties": {
            "scaleConfiguration": {
              "description": "The scale configuration of the session pool.",
              "type": "object",
              "properties": {
                "maxConcurrentSessions": {
                  "description": "The maximum count of sessions at the same time.",
                  "type": "integer",
                  "format": "int32"
                },
                "readySessionInstances": {
                  "description": "The minimum count of ready session instances.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "secrets": {
              "description": "The secrets of the session pool.",
              "type": "array",
              "items": {
                "description": "Secret definition.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Secret Name.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Secret Value.",
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ],
                    "x-ms-secret": true
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "dynamicPoolConfiguration": {
              "description": "The pool configuration if the poolManagementType is dynamic.",
              "type": "object",
              "properties": {
                "lifecycleConfiguration": {
                  "description": "The lifecycle configuration of a session in the dynamic session pool",
                  "type": "object",
                  "properties": {
                    "lifecycleType": {
                      "description": "The lifecycle type of the session pool.",
                      "enum": [
                        "Timed",
                        "OnContainerExit"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "LifecycleType",
                        "modelAsString": true
                      }
                    },
                    "cooldownPeriodInSeconds": {
                      "description": "The cooldown period of a session in seconds when the lifecycle type is 'Timed'.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "maxAlivePeriodInSeconds": {
                      "description": "The maximum alive period of a session in seconds when the lifecycle type is 'OnContainerExit'.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            },
            "customContainerTemplate": {
              "description": "The custom container configuration if the containerType is CustomContainer.",
              "type": "object",
              "properties": {
                "registryCredentials": {
                  "description": "Private container registry credentials for containers used by the sessions of the session pool.",
                  "type": "object",
                  "properties": {
                    "server": {
                      "description": "Container registry server.",
                      "type": "string"
                    },
                    "username": {
                      "description": "Container registry username.",
                      "type": "string"
                    },
                    "passwordSecretRef": {
                      "description": "The name of the secret that contains the registry login password",
                      "type": "string"
                    },
                    "identity": {
                      "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                      "type": "string"
                    }
                  }
                },
                "containers": {
                  "description": "List of container definitions for the sessions of the session pool.",
                  "type": "array",
                  "items": {
                    "description": "Container definitions for the sessions of the session pool.",
                    "type": "object",
                    "properties": {
                      "image": {
                        "description": "Container image tag.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Custom container name.",
                        "type": "string"
                      },
                      "command": {
                        "description": "Container start command.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "args": {
                        "description": "Container start command arguments.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "description": "Container environment variables.",
                        "type": "array",
                        "items": {
                          "description": "Container App container environment variable.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Environment variable name.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Non-secret environment variable value.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Name of the Container App secret from which to pull the environment variable value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "resources": {
                        "description": "Container resource requirements.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "format": "double",
                            "description": "Required CPU in cores, e.g. 0.5",
                            "type": "number"
                          },
                          "memory": {
                            "description": "Required memory, e.g. \"250Mb\"",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "ingress": {
                  "description": "Session pool ingress configuration.",
                  "type": "object",
                  "properties": {
                    "targetPort": {
                      "format": "int32",
                      "description": "Target port in containers for traffic from ingress",
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "sessionNetworkConfiguration": {
              "description": "The network configuration of the sessions in the session pool.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Network status for the sessions.",
                  "type": "string",
                  "enum": [
                    "EgressEnabled",
                    "EgressDisabled"
                  ],
                  "x-ms-enum": {
                    "name": "SessionNetworkStatus",
                    "modelAsString": true
                  }
                }
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SessionPoolCollection": {
      "description": "Session pool collection Azure resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "Container App session pool.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "identity": {
                "description": "Managed identities needed by a session pool to interact with other Azure services to not maintain any secrets or credentials in code.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "properties": {
                "description": "Container App session pool resource specific properties",
                "type": "object",
                "properties": {
                  "environmentId": {
                    "description": "Resource ID of the session pool's environment.",
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.App/managedEnvironments"
                        }
                      ]
                    },
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "containerType": {
                    "description": "The container type of the sessions.",
                    "enum": [
                      "CustomContainer",
                      "PythonLTS"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ContainerType",
                      "modelAsString": true
                    }
                  },
                  "poolManagementType": {
                    "description": "The pool management type of the session pool.",
                    "enum": [
                      "Manual",
                      "Dynamic"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "PoolManagementType",
                      "modelAsString": true
                    }
                  },
                  "nodeCount": {
                    "description": "The number of nodes the session pool is using.",
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                  },
                  "scaleConfiguration": {
                    "description": "The scale configuration of the session pool.",
                    "type": "object",
                    "properties": {
                      "maxConcurrentSessions": {
                        "description": "The maximum count of sessions at the same time.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "readySessionInstances": {
                        "description": "The minimum count of ready session instances.",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "secrets": {
                    "description": "The secrets of the session pool.",
                    "type": "array",
                    "items": {
                      "description": "Secret definition.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Secret Name.",
                          "type": "string"
                        },
                        "value": {
                          "description": "Secret Value.",
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "x-ms-secret": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "dynamicPoolConfiguration": {
                    "description": "The pool configuration if the poolManagementType is dynamic.",
                    "type": "object",
                    "properties": {
                      "lifecycleConfiguration": {
                        "description": "The lifecycle configuration of a session in the dynamic session pool",
                        "type": "object",
                        "properties": {
                          "lifecycleType": {
                            "description": "The lifecycle type of the session pool.",
                            "enum": [
                              "Timed",
                              "OnContainerExit"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "LifecycleType",
                              "modelAsString": true
                            }
                          },
                          "cooldownPeriodInSeconds": {
                            "description": "The cooldown period of a session in seconds when the lifecycle type is 'Timed'.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "maxAlivePeriodInSeconds": {
                            "description": "The maximum alive period of a session in seconds when the lifecycle type is 'OnContainerExit'.",
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  },
                  "customContainerTemplate": {
                    "description": "The custom container configuration if the containerType is CustomContainer.",
                    "type": "object",
                    "properties": {
                      "registryCredentials": {
                        "description": "Private container registry credentials for containers used by the sessions of the session pool.",
                        "type": "object",
                        "properties": {
                          "server": {
                            "description": "Container registry server.",
                            "type": "string"
                          },
                          "username": {
                            "description": "Container registry username.",
                            "type": "string"
                          },
                          "passwordSecretRef": {
                            "description": "The name of the secret that contains the registry login password",
                            "type": "string"
                          },
                          "identity": {
                            "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
                            "type": "string"
                          }
                        }
                      },
                      "containers": {
                        "description": "List of container definitions for the sessions of the session pool.",
                        "type": "array",
                        "items": {
                          "description": "Container definitions for the sessions of the session pool.",
                          "type": "object",
                          "properties": {
                            "image": {
                              "description": "Container image tag.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Custom container name.",
                              "type": "string"
                            },
                            "command": {
                              "description": "Container start command.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "args": {
                              "description": "Container start command arguments.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "env": {
                              "description": "Container environment variables.",
                              "type": "array",
                              "items": {
                                "description": "Container App container environment variable.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Environment variable name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Non-secret environment variable value.",
                                    "type": "string"
                                  },
                                  "secretRef": {
                                    "description": "Name of the Container App secret from which to pull the environment variable value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "resources": {
                              "description": "Container resource requirements.",
                              "type": "object",
                              "properties": {
                                "cpu": {
                                  "format": "double",
                                  "description": "Required CPU in cores, e.g. 0.5",
                                  "type": "number"
                                },
                                "memory": {
                                  "description": "Required memory, e.g. \"250Mb\"",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "ingress": {
                        "description": "Session pool ingress configuration.",
                        "type": "object",
                        "properties": {
                          "targetPort": {
                            "format": "int32",
                            "description": "Target port in containers for traffic from ingress",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  },
                  "sessionNetworkConfiguration": {
                    "description": "The network configuration of the sessions in the session pool.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Network status for the sessions.",
                        "type": "string",
                        "enum": [
                          "EgressEnabled",
                          "EgressDisabled"
                        ],
                        "x-ms-enum": {
                          "name": "SessionNetworkStatus",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "poolManagementEndpoint": {
                    "description": "The endpoint to manage the pool.",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provisioning state of the session pool.",
                    "enum": [
                      "InProgress",
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Deleting"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "SessionPoolProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "managedIdentitySettings": {
                    "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                    "type": "array",
                    "items": {
                      "description": "Optional settings for a Managed Identity that is assigned to the Session pool.",
                      "type": "object",
                      "required": [
                        "identity"
                      ],
                      "properties": {
                        "identity": {
                          "description": "The resource ID of a user-assigned managed identity that is assigned to the Session Pool, or 'system' for system-assigned identity.",
                          "type": "string"
                        },
                        "lifecycle": {
                          "description": "Use to select the lifecycle stages of a Session Pool during which the Managed Identity should be available.",
                          "enum": [
                            "None",
                            "Main"
                          ],
                          "type": "string",
                          "default": "None",
                          "x-ms-enum": {
                            "name": "IdentitySettingsLifeCycle",
                            "modelAsString": true
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "identity"
                    ]
                  }
                },
                "x-ms-client-flatten": true
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SourceControl": {
      "description": "Container App SourceControl.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "SourceControl resource specific properties",
          "type": "object",
          "properties": {
            "operationState": {
              "description": "Current provisioning State of the operation",
              "enum": [
                "InProgress",
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "type": "string",
              "readOnly": true,
              "x-ms-enum": {
                "name": "SourceControlOperationState",
                "modelAsString": true
              }
            },
            "repoUrl": {
              "description": "The repo url which will be integrated to ContainerApp.",
              "type": "string"
            },
            "branch": {
              "description": "The branch which will trigger the auto deployment",
              "type": "string"
            },
            "githubActionConfiguration": {
              "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
              "type": "object",
              "properties": {
                "registryInfo": {
                  "description": "Registry configurations.",
                  "type": "object",
                  "properties": {
                    "registryUrl": {
                      "description": "registry server Url.",
                      "type": "string"
                    },
                    "registryUserName": {
                      "description": "registry username.",
                      "type": "string"
                    },
                    "registryPassword": {
                      "description": "registry secret.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "x-ms-secret": true
                    }
                  }
                },
                "azureCredentials": {
                  "description": "AzureCredentials configurations.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "Client Id.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "x-ms-secret": true
                    },
                    "clientSecret": {
                      "description": "Client Secret.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "x-ms-secret": true
                    },
                    "tenantId": {
                      "description": "Tenant Id.",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "x-ms-secret": true
                    },
                    "kind": {
                      "description": "Kind of auth github does for deploying the template",
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "subscriptionId": {
                      "description": "Subscription Id.",
                      "type": "string"
                    }
                  }
                },
                "contextPath": {
                  "description": "Context path",
                  "type": "string"
                },
                "githubPersonalAccessToken": {
                  "description": "One time Github PAT to configure github environment",
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "update"
                  ],
                  "x-ms-secret": true
                },
                "image": {
                  "description": "Image name",
                  "type": "string"
                },
                "publishType": {
                  "description": "Code or Image",
                  "type": "string"
                },
                "os": {
                  "description": "Operation system",
                  "type": "string"
                },
                "runtimeStack": {
                  "description": "Runtime stack",
                  "type": "string"
                },
                "runtimeVersion": {
                  "description": "Runtime version",
                  "type": "string"
                }
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "GithubActionConfiguration": {
      "description": "Configuration properties that define the mutable settings of a Container App SourceControl",
      "type": "object",
      "properties": {
        "registryInfo": {
          "description": "Registry configurations.",
          "type": "object",
          "properties": {
            "registryUrl": {
              "description": "registry server Url.",
              "type": "string"
            },
            "registryUserName": {
              "description": "registry username.",
              "type": "string"
            },
            "registryPassword": {
              "description": "registry secret.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "x-ms-secret": true
            }
          }
        },
        "azureCredentials": {
          "description": "AzureCredentials configurations.",
          "type": "object",
          "properties": {
            "clientId": {
              "description": "Client Id.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "x-ms-secret": true
            },
            "clientSecret": {
              "description": "Client Secret.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "x-ms-secret": true
            },
            "tenantId": {
              "description": "Tenant Id.",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "x-ms-secret": true
            },
            "kind": {
              "description": "Kind of auth github does for deploying the template",
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "subscriptionId": {
              "description": "Subscription Id.",
              "type": "string"
            }
          }
        },
        "contextPath": {
          "description": "Context path",
          "type": "string"
        },
        "githubPersonalAccessToken": {
          "description": "One time Github PAT to configure github environment",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "image": {
          "description": "Image name",
          "type": "string"
        },
        "publishType": {
          "description": "Code or Image",
          "type": "string"
        },
        "os": {
          "description": "Operation system",
          "type": "string"
        },
        "runtimeStack": {
          "description": "Runtime stack",
          "type": "string"
        },
        "runtimeVersion": {
          "description": "Runtime version",
          "type": "string"
        }
      }
    },
    "RegistryInfo": {
      "description": "Container App registry information.",
      "type": "object",
      "properties": {
        "registryUrl": {
          "description": "registry server Url.",
          "type": "string"
        },
        "registryUserName": {
          "description": "registry username.",
          "type": "string"
        },
        "registryPassword": {
          "description": "registry secret.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        }
      }
    },
    "AzureCredentials": {
      "description": "Container App credentials.",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "Client Id.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "clientSecret": {
          "description": "Client Secret.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "tenantId": {
          "description": "Tenant Id.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "x-ms-secret": true
        },
        "kind": {
          "description": "Kind of auth github does for deploying the template",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "subscriptionId": {
          "description": "Subscription Id.",
          "type": "string"
        }
      }
    },
    "SourceControlCollection": {
      "description": "SourceControl collection ARM resource.",
      "required": [
        "value"
      ],
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of resources.",
          "type": "array",
          "items": {
            "description": "Container App SourceControl.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "SourceControl resource specific properties",
                "type": "object",
                "properties": {
                  "operationState": {
                    "description": "Current provisioning State of the operation",
                    "enum": [
                      "InProgress",
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "type": "string",
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "SourceControlOperationState",
                      "modelAsString": true
                    }
                  },
                  "repoUrl": {
                    "description": "The repo url which will be integrated to ContainerApp.",
                    "type": "string"
                  },
                  "branch": {
                    "description": "The branch which will trigger the auto deployment",
                    "type": "string"
                  },
                  "githubActionConfiguration": {
                    "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
                    "type": "object",
                    "properties": {
                      "registryInfo": {
                        "description": "Registry configurations.",
                        "type": "object",
                        "properties": {
                          "registryUrl": {
                            "description": "registry server Url.",
                            "type": "string"
                          },
                          "registryUserName": {
                            "description": "registry username.",
                            "type": "string"
                          },
                          "registryPassword": {
                            "description": "registry secret.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          }
                        }
                      },
                      "azureCredentials": {
                        "description": "AzureCredentials configurations.",
                        "type": "object",
                        "properties": {
                          "clientId": {
                            "description": "Client Id.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          },
                          "clientSecret": {
                            "description": "Client Secret.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          },
                          "tenantId": {
                            "description": "Tenant Id.",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "x-ms-secret": true
                          },
                          "kind": {
                            "description": "Kind of auth github does for deploying the template",
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "subscriptionId": {
                            "description": "Subscription Id.",
                            "type": "string"
                          }
                        }
                      },
                      "contextPath": {
                        "description": "Context path",
                        "type": "string"
                      },
                      "githubPersonalAccessToken": {
                        "description": "One time Github PAT to configure github environment",
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "update"
                        ],
                        "x-ms-secret": true
                      },
                      "image": {
                        "description": "Image name",
                        "type": "string"
                      },
                      "publishType": {
                        "description": "Code or Image",
                        "type": "string"
                      },
                      "os": {
                        "description": "Operation system",
                        "type": "string"
                      },
                      "runtimeStack": {
                        "description": "Runtime stack",
                        "type": "string"
                      },
                      "runtimeVersion": {
                        "description": "Runtime version",
                        "type": "string"
                      }
                    }
                  }
                },
                "x-ms-client-flatten": true
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CustomDomainVerificationId": {
      "description": "Custom domain verification Id of a subscription",
      "type": "string",
      "readOnly": true
    },
    "UsageName": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The name of the resource."
        },
        "localizedValue": {
          "type": "string",
          "description": "The localized name of the resource."
        }
      },
      "description": "The Usage Names."
    },
    "Usage": {
      "type": "object",
      "properties": {
        "unit": {
          "type": "string",
          "description": "An enum describing the unit of usage measurement.",
          "enum": [
            "Count"
          ],
          "x-ms-enum": {
            "name": "UsageUnit",
            "modelAsString": false
          }
        },
        "currentValue": {
          "type": "number",
          "format": "float",
          "description": "The current usage of the resource."
        },
        "limit": {
          "type": "number",
          "format": "float",
          "description": "The maximum permitted usage of the resource."
        },
        "name": {
          "description": "The name of the type of usage.",
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "The name of the resource."
            },
            "localizedValue": {
              "type": "string",
              "description": "The localized name of the resource."
            }
          }
        }
      },
      "required": [
        "unit",
        "currentValue",
        "limit",
        "name"
      ],
      "description": "Describes Compute Resource Usage."
    },
    "ListUsagesResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "unit": {
                "type": "string",
                "description": "An enum describing the unit of usage measurement.",
                "enum": [
                  "Count"
                ],
                "x-ms-enum": {
                  "name": "UsageUnit",
                  "modelAsString": false
                }
              },
              "currentValue": {
                "type": "number",
                "format": "float",
                "description": "The current usage of the resource."
              },
              "limit": {
                "type": "number",
                "format": "float",
                "description": "The maximum permitted usage of the resource."
              },
              "name": {
                "description": "The name of the type of usage.",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The name of the resource."
                  },
                  "localizedValue": {
                    "type": "string",
                    "description": "The localized name of the resource."
                  }
                }
              }
            },
            "required": [
              "unit",
              "currentValue",
              "limit",
              "name"
            ],
            "description": "Describes Compute Resource Usage."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "The list of compute resource usages."
        },
        "nextLink": {
          "type": "string",
          "description": "The URI to fetch the next page of compute resource usage information. Call ListNext() with this to fetch the next page of compute resource usage information."
        }
      }
    }
  },
  "parameters": {
    "JobNameParameter": {
      "name": "jobName",
      "in": "path",
      "description": "Job Name",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "x-ms-parameter-location": "method"
    },
    "JobExecutionNameParameter": {
      "name": "jobExecutionName",
      "in": "path",
      "description": "Job execution name.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "x-ms-parameter-location": "method"
    },
    "ContainerAppNameParameter": {
      "name": "containerAppName",
      "in": "path",
      "description": "Name of the Container App.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "x-ms-parameter-location": "method"
    },
    "LogicAppNameParameter": {
      "name": "logicAppName",
      "in": "path",
      "description": "Name of the Logic App.",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "x-ms-parameter-location": "method"
    },
    "HttpRouteConfigNameParameter": {
      "name": "httpRouteName",
      "in": "path",
      "description": "Name of the Http Route Config Resource.",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9]*$",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    },
    "SessionPoolNameParameter": {
      "name": "sessionPoolName",
      "in": "path",
      "description": "Name of the session pool.",
      "required": true,
      "type": "string",
      "pattern": "^[a-z][a-z0-9]*$",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    }
  }
}