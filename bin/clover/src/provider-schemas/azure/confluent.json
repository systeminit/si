{
  "swagger": "2.0",
  "info": {
    "title": "Azure confluent",
    "version": "2024-07-01",
    "description": "Azure confluent service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.Confluent/operations": {
      "get": {
        "operationId": "OrganizationOperations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Result of GET request to list Confluent operations.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of Confluent operations supported by the Microsoft.Confluent provider.",
                  "items": {
                    "type": "object",
                    "description": "An Confluent REST API operation.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Operation name: {provider}/{resource}/{operation}"
                      },
                      "display": {
                        "description": "The object that represents the operation.",
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "Service provider: Microsoft.Confluent"
                          },
                          "resource": {
                            "type": "string",
                            "description": "Type on which the operation is performed, e.g., 'clusters'."
                          },
                          "operation": {
                            "type": "string",
                            "description": "Operation type, e.g., read, write, delete, etc."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the operation, e.g., 'Write confluent'."
                          }
                        }
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Indicates whether the operation is a data action"
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of operation list results if there are any."
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Confluent/agreements": {
      "get": {
        "operationId": "MarketplaceAgreements_List",
        "summary": "List Confluent marketplace agreements in the subscription.",
        "description": "List Confluent marketplace agreements in the subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Response of a list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ConfluentAgreementResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Agreement Terms definition",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ARM id of the resource.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the agreement.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the agreement.",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Metadata pertaining to creation and last modification of the resource",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Represents the properties of the resource.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "publisher": {
                            "type": "string",
                            "description": "Publisher identifier string."
                          },
                          "product": {
                            "type": "string",
                            "description": "Product identifier string."
                          },
                          "plan": {
                            "type": "string",
                            "description": "Plan identifier string."
                          },
                          "licenseTextLink": {
                            "type": "string",
                            "description": "Link to HTML with Microsoft and Publisher terms."
                          },
                          "privacyPolicyLink": {
                            "type": "string",
                            "description": "Link to the privacy policy of the publisher."
                          },
                          "retrieveDatetime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time in UTC of when the terms were accepted. This is empty if Accepted is false."
                          },
                          "signature": {
                            "type": "string",
                            "description": "Terms signature."
                          },
                          "accepted": {
                            "type": "boolean",
                            "description": "If any version of the terms have been accepted, otherwise false."
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Confluent/agreements/default": {
      "put": {
        "operationId": "MarketplaceAgreements_Create",
        "summary": "Create Confluent Marketplace agreement in the subscription.",
        "description": "Create Confluent Marketplace agreement in the subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The request body",
            "required": false,
            "schema": {
              "type": "object",
              "description": "Agreement Terms definition",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ARM id of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the agreement.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the agreement.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Represents the properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "publisher": {
                      "type": "string",
                      "description": "Publisher identifier string."
                    },
                    "product": {
                      "type": "string",
                      "description": "Product identifier string."
                    },
                    "plan": {
                      "type": "string",
                      "description": "Plan identifier string."
                    },
                    "licenseTextLink": {
                      "type": "string",
                      "description": "Link to HTML with Microsoft and Publisher terms."
                    },
                    "privacyPolicyLink": {
                      "type": "string",
                      "description": "Link to the privacy policy of the publisher."
                    },
                    "retrieveDatetime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time in UTC of when the terms were accepted. This is empty if Accepted is false."
                    },
                    "signature": {
                      "type": "string",
                      "description": "Terms signature."
                    },
                    "accepted": {
                      "type": "boolean",
                      "description": "If any version of the terms have been accepted, otherwise false."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "description": "Agreement Terms definition",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ARM id of the resource.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the agreement.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the agreement.",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Metadata pertaining to creation and last modification of the resource",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Represents the properties of the resource.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "publisher": {
                      "type": "string",
                      "description": "Publisher identifier string."
                    },
                    "product": {
                      "type": "string",
                      "description": "Product identifier string."
                    },
                    "plan": {
                      "type": "string",
                      "description": "Plan identifier string."
                    },
                    "licenseTextLink": {
                      "type": "string",
                      "description": "Link to HTML with Microsoft and Publisher terms."
                    },
                    "privacyPolicyLink": {
                      "type": "string",
                      "description": "Link to the privacy policy of the publisher."
                    },
                    "retrieveDatetime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time in UTC of when the terms were accepted. This is empty if Accepted is false."
                    },
                    "signature": {
                      "type": "string",
                      "description": "Terms signature."
                    },
                    "accepted": {
                      "type": "boolean",
                      "description": "If any version of the terms have been accepted, otherwise false."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Confluent/organizations": {
      "get": {
        "operationId": "Organization_ListBySubscription",
        "tags": [
          "OrganizationResources"
        ],
        "description": "List all organizations under the specified subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a OrganizationResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The OrganizationResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Organization resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Organization resource properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "createdTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation time of the resource.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provision states for confluent RP",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Accepted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleted",
                              "NotSpecified"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisionState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Accepted",
                                  "value": "Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting"
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded"
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed"
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled"
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified"
                                }
                              ]
                            }
                          },
                          "organizationId": {
                            "type": "string",
                            "description": "Id of the Confluent organization.",
                            "readOnly": true
                          },
                          "ssoUrl": {
                            "type": "string",
                            "description": "SSO url for the Confluent organization.",
                            "readOnly": true
                          },
                          "offerDetail": {
                            "description": "Confluent offer detail",
                            "type": "object",
                            "properties": {
                              "publisherId": {
                                "type": "string",
                                "description": "Publisher Id",
                                "maxLength": 50
                              },
                              "id": {
                                "type": "string",
                                "description": "Offer Id",
                                "maxLength": 50
                              },
                              "planId": {
                                "type": "string",
                                "description": "Offer Plan Id",
                                "maxLength": 200
                              },
                              "planName": {
                                "type": "string",
                                "description": "Offer Plan Name",
                                "maxLength": 200
                              },
                              "termUnit": {
                                "type": "string",
                                "description": "Offer Plan Term unit",
                                "maxLength": 25
                              },
                              "termId": {
                                "type": "string",
                                "description": "Offer Plan Term Id",
                                "maxLength": 50
                              },
                              "privateOfferId": {
                                "type": "string",
                                "description": "Private Offer Id",
                                "maxLength": 255
                              },
                              "privateOfferIds": {
                                "type": "array",
                                "description": "Array of Private Offer Ids",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "status": {
                                "description": "SaaS Offer Status",
                                "type": "string",
                                "enum": [
                                  "Started",
                                  "PendingFulfillmentStart",
                                  "InProgress",
                                  "Subscribed",
                                  "Suspended",
                                  "Reinstated",
                                  "Succeeded",
                                  "Failed",
                                  "Unsubscribed",
                                  "Updating"
                                ],
                                "x-ms-enum": {
                                  "name": "SaaSOfferStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Started",
                                      "value": "Started"
                                    },
                                    {
                                      "name": "PendingFulfillmentStart",
                                      "value": "PendingFulfillmentStart"
                                    },
                                    {
                                      "name": "InProgress",
                                      "value": "InProgress"
                                    },
                                    {
                                      "name": "Subscribed",
                                      "value": "Subscribed"
                                    },
                                    {
                                      "name": "Suspended",
                                      "value": "Suspended"
                                    },
                                    {
                                      "name": "Reinstated",
                                      "value": "Reinstated"
                                    },
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded"
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed"
                                    },
                                    {
                                      "name": "Unsubscribed",
                                      "value": "Unsubscribed"
                                    },
                                    {
                                      "name": "Updating",
                                      "value": "Updating"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "publisherId",
                              "id",
                              "planId",
                              "planName",
                              "termUnit"
                            ]
                          },
                          "userDetail": {
                            "description": "Subscriber detail",
                            "type": "object",
                            "properties": {
                              "firstName": {
                                "type": "string",
                                "description": "First name",
                                "maxLength": 50
                              },
                              "lastName": {
                                "type": "string",
                                "description": "Last name",
                                "maxLength": 50
                              },
                              "emailAddress": {
                                "type": "string",
                                "description": "Email address",
                                "pattern": "^\\S+@\\S+\\.\\S+$"
                              },
                              "userPrincipalName": {
                                "type": "string",
                                "description": "User principal name"
                              },
                              "aadEmail": {
                                "type": "string",
                                "description": "AAD email address"
                              }
                            },
                            "required": [
                              "emailAddress"
                            ]
                          },
                          "linkOrganization": {
                            "description": "Link an existing Confluent organization",
                            "type": "object",
                            "properties": {
                              "token": {
                                "type": "string",
                                "format": "password",
                                "description": "User auth token",
                                "x-ms-mutability": [
                                  "create"
                                ],
                                "x-ms-secret": true
                              }
                            },
                            "required": [
                              "token"
                            ]
                          }
                        },
                        "required": [
                          "offerDetail",
                          "userDetail"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations": {
      "get": {
        "operationId": "Organization_ListByResourceGroup",
        "tags": [
          "OrganizationResources"
        ],
        "description": "List all Organizations under the specified resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a OrganizationResource list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The OrganizationResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Organization resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Organization resource properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "createdTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation time of the resource.",
                            "readOnly": true
                          },
                          "provisioningState": {
                            "description": "Provision states for confluent RP",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Accepted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Deleted",
                              "NotSpecified"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisionState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Accepted",
                                  "value": "Accepted"
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting"
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded"
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed"
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled"
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted"
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified"
                                }
                              ]
                            }
                          },
                          "organizationId": {
                            "type": "string",
                            "description": "Id of the Confluent organization.",
                            "readOnly": true
                          },
                          "ssoUrl": {
                            "type": "string",
                            "description": "SSO url for the Confluent organization.",
                            "readOnly": true
                          },
                          "offerDetail": {
                            "description": "Confluent offer detail",
                            "type": "object",
                            "properties": {
                              "publisherId": {
                                "type": "string",
                                "description": "Publisher Id",
                                "maxLength": 50
                              },
                              "id": {
                                "type": "string",
                                "description": "Offer Id",
                                "maxLength": 50
                              },
                              "planId": {
                                "type": "string",
                                "description": "Offer Plan Id",
                                "maxLength": 200
                              },
                              "planName": {
                                "type": "string",
                                "description": "Offer Plan Name",
                                "maxLength": 200
                              },
                              "termUnit": {
                                "type": "string",
                                "description": "Offer Plan Term unit",
                                "maxLength": 25
                              },
                              "termId": {
                                "type": "string",
                                "description": "Offer Plan Term Id",
                                "maxLength": 50
                              },
                              "privateOfferId": {
                                "type": "string",
                                "description": "Private Offer Id",
                                "maxLength": 255
                              },
                              "privateOfferIds": {
                                "type": "array",
                                "description": "Array of Private Offer Ids",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "status": {
                                "description": "SaaS Offer Status",
                                "type": "string",
                                "enum": [
                                  "Started",
                                  "PendingFulfillmentStart",
                                  "InProgress",
                                  "Subscribed",
                                  "Suspended",
                                  "Reinstated",
                                  "Succeeded",
                                  "Failed",
                                  "Unsubscribed",
                                  "Updating"
                                ],
                                "x-ms-enum": {
                                  "name": "SaaSOfferStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Started",
                                      "value": "Started"
                                    },
                                    {
                                      "name": "PendingFulfillmentStart",
                                      "value": "PendingFulfillmentStart"
                                    },
                                    {
                                      "name": "InProgress",
                                      "value": "InProgress"
                                    },
                                    {
                                      "name": "Subscribed",
                                      "value": "Subscribed"
                                    },
                                    {
                                      "name": "Suspended",
                                      "value": "Suspended"
                                    },
                                    {
                                      "name": "Reinstated",
                                      "value": "Reinstated"
                                    },
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded"
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed"
                                    },
                                    {
                                      "name": "Unsubscribed",
                                      "value": "Unsubscribed"
                                    },
                                    {
                                      "name": "Updating",
                                      "value": "Updating"
                                    }
                                  ]
                                }
                              }
                            },
                            "required": [
                              "publisherId",
                              "id",
                              "planId",
                              "planName",
                              "termUnit"
                            ]
                          },
                          "userDetail": {
                            "description": "Subscriber detail",
                            "type": "object",
                            "properties": {
                              "firstName": {
                                "type": "string",
                                "description": "First name",
                                "maxLength": 50
                              },
                              "lastName": {
                                "type": "string",
                                "description": "Last name",
                                "maxLength": 50
                              },
                              "emailAddress": {
                                "type": "string",
                                "description": "Email address",
                                "pattern": "^\\S+@\\S+\\.\\S+$"
                              },
                              "userPrincipalName": {
                                "type": "string",
                                "description": "User principal name"
                              },
                              "aadEmail": {
                                "type": "string",
                                "description": "AAD email address"
                              }
                            },
                            "required": [
                              "emailAddress"
                            ]
                          },
                          "linkOrganization": {
                            "description": "Link an existing Confluent organization",
                            "type": "object",
                            "properties": {
                              "token": {
                                "type": "string",
                                "format": "password",
                                "description": "User auth token",
                                "x-ms-mutability": [
                                  "create"
                                ],
                                "x-ms-secret": true
                              }
                            },
                            "required": [
                              "token"
                            ]
                          }
                        },
                        "required": [
                          "offerDetail",
                          "userDetail"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}": {
      "get": {
        "operationId": "Organization_Get",
        "tags": [
          "OrganizationResources"
        ],
        "description": "Get the properties of a specific Organization resource.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Organization resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Organization resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "createdTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation time of the resource.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provision states for confluent RP",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Accepted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleted",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Accepted",
                            "value": "Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified"
                          }
                        ]
                      }
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Id of the Confluent organization.",
                      "readOnly": true
                    },
                    "ssoUrl": {
                      "type": "string",
                      "description": "SSO url for the Confluent organization.",
                      "readOnly": true
                    },
                    "offerDetail": {
                      "description": "Confluent offer detail",
                      "type": "object",
                      "properties": {
                        "publisherId": {
                          "type": "string",
                          "description": "Publisher Id",
                          "maxLength": 50
                        },
                        "id": {
                          "type": "string",
                          "description": "Offer Id",
                          "maxLength": 50
                        },
                        "planId": {
                          "type": "string",
                          "description": "Offer Plan Id",
                          "maxLength": 200
                        },
                        "planName": {
                          "type": "string",
                          "description": "Offer Plan Name",
                          "maxLength": 200
                        },
                        "termUnit": {
                          "type": "string",
                          "description": "Offer Plan Term unit",
                          "maxLength": 25
                        },
                        "termId": {
                          "type": "string",
                          "description": "Offer Plan Term Id",
                          "maxLength": 50
                        },
                        "privateOfferId": {
                          "type": "string",
                          "description": "Private Offer Id",
                          "maxLength": 255
                        },
                        "privateOfferIds": {
                          "type": "array",
                          "description": "Array of Private Offer Ids",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "description": "SaaS Offer Status",
                          "type": "string",
                          "enum": [
                            "Started",
                            "PendingFulfillmentStart",
                            "InProgress",
                            "Subscribed",
                            "Suspended",
                            "Reinstated",
                            "Succeeded",
                            "Failed",
                            "Unsubscribed",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "SaaSOfferStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Started",
                                "value": "Started"
                              },
                              {
                                "name": "PendingFulfillmentStart",
                                "value": "PendingFulfillmentStart"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Subscribed",
                                "value": "Subscribed"
                              },
                              {
                                "name": "Suspended",
                                "value": "Suspended"
                              },
                              {
                                "name": "Reinstated",
                                "value": "Reinstated"
                              },
                              {
                                "name": "Succeeded",
                                "value": "Succeeded"
                              },
                              {
                                "name": "Failed",
                                "value": "Failed"
                              },
                              {
                                "name": "Unsubscribed",
                                "value": "Unsubscribed"
                              },
                              {
                                "name": "Updating",
                                "value": "Updating"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "publisherId",
                        "id",
                        "planId",
                        "planName",
                        "termUnit"
                      ]
                    },
                    "userDetail": {
                      "description": "Subscriber detail",
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "description": "First name",
                          "maxLength": 50
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Last name",
                          "maxLength": 50
                        },
                        "emailAddress": {
                          "type": "string",
                          "description": "Email address",
                          "pattern": "^\\S+@\\S+\\.\\S+$"
                        },
                        "userPrincipalName": {
                          "type": "string",
                          "description": "User principal name"
                        },
                        "aadEmail": {
                          "type": "string",
                          "description": "AAD email address"
                        }
                      },
                      "required": [
                        "emailAddress"
                      ]
                    },
                    "linkOrganization": {
                      "description": "Link an existing Confluent organization",
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "format": "password",
                          "description": "User auth token",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      },
                      "required": [
                        "token"
                      ]
                    }
                  },
                  "required": [
                    "offerDetail",
                    "userDetail"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Organization_Create",
        "tags": [
          "OrganizationResources"
        ],
        "description": "Create Organization resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Organization resource model",
            "required": false,
            "schema": {
              "type": "object",
              "description": "Organization resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Organization resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "createdTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation time of the resource.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provision states for confluent RP",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Accepted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleted",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Accepted",
                            "value": "Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified"
                          }
                        ]
                      }
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Id of the Confluent organization.",
                      "readOnly": true
                    },
                    "ssoUrl": {
                      "type": "string",
                      "description": "SSO url for the Confluent organization.",
                      "readOnly": true
                    },
                    "offerDetail": {
                      "description": "Confluent offer detail",
                      "type": "object",
                      "properties": {
                        "publisherId": {
                          "type": "string",
                          "description": "Publisher Id",
                          "maxLength": 50
                        },
                        "id": {
                          "type": "string",
                          "description": "Offer Id",
                          "maxLength": 50
                        },
                        "planId": {
                          "type": "string",
                          "description": "Offer Plan Id",
                          "maxLength": 200
                        },
                        "planName": {
                          "type": "string",
                          "description": "Offer Plan Name",
                          "maxLength": 200
                        },
                        "termUnit": {
                          "type": "string",
                          "description": "Offer Plan Term unit",
                          "maxLength": 25
                        },
                        "termId": {
                          "type": "string",
                          "description": "Offer Plan Term Id",
                          "maxLength": 50
                        },
                        "privateOfferId": {
                          "type": "string",
                          "description": "Private Offer Id",
                          "maxLength": 255
                        },
                        "privateOfferIds": {
                          "type": "array",
                          "description": "Array of Private Offer Ids",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "description": "SaaS Offer Status",
                          "type": "string",
                          "enum": [
                            "Started",
                            "PendingFulfillmentStart",
                            "InProgress",
                            "Subscribed",
                            "Suspended",
                            "Reinstated",
                            "Succeeded",
                            "Failed",
                            "Unsubscribed",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "SaaSOfferStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Started",
                                "value": "Started"
                              },
                              {
                                "name": "PendingFulfillmentStart",
                                "value": "PendingFulfillmentStart"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Subscribed",
                                "value": "Subscribed"
                              },
                              {
                                "name": "Suspended",
                                "value": "Suspended"
                              },
                              {
                                "name": "Reinstated",
                                "value": "Reinstated"
                              },
                              {
                                "name": "Succeeded",
                                "value": "Succeeded"
                              },
                              {
                                "name": "Failed",
                                "value": "Failed"
                              },
                              {
                                "name": "Unsubscribed",
                                "value": "Unsubscribed"
                              },
                              {
                                "name": "Updating",
                                "value": "Updating"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "publisherId",
                        "id",
                        "planId",
                        "planName",
                        "termUnit"
                      ]
                    },
                    "userDetail": {
                      "description": "Subscriber detail",
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "description": "First name",
                          "maxLength": 50
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Last name",
                          "maxLength": 50
                        },
                        "emailAddress": {
                          "type": "string",
                          "description": "Email address",
                          "pattern": "^\\S+@\\S+\\.\\S+$"
                        },
                        "userPrincipalName": {
                          "type": "string",
                          "description": "User principal name"
                        },
                        "aadEmail": {
                          "type": "string",
                          "description": "AAD email address"
                        }
                      },
                      "required": [
                        "emailAddress"
                      ]
                    },
                    "linkOrganization": {
                      "description": "Link an existing Confluent organization",
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "format": "password",
                          "description": "User auth token",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      },
                      "required": [
                        "token"
                      ]
                    }
                  },
                  "required": [
                    "offerDetail",
                    "userDetail"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'OrganizationResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Organization resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Organization resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "createdTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation time of the resource.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provision states for confluent RP",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Accepted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleted",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Accepted",
                            "value": "Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified"
                          }
                        ]
                      }
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Id of the Confluent organization.",
                      "readOnly": true
                    },
                    "ssoUrl": {
                      "type": "string",
                      "description": "SSO url for the Confluent organization.",
                      "readOnly": true
                    },
                    "offerDetail": {
                      "description": "Confluent offer detail",
                      "type": "object",
                      "properties": {
                        "publisherId": {
                          "type": "string",
                          "description": "Publisher Id",
                          "maxLength": 50
                        },
                        "id": {
                          "type": "string",
                          "description": "Offer Id",
                          "maxLength": 50
                        },
                        "planId": {
                          "type": "string",
                          "description": "Offer Plan Id",
                          "maxLength": 200
                        },
                        "planName": {
                          "type": "string",
                          "description": "Offer Plan Name",
                          "maxLength": 200
                        },
                        "termUnit": {
                          "type": "string",
                          "description": "Offer Plan Term unit",
                          "maxLength": 25
                        },
                        "termId": {
                          "type": "string",
                          "description": "Offer Plan Term Id",
                          "maxLength": 50
                        },
                        "privateOfferId": {
                          "type": "string",
                          "description": "Private Offer Id",
                          "maxLength": 255
                        },
                        "privateOfferIds": {
                          "type": "array",
                          "description": "Array of Private Offer Ids",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "description": "SaaS Offer Status",
                          "type": "string",
                          "enum": [
                            "Started",
                            "PendingFulfillmentStart",
                            "InProgress",
                            "Subscribed",
                            "Suspended",
                            "Reinstated",
                            "Succeeded",
                            "Failed",
                            "Unsubscribed",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "SaaSOfferStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Started",
                                "value": "Started"
                              },
                              {
                                "name": "PendingFulfillmentStart",
                                "value": "PendingFulfillmentStart"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Subscribed",
                                "value": "Subscribed"
                              },
                              {
                                "name": "Suspended",
                                "value": "Suspended"
                              },
                              {
                                "name": "Reinstated",
                                "value": "Reinstated"
                              },
                              {
                                "name": "Succeeded",
                                "value": "Succeeded"
                              },
                              {
                                "name": "Failed",
                                "value": "Failed"
                              },
                              {
                                "name": "Unsubscribed",
                                "value": "Unsubscribed"
                              },
                              {
                                "name": "Updating",
                                "value": "Updating"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "publisherId",
                        "id",
                        "planId",
                        "planName",
                        "termUnit"
                      ]
                    },
                    "userDetail": {
                      "description": "Subscriber detail",
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "description": "First name",
                          "maxLength": 50
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Last name",
                          "maxLength": 50
                        },
                        "emailAddress": {
                          "type": "string",
                          "description": "Email address",
                          "pattern": "^\\S+@\\S+\\.\\S+$"
                        },
                        "userPrincipalName": {
                          "type": "string",
                          "description": "User principal name"
                        },
                        "aadEmail": {
                          "type": "string",
                          "description": "AAD email address"
                        }
                      },
                      "required": [
                        "emailAddress"
                      ]
                    },
                    "linkOrganization": {
                      "description": "Link an existing Confluent organization",
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "format": "password",
                          "description": "User auth token",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      },
                      "required": [
                        "token"
                      ]
                    }
                  },
                  "required": [
                    "offerDetail",
                    "userDetail"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'OrganizationResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Organization resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Organization resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "createdTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation time of the resource.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provision states for confluent RP",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Accepted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleted",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Accepted",
                            "value": "Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified"
                          }
                        ]
                      }
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Id of the Confluent organization.",
                      "readOnly": true
                    },
                    "ssoUrl": {
                      "type": "string",
                      "description": "SSO url for the Confluent organization.",
                      "readOnly": true
                    },
                    "offerDetail": {
                      "description": "Confluent offer detail",
                      "type": "object",
                      "properties": {
                        "publisherId": {
                          "type": "string",
                          "description": "Publisher Id",
                          "maxLength": 50
                        },
                        "id": {
                          "type": "string",
                          "description": "Offer Id",
                          "maxLength": 50
                        },
                        "planId": {
                          "type": "string",
                          "description": "Offer Plan Id",
                          "maxLength": 200
                        },
                        "planName": {
                          "type": "string",
                          "description": "Offer Plan Name",
                          "maxLength": 200
                        },
                        "termUnit": {
                          "type": "string",
                          "description": "Offer Plan Term unit",
                          "maxLength": 25
                        },
                        "termId": {
                          "type": "string",
                          "description": "Offer Plan Term Id",
                          "maxLength": 50
                        },
                        "privateOfferId": {
                          "type": "string",
                          "description": "Private Offer Id",
                          "maxLength": 255
                        },
                        "privateOfferIds": {
                          "type": "array",
                          "description": "Array of Private Offer Ids",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "description": "SaaS Offer Status",
                          "type": "string",
                          "enum": [
                            "Started",
                            "PendingFulfillmentStart",
                            "InProgress",
                            "Subscribed",
                            "Suspended",
                            "Reinstated",
                            "Succeeded",
                            "Failed",
                            "Unsubscribed",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "SaaSOfferStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Started",
                                "value": "Started"
                              },
                              {
                                "name": "PendingFulfillmentStart",
                                "value": "PendingFulfillmentStart"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Subscribed",
                                "value": "Subscribed"
                              },
                              {
                                "name": "Suspended",
                                "value": "Suspended"
                              },
                              {
                                "name": "Reinstated",
                                "value": "Reinstated"
                              },
                              {
                                "name": "Succeeded",
                                "value": "Succeeded"
                              },
                              {
                                "name": "Failed",
                                "value": "Failed"
                              },
                              {
                                "name": "Unsubscribed",
                                "value": "Unsubscribed"
                              },
                              {
                                "name": "Updating",
                                "value": "Updating"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "publisherId",
                        "id",
                        "planId",
                        "planName",
                        "termUnit"
                      ]
                    },
                    "userDetail": {
                      "description": "Subscriber detail",
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "description": "First name",
                          "maxLength": 50
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Last name",
                          "maxLength": 50
                        },
                        "emailAddress": {
                          "type": "string",
                          "description": "Email address",
                          "pattern": "^\\S+@\\S+\\.\\S+$"
                        },
                        "userPrincipalName": {
                          "type": "string",
                          "description": "User principal name"
                        },
                        "aadEmail": {
                          "type": "string",
                          "description": "AAD email address"
                        }
                      },
                      "required": [
                        "emailAddress"
                      ]
                    },
                    "linkOrganization": {
                      "description": "Link an existing Confluent organization",
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "format": "password",
                          "description": "User auth token",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      },
                      "required": [
                        "token"
                      ]
                    }
                  },
                  "required": [
                    "offerDetail",
                    "userDetail"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Organization_Update",
        "tags": [
          "OrganizationResources"
        ],
        "description": "Update Organization resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated Organization resource",
            "required": false,
            "schema": {
              "type": "object",
              "description": "Organization Resource update",
              "properties": {
                "tags": {
                  "type": "object",
                  "description": "ARM resource tags",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Organization resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Organization resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "createdTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation time of the resource.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provision states for confluent RP",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Accepted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleted",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Accepted",
                            "value": "Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified"
                          }
                        ]
                      }
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Id of the Confluent organization.",
                      "readOnly": true
                    },
                    "ssoUrl": {
                      "type": "string",
                      "description": "SSO url for the Confluent organization.",
                      "readOnly": true
                    },
                    "offerDetail": {
                      "description": "Confluent offer detail",
                      "type": "object",
                      "properties": {
                        "publisherId": {
                          "type": "string",
                          "description": "Publisher Id",
                          "maxLength": 50
                        },
                        "id": {
                          "type": "string",
                          "description": "Offer Id",
                          "maxLength": 50
                        },
                        "planId": {
                          "type": "string",
                          "description": "Offer Plan Id",
                          "maxLength": 200
                        },
                        "planName": {
                          "type": "string",
                          "description": "Offer Plan Name",
                          "maxLength": 200
                        },
                        "termUnit": {
                          "type": "string",
                          "description": "Offer Plan Term unit",
                          "maxLength": 25
                        },
                        "termId": {
                          "type": "string",
                          "description": "Offer Plan Term Id",
                          "maxLength": 50
                        },
                        "privateOfferId": {
                          "type": "string",
                          "description": "Private Offer Id",
                          "maxLength": 255
                        },
                        "privateOfferIds": {
                          "type": "array",
                          "description": "Array of Private Offer Ids",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "description": "SaaS Offer Status",
                          "type": "string",
                          "enum": [
                            "Started",
                            "PendingFulfillmentStart",
                            "InProgress",
                            "Subscribed",
                            "Suspended",
                            "Reinstated",
                            "Succeeded",
                            "Failed",
                            "Unsubscribed",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "SaaSOfferStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Started",
                                "value": "Started"
                              },
                              {
                                "name": "PendingFulfillmentStart",
                                "value": "PendingFulfillmentStart"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Subscribed",
                                "value": "Subscribed"
                              },
                              {
                                "name": "Suspended",
                                "value": "Suspended"
                              },
                              {
                                "name": "Reinstated",
                                "value": "Reinstated"
                              },
                              {
                                "name": "Succeeded",
                                "value": "Succeeded"
                              },
                              {
                                "name": "Failed",
                                "value": "Failed"
                              },
                              {
                                "name": "Unsubscribed",
                                "value": "Unsubscribed"
                              },
                              {
                                "name": "Updating",
                                "value": "Updating"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "publisherId",
                        "id",
                        "planId",
                        "planName",
                        "termUnit"
                      ]
                    },
                    "userDetail": {
                      "description": "Subscriber detail",
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "description": "First name",
                          "maxLength": 50
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Last name",
                          "maxLength": 50
                        },
                        "emailAddress": {
                          "type": "string",
                          "description": "Email address",
                          "pattern": "^\\S+@\\S+\\.\\S+$"
                        },
                        "userPrincipalName": {
                          "type": "string",
                          "description": "User principal name"
                        },
                        "aadEmail": {
                          "type": "string",
                          "description": "AAD email address"
                        }
                      },
                      "required": [
                        "emailAddress"
                      ]
                    },
                    "linkOrganization": {
                      "description": "Link an existing Confluent organization",
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "format": "password",
                          "description": "User auth token",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      },
                      "required": [
                        "token"
                      ]
                    }
                  },
                  "required": [
                    "offerDetail",
                    "userDetail"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "Organization_Delete",
        "tags": [
          "OrganizationResources"
        ],
        "description": "Delete Organization resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/createInvitation": {
      "post": {
        "operationId": "Access_InviteUser",
        "tags": [
          "OrganizationResources"
        ],
        "description": "Invite user to the organization",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Invite user account model",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Invite User Account model",
              "properties": {
                "organizationId": {
                  "type": "string",
                  "description": "Id of the organization"
                },
                "email": {
                  "type": "string",
                  "description": "Email of the logged in user"
                },
                "upn": {
                  "type": "string",
                  "description": "Upn of the logged in user"
                },
                "invitedUserDetails": {
                  "description": "Details of the user who is being invited",
                  "type": "object",
                  "properties": {
                    "invitedEmail": {
                      "type": "string",
                      "description": "UPN/Email of the user who is being invited"
                    },
                    "auth_type": {
                      "type": "string",
                      "description": "Auth type of the user"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Record of the invitation",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "Type of account"
                },
                "id": {
                  "type": "string",
                  "description": "Id of the invitation"
                },
                "metadata": {
                  "description": "Metadata of the record",
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "description": "Self lookup url"
                    },
                    "resource_name": {
                      "type": "string",
                      "description": "Resource name of the record"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Created Date Time"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Updated Date time"
                    },
                    "deleted_at": {
                      "type": "string",
                      "description": "Deleted Date time"
                    }
                  }
                },
                "email": {
                  "type": "string",
                  "description": "Email of the user"
                },
                "auth_type": {
                  "type": "string",
                  "description": "Auth type of the user"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the invitation"
                },
                "accepted_at": {
                  "type": "string",
                  "description": "Accepted date time of the invitation"
                },
                "expires_at": {
                  "type": "string",
                  "description": "Expiration date time of the invitation"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/createRoleBinding": {
      "post": {
        "operationId": "Access_CreateRoleBinding",
        "tags": [
          "OrganizationResources"
        ],
        "description": "Organization role bindings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Create role binding Request Model",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Create role binding request model",
              "properties": {
                "principal": {
                  "type": "string",
                  "description": "The principal User or Group to bind the role to"
                },
                "role_name": {
                  "type": "string",
                  "description": "The name of the role to bind to the principal"
                },
                "crn_pattern": {
                  "type": "string",
                  "description": "A CRN that specifies the scope and resource patterns necessary for the role to bind"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Details on principal, role name and crn pattern of a role binding",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "The type of the resource."
                },
                "id": {
                  "type": "string",
                  "description": "Id of the role binding"
                },
                "metadata": {
                  "description": "Metadata of the record",
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "description": "Self lookup url"
                    },
                    "resource_name": {
                      "type": "string",
                      "description": "Resource name of the record"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Created Date Time"
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "Updated Date time"
                    },
                    "deleted_at": {
                      "type": "string",
                      "description": "Deleted Date time"
                    }
                  }
                },
                "principal": {
                  "type": "string",
                  "description": "The principal User or Group to bind the role to"
                },
                "role_name": {
                  "type": "string",
                  "description": "The name of the role to bind to the principal"
                },
                "crn_pattern": {
                  "type": "string",
                  "description": "A CRN that specifies the scope and resource patterns necessary for the role to bind"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/deleteRoleBinding/{roleBindingId}": {
      "delete": {
        "operationId": "Access_DeleteRoleBinding",
        "description": "Organization role bindings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "roleBindingId",
            "in": "path",
            "description": "Confluent Role binding id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/listClusters": {
      "post": {
        "operationId": "Access_ListClusters",
        "tags": [
          "OrganizationResources"
        ],
        "description": "Cluster details",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "List Access Request Model",
            "required": true,
            "schema": {
              "type": "object",
              "description": "List Access Request Model",
              "properties": {
                "searchFilters": {
                  "type": "object",
                  "description": "Search filters for the request",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Details of the clusters returned on successful response",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "Type of response"
                },
                "metadata": {
                  "description": "Metadata of the list",
                  "type": "object",
                  "properties": {
                    "first": {
                      "type": "string",
                      "description": "First page of the list"
                    },
                    "last": {
                      "type": "string",
                      "description": "Last page of the list"
                    },
                    "prev": {
                      "type": "string",
                      "description": "Previous page of the list"
                    },
                    "next": {
                      "type": "string",
                      "description": "Next page of the list"
                    },
                    "total_size": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total size of the list"
                    }
                  }
                },
                "data": {
                  "type": "array",
                  "description": "List of clusters",
                  "items": {
                    "type": "object",
                    "description": "Details of cluster record",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "Type of cluster"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of the cluster"
                      },
                      "metadata": {
                        "description": "Metadata of the record",
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "Self lookup url"
                          },
                          "resource_name": {
                            "type": "string",
                            "description": "Resource name of the record"
                          },
                          "created_at": {
                            "type": "string",
                            "description": "Created Date Time"
                          },
                          "updated_at": {
                            "type": "string",
                            "description": "Updated Date time"
                          },
                          "deleted_at": {
                            "type": "string",
                            "description": "Deleted Date time"
                          }
                        }
                      },
                      "display_name": {
                        "type": "string",
                        "description": "Display name of the cluster"
                      },
                      "spec": {
                        "description": "Specification of the cluster",
                        "type": "object",
                        "properties": {
                          "display_name": {
                            "type": "string",
                            "description": "The name of the cluster"
                          },
                          "availability": {
                            "type": "string",
                            "description": "The availability zone configuration of the cluster"
                          },
                          "cloud": {
                            "type": "string",
                            "description": "The cloud service provider"
                          },
                          "zone": {
                            "type": "string",
                            "description": "type of zone availability"
                          },
                          "region": {
                            "type": "string",
                            "description": "The cloud service provider region"
                          },
                          "kafka_bootstrap_endpoint": {
                            "type": "string",
                            "description": "The bootstrap endpoint used by Kafka clients to connect to the cluster"
                          },
                          "http_endpoint": {
                            "type": "string",
                            "description": "The cluster HTTP request URL."
                          },
                          "api_endpoint": {
                            "type": "string",
                            "description": "The Kafka API cluster endpoint"
                          },
                          "config": {
                            "description": "Specification of the cluster",
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string",
                                "description": "The lifecycle phase of the cluster"
                              }
                            }
                          },
                          "environment": {
                            "description": "Specification of the cluster",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the referred resource"
                              },
                              "environment": {
                                "type": "string",
                                "description": "Environment of the referred resource"
                              },
                              "related": {
                                "type": "string",
                                "description": "API URL for accessing or modifying the referred object"
                              },
                              "resource_name": {
                                "type": "string",
                                "description": "CRN reference to the referred resource"
                              }
                            }
                          },
                          "network": {
                            "description": "Specification of the cluster",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the referred resource"
                              },
                              "environment": {
                                "type": "string",
                                "description": "Environment of the referred resource"
                              },
                              "related": {
                                "type": "string",
                                "description": "API URL for accessing or modifying the referred object"
                              },
                              "resource_name": {
                                "type": "string",
                                "description": "CRN reference to the referred resource"
                              }
                            }
                          },
                          "byok": {
                            "description": "Specification of the cluster",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the referred resource"
                              },
                              "related": {
                                "type": "string",
                                "description": "API URL for accessing or modifying the referred object"
                              },
                              "resource_name": {
                                "type": "string",
                                "description": "CRN reference to the referred resource"
                              }
                            }
                          }
                        }
                      },
                      "status": {
                        "description": "Specification of the cluster",
                        "type": "object",
                        "properties": {
                          "phase": {
                            "type": "string",
                            "description": "The lifecycle phase of the cluster"
                          },
                          "cku": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of Confluent Kafka Units"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/listEnvironments": {
      "post": {
        "operationId": "Access_ListEnvironments",
        "tags": [
          "OrganizationResources"
        ],
        "description": "Environment list of an organization",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "List Access Request Model",
            "required": true,
            "schema": {
              "type": "object",
              "description": "List Access Request Model",
              "properties": {
                "searchFilters": {
                  "type": "object",
                  "description": "Search filters for the request",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Details of the environments returned on successful response",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "Type of response"
                },
                "metadata": {
                  "description": "Metadata of the  environment list",
                  "type": "object",
                  "properties": {
                    "first": {
                      "type": "string",
                      "description": "First page of the list"
                    },
                    "last": {
                      "type": "string",
                      "description": "Last page of the list"
                    },
                    "prev": {
                      "type": "string",
                      "description": "Previous page of the list"
                    },
                    "next": {
                      "type": "string",
                      "description": "Next page of the list"
                    },
                    "total_size": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total size of the list"
                    }
                  }
                },
                "data": {
                  "type": "array",
                  "description": "Environment list data",
                  "items": {
                    "type": "object",
                    "description": "Details about environment name, metadata and environment id of an environment",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "Type of environment"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of the environment"
                      },
                      "metadata": {
                        "description": "Metadata of the record",
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "Self lookup url"
                          },
                          "resource_name": {
                            "type": "string",
                            "description": "Resource name of the record"
                          },
                          "created_at": {
                            "type": "string",
                            "description": "Created Date Time"
                          },
                          "updated_at": {
                            "type": "string",
                            "description": "Updated Date time"
                          },
                          "deleted_at": {
                            "type": "string",
                            "description": "Deleted Date time"
                          }
                        }
                      },
                      "display_name": {
                        "type": "string",
                        "description": "Display name of the user"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/listInvitations": {
      "post": {
        "operationId": "Access_ListInvitations",
        "tags": [
          "OrganizationResources"
        ],
        "description": "Organization accounts invitation details",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "List Access Request Model",
            "required": true,
            "schema": {
              "type": "object",
              "description": "List Access Request Model",
              "properties": {
                "searchFilters": {
                  "type": "object",
                  "description": "Search filters for the request",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List invitations success response",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "Type of response"
                },
                "metadata": {
                  "description": "Metadata of the list",
                  "type": "object",
                  "properties": {
                    "first": {
                      "type": "string",
                      "description": "First page of the list"
                    },
                    "last": {
                      "type": "string",
                      "description": "Last page of the list"
                    },
                    "prev": {
                      "type": "string",
                      "description": "Previous page of the list"
                    },
                    "next": {
                      "type": "string",
                      "description": "Next page of the list"
                    },
                    "total_size": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total size of the list"
                    }
                  }
                },
                "data": {
                  "type": "array",
                  "description": "Data of the invitations list",
                  "items": {
                    "type": "object",
                    "description": "Record of the invitation",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "Type of account"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of the invitation"
                      },
                      "metadata": {
                        "description": "Metadata of the record",
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "Self lookup url"
                          },
                          "resource_name": {
                            "type": "string",
                            "description": "Resource name of the record"
                          },
                          "created_at": {
                            "type": "string",
                            "description": "Created Date Time"
                          },
                          "updated_at": {
                            "type": "string",
                            "description": "Updated Date time"
                          },
                          "deleted_at": {
                            "type": "string",
                            "description": "Deleted Date time"
                          }
                        }
                      },
                      "email": {
                        "type": "string",
                        "description": "Email of the user"
                      },
                      "auth_type": {
                        "type": "string",
                        "description": "Auth type of the user"
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the invitation"
                      },
                      "accepted_at": {
                        "type": "string",
                        "description": "Accepted date time of the invitation"
                      },
                      "expires_at": {
                        "type": "string",
                        "description": "Expiration date time of the invitation"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/listRoleBindingNameList": {
      "post": {
        "operationId": "Access_ListRoleBindingNameList",
        "tags": [
          "OrganizationResources"
        ],
        "description": "Organization role bindings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "List Access Request Model",
            "required": true,
            "schema": {
              "type": "object",
              "description": "List Access Request Model",
              "properties": {
                "searchFilters": {
                  "type": "object",
                  "description": "Search filters for the request",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Details of the role binding names returned on successful response",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "Type of response"
                },
                "metadata": {
                  "description": "Metadata of the list",
                  "type": "object",
                  "properties": {
                    "first": {
                      "type": "string",
                      "description": "First page of the list"
                    },
                    "last": {
                      "type": "string",
                      "description": "Last page of the list"
                    },
                    "prev": {
                      "type": "string",
                      "description": "Previous page of the list"
                    },
                    "next": {
                      "type": "string",
                      "description": "Next page of the list"
                    },
                    "total_size": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total size of the list"
                    }
                  }
                },
                "data": {
                  "type": "array",
                  "description": "List of role binding names",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/listRoleBindings": {
      "post": {
        "operationId": "Access_ListRoleBindings",
        "tags": [
          "OrganizationResources"
        ],
        "description": "Organization role bindings",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "List Access Request Model",
            "required": true,
            "schema": {
              "type": "object",
              "description": "List Access Request Model",
              "properties": {
                "searchFilters": {
                  "type": "object",
                  "description": "Search filters for the request",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Details of the role bindings returned on successful response",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "Type of response"
                },
                "metadata": {
                  "description": "Metadata of the list",
                  "type": "object",
                  "properties": {
                    "first": {
                      "type": "string",
                      "description": "First page of the list"
                    },
                    "last": {
                      "type": "string",
                      "description": "Last page of the list"
                    },
                    "prev": {
                      "type": "string",
                      "description": "Previous page of the list"
                    },
                    "next": {
                      "type": "string",
                      "description": "Next page of the list"
                    },
                    "total_size": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total size of the list"
                    }
                  }
                },
                "data": {
                  "type": "array",
                  "description": "List of role binding",
                  "items": {
                    "type": "object",
                    "description": "Details on principal, role name and crn pattern of a role binding",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "The type of the resource."
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of the role binding"
                      },
                      "metadata": {
                        "description": "Metadata of the record",
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "Self lookup url"
                          },
                          "resource_name": {
                            "type": "string",
                            "description": "Resource name of the record"
                          },
                          "created_at": {
                            "type": "string",
                            "description": "Created Date Time"
                          },
                          "updated_at": {
                            "type": "string",
                            "description": "Updated Date time"
                          },
                          "deleted_at": {
                            "type": "string",
                            "description": "Deleted Date time"
                          }
                        }
                      },
                      "principal": {
                        "type": "string",
                        "description": "The principal User or Group to bind the role to"
                      },
                      "role_name": {
                        "type": "string",
                        "description": "The name of the role to bind to the principal"
                      },
                      "crn_pattern": {
                        "type": "string",
                        "description": "A CRN that specifies the scope and resource patterns necessary for the role to bind"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/listServiceAccounts": {
      "post": {
        "operationId": "Access_ListServiceAccounts",
        "tags": [
          "OrganizationResources"
        ],
        "description": "Organization service accounts details",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "List Access Request Model",
            "required": true,
            "schema": {
              "type": "object",
              "description": "List Access Request Model",
              "properties": {
                "searchFilters": {
                  "type": "object",
                  "description": "Search filters for the request",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List service accounts success response",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "Type of response"
                },
                "metadata": {
                  "description": "Metadata of the list",
                  "type": "object",
                  "properties": {
                    "first": {
                      "type": "string",
                      "description": "First page of the list"
                    },
                    "last": {
                      "type": "string",
                      "description": "Last page of the list"
                    },
                    "prev": {
                      "type": "string",
                      "description": "Previous page of the list"
                    },
                    "next": {
                      "type": "string",
                      "description": "Next page of the list"
                    },
                    "total_size": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total size of the list"
                    }
                  }
                },
                "data": {
                  "type": "array",
                  "description": "Data of the service accounts list",
                  "items": {
                    "type": "object",
                    "description": "Record of the service account",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "Type of account"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of the service account"
                      },
                      "metadata": {
                        "description": "Metadata of the record",
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "Self lookup url"
                          },
                          "resource_name": {
                            "type": "string",
                            "description": "Resource name of the record"
                          },
                          "created_at": {
                            "type": "string",
                            "description": "Created Date Time"
                          },
                          "updated_at": {
                            "type": "string",
                            "description": "Updated Date time"
                          },
                          "deleted_at": {
                            "type": "string",
                            "description": "Deleted Date time"
                          }
                        }
                      },
                      "display_name": {
                        "type": "string",
                        "description": "Name of the service account"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the service account"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/access/default/listUsers": {
      "post": {
        "operationId": "Access_ListUsers",
        "tags": [
          "OrganizationResources"
        ],
        "description": "Organization users details",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "List Access Request Model",
            "required": true,
            "schema": {
              "type": "object",
              "description": "List Access Request Model",
              "properties": {
                "searchFilters": {
                  "type": "object",
                  "description": "Search filters for the request",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "List users success response",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "Type of response"
                },
                "metadata": {
                  "description": "Metadata of the list",
                  "type": "object",
                  "properties": {
                    "first": {
                      "type": "string",
                      "description": "First page of the list"
                    },
                    "last": {
                      "type": "string",
                      "description": "Last page of the list"
                    },
                    "prev": {
                      "type": "string",
                      "description": "Previous page of the list"
                    },
                    "next": {
                      "type": "string",
                      "description": "Next page of the list"
                    },
                    "total_size": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Total size of the list"
                    }
                  }
                },
                "data": {
                  "type": "array",
                  "description": "Data of the users list",
                  "items": {
                    "type": "object",
                    "description": "Record of the user",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "Type of account"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of the user"
                      },
                      "metadata": {
                        "description": "Metadata of the record",
                        "type": "object",
                        "properties": {
                          "self": {
                            "type": "string",
                            "description": "Self lookup url"
                          },
                          "resource_name": {
                            "type": "string",
                            "description": "Resource name of the record"
                          },
                          "created_at": {
                            "type": "string",
                            "description": "Created Date Time"
                          },
                          "updated_at": {
                            "type": "string",
                            "description": "Updated Date time"
                          },
                          "deleted_at": {
                            "type": "string",
                            "description": "Deleted Date time"
                          }
                        }
                      },
                      "email": {
                        "type": "string",
                        "description": "Email of the user"
                      },
                      "full_name": {
                        "type": "string",
                        "description": "Name of the user"
                      },
                      "auth_type": {
                        "type": "string",
                        "description": "Auth type of the user"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/apiKeys/{apiKeyId}": {
      "get": {
        "operationId": "Organization_GetClusterAPIKey",
        "description": "Get API key details of a kafka or schema registry cluster",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiKeyId",
            "in": "path",
            "description": "Confluent API Key id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Details API key",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "Type of api key"
                },
                "id": {
                  "type": "string",
                  "description": "Id of the api key"
                },
                "properties": {
                  "description": "API Key Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "description": "Metadata of the record",
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "Self lookup url"
                        },
                        "resourceName": {
                          "type": "string",
                          "description": "Resource name of the record"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "description": "Created Date Time"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "description": "Updated Date time"
                        },
                        "deletedTimestamp": {
                          "type": "string",
                          "description": "Deleted Date time"
                        }
                      }
                    },
                    "spec": {
                      "description": "Specification of the API Key",
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "The description of the API Key"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the API Key"
                        },
                        "secret": {
                          "type": "string",
                          "format": "password",
                          "description": "API Key Secret",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "resource": {
                          "description": "Specification of the cluster",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Id of the resource"
                            },
                            "environment": {
                              "type": "string",
                              "description": "The environment of the api key"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the api key resource object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            },
                            "kind": {
                              "type": "string",
                              "description": "Type of the owner which can be service or user account"
                            }
                          }
                        },
                        "owner": {
                          "description": "Specification of the cluster",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "API Key owner id"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            },
                            "kind": {
                              "type": "string",
                              "description": "Type of the owner service or user account"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Organization_DeleteClusterAPIKey",
        "description": "Deletes API key of a kafka or schema registry cluster",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "apiKeyId",
            "in": "path",
            "description": "Confluent API Key id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments": {
      "get": {
        "operationId": "Organization_ListEnvironments",
        "tags": [
          "SCEnvironmentRecords"
        ],
        "description": "Lists of all the environments in a organization",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "An opaque pagination token to fetch the next set of records",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Result of GET request to list Confluent operations.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The SCEnvironmentRecord items on this page",
                  "items": {
                    "type": "object",
                    "description": "Details about environment name, metadata and environment id of an environment",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "kind": {
                        "type": "string",
                        "description": "Type of environment"
                      },
                      "properties": {
                        "description": "Environment properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "streamGovernanceConfig": {
                            "description": "Stream governance configuration",
                            "type": "object",
                            "properties": {
                              "package": {
                                "description": "Stream governance configuration",
                                "type": "string",
                                "enum": [
                                  "ESSENTIALS",
                                  "ADVANCED"
                                ],
                                "x-ms-enum": {
                                  "name": "Package",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "ESSENTIALS",
                                      "value": "ESSENTIALS"
                                    },
                                    {
                                      "name": "ADVANCED",
                                      "value": "ADVANCED"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "metadata": {
                            "description": "Metadata of the record",
                            "type": "object",
                            "properties": {
                              "self": {
                                "type": "string",
                                "description": "Self lookup url"
                              },
                              "resourceName": {
                                "type": "string",
                                "description": "Resource name of the record"
                              },
                              "createdTimestamp": {
                                "type": "string",
                                "description": "Created Date Time"
                              },
                              "updatedTimestamp": {
                                "type": "string",
                                "description": "Updated Date time"
                              },
                              "deletedTimestamp": {
                                "type": "string",
                                "description": "Deleted Date time"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}": {
      "get": {
        "operationId": "Organization_GetEnvironmentById",
        "tags": [
          "SCEnvironmentRecords"
        ],
        "description": "Get Environment details by environment Id",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Details about environment name, metadata and environment id of an environment",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "Type of environment"
                },
                "properties": {
                  "description": "Environment properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "streamGovernanceConfig": {
                      "description": "Stream governance configuration",
                      "type": "object",
                      "properties": {
                        "package": {
                          "description": "Stream governance configuration",
                          "type": "string",
                          "enum": [
                            "ESSENTIALS",
                            "ADVANCED"
                          ],
                          "x-ms-enum": {
                            "name": "Package",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ESSENTIALS",
                                "value": "ESSENTIALS"
                              },
                              {
                                "name": "ADVANCED",
                                "value": "ADVANCED"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "metadata": {
                      "description": "Metadata of the record",
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "Self lookup url"
                        },
                        "resourceName": {
                          "type": "string",
                          "description": "Resource name of the record"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "description": "Created Date Time"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "description": "Updated Date time"
                        },
                        "deletedTimestamp": {
                          "type": "string",
                          "description": "Deleted Date time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Environment_CreateOrUpdate",
        "tags": [
          "SCEnvironmentRecords"
        ],
        "description": "Create confluent environment",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Confluent Environment resource model",
            "required": false,
            "schema": {
              "type": "object",
              "description": "Details about environment name, metadata and environment id of an environment",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "Type of environment"
                },
                "properties": {
                  "description": "Environment properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "streamGovernanceConfig": {
                      "description": "Stream governance configuration",
                      "type": "object",
                      "properties": {
                        "package": {
                          "description": "Stream governance configuration",
                          "type": "string",
                          "enum": [
                            "ESSENTIALS",
                            "ADVANCED"
                          ],
                          "x-ms-enum": {
                            "name": "Package",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ESSENTIALS",
                                "value": "ESSENTIALS"
                              },
                              {
                                "name": "ADVANCED",
                                "value": "ADVANCED"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "metadata": {
                      "description": "Metadata of the record",
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "Self lookup url"
                        },
                        "resourceName": {
                          "type": "string",
                          "description": "Resource name of the record"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "description": "Created Date Time"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "description": "Updated Date time"
                        },
                        "deletedTimestamp": {
                          "type": "string",
                          "description": "Deleted Date time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SCEnvironmentRecord' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Details about environment name, metadata and environment id of an environment",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "Type of environment"
                },
                "properties": {
                  "description": "Environment properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "streamGovernanceConfig": {
                      "description": "Stream governance configuration",
                      "type": "object",
                      "properties": {
                        "package": {
                          "description": "Stream governance configuration",
                          "type": "string",
                          "enum": [
                            "ESSENTIALS",
                            "ADVANCED"
                          ],
                          "x-ms-enum": {
                            "name": "Package",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ESSENTIALS",
                                "value": "ESSENTIALS"
                              },
                              {
                                "name": "ADVANCED",
                                "value": "ADVANCED"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "metadata": {
                      "description": "Metadata of the record",
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "Self lookup url"
                        },
                        "resourceName": {
                          "type": "string",
                          "description": "Resource name of the record"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "description": "Created Date Time"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "description": "Updated Date time"
                        },
                        "deletedTimestamp": {
                          "type": "string",
                          "description": "Deleted Date time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'SCEnvironmentRecord' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Details about environment name, metadata and environment id of an environment",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "Type of environment"
                },
                "properties": {
                  "description": "Environment properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "streamGovernanceConfig": {
                      "description": "Stream governance configuration",
                      "type": "object",
                      "properties": {
                        "package": {
                          "description": "Stream governance configuration",
                          "type": "string",
                          "enum": [
                            "ESSENTIALS",
                            "ADVANCED"
                          ],
                          "x-ms-enum": {
                            "name": "Package",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ESSENTIALS",
                                "value": "ESSENTIALS"
                              },
                              {
                                "name": "ADVANCED",
                                "value": "ADVANCED"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "metadata": {
                      "description": "Metadata of the record",
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "Self lookup url"
                        },
                        "resourceName": {
                          "type": "string",
                          "description": "Resource name of the record"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "description": "Created Date Time"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "description": "Updated Date time"
                        },
                        "deletedTimestamp": {
                          "type": "string",
                          "description": "Deleted Date time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Environment_Delete",
        "tags": [
          "SCEnvironmentRecords"
        ],
        "description": "Delete confluent environment by id",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters": {
      "get": {
        "operationId": "Organization_ListClusters",
        "tags": [
          "SCClusterRecords"
        ],
        "description": "Lists of all the clusters in a environment",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "An opaque pagination token to fetch the next set of records",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Result of GET request to list clusters in the environment of a confluent organization",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The SCClusterRecord items on this page",
                  "items": {
                    "type": "object",
                    "description": "Details of cluster record",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "kind": {
                        "type": "string",
                        "description": "Type of cluster"
                      },
                      "properties": {
                        "description": "Cluster Properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "metadata": {
                            "description": "Metadata of the record",
                            "type": "object",
                            "properties": {
                              "self": {
                                "type": "string",
                                "description": "Self lookup url"
                              },
                              "resourceName": {
                                "type": "string",
                                "description": "Resource name of the record"
                              },
                              "createdTimestamp": {
                                "type": "string",
                                "description": "Created Date Time"
                              },
                              "updatedTimestamp": {
                                "type": "string",
                                "description": "Updated Date time"
                              },
                              "deletedTimestamp": {
                                "type": "string",
                                "description": "Deleted Date time"
                              }
                            }
                          },
                          "spec": {
                            "description": "Specification of the cluster",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the cluster"
                              },
                              "availability": {
                                "type": "string",
                                "description": "The availability zone configuration of the cluster"
                              },
                              "cloud": {
                                "type": "string",
                                "description": "The cloud service provider"
                              },
                              "zone": {
                                "type": "string",
                                "description": "type of zone availability"
                              },
                              "package": {
                                "description": "Stream governance configuration",
                                "type": "string",
                                "enum": [
                                  "ESSENTIALS",
                                  "ADVANCED"
                                ],
                                "x-ms-enum": {
                                  "name": "Package",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "ESSENTIALS",
                                      "value": "ESSENTIALS"
                                    },
                                    {
                                      "name": "ADVANCED",
                                      "value": "ADVANCED"
                                    }
                                  ]
                                }
                              },
                              "region": {
                                "type": "string",
                                "description": "The cloud service provider region"
                              },
                              "kafkaBootstrapEndpoint": {
                                "type": "string",
                                "description": "The bootstrap endpoint used by Kafka clients to connect to the cluster"
                              },
                              "httpEndpoint": {
                                "type": "string",
                                "description": "The cluster HTTP request URL."
                              },
                              "apiEndpoint": {
                                "type": "string",
                                "description": "The Kafka API cluster endpoint"
                              },
                              "config": {
                                "description": "Specification of the cluster configuration",
                                "type": "object",
                                "properties": {
                                  "kind": {
                                    "type": "string",
                                    "description": "The lifecycle phase of the cluster"
                                  }
                                }
                              },
                              "environment": {
                                "description": "Specification of the cluster environment",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID of the referred resource"
                                  },
                                  "environment": {
                                    "type": "string",
                                    "description": "Environment of the referred resource"
                                  },
                                  "related": {
                                    "type": "string",
                                    "description": "API URL for accessing or modifying the referred object"
                                  },
                                  "resourceName": {
                                    "type": "string",
                                    "description": "CRN reference to the referred resource"
                                  }
                                }
                              },
                              "network": {
                                "description": "Specification of the cluster network",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID of the referred resource"
                                  },
                                  "environment": {
                                    "type": "string",
                                    "description": "Environment of the referred resource"
                                  },
                                  "related": {
                                    "type": "string",
                                    "description": "API URL for accessing or modifying the referred object"
                                  },
                                  "resourceName": {
                                    "type": "string",
                                    "description": "CRN reference to the referred resource"
                                  }
                                }
                              },
                              "byok": {
                                "description": "Specification of the cluster byok",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID of the referred resource"
                                  },
                                  "related": {
                                    "type": "string",
                                    "description": "API URL for accessing or modifying the referred object"
                                  },
                                  "resourceName": {
                                    "type": "string",
                                    "description": "CRN reference to the referred resource"
                                  }
                                }
                              }
                            }
                          },
                          "status": {
                            "description": "Specification of the cluster status",
                            "type": "object",
                            "properties": {
                              "phase": {
                                "type": "string",
                                "description": "The lifecycle phase of the cluster"
                              },
                              "cku": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of Confluent Kafka Units"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters/{clusterId}": {
      "get": {
        "operationId": "Organization_GetClusterById",
        "tags": [
          "SCClusterRecords"
        ],
        "description": "Get cluster by Id",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "Confluent kafka or schema registry cluster id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Details of cluster record",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "Type of cluster"
                },
                "properties": {
                  "description": "Cluster Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "description": "Metadata of the record",
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "Self lookup url"
                        },
                        "resourceName": {
                          "type": "string",
                          "description": "Resource name of the record"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "description": "Created Date Time"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "description": "Updated Date time"
                        },
                        "deletedTimestamp": {
                          "type": "string",
                          "description": "Deleted Date time"
                        }
                      }
                    },
                    "spec": {
                      "description": "Specification of the cluster",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the cluster"
                        },
                        "availability": {
                          "type": "string",
                          "description": "The availability zone configuration of the cluster"
                        },
                        "cloud": {
                          "type": "string",
                          "description": "The cloud service provider"
                        },
                        "zone": {
                          "type": "string",
                          "description": "type of zone availability"
                        },
                        "package": {
                          "description": "Stream governance configuration",
                          "type": "string",
                          "enum": [
                            "ESSENTIALS",
                            "ADVANCED"
                          ],
                          "x-ms-enum": {
                            "name": "Package",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ESSENTIALS",
                                "value": "ESSENTIALS"
                              },
                              {
                                "name": "ADVANCED",
                                "value": "ADVANCED"
                              }
                            ]
                          }
                        },
                        "region": {
                          "type": "string",
                          "description": "The cloud service provider region"
                        },
                        "kafkaBootstrapEndpoint": {
                          "type": "string",
                          "description": "The bootstrap endpoint used by Kafka clients to connect to the cluster"
                        },
                        "httpEndpoint": {
                          "type": "string",
                          "description": "The cluster HTTP request URL."
                        },
                        "apiEndpoint": {
                          "type": "string",
                          "description": "The Kafka API cluster endpoint"
                        },
                        "config": {
                          "description": "Specification of the cluster configuration",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "description": "The lifecycle phase of the cluster"
                            }
                          }
                        },
                        "environment": {
                          "description": "Specification of the cluster environment",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the referred resource"
                            },
                            "environment": {
                              "type": "string",
                              "description": "Environment of the referred resource"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            }
                          }
                        },
                        "network": {
                          "description": "Specification of the cluster network",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the referred resource"
                            },
                            "environment": {
                              "type": "string",
                              "description": "Environment of the referred resource"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            }
                          }
                        },
                        "byok": {
                          "description": "Specification of the cluster byok",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the referred resource"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "description": "Specification of the cluster status",
                      "type": "object",
                      "properties": {
                        "phase": {
                          "type": "string",
                          "description": "The lifecycle phase of the cluster"
                        },
                        "cku": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of Confluent Kafka Units"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Cluster_CreateOrUpdate",
        "tags": [
          "SCClusterRecords"
        ],
        "description": "Create confluent clusters",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "Confluent kafka or schema registry cluster id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Confluent Cluster resource model",
            "required": false,
            "schema": {
              "type": "object",
              "description": "Details of cluster record",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "Type of cluster"
                },
                "properties": {
                  "description": "Cluster Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "description": "Metadata of the record",
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "Self lookup url"
                        },
                        "resourceName": {
                          "type": "string",
                          "description": "Resource name of the record"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "description": "Created Date Time"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "description": "Updated Date time"
                        },
                        "deletedTimestamp": {
                          "type": "string",
                          "description": "Deleted Date time"
                        }
                      }
                    },
                    "spec": {
                      "description": "Specification of the cluster",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the cluster"
                        },
                        "availability": {
                          "type": "string",
                          "description": "The availability zone configuration of the cluster"
                        },
                        "cloud": {
                          "type": "string",
                          "description": "The cloud service provider"
                        },
                        "zone": {
                          "type": "string",
                          "description": "type of zone availability"
                        },
                        "package": {
                          "description": "Stream governance configuration",
                          "type": "string",
                          "enum": [
                            "ESSENTIALS",
                            "ADVANCED"
                          ],
                          "x-ms-enum": {
                            "name": "Package",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ESSENTIALS",
                                "value": "ESSENTIALS"
                              },
                              {
                                "name": "ADVANCED",
                                "value": "ADVANCED"
                              }
                            ]
                          }
                        },
                        "region": {
                          "type": "string",
                          "description": "The cloud service provider region"
                        },
                        "kafkaBootstrapEndpoint": {
                          "type": "string",
                          "description": "The bootstrap endpoint used by Kafka clients to connect to the cluster"
                        },
                        "httpEndpoint": {
                          "type": "string",
                          "description": "The cluster HTTP request URL."
                        },
                        "apiEndpoint": {
                          "type": "string",
                          "description": "The Kafka API cluster endpoint"
                        },
                        "config": {
                          "description": "Specification of the cluster configuration",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "description": "The lifecycle phase of the cluster"
                            }
                          }
                        },
                        "environment": {
                          "description": "Specification of the cluster environment",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the referred resource"
                            },
                            "environment": {
                              "type": "string",
                              "description": "Environment of the referred resource"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            }
                          }
                        },
                        "network": {
                          "description": "Specification of the cluster network",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the referred resource"
                            },
                            "environment": {
                              "type": "string",
                              "description": "Environment of the referred resource"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            }
                          }
                        },
                        "byok": {
                          "description": "Specification of the cluster byok",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the referred resource"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "description": "Specification of the cluster status",
                      "type": "object",
                      "properties": {
                        "phase": {
                          "type": "string",
                          "description": "The lifecycle phase of the cluster"
                        },
                        "cku": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of Confluent Kafka Units"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SCClusterRecord' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Details of cluster record",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "Type of cluster"
                },
                "properties": {
                  "description": "Cluster Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "description": "Metadata of the record",
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "Self lookup url"
                        },
                        "resourceName": {
                          "type": "string",
                          "description": "Resource name of the record"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "description": "Created Date Time"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "description": "Updated Date time"
                        },
                        "deletedTimestamp": {
                          "type": "string",
                          "description": "Deleted Date time"
                        }
                      }
                    },
                    "spec": {
                      "description": "Specification of the cluster",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the cluster"
                        },
                        "availability": {
                          "type": "string",
                          "description": "The availability zone configuration of the cluster"
                        },
                        "cloud": {
                          "type": "string",
                          "description": "The cloud service provider"
                        },
                        "zone": {
                          "type": "string",
                          "description": "type of zone availability"
                        },
                        "package": {
                          "description": "Stream governance configuration",
                          "type": "string",
                          "enum": [
                            "ESSENTIALS",
                            "ADVANCED"
                          ],
                          "x-ms-enum": {
                            "name": "Package",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ESSENTIALS",
                                "value": "ESSENTIALS"
                              },
                              {
                                "name": "ADVANCED",
                                "value": "ADVANCED"
                              }
                            ]
                          }
                        },
                        "region": {
                          "type": "string",
                          "description": "The cloud service provider region"
                        },
                        "kafkaBootstrapEndpoint": {
                          "type": "string",
                          "description": "The bootstrap endpoint used by Kafka clients to connect to the cluster"
                        },
                        "httpEndpoint": {
                          "type": "string",
                          "description": "The cluster HTTP request URL."
                        },
                        "apiEndpoint": {
                          "type": "string",
                          "description": "The Kafka API cluster endpoint"
                        },
                        "config": {
                          "description": "Specification of the cluster configuration",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "description": "The lifecycle phase of the cluster"
                            }
                          }
                        },
                        "environment": {
                          "description": "Specification of the cluster environment",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the referred resource"
                            },
                            "environment": {
                              "type": "string",
                              "description": "Environment of the referred resource"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            }
                          }
                        },
                        "network": {
                          "description": "Specification of the cluster network",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the referred resource"
                            },
                            "environment": {
                              "type": "string",
                              "description": "Environment of the referred resource"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            }
                          }
                        },
                        "byok": {
                          "description": "Specification of the cluster byok",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the referred resource"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "description": "Specification of the cluster status",
                      "type": "object",
                      "properties": {
                        "phase": {
                          "type": "string",
                          "description": "The lifecycle phase of the cluster"
                        },
                        "cku": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of Confluent Kafka Units"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'SCClusterRecord' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Details of cluster record",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "type": "string",
                  "description": "Type of cluster"
                },
                "properties": {
                  "description": "Cluster Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "description": "Metadata of the record",
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "Self lookup url"
                        },
                        "resourceName": {
                          "type": "string",
                          "description": "Resource name of the record"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "description": "Created Date Time"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "description": "Updated Date time"
                        },
                        "deletedTimestamp": {
                          "type": "string",
                          "description": "Deleted Date time"
                        }
                      }
                    },
                    "spec": {
                      "description": "Specification of the cluster",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the cluster"
                        },
                        "availability": {
                          "type": "string",
                          "description": "The availability zone configuration of the cluster"
                        },
                        "cloud": {
                          "type": "string",
                          "description": "The cloud service provider"
                        },
                        "zone": {
                          "type": "string",
                          "description": "type of zone availability"
                        },
                        "package": {
                          "description": "Stream governance configuration",
                          "type": "string",
                          "enum": [
                            "ESSENTIALS",
                            "ADVANCED"
                          ],
                          "x-ms-enum": {
                            "name": "Package",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ESSENTIALS",
                                "value": "ESSENTIALS"
                              },
                              {
                                "name": "ADVANCED",
                                "value": "ADVANCED"
                              }
                            ]
                          }
                        },
                        "region": {
                          "type": "string",
                          "description": "The cloud service provider region"
                        },
                        "kafkaBootstrapEndpoint": {
                          "type": "string",
                          "description": "The bootstrap endpoint used by Kafka clients to connect to the cluster"
                        },
                        "httpEndpoint": {
                          "type": "string",
                          "description": "The cluster HTTP request URL."
                        },
                        "apiEndpoint": {
                          "type": "string",
                          "description": "The Kafka API cluster endpoint"
                        },
                        "config": {
                          "description": "Specification of the cluster configuration",
                          "type": "object",
                          "properties": {
                            "kind": {
                              "type": "string",
                              "description": "The lifecycle phase of the cluster"
                            }
                          }
                        },
                        "environment": {
                          "description": "Specification of the cluster environment",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the referred resource"
                            },
                            "environment": {
                              "type": "string",
                              "description": "Environment of the referred resource"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            }
                          }
                        },
                        "network": {
                          "description": "Specification of the cluster network",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the referred resource"
                            },
                            "environment": {
                              "type": "string",
                              "description": "Environment of the referred resource"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            }
                          }
                        },
                        "byok": {
                          "description": "Specification of the cluster byok",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the referred resource"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "description": "Specification of the cluster status",
                      "type": "object",
                      "properties": {
                        "phase": {
                          "type": "string",
                          "description": "The lifecycle phase of the cluster"
                        },
                        "cku": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of Confluent Kafka Units"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Cluster_Delete",
        "tags": [
          "SCClusterRecords"
        ],
        "description": "Delete confluent cluster by id",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "Confluent kafka or schema registry cluster id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters/{clusterId}/connectors": {
      "get": {
        "operationId": "Connector_List",
        "tags": [
          "ConnectorResources"
        ],
        "description": "Lists all the connectors in a cluster",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "Confluent kafka or schema registry cluster id",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "An opaque pagination token to fetch the next set of records",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Result of GET request to list connectors in the cluster of a confluent organization",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ConnectorResource items on this page",
                  "items": {
                    "type": "object",
                    "description": "Details of connector record",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The properties of the Connector",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "connectorBasicInfo": {
                            "description": "Connector Info Base",
                            "type": "object",
                            "properties": {
                              "connectorType": {
                                "description": "Connector Type",
                                "type": "string",
                                "enum": [
                                  "SINK",
                                  "SOURCE"
                                ],
                                "x-ms-enum": {
                                  "name": "ConnectorType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "SINK",
                                      "value": "SINK"
                                    },
                                    {
                                      "name": "SOURCE",
                                      "value": "SOURCE"
                                    }
                                  ]
                                }
                              },
                              "connectorClass": {
                                "description": "Connector Class",
                                "type": "string",
                                "enum": [
                                  "AZUREBLOBSOURCE",
                                  "AZUREBLOBSINK"
                                ],
                                "x-ms-enum": {
                                  "name": "ConnectorClass",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "AZUREBLOBSOURCE",
                                      "value": "AZUREBLOBSOURCE"
                                    },
                                    {
                                      "name": "AZUREBLOBSINK",
                                      "value": "AZUREBLOBSINK"
                                    }
                                  ]
                                }
                              },
                              "connectorName": {
                                "type": "string",
                                "description": "Connector Name"
                              },
                              "connectorId": {
                                "type": "string",
                                "description": "Connector Id"
                              },
                              "connectorState": {
                                "description": "Connector Status",
                                "type": "string",
                                "enum": [
                                  "PROVISIONING",
                                  "RUNNING",
                                  "PAUSED",
                                  "FAILED"
                                ],
                                "x-ms-enum": {
                                  "name": "ConnectorStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "PROVISIONING",
                                      "value": "PROVISIONING"
                                    },
                                    {
                                      "name": "RUNNING",
                                      "value": "RUNNING"
                                    },
                                    {
                                      "name": "PAUSED",
                                      "value": "PAUSED"
                                    },
                                    {
                                      "name": "FAILED",
                                      "value": "FAILED"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "connectorServiceTypeInfo": {
                            "description": "Connector Service type info base properties.",
                            "type": "object",
                            "properties": {
                              "connectorServiceType": {
                                "description": "The connector service type.",
                                "type": "string",
                                "enum": [
                                  "AzureBlobStorageSinkConnector",
                                  "AzureBlobStorageSourceConnector",
                                  "AzureCosmosDBSinkConnector",
                                  "AzureCosmosDBSourceConnector",
                                  "AzureSynapseAnalyticsSinkConnector"
                                ],
                                "x-ms-enum": {
                                  "name": "ConnectorServiceType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "AzureBlobStorageSinkConnector",
                                      "value": "AzureBlobStorageSinkConnector"
                                    },
                                    {
                                      "name": "AzureBlobStorageSourceConnector",
                                      "value": "AzureBlobStorageSourceConnector"
                                    },
                                    {
                                      "name": "AzureCosmosDBSinkConnector",
                                      "value": "AzureCosmosDBSinkConnector"
                                    },
                                    {
                                      "name": "AzureCosmosDBSourceConnector",
                                      "value": "AzureCosmosDBSourceConnector"
                                    },
                                    {
                                      "name": "AzureSynapseAnalyticsSinkConnector",
                                      "value": "AzureSynapseAnalyticsSinkConnector"
                                    }
                                  ]
                                }
                              }
                            },
                            "discriminator": "connectorServiceType",
                            "required": [
                              "connectorServiceType"
                            ]
                          },
                          "partnerConnectorInfo": {
                            "description": "The connection information consumed by applications.",
                            "type": "object",
                            "properties": {
                              "partnerConnectorType": {
                                "description": "The partner connector type.",
                                "type": "string",
                                "enum": [
                                  "KafkaAzureBlobStorageSource",
                                  "KafkaAzureBlobStorageSink",
                                  "KafkaAzureCosmosDBSource",
                                  "KafkaAzureCosmosDBSink",
                                  "KafkaAzureSynapseAnalyticsSink"
                                ],
                                "x-ms-enum": {
                                  "name": "PartnerConnectorType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "KafkaAzureBlobStorageSource",
                                      "value": "KafkaAzureBlobStorageSource"
                                    },
                                    {
                                      "name": "KafkaAzureBlobStorageSink",
                                      "value": "KafkaAzureBlobStorageSink"
                                    },
                                    {
                                      "name": "KafkaAzureCosmosDBSource",
                                      "value": "KafkaAzureCosmosDBSource"
                                    },
                                    {
                                      "name": "KafkaAzureCosmosDBSink",
                                      "value": "KafkaAzureCosmosDBSink"
                                    },
                                    {
                                      "name": "KafkaAzureSynapseAnalyticsSink",
                                      "value": "KafkaAzureSynapseAnalyticsSink"
                                    }
                                  ]
                                }
                              }
                            },
                            "discriminator": "partnerConnectorType",
                            "required": [
                              "partnerConnectorType"
                            ]
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters/{clusterId}/connectors/{connectorName}": {
      "get": {
        "operationId": "Connector_Get",
        "tags": [
          "ConnectorResources"
        ],
        "description": "Get confluent connector by Name",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "Confluent kafka or schema registry cluster id",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "Confluent connector name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Details of connector record",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Connector",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "connectorBasicInfo": {
                      "description": "Connector Info Base",
                      "type": "object",
                      "properties": {
                        "connectorType": {
                          "description": "Connector Type",
                          "type": "string",
                          "enum": [
                            "SINK",
                            "SOURCE"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SINK",
                                "value": "SINK"
                              },
                              {
                                "name": "SOURCE",
                                "value": "SOURCE"
                              }
                            ]
                          }
                        },
                        "connectorClass": {
                          "description": "Connector Class",
                          "type": "string",
                          "enum": [
                            "AZUREBLOBSOURCE",
                            "AZUREBLOBSINK"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorClass",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AZUREBLOBSOURCE",
                                "value": "AZUREBLOBSOURCE"
                              },
                              {
                                "name": "AZUREBLOBSINK",
                                "value": "AZUREBLOBSINK"
                              }
                            ]
                          }
                        },
                        "connectorName": {
                          "type": "string",
                          "description": "Connector Name"
                        },
                        "connectorId": {
                          "type": "string",
                          "description": "Connector Id"
                        },
                        "connectorState": {
                          "description": "Connector Status",
                          "type": "string",
                          "enum": [
                            "PROVISIONING",
                            "RUNNING",
                            "PAUSED",
                            "FAILED"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "PROVISIONING",
                                "value": "PROVISIONING"
                              },
                              {
                                "name": "RUNNING",
                                "value": "RUNNING"
                              },
                              {
                                "name": "PAUSED",
                                "value": "PAUSED"
                              },
                              {
                                "name": "FAILED",
                                "value": "FAILED"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "connectorServiceTypeInfo": {
                      "description": "Connector Service type info base properties.",
                      "type": "object",
                      "properties": {
                        "connectorServiceType": {
                          "description": "The connector service type.",
                          "type": "string",
                          "enum": [
                            "AzureBlobStorageSinkConnector",
                            "AzureBlobStorageSourceConnector",
                            "AzureCosmosDBSinkConnector",
                            "AzureCosmosDBSourceConnector",
                            "AzureSynapseAnalyticsSinkConnector"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorServiceType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureBlobStorageSinkConnector",
                                "value": "AzureBlobStorageSinkConnector"
                              },
                              {
                                "name": "AzureBlobStorageSourceConnector",
                                "value": "AzureBlobStorageSourceConnector"
                              },
                              {
                                "name": "AzureCosmosDBSinkConnector",
                                "value": "AzureCosmosDBSinkConnector"
                              },
                              {
                                "name": "AzureCosmosDBSourceConnector",
                                "value": "AzureCosmosDBSourceConnector"
                              },
                              {
                                "name": "AzureSynapseAnalyticsSinkConnector",
                                "value": "AzureSynapseAnalyticsSinkConnector"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "connectorServiceType",
                      "required": [
                        "connectorServiceType"
                      ]
                    },
                    "partnerConnectorInfo": {
                      "description": "The connection information consumed by applications.",
                      "type": "object",
                      "properties": {
                        "partnerConnectorType": {
                          "description": "The partner connector type.",
                          "type": "string",
                          "enum": [
                            "KafkaAzureBlobStorageSource",
                            "KafkaAzureBlobStorageSink",
                            "KafkaAzureCosmosDBSource",
                            "KafkaAzureCosmosDBSink",
                            "KafkaAzureSynapseAnalyticsSink"
                          ],
                          "x-ms-enum": {
                            "name": "PartnerConnectorType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "KafkaAzureBlobStorageSource",
                                "value": "KafkaAzureBlobStorageSource"
                              },
                              {
                                "name": "KafkaAzureBlobStorageSink",
                                "value": "KafkaAzureBlobStorageSink"
                              },
                              {
                                "name": "KafkaAzureCosmosDBSource",
                                "value": "KafkaAzureCosmosDBSource"
                              },
                              {
                                "name": "KafkaAzureCosmosDBSink",
                                "value": "KafkaAzureCosmosDBSink"
                              },
                              {
                                "name": "KafkaAzureSynapseAnalyticsSink",
                                "value": "KafkaAzureSynapseAnalyticsSink"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "partnerConnectorType",
                      "required": [
                        "partnerConnectorType"
                      ]
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "Connector_CreateOrUpdate",
        "tags": [
          "ConnectorResources"
        ],
        "description": "Create confluent connector by Name",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "Confluent kafka or schema registry cluster id",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "Confluent connector name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Confluent Connector resource model",
            "required": false,
            "schema": {
              "type": "object",
              "description": "Details of connector record",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Connector",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "connectorBasicInfo": {
                      "description": "Connector Info Base",
                      "type": "object",
                      "properties": {
                        "connectorType": {
                          "description": "Connector Type",
                          "type": "string",
                          "enum": [
                            "SINK",
                            "SOURCE"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SINK",
                                "value": "SINK"
                              },
                              {
                                "name": "SOURCE",
                                "value": "SOURCE"
                              }
                            ]
                          }
                        },
                        "connectorClass": {
                          "description": "Connector Class",
                          "type": "string",
                          "enum": [
                            "AZUREBLOBSOURCE",
                            "AZUREBLOBSINK"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorClass",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AZUREBLOBSOURCE",
                                "value": "AZUREBLOBSOURCE"
                              },
                              {
                                "name": "AZUREBLOBSINK",
                                "value": "AZUREBLOBSINK"
                              }
                            ]
                          }
                        },
                        "connectorName": {
                          "type": "string",
                          "description": "Connector Name"
                        },
                        "connectorId": {
                          "type": "string",
                          "description": "Connector Id"
                        },
                        "connectorState": {
                          "description": "Connector Status",
                          "type": "string",
                          "enum": [
                            "PROVISIONING",
                            "RUNNING",
                            "PAUSED",
                            "FAILED"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "PROVISIONING",
                                "value": "PROVISIONING"
                              },
                              {
                                "name": "RUNNING",
                                "value": "RUNNING"
                              },
                              {
                                "name": "PAUSED",
                                "value": "PAUSED"
                              },
                              {
                                "name": "FAILED",
                                "value": "FAILED"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "connectorServiceTypeInfo": {
                      "description": "Connector Service type info base properties.",
                      "type": "object",
                      "properties": {
                        "connectorServiceType": {
                          "description": "The connector service type.",
                          "type": "string",
                          "enum": [
                            "AzureBlobStorageSinkConnector",
                            "AzureBlobStorageSourceConnector",
                            "AzureCosmosDBSinkConnector",
                            "AzureCosmosDBSourceConnector",
                            "AzureSynapseAnalyticsSinkConnector"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorServiceType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureBlobStorageSinkConnector",
                                "value": "AzureBlobStorageSinkConnector"
                              },
                              {
                                "name": "AzureBlobStorageSourceConnector",
                                "value": "AzureBlobStorageSourceConnector"
                              },
                              {
                                "name": "AzureCosmosDBSinkConnector",
                                "value": "AzureCosmosDBSinkConnector"
                              },
                              {
                                "name": "AzureCosmosDBSourceConnector",
                                "value": "AzureCosmosDBSourceConnector"
                              },
                              {
                                "name": "AzureSynapseAnalyticsSinkConnector",
                                "value": "AzureSynapseAnalyticsSinkConnector"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "connectorServiceType",
                      "required": [
                        "connectorServiceType"
                      ]
                    },
                    "partnerConnectorInfo": {
                      "description": "The connection information consumed by applications.",
                      "type": "object",
                      "properties": {
                        "partnerConnectorType": {
                          "description": "The partner connector type.",
                          "type": "string",
                          "enum": [
                            "KafkaAzureBlobStorageSource",
                            "KafkaAzureBlobStorageSink",
                            "KafkaAzureCosmosDBSource",
                            "KafkaAzureCosmosDBSink",
                            "KafkaAzureSynapseAnalyticsSink"
                          ],
                          "x-ms-enum": {
                            "name": "PartnerConnectorType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "KafkaAzureBlobStorageSource",
                                "value": "KafkaAzureBlobStorageSource"
                              },
                              {
                                "name": "KafkaAzureBlobStorageSink",
                                "value": "KafkaAzureBlobStorageSink"
                              },
                              {
                                "name": "KafkaAzureCosmosDBSource",
                                "value": "KafkaAzureCosmosDBSource"
                              },
                              {
                                "name": "KafkaAzureCosmosDBSink",
                                "value": "KafkaAzureCosmosDBSink"
                              },
                              {
                                "name": "KafkaAzureSynapseAnalyticsSink",
                                "value": "KafkaAzureSynapseAnalyticsSink"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "partnerConnectorType",
                      "required": [
                        "partnerConnectorType"
                      ]
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ConnectorResource' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Details of connector record",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Connector",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "connectorBasicInfo": {
                      "description": "Connector Info Base",
                      "type": "object",
                      "properties": {
                        "connectorType": {
                          "description": "Connector Type",
                          "type": "string",
                          "enum": [
                            "SINK",
                            "SOURCE"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SINK",
                                "value": "SINK"
                              },
                              {
                                "name": "SOURCE",
                                "value": "SOURCE"
                              }
                            ]
                          }
                        },
                        "connectorClass": {
                          "description": "Connector Class",
                          "type": "string",
                          "enum": [
                            "AZUREBLOBSOURCE",
                            "AZUREBLOBSINK"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorClass",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AZUREBLOBSOURCE",
                                "value": "AZUREBLOBSOURCE"
                              },
                              {
                                "name": "AZUREBLOBSINK",
                                "value": "AZUREBLOBSINK"
                              }
                            ]
                          }
                        },
                        "connectorName": {
                          "type": "string",
                          "description": "Connector Name"
                        },
                        "connectorId": {
                          "type": "string",
                          "description": "Connector Id"
                        },
                        "connectorState": {
                          "description": "Connector Status",
                          "type": "string",
                          "enum": [
                            "PROVISIONING",
                            "RUNNING",
                            "PAUSED",
                            "FAILED"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "PROVISIONING",
                                "value": "PROVISIONING"
                              },
                              {
                                "name": "RUNNING",
                                "value": "RUNNING"
                              },
                              {
                                "name": "PAUSED",
                                "value": "PAUSED"
                              },
                              {
                                "name": "FAILED",
                                "value": "FAILED"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "connectorServiceTypeInfo": {
                      "description": "Connector Service type info base properties.",
                      "type": "object",
                      "properties": {
                        "connectorServiceType": {
                          "description": "The connector service type.",
                          "type": "string",
                          "enum": [
                            "AzureBlobStorageSinkConnector",
                            "AzureBlobStorageSourceConnector",
                            "AzureCosmosDBSinkConnector",
                            "AzureCosmosDBSourceConnector",
                            "AzureSynapseAnalyticsSinkConnector"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorServiceType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureBlobStorageSinkConnector",
                                "value": "AzureBlobStorageSinkConnector"
                              },
                              {
                                "name": "AzureBlobStorageSourceConnector",
                                "value": "AzureBlobStorageSourceConnector"
                              },
                              {
                                "name": "AzureCosmosDBSinkConnector",
                                "value": "AzureCosmosDBSinkConnector"
                              },
                              {
                                "name": "AzureCosmosDBSourceConnector",
                                "value": "AzureCosmosDBSourceConnector"
                              },
                              {
                                "name": "AzureSynapseAnalyticsSinkConnector",
                                "value": "AzureSynapseAnalyticsSinkConnector"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "connectorServiceType",
                      "required": [
                        "connectorServiceType"
                      ]
                    },
                    "partnerConnectorInfo": {
                      "description": "The connection information consumed by applications.",
                      "type": "object",
                      "properties": {
                        "partnerConnectorType": {
                          "description": "The partner connector type.",
                          "type": "string",
                          "enum": [
                            "KafkaAzureBlobStorageSource",
                            "KafkaAzureBlobStorageSink",
                            "KafkaAzureCosmosDBSource",
                            "KafkaAzureCosmosDBSink",
                            "KafkaAzureSynapseAnalyticsSink"
                          ],
                          "x-ms-enum": {
                            "name": "PartnerConnectorType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "KafkaAzureBlobStorageSource",
                                "value": "KafkaAzureBlobStorageSource"
                              },
                              {
                                "name": "KafkaAzureBlobStorageSink",
                                "value": "KafkaAzureBlobStorageSink"
                              },
                              {
                                "name": "KafkaAzureCosmosDBSource",
                                "value": "KafkaAzureCosmosDBSource"
                              },
                              {
                                "name": "KafkaAzureCosmosDBSink",
                                "value": "KafkaAzureCosmosDBSink"
                              },
                              {
                                "name": "KafkaAzureSynapseAnalyticsSink",
                                "value": "KafkaAzureSynapseAnalyticsSink"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "partnerConnectorType",
                      "required": [
                        "partnerConnectorType"
                      ]
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          },
          "201": {
            "description": "Resource 'ConnectorResource' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Details of connector record",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The properties of the Connector",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "connectorBasicInfo": {
                      "description": "Connector Info Base",
                      "type": "object",
                      "properties": {
                        "connectorType": {
                          "description": "Connector Type",
                          "type": "string",
                          "enum": [
                            "SINK",
                            "SOURCE"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "SINK",
                                "value": "SINK"
                              },
                              {
                                "name": "SOURCE",
                                "value": "SOURCE"
                              }
                            ]
                          }
                        },
                        "connectorClass": {
                          "description": "Connector Class",
                          "type": "string",
                          "enum": [
                            "AZUREBLOBSOURCE",
                            "AZUREBLOBSINK"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorClass",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AZUREBLOBSOURCE",
                                "value": "AZUREBLOBSOURCE"
                              },
                              {
                                "name": "AZUREBLOBSINK",
                                "value": "AZUREBLOBSINK"
                              }
                            ]
                          }
                        },
                        "connectorName": {
                          "type": "string",
                          "description": "Connector Name"
                        },
                        "connectorId": {
                          "type": "string",
                          "description": "Connector Id"
                        },
                        "connectorState": {
                          "description": "Connector Status",
                          "type": "string",
                          "enum": [
                            "PROVISIONING",
                            "RUNNING",
                            "PAUSED",
                            "FAILED"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "PROVISIONING",
                                "value": "PROVISIONING"
                              },
                              {
                                "name": "RUNNING",
                                "value": "RUNNING"
                              },
                              {
                                "name": "PAUSED",
                                "value": "PAUSED"
                              },
                              {
                                "name": "FAILED",
                                "value": "FAILED"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "connectorServiceTypeInfo": {
                      "description": "Connector Service type info base properties.",
                      "type": "object",
                      "properties": {
                        "connectorServiceType": {
                          "description": "The connector service type.",
                          "type": "string",
                          "enum": [
                            "AzureBlobStorageSinkConnector",
                            "AzureBlobStorageSourceConnector",
                            "AzureCosmosDBSinkConnector",
                            "AzureCosmosDBSourceConnector",
                            "AzureSynapseAnalyticsSinkConnector"
                          ],
                          "x-ms-enum": {
                            "name": "ConnectorServiceType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureBlobStorageSinkConnector",
                                "value": "AzureBlobStorageSinkConnector"
                              },
                              {
                                "name": "AzureBlobStorageSourceConnector",
                                "value": "AzureBlobStorageSourceConnector"
                              },
                              {
                                "name": "AzureCosmosDBSinkConnector",
                                "value": "AzureCosmosDBSinkConnector"
                              },
                              {
                                "name": "AzureCosmosDBSourceConnector",
                                "value": "AzureCosmosDBSourceConnector"
                              },
                              {
                                "name": "AzureSynapseAnalyticsSinkConnector",
                                "value": "AzureSynapseAnalyticsSinkConnector"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "connectorServiceType",
                      "required": [
                        "connectorServiceType"
                      ]
                    },
                    "partnerConnectorInfo": {
                      "description": "The connection information consumed by applications.",
                      "type": "object",
                      "properties": {
                        "partnerConnectorType": {
                          "description": "The partner connector type.",
                          "type": "string",
                          "enum": [
                            "KafkaAzureBlobStorageSource",
                            "KafkaAzureBlobStorageSink",
                            "KafkaAzureCosmosDBSource",
                            "KafkaAzureCosmosDBSink",
                            "KafkaAzureSynapseAnalyticsSink"
                          ],
                          "x-ms-enum": {
                            "name": "PartnerConnectorType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "KafkaAzureBlobStorageSource",
                                "value": "KafkaAzureBlobStorageSource"
                              },
                              {
                                "name": "KafkaAzureBlobStorageSink",
                                "value": "KafkaAzureBlobStorageSink"
                              },
                              {
                                "name": "KafkaAzureCosmosDBSource",
                                "value": "KafkaAzureCosmosDBSource"
                              },
                              {
                                "name": "KafkaAzureCosmosDBSink",
                                "value": "KafkaAzureCosmosDBSink"
                              },
                              {
                                "name": "KafkaAzureSynapseAnalyticsSink",
                                "value": "KafkaAzureSynapseAnalyticsSink"
                              }
                            ]
                          }
                        }
                      },
                      "discriminator": "partnerConnectorType",
                      "required": [
                        "partnerConnectorType"
                      ]
                    }
                  }
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      },
      "delete": {
        "operationId": "Connector_Delete",
        "tags": [
          "ConnectorResources"
        ],
        "description": "Delete confluent connector by name",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "Confluent kafka or schema registry cluster id",
            "required": true,
            "type": "string"
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "Confluent connector name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters/{clusterId}/createAPIKey": {
      "post": {
        "operationId": "Organization_CreateAPIKey",
        "tags": [
          "SCClusterRecords"
        ],
        "description": "Creates API key for a schema registry Cluster ID or Kafka Cluster ID under a environment",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "Confluent kafka or schema registry cluster id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Request payload for get creating API Key for schema registry Cluster ID or Kafka Cluster ID under a environment",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Create API Key model",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the API Key"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the API Key"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Details API key",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "Type of api key"
                },
                "id": {
                  "type": "string",
                  "description": "Id of the api key"
                },
                "properties": {
                  "description": "API Key Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "description": "Metadata of the record",
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "Self lookup url"
                        },
                        "resourceName": {
                          "type": "string",
                          "description": "Resource name of the record"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "description": "Created Date Time"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "description": "Updated Date time"
                        },
                        "deletedTimestamp": {
                          "type": "string",
                          "description": "Deleted Date time"
                        }
                      }
                    },
                    "spec": {
                      "description": "Specification of the API Key",
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "The description of the API Key"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the API Key"
                        },
                        "secret": {
                          "type": "string",
                          "format": "password",
                          "description": "API Key Secret",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        },
                        "resource": {
                          "description": "Specification of the cluster",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Id of the resource"
                            },
                            "environment": {
                              "type": "string",
                              "description": "The environment of the api key"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the api key resource object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            },
                            "kind": {
                              "type": "string",
                              "description": "Type of the owner which can be service or user account"
                            }
                          }
                        },
                        "owner": {
                          "description": "Specification of the cluster",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "API Key owner id"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            },
                            "kind": {
                              "type": "string",
                              "description": "Type of the owner service or user account"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters/{clusterId}/topics": {
      "get": {
        "operationId": "Topics_List",
        "tags": [
          "TopicRecords"
        ],
        "description": "Lists of all the topics in a clusters",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "Confluent kafka or schema registry cluster id",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "An opaque pagination token to fetch the next set of records",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Result of GET request to list topics in the cluster of a confluent organization",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The TopicRecord items on this page",
                  "items": {
                    "type": "object",
                    "description": "Details of topic record",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Topic Properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "Type of topic"
                          },
                          "topicId": {
                            "type": "string",
                            "description": "Topic Id returned by Confluent"
                          },
                          "metadata": {
                            "description": "Metadata of the record",
                            "type": "object",
                            "properties": {
                              "self": {
                                "type": "string",
                                "description": "Self lookup url"
                              },
                              "resourceName": {
                                "type": "string",
                                "description": "Resource name of the record"
                              }
                            }
                          },
                          "partitions": {
                            "description": "Partition Specification of the topic",
                            "type": "object",
                            "properties": {
                              "related": {
                                "type": "string",
                                "description": "Relationship of the topic"
                              }
                            }
                          },
                          "configs": {
                            "description": "Config Specification of the topic",
                            "type": "object",
                            "properties": {
                              "related": {
                                "type": "string",
                                "description": "Relationship of the topic"
                              }
                            }
                          },
                          "inputConfigs": {
                            "type": "array",
                            "description": "Input Config Specification of the topic",
                            "items": {
                              "type": "object",
                              "description": "Topics input config",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the topic input config"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Value of the topic input config"
                                }
                              }
                            }
                          },
                          "partitionsReassignments": {
                            "description": "Partition Reassignment Specification of the topic",
                            "type": "object",
                            "properties": {
                              "related": {
                                "type": "string",
                                "description": "Relationship of the topic"
                              }
                            }
                          },
                          "partitionsCount": {
                            "type": "string",
                            "description": "Partition count of the topic"
                          },
                          "replicationFactor": {
                            "type": "string",
                            "description": "Replication factor of the topic"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters/{clusterId}/topics/{topicName}": {
      "get": {
        "operationId": "Topics_Get",
        "tags": [
          "TopicRecords"
        ],
        "description": "Get confluent topic by Name",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "Confluent kafka or schema registry cluster id",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Confluent kafka or schema registry topic name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Details of topic record",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Topic Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "description": "Type of topic"
                    },
                    "topicId": {
                      "type": "string",
                      "description": "Topic Id returned by Confluent"
                    },
                    "metadata": {
                      "description": "Metadata of the record",
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "Self lookup url"
                        },
                        "resourceName": {
                          "type": "string",
                          "description": "Resource name of the record"
                        }
                      }
                    },
                    "partitions": {
                      "description": "Partition Specification of the topic",
                      "type": "object",
                      "properties": {
                        "related": {
                          "type": "string",
                          "description": "Relationship of the topic"
                        }
                      }
                    },
                    "configs": {
                      "description": "Config Specification of the topic",
                      "type": "object",
                      "properties": {
                        "related": {
                          "type": "string",
                          "description": "Relationship of the topic"
                        }
                      }
                    },
                    "inputConfigs": {
                      "type": "array",
                      "description": "Input Config Specification of the topic",
                      "items": {
                        "type": "object",
                        "description": "Topics input config",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the topic input config"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value of the topic input config"
                          }
                        }
                      }
                    },
                    "partitionsReassignments": {
                      "description": "Partition Reassignment Specification of the topic",
                      "type": "object",
                      "properties": {
                        "related": {
                          "type": "string",
                          "description": "Relationship of the topic"
                        }
                      }
                    },
                    "partitionsCount": {
                      "type": "string",
                      "description": "Partition count of the topic"
                    },
                    "replicationFactor": {
                      "type": "string",
                      "description": "Replication factor of the topic"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Topics_Create",
        "tags": [
          "TopicRecords"
        ],
        "description": "Create confluent topics by Name",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "Confluent kafka or schema registry cluster id",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Confluent kafka or schema registry topic name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Confluent Topics resource model",
            "required": false,
            "schema": {
              "type": "object",
              "description": "Details of topic record",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Topic Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "description": "Type of topic"
                    },
                    "topicId": {
                      "type": "string",
                      "description": "Topic Id returned by Confluent"
                    },
                    "metadata": {
                      "description": "Metadata of the record",
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "Self lookup url"
                        },
                        "resourceName": {
                          "type": "string",
                          "description": "Resource name of the record"
                        }
                      }
                    },
                    "partitions": {
                      "description": "Partition Specification of the topic",
                      "type": "object",
                      "properties": {
                        "related": {
                          "type": "string",
                          "description": "Relationship of the topic"
                        }
                      }
                    },
                    "configs": {
                      "description": "Config Specification of the topic",
                      "type": "object",
                      "properties": {
                        "related": {
                          "type": "string",
                          "description": "Relationship of the topic"
                        }
                      }
                    },
                    "inputConfigs": {
                      "type": "array",
                      "description": "Input Config Specification of the topic",
                      "items": {
                        "type": "object",
                        "description": "Topics input config",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the topic input config"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value of the topic input config"
                          }
                        }
                      }
                    },
                    "partitionsReassignments": {
                      "description": "Partition Reassignment Specification of the topic",
                      "type": "object",
                      "properties": {
                        "related": {
                          "type": "string",
                          "description": "Relationship of the topic"
                        }
                      }
                    },
                    "partitionsCount": {
                      "type": "string",
                      "description": "Partition count of the topic"
                    },
                    "replicationFactor": {
                      "type": "string",
                      "description": "Replication factor of the topic"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'TopicRecord' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Details of topic record",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Topic Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "description": "Type of topic"
                    },
                    "topicId": {
                      "type": "string",
                      "description": "Topic Id returned by Confluent"
                    },
                    "metadata": {
                      "description": "Metadata of the record",
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "Self lookup url"
                        },
                        "resourceName": {
                          "type": "string",
                          "description": "Resource name of the record"
                        }
                      }
                    },
                    "partitions": {
                      "description": "Partition Specification of the topic",
                      "type": "object",
                      "properties": {
                        "related": {
                          "type": "string",
                          "description": "Relationship of the topic"
                        }
                      }
                    },
                    "configs": {
                      "description": "Config Specification of the topic",
                      "type": "object",
                      "properties": {
                        "related": {
                          "type": "string",
                          "description": "Relationship of the topic"
                        }
                      }
                    },
                    "inputConfigs": {
                      "type": "array",
                      "description": "Input Config Specification of the topic",
                      "items": {
                        "type": "object",
                        "description": "Topics input config",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the topic input config"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value of the topic input config"
                          }
                        }
                      }
                    },
                    "partitionsReassignments": {
                      "description": "Partition Reassignment Specification of the topic",
                      "type": "object",
                      "properties": {
                        "related": {
                          "type": "string",
                          "description": "Relationship of the topic"
                        }
                      }
                    },
                    "partitionsCount": {
                      "type": "string",
                      "description": "Partition count of the topic"
                    },
                    "replicationFactor": {
                      "type": "string",
                      "description": "Replication factor of the topic"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'TopicRecord' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Details of topic record",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Topic Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "description": "Type of topic"
                    },
                    "topicId": {
                      "type": "string",
                      "description": "Topic Id returned by Confluent"
                    },
                    "metadata": {
                      "description": "Metadata of the record",
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "Self lookup url"
                        },
                        "resourceName": {
                          "type": "string",
                          "description": "Resource name of the record"
                        }
                      }
                    },
                    "partitions": {
                      "description": "Partition Specification of the topic",
                      "type": "object",
                      "properties": {
                        "related": {
                          "type": "string",
                          "description": "Relationship of the topic"
                        }
                      }
                    },
                    "configs": {
                      "description": "Config Specification of the topic",
                      "type": "object",
                      "properties": {
                        "related": {
                          "type": "string",
                          "description": "Relationship of the topic"
                        }
                      }
                    },
                    "inputConfigs": {
                      "type": "array",
                      "description": "Input Config Specification of the topic",
                      "items": {
                        "type": "object",
                        "description": "Topics input config",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the topic input config"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value of the topic input config"
                          }
                        }
                      }
                    },
                    "partitionsReassignments": {
                      "description": "Partition Reassignment Specification of the topic",
                      "type": "object",
                      "properties": {
                        "related": {
                          "type": "string",
                          "description": "Relationship of the topic"
                        }
                      }
                    },
                    "partitionsCount": {
                      "type": "string",
                      "description": "Partition count of the topic"
                    },
                    "replicationFactor": {
                      "type": "string",
                      "description": "Replication factor of the topic"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Topics_Delete",
        "tags": [
          "TopicRecords"
        ],
        "description": "Delete confluent topic by name",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "Confluent kafka or schema registry cluster id",
            "required": true,
            "type": "string"
          },
          {
            "name": "topicName",
            "in": "path",
            "description": "Confluent kafka or schema registry topic name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/schemaRegistryClusters": {
      "get": {
        "operationId": "Organization_ListSchemaRegistryClusters",
        "tags": [
          "SCEnvironmentRecords"
        ],
        "description": "Get schema registry clusters",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "An opaque pagination token to fetch the next set of records",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Result of GET request to list schema registry clusters in the environment of a confluent organization",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The SchemaRegistryClusterRecord items on this page",
                  "items": {
                    "type": "object",
                    "description": "Details of schema registry cluster record",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "Kind of the cluster"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of the cluster"
                      },
                      "properties": {
                        "description": "Schema Registry Cluster Properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "metadata": {
                            "description": "Metadata of the record",
                            "type": "object",
                            "properties": {
                              "self": {
                                "type": "string",
                                "description": "Self lookup url"
                              },
                              "resourceName": {
                                "type": "string",
                                "description": "Resource name of the record"
                              },
                              "createdTimestamp": {
                                "type": "string",
                                "description": "Created Date Time"
                              },
                              "updatedTimestamp": {
                                "type": "string",
                                "description": "Updated Date time"
                              },
                              "deletedTimestamp": {
                                "type": "string",
                                "description": "Deleted Date time"
                              }
                            }
                          },
                          "spec": {
                            "description": "Specification of the schema registry cluster",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the schema registry cluster"
                              },
                              "httpEndpoint": {
                                "type": "string",
                                "description": "Http endpoint of the cluster"
                              },
                              "package": {
                                "type": "string",
                                "description": "Type of the cluster package Advanced, essentials"
                              },
                              "region": {
                                "description": "Region details of the schema registry cluster",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID of the referred resource"
                                  },
                                  "related": {
                                    "type": "string",
                                    "description": "API URL for accessing or modifying the referred object"
                                  },
                                  "resourceName": {
                                    "type": "string",
                                    "description": "CRN reference to the referred resource"
                                  }
                                }
                              },
                              "environment": {
                                "description": "Environment details of the schema registry cluster",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "ID of the referred resource"
                                  },
                                  "related": {
                                    "type": "string",
                                    "description": "API URL for accessing or modifying the referred object"
                                  },
                                  "resourceName": {
                                    "type": "string",
                                    "description": "CRN reference to the referred resource"
                                  }
                                }
                              },
                              "cloud": {
                                "type": "string",
                                "description": "The cloud service provider"
                              }
                            }
                          },
                          "status": {
                            "description": "Specification of the cluster status",
                            "type": "object",
                            "properties": {
                              "phase": {
                                "type": "string",
                                "description": "The lifecycle phase of the cluster"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/schemaRegistryClusters/{clusterId}": {
      "get": {
        "operationId": "Organization_GetSchemaRegistryClusterById",
        "description": "Get schema registry cluster by Id",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "environmentId",
            "in": "path",
            "description": "Confluent environment id",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "Confluent connector name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Details of schema registry cluster record",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "Kind of the cluster"
                },
                "id": {
                  "type": "string",
                  "description": "Id of the cluster"
                },
                "properties": {
                  "description": "Schema Registry Cluster Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "description": "Metadata of the record",
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "description": "Self lookup url"
                        },
                        "resourceName": {
                          "type": "string",
                          "description": "Resource name of the record"
                        },
                        "createdTimestamp": {
                          "type": "string",
                          "description": "Created Date Time"
                        },
                        "updatedTimestamp": {
                          "type": "string",
                          "description": "Updated Date time"
                        },
                        "deletedTimestamp": {
                          "type": "string",
                          "description": "Deleted Date time"
                        }
                      }
                    },
                    "spec": {
                      "description": "Specification of the schema registry cluster",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the schema registry cluster"
                        },
                        "httpEndpoint": {
                          "type": "string",
                          "description": "Http endpoint of the cluster"
                        },
                        "package": {
                          "type": "string",
                          "description": "Type of the cluster package Advanced, essentials"
                        },
                        "region": {
                          "description": "Region details of the schema registry cluster",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the referred resource"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            }
                          }
                        },
                        "environment": {
                          "description": "Environment details of the schema registry cluster",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the referred resource"
                            },
                            "related": {
                              "type": "string",
                              "description": "API URL for accessing or modifying the referred object"
                            },
                            "resourceName": {
                              "type": "string",
                              "description": "CRN reference to the referred resource"
                            }
                          }
                        },
                        "cloud": {
                          "type": "string",
                          "description": "The cloud service provider"
                        }
                      }
                    },
                    "status": {
                      "description": "Specification of the cluster status",
                      "type": "object",
                      "properties": {
                        "phase": {
                          "type": "string",
                          "description": "The lifecycle phase of the cluster"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/listRegions": {
      "post": {
        "operationId": "Organization_ListRegions",
        "tags": [
          "OrganizationResources"
        ],
        "description": "cloud provider regions available for creating Schema Registry clusters.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "List Access Request Model",
            "required": true,
            "schema": {
              "type": "object",
              "description": "List Access Request Model",
              "properties": {
                "searchFilters": {
                  "type": "object",
                  "description": "Search filters for the request",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Result of POST request to list regions supported by confluent",
              "properties": {
                "data": {
                  "type": "array",
                  "description": "List of regions supported by confluent",
                  "items": {
                    "type": "object",
                    "description": "Details of region record",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "Kind of the cluster"
                      },
                      "id": {
                        "type": "string",
                        "description": "Id of the cluster"
                      },
                      "properties": {
                        "description": "Region Properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "metadata": {
                            "description": "Metadata of the record",
                            "type": "object",
                            "properties": {
                              "self": {
                                "type": "string",
                                "description": "Self lookup url"
                              },
                              "resourceName": {
                                "type": "string",
                                "description": "Resource name of the record"
                              },
                              "createdTimestamp": {
                                "type": "string",
                                "description": "Created Date Time"
                              },
                              "updatedTimestamp": {
                                "type": "string",
                                "description": "Updated Date time"
                              },
                              "deletedTimestamp": {
                                "type": "string",
                                "description": "Deleted Date time"
                              }
                            }
                          },
                          "spec": {
                            "description": "Specification of the region",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Display Name of the region"
                              },
                              "cloud": {
                                "type": "string",
                                "description": "Cloud provider name"
                              },
                              "regionName": {
                                "type": "string",
                                "description": "Region name"
                              },
                              "packages": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/validations/{organizationName}/orgvalidate": {
      "post": {
        "operationId": "Validations_ValidateOrganization",
        "summary": "Organization Validate proxy resource",
        "description": "Organization Validate proxy resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Organization resource model",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Organization resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Organization resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "createdTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation time of the resource.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provision states for confluent RP",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Accepted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleted",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Accepted",
                            "value": "Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified"
                          }
                        ]
                      }
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Id of the Confluent organization.",
                      "readOnly": true
                    },
                    "ssoUrl": {
                      "type": "string",
                      "description": "SSO url for the Confluent organization.",
                      "readOnly": true
                    },
                    "offerDetail": {
                      "description": "Confluent offer detail",
                      "type": "object",
                      "properties": {
                        "publisherId": {
                          "type": "string",
                          "description": "Publisher Id",
                          "maxLength": 50
                        },
                        "id": {
                          "type": "string",
                          "description": "Offer Id",
                          "maxLength": 50
                        },
                        "planId": {
                          "type": "string",
                          "description": "Offer Plan Id",
                          "maxLength": 200
                        },
                        "planName": {
                          "type": "string",
                          "description": "Offer Plan Name",
                          "maxLength": 200
                        },
                        "termUnit": {
                          "type": "string",
                          "description": "Offer Plan Term unit",
                          "maxLength": 25
                        },
                        "termId": {
                          "type": "string",
                          "description": "Offer Plan Term Id",
                          "maxLength": 50
                        },
                        "privateOfferId": {
                          "type": "string",
                          "description": "Private Offer Id",
                          "maxLength": 255
                        },
                        "privateOfferIds": {
                          "type": "array",
                          "description": "Array of Private Offer Ids",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "description": "SaaS Offer Status",
                          "type": "string",
                          "enum": [
                            "Started",
                            "PendingFulfillmentStart",
                            "InProgress",
                            "Subscribed",
                            "Suspended",
                            "Reinstated",
                            "Succeeded",
                            "Failed",
                            "Unsubscribed",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "SaaSOfferStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Started",
                                "value": "Started"
                              },
                              {
                                "name": "PendingFulfillmentStart",
                                "value": "PendingFulfillmentStart"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Subscribed",
                                "value": "Subscribed"
                              },
                              {
                                "name": "Suspended",
                                "value": "Suspended"
                              },
                              {
                                "name": "Reinstated",
                                "value": "Reinstated"
                              },
                              {
                                "name": "Succeeded",
                                "value": "Succeeded"
                              },
                              {
                                "name": "Failed",
                                "value": "Failed"
                              },
                              {
                                "name": "Unsubscribed",
                                "value": "Unsubscribed"
                              },
                              {
                                "name": "Updating",
                                "value": "Updating"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "publisherId",
                        "id",
                        "planId",
                        "planName",
                        "termUnit"
                      ]
                    },
                    "userDetail": {
                      "description": "Subscriber detail",
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "description": "First name",
                          "maxLength": 50
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Last name",
                          "maxLength": 50
                        },
                        "emailAddress": {
                          "type": "string",
                          "description": "Email address",
                          "pattern": "^\\S+@\\S+\\.\\S+$"
                        },
                        "userPrincipalName": {
                          "type": "string",
                          "description": "User principal name"
                        },
                        "aadEmail": {
                          "type": "string",
                          "description": "AAD email address"
                        }
                      },
                      "required": [
                        "emailAddress"
                      ]
                    },
                    "linkOrganization": {
                      "description": "Link an existing Confluent organization",
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "format": "password",
                          "description": "User auth token",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      },
                      "required": [
                        "token"
                      ]
                    }
                  },
                  "required": [
                    "offerDetail",
                    "userDetail"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Organization resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Organization resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "createdTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation time of the resource.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provision states for confluent RP",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Accepted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleted",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Accepted",
                            "value": "Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified"
                          }
                        ]
                      }
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Id of the Confluent organization.",
                      "readOnly": true
                    },
                    "ssoUrl": {
                      "type": "string",
                      "description": "SSO url for the Confluent organization.",
                      "readOnly": true
                    },
                    "offerDetail": {
                      "description": "Confluent offer detail",
                      "type": "object",
                      "properties": {
                        "publisherId": {
                          "type": "string",
                          "description": "Publisher Id",
                          "maxLength": 50
                        },
                        "id": {
                          "type": "string",
                          "description": "Offer Id",
                          "maxLength": 50
                        },
                        "planId": {
                          "type": "string",
                          "description": "Offer Plan Id",
                          "maxLength": 200
                        },
                        "planName": {
                          "type": "string",
                          "description": "Offer Plan Name",
                          "maxLength": 200
                        },
                        "termUnit": {
                          "type": "string",
                          "description": "Offer Plan Term unit",
                          "maxLength": 25
                        },
                        "termId": {
                          "type": "string",
                          "description": "Offer Plan Term Id",
                          "maxLength": 50
                        },
                        "privateOfferId": {
                          "type": "string",
                          "description": "Private Offer Id",
                          "maxLength": 255
                        },
                        "privateOfferIds": {
                          "type": "array",
                          "description": "Array of Private Offer Ids",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "description": "SaaS Offer Status",
                          "type": "string",
                          "enum": [
                            "Started",
                            "PendingFulfillmentStart",
                            "InProgress",
                            "Subscribed",
                            "Suspended",
                            "Reinstated",
                            "Succeeded",
                            "Failed",
                            "Unsubscribed",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "SaaSOfferStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Started",
                                "value": "Started"
                              },
                              {
                                "name": "PendingFulfillmentStart",
                                "value": "PendingFulfillmentStart"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Subscribed",
                                "value": "Subscribed"
                              },
                              {
                                "name": "Suspended",
                                "value": "Suspended"
                              },
                              {
                                "name": "Reinstated",
                                "value": "Reinstated"
                              },
                              {
                                "name": "Succeeded",
                                "value": "Succeeded"
                              },
                              {
                                "name": "Failed",
                                "value": "Failed"
                              },
                              {
                                "name": "Unsubscribed",
                                "value": "Unsubscribed"
                              },
                              {
                                "name": "Updating",
                                "value": "Updating"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "publisherId",
                        "id",
                        "planId",
                        "planName",
                        "termUnit"
                      ]
                    },
                    "userDetail": {
                      "description": "Subscriber detail",
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "description": "First name",
                          "maxLength": 50
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Last name",
                          "maxLength": 50
                        },
                        "emailAddress": {
                          "type": "string",
                          "description": "Email address",
                          "pattern": "^\\S+@\\S+\\.\\S+$"
                        },
                        "userPrincipalName": {
                          "type": "string",
                          "description": "User principal name"
                        },
                        "aadEmail": {
                          "type": "string",
                          "description": "AAD email address"
                        }
                      },
                      "required": [
                        "emailAddress"
                      ]
                    },
                    "linkOrganization": {
                      "description": "Link an existing Confluent organization",
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "format": "password",
                          "description": "User auth token",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      },
                      "required": [
                        "token"
                      ]
                    }
                  },
                  "required": [
                    "offerDetail",
                    "userDetail"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/validations/{organizationName}/orgvalidateV2": {
      "post": {
        "operationId": "Validations_ValidateOrganizationV2",
        "summary": "Organization Validate proxy resource",
        "description": "Organization Validate proxy resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "organizationName",
            "in": "path",
            "description": "Organization resource name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Organization resource model",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Organization resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Organization resource properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "createdTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation time of the resource.",
                      "readOnly": true
                    },
                    "provisioningState": {
                      "description": "Provision states for confluent RP",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Accepted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Deleted",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisionState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Accepted",
                            "value": "Accepted"
                          },
                          {
                            "name": "Creating",
                            "value": "Creating"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting"
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled"
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted"
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified"
                          }
                        ]
                      }
                    },
                    "organizationId": {
                      "type": "string",
                      "description": "Id of the Confluent organization.",
                      "readOnly": true
                    },
                    "ssoUrl": {
                      "type": "string",
                      "description": "SSO url for the Confluent organization.",
                      "readOnly": true
                    },
                    "offerDetail": {
                      "description": "Confluent offer detail",
                      "type": "object",
                      "properties": {
                        "publisherId": {
                          "type": "string",
                          "description": "Publisher Id",
                          "maxLength": 50
                        },
                        "id": {
                          "type": "string",
                          "description": "Offer Id",
                          "maxLength": 50
                        },
                        "planId": {
                          "type": "string",
                          "description": "Offer Plan Id",
                          "maxLength": 200
                        },
                        "planName": {
                          "type": "string",
                          "description": "Offer Plan Name",
                          "maxLength": 200
                        },
                        "termUnit": {
                          "type": "string",
                          "description": "Offer Plan Term unit",
                          "maxLength": 25
                        },
                        "termId": {
                          "type": "string",
                          "description": "Offer Plan Term Id",
                          "maxLength": 50
                        },
                        "privateOfferId": {
                          "type": "string",
                          "description": "Private Offer Id",
                          "maxLength": 255
                        },
                        "privateOfferIds": {
                          "type": "array",
                          "description": "Array of Private Offer Ids",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "description": "SaaS Offer Status",
                          "type": "string",
                          "enum": [
                            "Started",
                            "PendingFulfillmentStart",
                            "InProgress",
                            "Subscribed",
                            "Suspended",
                            "Reinstated",
                            "Succeeded",
                            "Failed",
                            "Unsubscribed",
                            "Updating"
                          ],
                          "x-ms-enum": {
                            "name": "SaaSOfferStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Started",
                                "value": "Started"
                              },
                              {
                                "name": "PendingFulfillmentStart",
                                "value": "PendingFulfillmentStart"
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress"
                              },
                              {
                                "name": "Subscribed",
                                "value": "Subscribed"
                              },
                              {
                                "name": "Suspended",
                                "value": "Suspended"
                              },
                              {
                                "name": "Reinstated",
                                "value": "Reinstated"
                              },
                              {
                                "name": "Succeeded",
                                "value": "Succeeded"
                              },
                              {
                                "name": "Failed",
                                "value": "Failed"
                              },
                              {
                                "name": "Unsubscribed",
                                "value": "Unsubscribed"
                              },
                              {
                                "name": "Updating",
                                "value": "Updating"
                              }
                            ]
                          }
                        }
                      },
                      "required": [
                        "publisherId",
                        "id",
                        "planId",
                        "planName",
                        "termUnit"
                      ]
                    },
                    "userDetail": {
                      "description": "Subscriber detail",
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string",
                          "description": "First name",
                          "maxLength": 50
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Last name",
                          "maxLength": 50
                        },
                        "emailAddress": {
                          "type": "string",
                          "description": "Email address",
                          "pattern": "^\\S+@\\S+\\.\\S+$"
                        },
                        "userPrincipalName": {
                          "type": "string",
                          "description": "User principal name"
                        },
                        "aadEmail": {
                          "type": "string",
                          "description": "AAD email address"
                        }
                      },
                      "required": [
                        "emailAddress"
                      ]
                    },
                    "linkOrganization": {
                      "description": "Link an existing Confluent organization",
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "format": "password",
                          "description": "User auth token",
                          "x-ms-mutability": [
                            "create"
                          ],
                          "x-ms-secret": true
                        }
                      },
                      "required": [
                        "token"
                      ]
                    }
                  },
                  "required": [
                    "offerDetail",
                    "userDetail"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Validation response from the provider",
              "properties": {
                "info": {
                  "type": "object",
                  "description": "Info from the response",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "APIKeyOwnerEntity": {
      "type": "object",
      "description": "API Key Owner details which can be a user or service account",
      "properties": {
        "id": {
          "type": "string",
          "description": "API Key owner id"
        },
        "related": {
          "type": "string",
          "description": "API URL for accessing or modifying the referred object"
        },
        "resourceName": {
          "type": "string",
          "description": "CRN reference to the referred resource"
        },
        "kind": {
          "type": "string",
          "description": "Type of the owner service or user account"
        }
      }
    },
    "APIKeyProperties": {
      "type": "object",
      "description": "API Key Properties",
      "properties": {
        "metadata": {
          "description": "Metadata of the record",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "Self lookup url"
            },
            "resourceName": {
              "type": "string",
              "description": "Resource name of the record"
            },
            "createdTimestamp": {
              "type": "string",
              "description": "Created Date Time"
            },
            "updatedTimestamp": {
              "type": "string",
              "description": "Updated Date time"
            },
            "deletedTimestamp": {
              "type": "string",
              "description": "Deleted Date time"
            }
          }
        },
        "spec": {
          "description": "Specification of the API Key",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "The description of the API Key"
            },
            "name": {
              "type": "string",
              "description": "The name of the API Key"
            },
            "secret": {
              "type": "string",
              "format": "password",
              "description": "API Key Secret",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            },
            "resource": {
              "description": "Specification of the cluster",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Id of the resource"
                },
                "environment": {
                  "type": "string",
                  "description": "The environment of the api key"
                },
                "related": {
                  "type": "string",
                  "description": "API URL for accessing or modifying the api key resource object"
                },
                "resourceName": {
                  "type": "string",
                  "description": "CRN reference to the referred resource"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the owner which can be service or user account"
                }
              }
            },
            "owner": {
              "description": "Specification of the cluster",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "API Key owner id"
                },
                "related": {
                  "type": "string",
                  "description": "API URL for accessing or modifying the referred object"
                },
                "resourceName": {
                  "type": "string",
                  "description": "CRN reference to the referred resource"
                },
                "kind": {
                  "type": "string",
                  "description": "Type of the owner service or user account"
                }
              }
            }
          }
        }
      }
    },
    "APIKeyRecord": {
      "type": "object",
      "description": "Details API key",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of api key"
        },
        "id": {
          "type": "string",
          "description": "Id of the api key"
        },
        "properties": {
          "description": "API Key Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "metadata": {
              "description": "Metadata of the record",
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "description": "Self lookup url"
                },
                "resourceName": {
                  "type": "string",
                  "description": "Resource name of the record"
                },
                "createdTimestamp": {
                  "type": "string",
                  "description": "Created Date Time"
                },
                "updatedTimestamp": {
                  "type": "string",
                  "description": "Updated Date time"
                },
                "deletedTimestamp": {
                  "type": "string",
                  "description": "Deleted Date time"
                }
              }
            },
            "spec": {
              "description": "Specification of the API Key",
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "description": "The description of the API Key"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the API Key"
                },
                "secret": {
                  "type": "string",
                  "format": "password",
                  "description": "API Key Secret",
                  "x-ms-mutability": [
                    "create"
                  ],
                  "x-ms-secret": true
                },
                "resource": {
                  "description": "Specification of the cluster",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Id of the resource"
                    },
                    "environment": {
                      "type": "string",
                      "description": "The environment of the api key"
                    },
                    "related": {
                      "type": "string",
                      "description": "API URL for accessing or modifying the api key resource object"
                    },
                    "resourceName": {
                      "type": "string",
                      "description": "CRN reference to the referred resource"
                    },
                    "kind": {
                      "type": "string",
                      "description": "Type of the owner which can be service or user account"
                    }
                  }
                },
                "owner": {
                  "description": "Specification of the cluster",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "API Key owner id"
                    },
                    "related": {
                      "type": "string",
                      "description": "API URL for accessing or modifying the referred object"
                    },
                    "resourceName": {
                      "type": "string",
                      "description": "CRN reference to the referred resource"
                    },
                    "kind": {
                      "type": "string",
                      "description": "Type of the owner service or user account"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "APIKeyResourceEntity": {
      "type": "object",
      "description": "API Key Resource details which can be kafka cluster or schema registry cluster",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the resource"
        },
        "environment": {
          "type": "string",
          "description": "The environment of the api key"
        },
        "related": {
          "type": "string",
          "description": "API URL for accessing or modifying the api key resource object"
        },
        "resourceName": {
          "type": "string",
          "description": "CRN reference to the referred resource"
        },
        "kind": {
          "type": "string",
          "description": "Type of the owner which can be service or user account"
        }
      }
    },
    "APIKeySpecEntity": {
      "type": "object",
      "description": "Spec of the API Key record",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the API Key"
        },
        "name": {
          "type": "string",
          "description": "The name of the API Key"
        },
        "secret": {
          "type": "string",
          "format": "password",
          "description": "API Key Secret",
          "x-ms-mutability": [
            "create"
          ],
          "x-ms-secret": true
        },
        "resource": {
          "description": "Specification of the cluster",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Id of the resource"
            },
            "environment": {
              "type": "string",
              "description": "The environment of the api key"
            },
            "related": {
              "type": "string",
              "description": "API URL for accessing or modifying the api key resource object"
            },
            "resourceName": {
              "type": "string",
              "description": "CRN reference to the referred resource"
            },
            "kind": {
              "type": "string",
              "description": "Type of the owner which can be service or user account"
            }
          }
        },
        "owner": {
          "description": "Specification of the cluster",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "API Key owner id"
            },
            "related": {
              "type": "string",
              "description": "API URL for accessing or modifying the referred object"
            },
            "resourceName": {
              "type": "string",
              "description": "CRN reference to the referred resource"
            },
            "kind": {
              "type": "string",
              "description": "Type of the owner service or user account"
            }
          }
        }
      }
    },
    "AccessCreateRoleBindingRequestModel": {
      "type": "object",
      "description": "Create role binding request model",
      "properties": {
        "principal": {
          "type": "string",
          "description": "The principal User or Group to bind the role to"
        },
        "role_name": {
          "type": "string",
          "description": "The name of the role to bind to the principal"
        },
        "crn_pattern": {
          "type": "string",
          "description": "A CRN that specifies the scope and resource patterns necessary for the role to bind"
        }
      }
    },
    "AccessInviteUserAccountModel": {
      "type": "object",
      "description": "Invite User Account model",
      "properties": {
        "organizationId": {
          "type": "string",
          "description": "Id of the organization"
        },
        "email": {
          "type": "string",
          "description": "Email of the logged in user"
        },
        "upn": {
          "type": "string",
          "description": "Upn of the logged in user"
        },
        "invitedUserDetails": {
          "description": "Details of the user who is being invited",
          "type": "object",
          "properties": {
            "invitedEmail": {
              "type": "string",
              "description": "UPN/Email of the user who is being invited"
            },
            "auth_type": {
              "type": "string",
              "description": "Auth type of the user"
            }
          }
        }
      }
    },
    "AccessInvitedUserDetails": {
      "type": "object",
      "description": "Details of the user being invited",
      "properties": {
        "invitedEmail": {
          "type": "string",
          "description": "UPN/Email of the user who is being invited"
        },
        "auth_type": {
          "type": "string",
          "description": "Auth type of the user"
        }
      }
    },
    "AccessListClusterSuccessResponse": {
      "type": "object",
      "description": "Details of the clusters returned on successful response",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of response"
        },
        "metadata": {
          "description": "Metadata of the list",
          "type": "object",
          "properties": {
            "first": {
              "type": "string",
              "description": "First page of the list"
            },
            "last": {
              "type": "string",
              "description": "Last page of the list"
            },
            "prev": {
              "type": "string",
              "description": "Previous page of the list"
            },
            "next": {
              "type": "string",
              "description": "Next page of the list"
            },
            "total_size": {
              "type": "integer",
              "format": "int32",
              "description": "Total size of the list"
            }
          }
        },
        "data": {
          "type": "array",
          "description": "List of clusters",
          "items": {
            "type": "object",
            "description": "Details of cluster record",
            "properties": {
              "kind": {
                "type": "string",
                "description": "Type of cluster"
              },
              "id": {
                "type": "string",
                "description": "Id of the cluster"
              },
              "metadata": {
                "description": "Metadata of the record",
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "Self lookup url"
                  },
                  "resource_name": {
                    "type": "string",
                    "description": "Resource name of the record"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Created Date Time"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Updated Date time"
                  },
                  "deleted_at": {
                    "type": "string",
                    "description": "Deleted Date time"
                  }
                }
              },
              "display_name": {
                "type": "string",
                "description": "Display name of the cluster"
              },
              "spec": {
                "description": "Specification of the cluster",
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string",
                    "description": "The name of the cluster"
                  },
                  "availability": {
                    "type": "string",
                    "description": "The availability zone configuration of the cluster"
                  },
                  "cloud": {
                    "type": "string",
                    "description": "The cloud service provider"
                  },
                  "zone": {
                    "type": "string",
                    "description": "type of zone availability"
                  },
                  "region": {
                    "type": "string",
                    "description": "The cloud service provider region"
                  },
                  "kafka_bootstrap_endpoint": {
                    "type": "string",
                    "description": "The bootstrap endpoint used by Kafka clients to connect to the cluster"
                  },
                  "http_endpoint": {
                    "type": "string",
                    "description": "The cluster HTTP request URL."
                  },
                  "api_endpoint": {
                    "type": "string",
                    "description": "The Kafka API cluster endpoint"
                  },
                  "config": {
                    "description": "Specification of the cluster",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "description": "The lifecycle phase of the cluster"
                      }
                    }
                  },
                  "environment": {
                    "description": "Specification of the cluster",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID of the referred resource"
                      },
                      "environment": {
                        "type": "string",
                        "description": "Environment of the referred resource"
                      },
                      "related": {
                        "type": "string",
                        "description": "API URL for accessing or modifying the referred object"
                      },
                      "resource_name": {
                        "type": "string",
                        "description": "CRN reference to the referred resource"
                      }
                    }
                  },
                  "network": {
                    "description": "Specification of the cluster",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID of the referred resource"
                      },
                      "environment": {
                        "type": "string",
                        "description": "Environment of the referred resource"
                      },
                      "related": {
                        "type": "string",
                        "description": "API URL for accessing or modifying the referred object"
                      },
                      "resource_name": {
                        "type": "string",
                        "description": "CRN reference to the referred resource"
                      }
                    }
                  },
                  "byok": {
                    "description": "Specification of the cluster",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID of the referred resource"
                      },
                      "related": {
                        "type": "string",
                        "description": "API URL for accessing or modifying the referred object"
                      },
                      "resource_name": {
                        "type": "string",
                        "description": "CRN reference to the referred resource"
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "Specification of the cluster",
                "type": "object",
                "properties": {
                  "phase": {
                    "type": "string",
                    "description": "The lifecycle phase of the cluster"
                  },
                  "cku": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of Confluent Kafka Units"
                  }
                }
              }
            }
          }
        }
      }
    },
    "AccessListEnvironmentsSuccessResponse": {
      "type": "object",
      "description": "Details of the environments returned on successful response",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of response"
        },
        "metadata": {
          "description": "Metadata of the  environment list",
          "type": "object",
          "properties": {
            "first": {
              "type": "string",
              "description": "First page of the list"
            },
            "last": {
              "type": "string",
              "description": "Last page of the list"
            },
            "prev": {
              "type": "string",
              "description": "Previous page of the list"
            },
            "next": {
              "type": "string",
              "description": "Next page of the list"
            },
            "total_size": {
              "type": "integer",
              "format": "int32",
              "description": "Total size of the list"
            }
          }
        },
        "data": {
          "type": "array",
          "description": "Environment list data",
          "items": {
            "type": "object",
            "description": "Details about environment name, metadata and environment id of an environment",
            "properties": {
              "kind": {
                "type": "string",
                "description": "Type of environment"
              },
              "id": {
                "type": "string",
                "description": "Id of the environment"
              },
              "metadata": {
                "description": "Metadata of the record",
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "Self lookup url"
                  },
                  "resource_name": {
                    "type": "string",
                    "description": "Resource name of the record"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Created Date Time"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Updated Date time"
                  },
                  "deleted_at": {
                    "type": "string",
                    "description": "Deleted Date time"
                  }
                }
              },
              "display_name": {
                "type": "string",
                "description": "Display name of the user"
              }
            }
          }
        }
      }
    },
    "AccessListInvitationsSuccessResponse": {
      "type": "object",
      "description": "List invitations success response",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of response"
        },
        "metadata": {
          "description": "Metadata of the list",
          "type": "object",
          "properties": {
            "first": {
              "type": "string",
              "description": "First page of the list"
            },
            "last": {
              "type": "string",
              "description": "Last page of the list"
            },
            "prev": {
              "type": "string",
              "description": "Previous page of the list"
            },
            "next": {
              "type": "string",
              "description": "Next page of the list"
            },
            "total_size": {
              "type": "integer",
              "format": "int32",
              "description": "Total size of the list"
            }
          }
        },
        "data": {
          "type": "array",
          "description": "Data of the invitations list",
          "items": {
            "type": "object",
            "description": "Record of the invitation",
            "properties": {
              "kind": {
                "type": "string",
                "description": "Type of account"
              },
              "id": {
                "type": "string",
                "description": "Id of the invitation"
              },
              "metadata": {
                "description": "Metadata of the record",
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "Self lookup url"
                  },
                  "resource_name": {
                    "type": "string",
                    "description": "Resource name of the record"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Created Date Time"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Updated Date time"
                  },
                  "deleted_at": {
                    "type": "string",
                    "description": "Deleted Date time"
                  }
                }
              },
              "email": {
                "type": "string",
                "description": "Email of the user"
              },
              "auth_type": {
                "type": "string",
                "description": "Auth type of the user"
              },
              "status": {
                "type": "string",
                "description": "Status of the invitation"
              },
              "accepted_at": {
                "type": "string",
                "description": "Accepted date time of the invitation"
              },
              "expires_at": {
                "type": "string",
                "description": "Expiration date time of the invitation"
              }
            }
          }
        }
      }
    },
    "AccessListRoleBindingsSuccessResponse": {
      "type": "object",
      "description": "Details of the role bindings returned on successful response",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of response"
        },
        "metadata": {
          "description": "Metadata of the list",
          "type": "object",
          "properties": {
            "first": {
              "type": "string",
              "description": "First page of the list"
            },
            "last": {
              "type": "string",
              "description": "Last page of the list"
            },
            "prev": {
              "type": "string",
              "description": "Previous page of the list"
            },
            "next": {
              "type": "string",
              "description": "Next page of the list"
            },
            "total_size": {
              "type": "integer",
              "format": "int32",
              "description": "Total size of the list"
            }
          }
        },
        "data": {
          "type": "array",
          "description": "List of role binding",
          "items": {
            "type": "object",
            "description": "Details on principal, role name and crn pattern of a role binding",
            "properties": {
              "kind": {
                "type": "string",
                "description": "The type of the resource."
              },
              "id": {
                "type": "string",
                "description": "Id of the role binding"
              },
              "metadata": {
                "description": "Metadata of the record",
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "Self lookup url"
                  },
                  "resource_name": {
                    "type": "string",
                    "description": "Resource name of the record"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Created Date Time"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Updated Date time"
                  },
                  "deleted_at": {
                    "type": "string",
                    "description": "Deleted Date time"
                  }
                }
              },
              "principal": {
                "type": "string",
                "description": "The principal User or Group to bind the role to"
              },
              "role_name": {
                "type": "string",
                "description": "The name of the role to bind to the principal"
              },
              "crn_pattern": {
                "type": "string",
                "description": "A CRN that specifies the scope and resource patterns necessary for the role to bind"
              }
            }
          }
        }
      }
    },
    "AccessListServiceAccountsSuccessResponse": {
      "type": "object",
      "description": "List service accounts success response",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of response"
        },
        "metadata": {
          "description": "Metadata of the list",
          "type": "object",
          "properties": {
            "first": {
              "type": "string",
              "description": "First page of the list"
            },
            "last": {
              "type": "string",
              "description": "Last page of the list"
            },
            "prev": {
              "type": "string",
              "description": "Previous page of the list"
            },
            "next": {
              "type": "string",
              "description": "Next page of the list"
            },
            "total_size": {
              "type": "integer",
              "format": "int32",
              "description": "Total size of the list"
            }
          }
        },
        "data": {
          "type": "array",
          "description": "Data of the service accounts list",
          "items": {
            "type": "object",
            "description": "Record of the service account",
            "properties": {
              "kind": {
                "type": "string",
                "description": "Type of account"
              },
              "id": {
                "type": "string",
                "description": "Id of the service account"
              },
              "metadata": {
                "description": "Metadata of the record",
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "Self lookup url"
                  },
                  "resource_name": {
                    "type": "string",
                    "description": "Resource name of the record"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Created Date Time"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Updated Date time"
                  },
                  "deleted_at": {
                    "type": "string",
                    "description": "Deleted Date time"
                  }
                }
              },
              "display_name": {
                "type": "string",
                "description": "Name of the service account"
              },
              "description": {
                "type": "string",
                "description": "Description of the service account"
              }
            }
          }
        }
      }
    },
    "AccessListUsersSuccessResponse": {
      "type": "object",
      "description": "List users success response",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of response"
        },
        "metadata": {
          "description": "Metadata of the list",
          "type": "object",
          "properties": {
            "first": {
              "type": "string",
              "description": "First page of the list"
            },
            "last": {
              "type": "string",
              "description": "Last page of the list"
            },
            "prev": {
              "type": "string",
              "description": "Previous page of the list"
            },
            "next": {
              "type": "string",
              "description": "Next page of the list"
            },
            "total_size": {
              "type": "integer",
              "format": "int32",
              "description": "Total size of the list"
            }
          }
        },
        "data": {
          "type": "array",
          "description": "Data of the users list",
          "items": {
            "type": "object",
            "description": "Record of the user",
            "properties": {
              "kind": {
                "type": "string",
                "description": "Type of account"
              },
              "id": {
                "type": "string",
                "description": "Id of the user"
              },
              "metadata": {
                "description": "Metadata of the record",
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "description": "Self lookup url"
                  },
                  "resource_name": {
                    "type": "string",
                    "description": "Resource name of the record"
                  },
                  "created_at": {
                    "type": "string",
                    "description": "Created Date Time"
                  },
                  "updated_at": {
                    "type": "string",
                    "description": "Updated Date time"
                  },
                  "deleted_at": {
                    "type": "string",
                    "description": "Deleted Date time"
                  }
                }
              },
              "email": {
                "type": "string",
                "description": "Email of the user"
              },
              "full_name": {
                "type": "string",
                "description": "Name of the user"
              },
              "auth_type": {
                "type": "string",
                "description": "Auth type of the user"
              }
            }
          }
        }
      }
    },
    "AccessRoleBindingNameListSuccessResponse": {
      "type": "object",
      "description": "Details of the role binding names returned on successful response",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of response"
        },
        "metadata": {
          "description": "Metadata of the list",
          "type": "object",
          "properties": {
            "first": {
              "type": "string",
              "description": "First page of the list"
            },
            "last": {
              "type": "string",
              "description": "Last page of the list"
            },
            "prev": {
              "type": "string",
              "description": "Previous page of the list"
            },
            "next": {
              "type": "string",
              "description": "Next page of the list"
            },
            "total_size": {
              "type": "integer",
              "format": "int32",
              "description": "Total size of the list"
            }
          }
        },
        "data": {
          "type": "array",
          "description": "List of role binding names",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AuthType": {
      "type": "string",
      "description": "Kafka Connector Auth Type",
      "enum": [
        "SERVICE_ACCOUNT",
        "KAFKA_API_KEY"
      ],
      "x-ms-enum": {
        "name": "AuthType",
        "modelAsString": true,
        "values": [
          {
            "name": "SERVICE_ACCOUNT",
            "value": "SERVICE_ACCOUNT"
          },
          {
            "name": "KAFKA_API_KEY",
            "value": "KAFKA_API_KEY"
          }
        ]
      }
    },
    "AzureBlobStorageSinkConnectorServiceInfo": {
      "type": "object",
      "description": "The authentication info when auth_type is azureBlobStorageSinkConnector",
      "properties": {
        "storageAccountName": {
          "type": "string",
          "description": "Azure Blob Storage Account Name"
        },
        "storageAccountKey": {
          "type": "string",
          "description": "Azure Blob Storage Account Key"
        },
        "storageContainerName": {
          "type": "string",
          "description": "Azure Blob Storage Account Container Name"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The connector service type info",
          "properties": {
            "connectorServiceType": {
              "description": "The connector service type.",
              "type": "string",
              "enum": [
                "AzureBlobStorageSinkConnector",
                "AzureBlobStorageSourceConnector",
                "AzureCosmosDBSinkConnector",
                "AzureCosmosDBSourceConnector",
                "AzureSynapseAnalyticsSinkConnector"
              ],
              "x-ms-enum": {
                "name": "ConnectorServiceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AzureBlobStorageSinkConnector",
                    "value": "AzureBlobStorageSinkConnector"
                  },
                  {
                    "name": "AzureBlobStorageSourceConnector",
                    "value": "AzureBlobStorageSourceConnector"
                  },
                  {
                    "name": "AzureCosmosDBSinkConnector",
                    "value": "AzureCosmosDBSinkConnector"
                  },
                  {
                    "name": "AzureCosmosDBSourceConnector",
                    "value": "AzureCosmosDBSourceConnector"
                  },
                  {
                    "name": "AzureSynapseAnalyticsSinkConnector",
                    "value": "AzureSynapseAnalyticsSinkConnector"
                  }
                ]
              }
            }
          },
          "discriminator": "connectorServiceType",
          "required": [
            "connectorServiceType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureBlobStorageSinkConnector"
    },
    "AzureBlobStorageSourceConnectorServiceInfo": {
      "type": "object",
      "description": "The connector service type is AzureBlobStorageSourceConnector",
      "properties": {
        "storageAccountName": {
          "type": "string",
          "description": "Azure Blob Storage Account Name"
        },
        "storageAccountKey": {
          "type": "string",
          "format": "password",
          "description": "Azure Blob Storage Account Key",
          "x-ms-secret": true
        },
        "storageContainerName": {
          "type": "string",
          "description": "Azure Blob Storage Account Container Name"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The connector service type info",
          "properties": {
            "connectorServiceType": {
              "description": "The connector service type.",
              "type": "string",
              "enum": [
                "AzureBlobStorageSinkConnector",
                "AzureBlobStorageSourceConnector",
                "AzureCosmosDBSinkConnector",
                "AzureCosmosDBSourceConnector",
                "AzureSynapseAnalyticsSinkConnector"
              ],
              "x-ms-enum": {
                "name": "ConnectorServiceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AzureBlobStorageSinkConnector",
                    "value": "AzureBlobStorageSinkConnector"
                  },
                  {
                    "name": "AzureBlobStorageSourceConnector",
                    "value": "AzureBlobStorageSourceConnector"
                  },
                  {
                    "name": "AzureCosmosDBSinkConnector",
                    "value": "AzureCosmosDBSinkConnector"
                  },
                  {
                    "name": "AzureCosmosDBSourceConnector",
                    "value": "AzureCosmosDBSourceConnector"
                  },
                  {
                    "name": "AzureSynapseAnalyticsSinkConnector",
                    "value": "AzureSynapseAnalyticsSinkConnector"
                  }
                ]
              }
            }
          },
          "discriminator": "connectorServiceType",
          "required": [
            "connectorServiceType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureBlobStorageSourceConnector"
    },
    "AzureCosmosDBSinkConnectorServiceInfo": {
      "type": "object",
      "description": "The authentication info when auth_type is AzureCosmosDBSinkConnector",
      "properties": {
        "cosmosDatabaseName": {
          "type": "string",
          "description": "Azure Cosmos Database Name"
        },
        "cosmosMasterKey": {
          "type": "string",
          "description": "Azure Cosmos Database Master Key"
        },
        "cosmosConnectionEndpoint": {
          "type": "string",
          "description": "Azure Cosmos Database Connection Endpoint"
        },
        "cosmosContainersTopicMapping": {
          "type": "string",
          "description": "Azure Cosmos Database Containers Topic Mapping"
        },
        "cosmosIdStrategy": {
          "type": "string",
          "description": "Azure Cosmos Database Id Strategy"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The connector service type info",
          "properties": {
            "connectorServiceType": {
              "description": "The connector service type.",
              "type": "string",
              "enum": [
                "AzureBlobStorageSinkConnector",
                "AzureBlobStorageSourceConnector",
                "AzureCosmosDBSinkConnector",
                "AzureCosmosDBSourceConnector",
                "AzureSynapseAnalyticsSinkConnector"
              ],
              "x-ms-enum": {
                "name": "ConnectorServiceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AzureBlobStorageSinkConnector",
                    "value": "AzureBlobStorageSinkConnector"
                  },
                  {
                    "name": "AzureBlobStorageSourceConnector",
                    "value": "AzureBlobStorageSourceConnector"
                  },
                  {
                    "name": "AzureCosmosDBSinkConnector",
                    "value": "AzureCosmosDBSinkConnector"
                  },
                  {
                    "name": "AzureCosmosDBSourceConnector",
                    "value": "AzureCosmosDBSourceConnector"
                  },
                  {
                    "name": "AzureSynapseAnalyticsSinkConnector",
                    "value": "AzureSynapseAnalyticsSinkConnector"
                  }
                ]
              }
            }
          },
          "discriminator": "connectorServiceType",
          "required": [
            "connectorServiceType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureCosmosDBSinkConnector"
    },
    "AzureCosmosDBSourceConnectorServiceInfo": {
      "type": "object",
      "description": "The authentication info when auth_type is AzureCosmosDBSourceConnector",
      "properties": {
        "cosmosDatabaseName": {
          "type": "string",
          "description": "Azure Cosmos Database Name"
        },
        "cosmosMasterKey": {
          "type": "string",
          "description": "Azure Cosmos Database Master Key"
        },
        "cosmosConnectionEndpoint": {
          "type": "string",
          "description": "Azure Cosmos Database Connection Endpoint"
        },
        "cosmosContainersTopicMapping": {
          "type": "string",
          "description": "Azure Cosmos Database Containers Topic Mapping"
        },
        "cosmosMessageKeyEnabled": {
          "type": "boolean",
          "description": "Azure Cosmos Database Message Key Enabled"
        },
        "cosmosMessageKeyField": {
          "type": "string",
          "description": "Azure Cosmos Database Message Key Field"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The connector service type info",
          "properties": {
            "connectorServiceType": {
              "description": "The connector service type.",
              "type": "string",
              "enum": [
                "AzureBlobStorageSinkConnector",
                "AzureBlobStorageSourceConnector",
                "AzureCosmosDBSinkConnector",
                "AzureCosmosDBSourceConnector",
                "AzureSynapseAnalyticsSinkConnector"
              ],
              "x-ms-enum": {
                "name": "ConnectorServiceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AzureBlobStorageSinkConnector",
                    "value": "AzureBlobStorageSinkConnector"
                  },
                  {
                    "name": "AzureBlobStorageSourceConnector",
                    "value": "AzureBlobStorageSourceConnector"
                  },
                  {
                    "name": "AzureCosmosDBSinkConnector",
                    "value": "AzureCosmosDBSinkConnector"
                  },
                  {
                    "name": "AzureCosmosDBSourceConnector",
                    "value": "AzureCosmosDBSourceConnector"
                  },
                  {
                    "name": "AzureSynapseAnalyticsSinkConnector",
                    "value": "AzureSynapseAnalyticsSinkConnector"
                  }
                ]
              }
            }
          },
          "discriminator": "connectorServiceType",
          "required": [
            "connectorServiceType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureCosmosDBSourceConnector"
    },
    "AzureSynapseAnalyticsSinkConnectorServiceInfo": {
      "type": "object",
      "description": "The authentication info when auth_type is AzureSynapseAnalyticsSinkConnector",
      "properties": {
        "synapseSqlServerName": {
          "type": "string",
          "description": "Azure Synapse Analytics SQL Server Name"
        },
        "synapseSqlUser": {
          "type": "string",
          "description": "Azure Synapse SQL login details"
        },
        "synapseSqlPassword": {
          "type": "string",
          "description": "Azure Synapse SQL login details"
        },
        "synapseSqlDatabaseName": {
          "type": "string",
          "description": "Azure Synapse Dedicated SQL Pool Database Name"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The connector service type info",
          "properties": {
            "connectorServiceType": {
              "description": "The connector service type.",
              "type": "string",
              "enum": [
                "AzureBlobStorageSinkConnector",
                "AzureBlobStorageSourceConnector",
                "AzureCosmosDBSinkConnector",
                "AzureCosmosDBSourceConnector",
                "AzureSynapseAnalyticsSinkConnector"
              ],
              "x-ms-enum": {
                "name": "ConnectorServiceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AzureBlobStorageSinkConnector",
                    "value": "AzureBlobStorageSinkConnector"
                  },
                  {
                    "name": "AzureBlobStorageSourceConnector",
                    "value": "AzureBlobStorageSourceConnector"
                  },
                  {
                    "name": "AzureCosmosDBSinkConnector",
                    "value": "AzureCosmosDBSinkConnector"
                  },
                  {
                    "name": "AzureCosmosDBSourceConnector",
                    "value": "AzureCosmosDBSourceConnector"
                  },
                  {
                    "name": "AzureSynapseAnalyticsSinkConnector",
                    "value": "AzureSynapseAnalyticsSinkConnector"
                  }
                ]
              }
            }
          },
          "discriminator": "connectorServiceType",
          "required": [
            "connectorServiceType"
          ]
        }
      ],
      "x-ms-discriminator-value": "AzureSynapseAnalyticsSinkConnector"
    },
    "ClusterByokEntity": {
      "type": "object",
      "description": "The network associated with this object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the referred resource"
        },
        "related": {
          "type": "string",
          "description": "API URL for accessing or modifying the referred object"
        },
        "resource_name": {
          "type": "string",
          "description": "CRN reference to the referred resource"
        }
      }
    },
    "ClusterConfigEntity": {
      "type": "object",
      "description": "The configuration of the Kafka cluster",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The lifecycle phase of the cluster"
        }
      }
    },
    "ClusterEnvironmentEntity": {
      "type": "object",
      "description": "The environment to which cluster belongs",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the referred resource"
        },
        "environment": {
          "type": "string",
          "description": "Environment of the referred resource"
        },
        "related": {
          "type": "string",
          "description": "API URL for accessing or modifying the referred object"
        },
        "resource_name": {
          "type": "string",
          "description": "CRN reference to the referred resource"
        }
      }
    },
    "ClusterNetworkEntity": {
      "type": "object",
      "description": "The network associated with this object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the referred resource"
        },
        "environment": {
          "type": "string",
          "description": "Environment of the referred resource"
        },
        "related": {
          "type": "string",
          "description": "API URL for accessing or modifying the referred object"
        },
        "resource_name": {
          "type": "string",
          "description": "CRN reference to the referred resource"
        }
      }
    },
    "ClusterProperties": {
      "type": "object",
      "description": "Service Connector Cluster Properties",
      "properties": {
        "metadata": {
          "description": "Metadata of the record",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "Self lookup url"
            },
            "resourceName": {
              "type": "string",
              "description": "Resource name of the record"
            },
            "createdTimestamp": {
              "type": "string",
              "description": "Created Date Time"
            },
            "updatedTimestamp": {
              "type": "string",
              "description": "Updated Date time"
            },
            "deletedTimestamp": {
              "type": "string",
              "description": "Deleted Date time"
            }
          }
        },
        "spec": {
          "description": "Specification of the cluster",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the cluster"
            },
            "availability": {
              "type": "string",
              "description": "The availability zone configuration of the cluster"
            },
            "cloud": {
              "type": "string",
              "description": "The cloud service provider"
            },
            "zone": {
              "type": "string",
              "description": "type of zone availability"
            },
            "package": {
              "description": "Stream governance configuration",
              "type": "string",
              "enum": [
                "ESSENTIALS",
                "ADVANCED"
              ],
              "x-ms-enum": {
                "name": "Package",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ESSENTIALS",
                    "value": "ESSENTIALS"
                  },
                  {
                    "name": "ADVANCED",
                    "value": "ADVANCED"
                  }
                ]
              }
            },
            "region": {
              "type": "string",
              "description": "The cloud service provider region"
            },
            "kafkaBootstrapEndpoint": {
              "type": "string",
              "description": "The bootstrap endpoint used by Kafka clients to connect to the cluster"
            },
            "httpEndpoint": {
              "type": "string",
              "description": "The cluster HTTP request URL."
            },
            "apiEndpoint": {
              "type": "string",
              "description": "The Kafka API cluster endpoint"
            },
            "config": {
              "description": "Specification of the cluster configuration",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "The lifecycle phase of the cluster"
                }
              }
            },
            "environment": {
              "description": "Specification of the cluster environment",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the referred resource"
                },
                "environment": {
                  "type": "string",
                  "description": "Environment of the referred resource"
                },
                "related": {
                  "type": "string",
                  "description": "API URL for accessing or modifying the referred object"
                },
                "resourceName": {
                  "type": "string",
                  "description": "CRN reference to the referred resource"
                }
              }
            },
            "network": {
              "description": "Specification of the cluster network",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the referred resource"
                },
                "environment": {
                  "type": "string",
                  "description": "Environment of the referred resource"
                },
                "related": {
                  "type": "string",
                  "description": "API URL for accessing or modifying the referred object"
                },
                "resourceName": {
                  "type": "string",
                  "description": "CRN reference to the referred resource"
                }
              }
            },
            "byok": {
              "description": "Specification of the cluster byok",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the referred resource"
                },
                "related": {
                  "type": "string",
                  "description": "API URL for accessing or modifying the referred object"
                },
                "resourceName": {
                  "type": "string",
                  "description": "CRN reference to the referred resource"
                }
              }
            }
          }
        },
        "status": {
          "description": "Specification of the cluster status",
          "type": "object",
          "properties": {
            "phase": {
              "type": "string",
              "description": "The lifecycle phase of the cluster"
            },
            "cku": {
              "type": "integer",
              "format": "int32",
              "description": "The number of Confluent Kafka Units"
            }
          }
        }
      }
    },
    "ClusterRecord": {
      "type": "object",
      "description": "Details of cluster record",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of cluster"
        },
        "id": {
          "type": "string",
          "description": "Id of the cluster"
        },
        "metadata": {
          "description": "Metadata of the record",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "Self lookup url"
            },
            "resource_name": {
              "type": "string",
              "description": "Resource name of the record"
            },
            "created_at": {
              "type": "string",
              "description": "Created Date Time"
            },
            "updated_at": {
              "type": "string",
              "description": "Updated Date time"
            },
            "deleted_at": {
              "type": "string",
              "description": "Deleted Date time"
            }
          }
        },
        "display_name": {
          "type": "string",
          "description": "Display name of the cluster"
        },
        "spec": {
          "description": "Specification of the cluster",
          "type": "object",
          "properties": {
            "display_name": {
              "type": "string",
              "description": "The name of the cluster"
            },
            "availability": {
              "type": "string",
              "description": "The availability zone configuration of the cluster"
            },
            "cloud": {
              "type": "string",
              "description": "The cloud service provider"
            },
            "zone": {
              "type": "string",
              "description": "type of zone availability"
            },
            "region": {
              "type": "string",
              "description": "The cloud service provider region"
            },
            "kafka_bootstrap_endpoint": {
              "type": "string",
              "description": "The bootstrap endpoint used by Kafka clients to connect to the cluster"
            },
            "http_endpoint": {
              "type": "string",
              "description": "The cluster HTTP request URL."
            },
            "api_endpoint": {
              "type": "string",
              "description": "The Kafka API cluster endpoint"
            },
            "config": {
              "description": "Specification of the cluster",
              "type": "object",
              "properties": {
                "kind": {
                  "type": "string",
                  "description": "The lifecycle phase of the cluster"
                }
              }
            },
            "environment": {
              "description": "Specification of the cluster",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the referred resource"
                },
                "environment": {
                  "type": "string",
                  "description": "Environment of the referred resource"
                },
                "related": {
                  "type": "string",
                  "description": "API URL for accessing or modifying the referred object"
                },
                "resource_name": {
                  "type": "string",
                  "description": "CRN reference to the referred resource"
                }
              }
            },
            "network": {
              "description": "Specification of the cluster",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the referred resource"
                },
                "environment": {
                  "type": "string",
                  "description": "Environment of the referred resource"
                },
                "related": {
                  "type": "string",
                  "description": "API URL for accessing or modifying the referred object"
                },
                "resource_name": {
                  "type": "string",
                  "description": "CRN reference to the referred resource"
                }
              }
            },
            "byok": {
              "description": "Specification of the cluster",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the referred resource"
                },
                "related": {
                  "type": "string",
                  "description": "API URL for accessing or modifying the referred object"
                },
                "resource_name": {
                  "type": "string",
                  "description": "CRN reference to the referred resource"
                }
              }
            }
          }
        },
        "status": {
          "description": "Specification of the cluster",
          "type": "object",
          "properties": {
            "phase": {
              "type": "string",
              "description": "The lifecycle phase of the cluster"
            },
            "cku": {
              "type": "integer",
              "format": "int32",
              "description": "The number of Confluent Kafka Units"
            }
          }
        }
      }
    },
    "ClusterSpecEntity": {
      "type": "object",
      "description": "Spec of the cluster record",
      "properties": {
        "display_name": {
          "type": "string",
          "description": "The name of the cluster"
        },
        "availability": {
          "type": "string",
          "description": "The availability zone configuration of the cluster"
        },
        "cloud": {
          "type": "string",
          "description": "The cloud service provider"
        },
        "zone": {
          "type": "string",
          "description": "type of zone availability"
        },
        "region": {
          "type": "string",
          "description": "The cloud service provider region"
        },
        "kafka_bootstrap_endpoint": {
          "type": "string",
          "description": "The bootstrap endpoint used by Kafka clients to connect to the cluster"
        },
        "http_endpoint": {
          "type": "string",
          "description": "The cluster HTTP request URL."
        },
        "api_endpoint": {
          "type": "string",
          "description": "The Kafka API cluster endpoint"
        },
        "config": {
          "description": "Specification of the cluster",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "The lifecycle phase of the cluster"
            }
          }
        },
        "environment": {
          "description": "Specification of the cluster",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID of the referred resource"
            },
            "environment": {
              "type": "string",
              "description": "Environment of the referred resource"
            },
            "related": {
              "type": "string",
              "description": "API URL for accessing or modifying the referred object"
            },
            "resource_name": {
              "type": "string",
              "description": "CRN reference to the referred resource"
            }
          }
        },
        "network": {
          "description": "Specification of the cluster",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID of the referred resource"
            },
            "environment": {
              "type": "string",
              "description": "Environment of the referred resource"
            },
            "related": {
              "type": "string",
              "description": "API URL for accessing or modifying the referred object"
            },
            "resource_name": {
              "type": "string",
              "description": "CRN reference to the referred resource"
            }
          }
        },
        "byok": {
          "description": "Specification of the cluster",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID of the referred resource"
            },
            "related": {
              "type": "string",
              "description": "API URL for accessing or modifying the referred object"
            },
            "resource_name": {
              "type": "string",
              "description": "CRN reference to the referred resource"
            }
          }
        }
      }
    },
    "ClusterStatusEntity": {
      "type": "object",
      "description": "Status of the cluster record",
      "properties": {
        "phase": {
          "type": "string",
          "description": "The lifecycle phase of the cluster"
        },
        "cku": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Confluent Kafka Units"
        }
      }
    },
    "ConfluentAgreementProperties": {
      "type": "object",
      "description": "Terms properties for Marketplace and Confluent.",
      "properties": {
        "publisher": {
          "type": "string",
          "description": "Publisher identifier string."
        },
        "product": {
          "type": "string",
          "description": "Product identifier string."
        },
        "plan": {
          "type": "string",
          "description": "Plan identifier string."
        },
        "licenseTextLink": {
          "type": "string",
          "description": "Link to HTML with Microsoft and Publisher terms."
        },
        "privacyPolicyLink": {
          "type": "string",
          "description": "Link to the privacy policy of the publisher."
        },
        "retrieveDatetime": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time in UTC of when the terms were accepted. This is empty if Accepted is false."
        },
        "signature": {
          "type": "string",
          "description": "Terms signature."
        },
        "accepted": {
          "type": "boolean",
          "description": "If any version of the terms have been accepted, otherwise false."
        }
      }
    },
    "ConfluentAgreementResource": {
      "type": "object",
      "description": "Agreement Terms definition",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM id of the resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the agreement.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the agreement.",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Represents the properties of the resource.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "publisher": {
              "type": "string",
              "description": "Publisher identifier string."
            },
            "product": {
              "type": "string",
              "description": "Product identifier string."
            },
            "plan": {
              "type": "string",
              "description": "Plan identifier string."
            },
            "licenseTextLink": {
              "type": "string",
              "description": "Link to HTML with Microsoft and Publisher terms."
            },
            "privacyPolicyLink": {
              "type": "string",
              "description": "Link to the privacy policy of the publisher."
            },
            "retrieveDatetime": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time in UTC of when the terms were accepted. This is empty if Accepted is false."
            },
            "signature": {
              "type": "string",
              "description": "Terms signature."
            },
            "accepted": {
              "type": "boolean",
              "description": "If any version of the terms have been accepted, otherwise false."
            }
          }
        }
      }
    },
    "ConfluentAgreementResourceListResponse": {
      "type": "object",
      "description": "Response of a list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConfluentAgreementResource items on this page",
          "items": {
            "type": "object",
            "description": "Agreement Terms definition",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ARM id of the resource.",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the agreement.",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the agreement.",
                "readOnly": true
              },
              "systemData": {
                "description": "Metadata pertaining to creation and last modification of the resource",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Represents the properties of the resource.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "publisher": {
                    "type": "string",
                    "description": "Publisher identifier string."
                  },
                  "product": {
                    "type": "string",
                    "description": "Product identifier string."
                  },
                  "plan": {
                    "type": "string",
                    "description": "Plan identifier string."
                  },
                  "licenseTextLink": {
                    "type": "string",
                    "description": "Link to HTML with Microsoft and Publisher terms."
                  },
                  "privacyPolicyLink": {
                    "type": "string",
                    "description": "Link to the privacy policy of the publisher."
                  },
                  "retrieveDatetime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time in UTC of when the terms were accepted. This is empty if Accepted is false."
                  },
                  "signature": {
                    "type": "string",
                    "description": "Terms signature."
                  },
                  "accepted": {
                    "type": "boolean",
                    "description": "If any version of the terms have been accepted, otherwise false."
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConfluentListMetadata": {
      "type": "object",
      "description": "Metadata of the list",
      "properties": {
        "first": {
          "type": "string",
          "description": "First page of the list"
        },
        "last": {
          "type": "string",
          "description": "Last page of the list"
        },
        "prev": {
          "type": "string",
          "description": "Previous page of the list"
        },
        "next": {
          "type": "string",
          "description": "Next page of the list"
        },
        "total_size": {
          "type": "integer",
          "format": "int32",
          "description": "Total size of the list"
        }
      }
    },
    "ConnectorClass": {
      "type": "string",
      "description": "Connector Class",
      "enum": [
        "AZUREBLOBSOURCE",
        "AZUREBLOBSINK"
      ],
      "x-ms-enum": {
        "name": "ConnectorClass",
        "modelAsString": true,
        "values": [
          {
            "name": "AZUREBLOBSOURCE",
            "value": "AZUREBLOBSOURCE"
          },
          {
            "name": "AZUREBLOBSINK",
            "value": "AZUREBLOBSINK"
          }
        ]
      }
    },
    "ConnectorInfoBase": {
      "type": "object",
      "description": "Connector Info Base properties",
      "properties": {
        "connectorType": {
          "description": "Connector Type",
          "type": "string",
          "enum": [
            "SINK",
            "SOURCE"
          ],
          "x-ms-enum": {
            "name": "ConnectorType",
            "modelAsString": true,
            "values": [
              {
                "name": "SINK",
                "value": "SINK"
              },
              {
                "name": "SOURCE",
                "value": "SOURCE"
              }
            ]
          }
        },
        "connectorClass": {
          "description": "Connector Class",
          "type": "string",
          "enum": [
            "AZUREBLOBSOURCE",
            "AZUREBLOBSINK"
          ],
          "x-ms-enum": {
            "name": "ConnectorClass",
            "modelAsString": true,
            "values": [
              {
                "name": "AZUREBLOBSOURCE",
                "value": "AZUREBLOBSOURCE"
              },
              {
                "name": "AZUREBLOBSINK",
                "value": "AZUREBLOBSINK"
              }
            ]
          }
        },
        "connectorName": {
          "type": "string",
          "description": "Connector Name"
        },
        "connectorId": {
          "type": "string",
          "description": "Connector Id"
        },
        "connectorState": {
          "description": "Connector Status",
          "type": "string",
          "enum": [
            "PROVISIONING",
            "RUNNING",
            "PAUSED",
            "FAILED"
          ],
          "x-ms-enum": {
            "name": "ConnectorStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "PROVISIONING",
                "value": "PROVISIONING"
              },
              {
                "name": "RUNNING",
                "value": "RUNNING"
              },
              {
                "name": "PAUSED",
                "value": "PAUSED"
              },
              {
                "name": "FAILED",
                "value": "FAILED"
              }
            ]
          }
        }
      }
    },
    "ConnectorResource": {
      "type": "object",
      "description": "Details of connector record",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The properties of the Connector",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "connectorBasicInfo": {
              "description": "Connector Info Base",
              "type": "object",
              "properties": {
                "connectorType": {
                  "description": "Connector Type",
                  "type": "string",
                  "enum": [
                    "SINK",
                    "SOURCE"
                  ],
                  "x-ms-enum": {
                    "name": "ConnectorType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "SINK",
                        "value": "SINK"
                      },
                      {
                        "name": "SOURCE",
                        "value": "SOURCE"
                      }
                    ]
                  }
                },
                "connectorClass": {
                  "description": "Connector Class",
                  "type": "string",
                  "enum": [
                    "AZUREBLOBSOURCE",
                    "AZUREBLOBSINK"
                  ],
                  "x-ms-enum": {
                    "name": "ConnectorClass",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "AZUREBLOBSOURCE",
                        "value": "AZUREBLOBSOURCE"
                      },
                      {
                        "name": "AZUREBLOBSINK",
                        "value": "AZUREBLOBSINK"
                      }
                    ]
                  }
                },
                "connectorName": {
                  "type": "string",
                  "description": "Connector Name"
                },
                "connectorId": {
                  "type": "string",
                  "description": "Connector Id"
                },
                "connectorState": {
                  "description": "Connector Status",
                  "type": "string",
                  "enum": [
                    "PROVISIONING",
                    "RUNNING",
                    "PAUSED",
                    "FAILED"
                  ],
                  "x-ms-enum": {
                    "name": "ConnectorStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "PROVISIONING",
                        "value": "PROVISIONING"
                      },
                      {
                        "name": "RUNNING",
                        "value": "RUNNING"
                      },
                      {
                        "name": "PAUSED",
                        "value": "PAUSED"
                      },
                      {
                        "name": "FAILED",
                        "value": "FAILED"
                      }
                    ]
                  }
                }
              }
            },
            "connectorServiceTypeInfo": {
              "description": "Connector Service type info base properties.",
              "type": "object",
              "properties": {
                "connectorServiceType": {
                  "description": "The connector service type.",
                  "type": "string",
                  "enum": [
                    "AzureBlobStorageSinkConnector",
                    "AzureBlobStorageSourceConnector",
                    "AzureCosmosDBSinkConnector",
                    "AzureCosmosDBSourceConnector",
                    "AzureSynapseAnalyticsSinkConnector"
                  ],
                  "x-ms-enum": {
                    "name": "ConnectorServiceType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "AzureBlobStorageSinkConnector",
                        "value": "AzureBlobStorageSinkConnector"
                      },
                      {
                        "name": "AzureBlobStorageSourceConnector",
                        "value": "AzureBlobStorageSourceConnector"
                      },
                      {
                        "name": "AzureCosmosDBSinkConnector",
                        "value": "AzureCosmosDBSinkConnector"
                      },
                      {
                        "name": "AzureCosmosDBSourceConnector",
                        "value": "AzureCosmosDBSourceConnector"
                      },
                      {
                        "name": "AzureSynapseAnalyticsSinkConnector",
                        "value": "AzureSynapseAnalyticsSinkConnector"
                      }
                    ]
                  }
                }
              },
              "discriminator": "connectorServiceType",
              "required": [
                "connectorServiceType"
              ]
            },
            "partnerConnectorInfo": {
              "description": "The connection information consumed by applications.",
              "type": "object",
              "properties": {
                "partnerConnectorType": {
                  "description": "The partner connector type.",
                  "type": "string",
                  "enum": [
                    "KafkaAzureBlobStorageSource",
                    "KafkaAzureBlobStorageSink",
                    "KafkaAzureCosmosDBSource",
                    "KafkaAzureCosmosDBSink",
                    "KafkaAzureSynapseAnalyticsSink"
                  ],
                  "x-ms-enum": {
                    "name": "PartnerConnectorType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "KafkaAzureBlobStorageSource",
                        "value": "KafkaAzureBlobStorageSource"
                      },
                      {
                        "name": "KafkaAzureBlobStorageSink",
                        "value": "KafkaAzureBlobStorageSink"
                      },
                      {
                        "name": "KafkaAzureCosmosDBSource",
                        "value": "KafkaAzureCosmosDBSource"
                      },
                      {
                        "name": "KafkaAzureCosmosDBSink",
                        "value": "KafkaAzureCosmosDBSink"
                      },
                      {
                        "name": "KafkaAzureSynapseAnalyticsSink",
                        "value": "KafkaAzureSynapseAnalyticsSink"
                      }
                    ]
                  }
                }
              },
              "discriminator": "partnerConnectorType",
              "required": [
                "partnerConnectorType"
              ]
            }
          }
        }
      },
      "required": [
        "properties"
      ]
    },
    "ConnectorResourceProperties": {
      "type": "object",
      "description": "The resource properties of the Connector",
      "properties": {
        "connectorBasicInfo": {
          "description": "Connector Info Base",
          "type": "object",
          "properties": {
            "connectorType": {
              "description": "Connector Type",
              "type": "string",
              "enum": [
                "SINK",
                "SOURCE"
              ],
              "x-ms-enum": {
                "name": "ConnectorType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "SINK",
                    "value": "SINK"
                  },
                  {
                    "name": "SOURCE",
                    "value": "SOURCE"
                  }
                ]
              }
            },
            "connectorClass": {
              "description": "Connector Class",
              "type": "string",
              "enum": [
                "AZUREBLOBSOURCE",
                "AZUREBLOBSINK"
              ],
              "x-ms-enum": {
                "name": "ConnectorClass",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AZUREBLOBSOURCE",
                    "value": "AZUREBLOBSOURCE"
                  },
                  {
                    "name": "AZUREBLOBSINK",
                    "value": "AZUREBLOBSINK"
                  }
                ]
              }
            },
            "connectorName": {
              "type": "string",
              "description": "Connector Name"
            },
            "connectorId": {
              "type": "string",
              "description": "Connector Id"
            },
            "connectorState": {
              "description": "Connector Status",
              "type": "string",
              "enum": [
                "PROVISIONING",
                "RUNNING",
                "PAUSED",
                "FAILED"
              ],
              "x-ms-enum": {
                "name": "ConnectorStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "PROVISIONING",
                    "value": "PROVISIONING"
                  },
                  {
                    "name": "RUNNING",
                    "value": "RUNNING"
                  },
                  {
                    "name": "PAUSED",
                    "value": "PAUSED"
                  },
                  {
                    "name": "FAILED",
                    "value": "FAILED"
                  }
                ]
              }
            }
          }
        },
        "connectorServiceTypeInfo": {
          "description": "Connector Service type info base properties.",
          "type": "object",
          "properties": {
            "connectorServiceType": {
              "description": "The connector service type.",
              "type": "string",
              "enum": [
                "AzureBlobStorageSinkConnector",
                "AzureBlobStorageSourceConnector",
                "AzureCosmosDBSinkConnector",
                "AzureCosmosDBSourceConnector",
                "AzureSynapseAnalyticsSinkConnector"
              ],
              "x-ms-enum": {
                "name": "ConnectorServiceType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AzureBlobStorageSinkConnector",
                    "value": "AzureBlobStorageSinkConnector"
                  },
                  {
                    "name": "AzureBlobStorageSourceConnector",
                    "value": "AzureBlobStorageSourceConnector"
                  },
                  {
                    "name": "AzureCosmosDBSinkConnector",
                    "value": "AzureCosmosDBSinkConnector"
                  },
                  {
                    "name": "AzureCosmosDBSourceConnector",
                    "value": "AzureCosmosDBSourceConnector"
                  },
                  {
                    "name": "AzureSynapseAnalyticsSinkConnector",
                    "value": "AzureSynapseAnalyticsSinkConnector"
                  }
                ]
              }
            }
          },
          "discriminator": "connectorServiceType",
          "required": [
            "connectorServiceType"
          ]
        },
        "partnerConnectorInfo": {
          "description": "The connection information consumed by applications.",
          "type": "object",
          "properties": {
            "partnerConnectorType": {
              "description": "The partner connector type.",
              "type": "string",
              "enum": [
                "KafkaAzureBlobStorageSource",
                "KafkaAzureBlobStorageSink",
                "KafkaAzureCosmosDBSource",
                "KafkaAzureCosmosDBSink",
                "KafkaAzureSynapseAnalyticsSink"
              ],
              "x-ms-enum": {
                "name": "PartnerConnectorType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "KafkaAzureBlobStorageSource",
                    "value": "KafkaAzureBlobStorageSource"
                  },
                  {
                    "name": "KafkaAzureBlobStorageSink",
                    "value": "KafkaAzureBlobStorageSink"
                  },
                  {
                    "name": "KafkaAzureCosmosDBSource",
                    "value": "KafkaAzureCosmosDBSource"
                  },
                  {
                    "name": "KafkaAzureCosmosDBSink",
                    "value": "KafkaAzureCosmosDBSink"
                  },
                  {
                    "name": "KafkaAzureSynapseAnalyticsSink",
                    "value": "KafkaAzureSynapseAnalyticsSink"
                  }
                ]
              }
            }
          },
          "discriminator": "partnerConnectorType",
          "required": [
            "partnerConnectorType"
          ]
        }
      }
    },
    "ConnectorServiceType": {
      "type": "string",
      "description": "The connector service type.",
      "enum": [
        "AzureBlobStorageSinkConnector",
        "AzureBlobStorageSourceConnector",
        "AzureCosmosDBSinkConnector",
        "AzureCosmosDBSourceConnector",
        "AzureSynapseAnalyticsSinkConnector"
      ],
      "x-ms-enum": {
        "name": "ConnectorServiceType",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureBlobStorageSinkConnector",
            "value": "AzureBlobStorageSinkConnector"
          },
          {
            "name": "AzureBlobStorageSourceConnector",
            "value": "AzureBlobStorageSourceConnector"
          },
          {
            "name": "AzureCosmosDBSinkConnector",
            "value": "AzureCosmosDBSinkConnector"
          },
          {
            "name": "AzureCosmosDBSourceConnector",
            "value": "AzureCosmosDBSourceConnector"
          },
          {
            "name": "AzureSynapseAnalyticsSinkConnector",
            "value": "AzureSynapseAnalyticsSinkConnector"
          }
        ]
      }
    },
    "ConnectorServiceTypeInfoBase": {
      "type": "object",
      "description": "The connector service type info",
      "properties": {
        "connectorServiceType": {
          "description": "The connector service type.",
          "type": "string",
          "enum": [
            "AzureBlobStorageSinkConnector",
            "AzureBlobStorageSourceConnector",
            "AzureCosmosDBSinkConnector",
            "AzureCosmosDBSourceConnector",
            "AzureSynapseAnalyticsSinkConnector"
          ],
          "x-ms-enum": {
            "name": "ConnectorServiceType",
            "modelAsString": true,
            "values": [
              {
                "name": "AzureBlobStorageSinkConnector",
                "value": "AzureBlobStorageSinkConnector"
              },
              {
                "name": "AzureBlobStorageSourceConnector",
                "value": "AzureBlobStorageSourceConnector"
              },
              {
                "name": "AzureCosmosDBSinkConnector",
                "value": "AzureCosmosDBSinkConnector"
              },
              {
                "name": "AzureCosmosDBSourceConnector",
                "value": "AzureCosmosDBSourceConnector"
              },
              {
                "name": "AzureSynapseAnalyticsSinkConnector",
                "value": "AzureSynapseAnalyticsSinkConnector"
              }
            ]
          }
        }
      },
      "discriminator": "connectorServiceType",
      "required": [
        "connectorServiceType"
      ]
    },
    "ConnectorStatus": {
      "type": "string",
      "description": "Connector Status",
      "enum": [
        "PROVISIONING",
        "RUNNING",
        "PAUSED",
        "FAILED"
      ],
      "x-ms-enum": {
        "name": "ConnectorStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "PROVISIONING",
            "value": "PROVISIONING"
          },
          {
            "name": "RUNNING",
            "value": "RUNNING"
          },
          {
            "name": "PAUSED",
            "value": "PAUSED"
          },
          {
            "name": "FAILED",
            "value": "FAILED"
          }
        ]
      }
    },
    "ConnectorType": {
      "type": "string",
      "description": "Connector Type",
      "enum": [
        "SINK",
        "SOURCE"
      ],
      "x-ms-enum": {
        "name": "ConnectorType",
        "modelAsString": true,
        "values": [
          {
            "name": "SINK",
            "value": "SINK"
          },
          {
            "name": "SOURCE",
            "value": "SOURCE"
          }
        ]
      }
    },
    "CreateAPIKeyModel": {
      "type": "object",
      "description": "Create API Key model",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the API Key"
        },
        "description": {
          "type": "string",
          "description": "Description of the API Key"
        }
      }
    },
    "DataFormatType": {
      "type": "string",
      "description": "Data Format Type",
      "enum": [
        "AVRO",
        "JSON",
        "STRING",
        "BYTES",
        "PROTOBUF"
      ],
      "x-ms-enum": {
        "name": "DataFormatType",
        "modelAsString": true,
        "values": [
          {
            "name": "AVRO",
            "value": "AVRO"
          },
          {
            "name": "JSON",
            "value": "JSON"
          },
          {
            "name": "STRING",
            "value": "STRING"
          },
          {
            "name": "BYTES",
            "value": "BYTES"
          },
          {
            "name": "PROTOBUF",
            "value": "PROTOBUF"
          }
        ]
      }
    },
    "EnvironmentProperties": {
      "type": "object",
      "description": "Environment resource property",
      "properties": {
        "streamGovernanceConfig": {
          "description": "Stream governance configuration",
          "type": "object",
          "properties": {
            "package": {
              "description": "Stream governance configuration",
              "type": "string",
              "enum": [
                "ESSENTIALS",
                "ADVANCED"
              ],
              "x-ms-enum": {
                "name": "Package",
                "modelAsString": true,
                "values": [
                  {
                    "name": "ESSENTIALS",
                    "value": "ESSENTIALS"
                  },
                  {
                    "name": "ADVANCED",
                    "value": "ADVANCED"
                  }
                ]
              }
            }
          }
        },
        "metadata": {
          "description": "Metadata of the record",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "Self lookup url"
            },
            "resourceName": {
              "type": "string",
              "description": "Resource name of the record"
            },
            "createdTimestamp": {
              "type": "string",
              "description": "Created Date Time"
            },
            "updatedTimestamp": {
              "type": "string",
              "description": "Updated Date time"
            },
            "deletedTimestamp": {
              "type": "string",
              "description": "Deleted Date time"
            }
          }
        }
      }
    },
    "EnvironmentRecord": {
      "type": "object",
      "description": "Details about environment name, metadata and environment id of an environment",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of environment"
        },
        "id": {
          "type": "string",
          "description": "Id of the environment"
        },
        "metadata": {
          "description": "Metadata of the record",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "Self lookup url"
            },
            "resource_name": {
              "type": "string",
              "description": "Resource name of the record"
            },
            "created_at": {
              "type": "string",
              "description": "Created Date Time"
            },
            "updated_at": {
              "type": "string",
              "description": "Updated Date time"
            },
            "deleted_at": {
              "type": "string",
              "description": "Deleted Date time"
            }
          }
        },
        "display_name": {
          "type": "string",
          "description": "Display name of the user"
        }
      }
    },
    "ErrorResponseBody": {
      "type": "object",
      "description": "Response body of Error",
      "properties": {
        "code": {
          "type": "string",
          "description": "Error code",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "Error message",
          "readOnly": true
        },
        "target": {
          "type": "string",
          "description": "Error target",
          "readOnly": true
        },
        "details": {
          "type": "array",
          "description": "Error detail",
          "items": {
            "$ref": "#/definitions/ErrorResponseBody"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "GetEnvironmentsResponse": {
      "type": "object",
      "description": "Result of GET request to list Confluent operations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SCEnvironmentRecord items on this page",
          "items": {
            "type": "object",
            "description": "Details about environment name, metadata and environment id of an environment",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "kind": {
                "type": "string",
                "description": "Type of environment"
              },
              "properties": {
                "description": "Environment properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "streamGovernanceConfig": {
                    "description": "Stream governance configuration",
                    "type": "object",
                    "properties": {
                      "package": {
                        "description": "Stream governance configuration",
                        "type": "string",
                        "enum": [
                          "ESSENTIALS",
                          "ADVANCED"
                        ],
                        "x-ms-enum": {
                          "name": "Package",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ESSENTIALS",
                              "value": "ESSENTIALS"
                            },
                            {
                              "name": "ADVANCED",
                              "value": "ADVANCED"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "metadata": {
                    "description": "Metadata of the record",
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "description": "Self lookup url"
                      },
                      "resourceName": {
                        "type": "string",
                        "description": "Resource name of the record"
                      },
                      "createdTimestamp": {
                        "type": "string",
                        "description": "Created Date Time"
                      },
                      "updatedTimestamp": {
                        "type": "string",
                        "description": "Updated Date time"
                      },
                      "deletedTimestamp": {
                        "type": "string",
                        "description": "Deleted Date time"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InvitationRecord": {
      "type": "object",
      "description": "Record of the invitation",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of account"
        },
        "id": {
          "type": "string",
          "description": "Id of the invitation"
        },
        "metadata": {
          "description": "Metadata of the record",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "Self lookup url"
            },
            "resource_name": {
              "type": "string",
              "description": "Resource name of the record"
            },
            "created_at": {
              "type": "string",
              "description": "Created Date Time"
            },
            "updated_at": {
              "type": "string",
              "description": "Updated Date time"
            },
            "deleted_at": {
              "type": "string",
              "description": "Deleted Date time"
            }
          }
        },
        "email": {
          "type": "string",
          "description": "Email of the user"
        },
        "auth_type": {
          "type": "string",
          "description": "Auth type of the user"
        },
        "status": {
          "type": "string",
          "description": "Status of the invitation"
        },
        "accepted_at": {
          "type": "string",
          "description": "Accepted date time of the invitation"
        },
        "expires_at": {
          "type": "string",
          "description": "Expiration date time of the invitation"
        }
      }
    },
    "KafkaAzureBlobStorageSinkConnectorInfo": {
      "type": "object",
      "description": "The partner connector type is KafkaAzureBlobStorageSink",
      "properties": {
        "authType": {
          "description": "Kafka Auth Type",
          "type": "string",
          "enum": [
            "SERVICE_ACCOUNT",
            "KAFKA_API_KEY"
          ],
          "x-ms-enum": {
            "name": "AuthType",
            "modelAsString": true,
            "values": [
              {
                "name": "SERVICE_ACCOUNT",
                "value": "SERVICE_ACCOUNT"
              },
              {
                "name": "KAFKA_API_KEY",
                "value": "KAFKA_API_KEY"
              }
            ]
          }
        },
        "inputFormat": {
          "description": "Kafka Input Data Format Type",
          "type": "string",
          "enum": [
            "AVRO",
            "JSON",
            "STRING",
            "BYTES",
            "PROTOBUF"
          ],
          "x-ms-enum": {
            "name": "DataFormatType",
            "modelAsString": true,
            "values": [
              {
                "name": "AVRO",
                "value": "AVRO"
              },
              {
                "name": "JSON",
                "value": "JSON"
              },
              {
                "name": "STRING",
                "value": "STRING"
              },
              {
                "name": "BYTES",
                "value": "BYTES"
              },
              {
                "name": "PROTOBUF",
                "value": "PROTOBUF"
              }
            ]
          }
        },
        "outputFormat": {
          "description": "Kafka Output Data Format Type",
          "type": "string",
          "enum": [
            "AVRO",
            "JSON",
            "STRING",
            "BYTES",
            "PROTOBUF"
          ],
          "x-ms-enum": {
            "name": "DataFormatType",
            "modelAsString": true,
            "values": [
              {
                "name": "AVRO",
                "value": "AVRO"
              },
              {
                "name": "JSON",
                "value": "JSON"
              },
              {
                "name": "STRING",
                "value": "STRING"
              },
              {
                "name": "BYTES",
                "value": "BYTES"
              },
              {
                "name": "PROTOBUF",
                "value": "PROTOBUF"
              }
            ]
          }
        },
        "apiKey": {
          "type": "string",
          "description": "Kafka API Key"
        },
        "apiSecret": {
          "type": "string",
          "description": "Kafka API Key Secret"
        },
        "serviceAccountId": {
          "type": "string",
          "description": "Kafka Service Account Id"
        },
        "topics": {
          "type": "array",
          "description": "Kafka topics list",
          "items": {
            "type": "string"
          }
        },
        "topicsDir": {
          "type": "string",
          "description": "Kafka topics directory"
        },
        "flushSize": {
          "type": "string",
          "description": "Flush size"
        },
        "maxTasks": {
          "type": "string",
          "description": "Maximum Tasks"
        },
        "timeInterval": {
          "type": "string",
          "description": "Time Interval"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The partner info base",
          "properties": {
            "partnerConnectorType": {
              "description": "The partner connector type.",
              "type": "string",
              "enum": [
                "KafkaAzureBlobStorageSource",
                "KafkaAzureBlobStorageSink",
                "KafkaAzureCosmosDBSource",
                "KafkaAzureCosmosDBSink",
                "KafkaAzureSynapseAnalyticsSink"
              ],
              "x-ms-enum": {
                "name": "PartnerConnectorType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "KafkaAzureBlobStorageSource",
                    "value": "KafkaAzureBlobStorageSource"
                  },
                  {
                    "name": "KafkaAzureBlobStorageSink",
                    "value": "KafkaAzureBlobStorageSink"
                  },
                  {
                    "name": "KafkaAzureCosmosDBSource",
                    "value": "KafkaAzureCosmosDBSource"
                  },
                  {
                    "name": "KafkaAzureCosmosDBSink",
                    "value": "KafkaAzureCosmosDBSink"
                  },
                  {
                    "name": "KafkaAzureSynapseAnalyticsSink",
                    "value": "KafkaAzureSynapseAnalyticsSink"
                  }
                ]
              }
            }
          },
          "discriminator": "partnerConnectorType",
          "required": [
            "partnerConnectorType"
          ]
        }
      ],
      "x-ms-discriminator-value": "KafkaAzureBlobStorageSink"
    },
    "KafkaAzureBlobStorageSourceConnectorInfo": {
      "type": "object",
      "description": "The partner connector type is KafkaAzureBlobStorageSource",
      "properties": {
        "authType": {
          "description": "Kafka Auth Type",
          "type": "string",
          "enum": [
            "SERVICE_ACCOUNT",
            "KAFKA_API_KEY"
          ],
          "x-ms-enum": {
            "name": "AuthType",
            "modelAsString": true,
            "values": [
              {
                "name": "SERVICE_ACCOUNT",
                "value": "SERVICE_ACCOUNT"
              },
              {
                "name": "KAFKA_API_KEY",
                "value": "KAFKA_API_KEY"
              }
            ]
          }
        },
        "inputFormat": {
          "description": "Kafka Input Data Format Type",
          "type": "string",
          "enum": [
            "AVRO",
            "JSON",
            "STRING",
            "BYTES",
            "PROTOBUF"
          ],
          "x-ms-enum": {
            "name": "DataFormatType",
            "modelAsString": true,
            "values": [
              {
                "name": "AVRO",
                "value": "AVRO"
              },
              {
                "name": "JSON",
                "value": "JSON"
              },
              {
                "name": "STRING",
                "value": "STRING"
              },
              {
                "name": "BYTES",
                "value": "BYTES"
              },
              {
                "name": "PROTOBUF",
                "value": "PROTOBUF"
              }
            ]
          }
        },
        "outputFormat": {
          "description": "Kafka Output Data Format Type",
          "type": "string",
          "enum": [
            "AVRO",
            "JSON",
            "STRING",
            "BYTES",
            "PROTOBUF"
          ],
          "x-ms-enum": {
            "name": "DataFormatType",
            "modelAsString": true,
            "values": [
              {
                "name": "AVRO",
                "value": "AVRO"
              },
              {
                "name": "JSON",
                "value": "JSON"
              },
              {
                "name": "STRING",
                "value": "STRING"
              },
              {
                "name": "BYTES",
                "value": "BYTES"
              },
              {
                "name": "PROTOBUF",
                "value": "PROTOBUF"
              }
            ]
          }
        },
        "apiKey": {
          "type": "string",
          "description": "Kafka API Key"
        },
        "apiSecret": {
          "type": "string",
          "format": "password",
          "description": "Kafka API Secret",
          "x-ms-secret": true
        },
        "serviceAccountId": {
          "type": "string",
          "description": "Kafka Service Account Id"
        },
        "topicRegex": {
          "type": "string",
          "description": "Kafka topics Regex pattern"
        },
        "topicsDir": {
          "type": "string",
          "description": "Kafka topics directory"
        },
        "maxTasks": {
          "type": "string",
          "description": "Maximum Tasks"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The partner info base",
          "properties": {
            "partnerConnectorType": {
              "description": "The partner connector type.",
              "type": "string",
              "enum": [
                "KafkaAzureBlobStorageSource",
                "KafkaAzureBlobStorageSink",
                "KafkaAzureCosmosDBSource",
                "KafkaAzureCosmosDBSink",
                "KafkaAzureSynapseAnalyticsSink"
              ],
              "x-ms-enum": {
                "name": "PartnerConnectorType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "KafkaAzureBlobStorageSource",
                    "value": "KafkaAzureBlobStorageSource"
                  },
                  {
                    "name": "KafkaAzureBlobStorageSink",
                    "value": "KafkaAzureBlobStorageSink"
                  },
                  {
                    "name": "KafkaAzureCosmosDBSource",
                    "value": "KafkaAzureCosmosDBSource"
                  },
                  {
                    "name": "KafkaAzureCosmosDBSink",
                    "value": "KafkaAzureCosmosDBSink"
                  },
                  {
                    "name": "KafkaAzureSynapseAnalyticsSink",
                    "value": "KafkaAzureSynapseAnalyticsSink"
                  }
                ]
              }
            }
          },
          "discriminator": "partnerConnectorType",
          "required": [
            "partnerConnectorType"
          ]
        }
      ],
      "x-ms-discriminator-value": "KafkaAzureBlobStorageSource"
    },
    "KafkaAzureCosmosDBSinkConnectorInfo": {
      "type": "object",
      "description": "The partner connector type is KafkaAzureCosmosDBSink",
      "properties": {
        "authType": {
          "description": "Kafka Auth Type",
          "type": "string",
          "enum": [
            "SERVICE_ACCOUNT",
            "KAFKA_API_KEY"
          ],
          "x-ms-enum": {
            "name": "AuthType",
            "modelAsString": true,
            "values": [
              {
                "name": "SERVICE_ACCOUNT",
                "value": "SERVICE_ACCOUNT"
              },
              {
                "name": "KAFKA_API_KEY",
                "value": "KAFKA_API_KEY"
              }
            ]
          }
        },
        "inputFormat": {
          "description": "Kafka Input Data Format Type",
          "type": "string",
          "enum": [
            "AVRO",
            "JSON",
            "STRING",
            "BYTES",
            "PROTOBUF"
          ],
          "x-ms-enum": {
            "name": "DataFormatType",
            "modelAsString": true,
            "values": [
              {
                "name": "AVRO",
                "value": "AVRO"
              },
              {
                "name": "JSON",
                "value": "JSON"
              },
              {
                "name": "STRING",
                "value": "STRING"
              },
              {
                "name": "BYTES",
                "value": "BYTES"
              },
              {
                "name": "PROTOBUF",
                "value": "PROTOBUF"
              }
            ]
          }
        },
        "outputFormat": {
          "description": "Kafka Output Data Format Type",
          "type": "string",
          "enum": [
            "AVRO",
            "JSON",
            "STRING",
            "BYTES",
            "PROTOBUF"
          ],
          "x-ms-enum": {
            "name": "DataFormatType",
            "modelAsString": true,
            "values": [
              {
                "name": "AVRO",
                "value": "AVRO"
              },
              {
                "name": "JSON",
                "value": "JSON"
              },
              {
                "name": "STRING",
                "value": "STRING"
              },
              {
                "name": "BYTES",
                "value": "BYTES"
              },
              {
                "name": "PROTOBUF",
                "value": "PROTOBUF"
              }
            ]
          }
        },
        "apiKey": {
          "type": "string",
          "description": "Kafka API Key"
        },
        "apiSecret": {
          "type": "string",
          "description": "Kafka API Key Secret"
        },
        "serviceAccountId": {
          "type": "string",
          "description": "Kafka Service Account Id"
        },
        "topics": {
          "type": "array",
          "description": "Kafka topics list",
          "items": {
            "type": "string"
          }
        },
        "topicsDir": {
          "type": "string",
          "description": "Kafka topics directory"
        },
        "flushSize": {
          "type": "string",
          "description": "Flush size"
        },
        "maxTasks": {
          "type": "string",
          "description": "Maximum Tasks"
        },
        "timeInterval": {
          "type": "string",
          "description": "Time Interval"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The partner info base",
          "properties": {
            "partnerConnectorType": {
              "description": "The partner connector type.",
              "type": "string",
              "enum": [
                "KafkaAzureBlobStorageSource",
                "KafkaAzureBlobStorageSink",
                "KafkaAzureCosmosDBSource",
                "KafkaAzureCosmosDBSink",
                "KafkaAzureSynapseAnalyticsSink"
              ],
              "x-ms-enum": {
                "name": "PartnerConnectorType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "KafkaAzureBlobStorageSource",
                    "value": "KafkaAzureBlobStorageSource"
                  },
                  {
                    "name": "KafkaAzureBlobStorageSink",
                    "value": "KafkaAzureBlobStorageSink"
                  },
                  {
                    "name": "KafkaAzureCosmosDBSource",
                    "value": "KafkaAzureCosmosDBSource"
                  },
                  {
                    "name": "KafkaAzureCosmosDBSink",
                    "value": "KafkaAzureCosmosDBSink"
                  },
                  {
                    "name": "KafkaAzureSynapseAnalyticsSink",
                    "value": "KafkaAzureSynapseAnalyticsSink"
                  }
                ]
              }
            }
          },
          "discriminator": "partnerConnectorType",
          "required": [
            "partnerConnectorType"
          ]
        }
      ],
      "x-ms-discriminator-value": "KafkaAzureCosmosDBSink"
    },
    "KafkaAzureCosmosDBSourceConnectorInfo": {
      "type": "object",
      "description": "The partner connector type is KafkaAzureCosmosDBSource",
      "properties": {
        "authType": {
          "description": "Kafka Auth Type",
          "type": "string",
          "enum": [
            "SERVICE_ACCOUNT",
            "KAFKA_API_KEY"
          ],
          "x-ms-enum": {
            "name": "AuthType",
            "modelAsString": true,
            "values": [
              {
                "name": "SERVICE_ACCOUNT",
                "value": "SERVICE_ACCOUNT"
              },
              {
                "name": "KAFKA_API_KEY",
                "value": "KAFKA_API_KEY"
              }
            ]
          }
        },
        "inputFormat": {
          "description": "Kafka Input Data Format Type",
          "type": "string",
          "enum": [
            "AVRO",
            "JSON",
            "STRING",
            "BYTES",
            "PROTOBUF"
          ],
          "x-ms-enum": {
            "name": "DataFormatType",
            "modelAsString": true,
            "values": [
              {
                "name": "AVRO",
                "value": "AVRO"
              },
              {
                "name": "JSON",
                "value": "JSON"
              },
              {
                "name": "STRING",
                "value": "STRING"
              },
              {
                "name": "BYTES",
                "value": "BYTES"
              },
              {
                "name": "PROTOBUF",
                "value": "PROTOBUF"
              }
            ]
          }
        },
        "outputFormat": {
          "description": "Kafka Output Data Format Type",
          "type": "string",
          "enum": [
            "AVRO",
            "JSON",
            "STRING",
            "BYTES",
            "PROTOBUF"
          ],
          "x-ms-enum": {
            "name": "DataFormatType",
            "modelAsString": true,
            "values": [
              {
                "name": "AVRO",
                "value": "AVRO"
              },
              {
                "name": "JSON",
                "value": "JSON"
              },
              {
                "name": "STRING",
                "value": "STRING"
              },
              {
                "name": "BYTES",
                "value": "BYTES"
              },
              {
                "name": "PROTOBUF",
                "value": "PROTOBUF"
              }
            ]
          }
        },
        "apiKey": {
          "type": "string",
          "description": "Kafka API Key"
        },
        "apiSecret": {
          "type": "string",
          "format": "password",
          "description": "Kafka API Secret",
          "x-ms-secret": true
        },
        "serviceAccountId": {
          "type": "string",
          "description": "Kafka Service Account Id"
        },
        "topicRegex": {
          "type": "string",
          "description": "Kafka topics Regex pattern"
        },
        "topicsDir": {
          "type": "string",
          "description": "Kafka topics directory"
        },
        "maxTasks": {
          "type": "string",
          "description": "Maximum Tasks"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The partner info base",
          "properties": {
            "partnerConnectorType": {
              "description": "The partner connector type.",
              "type": "string",
              "enum": [
                "KafkaAzureBlobStorageSource",
                "KafkaAzureBlobStorageSink",
                "KafkaAzureCosmosDBSource",
                "KafkaAzureCosmosDBSink",
                "KafkaAzureSynapseAnalyticsSink"
              ],
              "x-ms-enum": {
                "name": "PartnerConnectorType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "KafkaAzureBlobStorageSource",
                    "value": "KafkaAzureBlobStorageSource"
                  },
                  {
                    "name": "KafkaAzureBlobStorageSink",
                    "value": "KafkaAzureBlobStorageSink"
                  },
                  {
                    "name": "KafkaAzureCosmosDBSource",
                    "value": "KafkaAzureCosmosDBSource"
                  },
                  {
                    "name": "KafkaAzureCosmosDBSink",
                    "value": "KafkaAzureCosmosDBSink"
                  },
                  {
                    "name": "KafkaAzureSynapseAnalyticsSink",
                    "value": "KafkaAzureSynapseAnalyticsSink"
                  }
                ]
              }
            }
          },
          "discriminator": "partnerConnectorType",
          "required": [
            "partnerConnectorType"
          ]
        }
      ],
      "x-ms-discriminator-value": "KafkaAzureCosmosDBSource"
    },
    "KafkaAzureSynapseAnalyticsSinkConnectorInfo": {
      "type": "object",
      "description": "The partner connector type is KafkaAzureSynapseAnalyticsSink",
      "properties": {
        "authType": {
          "description": "Kafka Auth Type",
          "type": "string",
          "enum": [
            "SERVICE_ACCOUNT",
            "KAFKA_API_KEY"
          ],
          "x-ms-enum": {
            "name": "AuthType",
            "modelAsString": true,
            "values": [
              {
                "name": "SERVICE_ACCOUNT",
                "value": "SERVICE_ACCOUNT"
              },
              {
                "name": "KAFKA_API_KEY",
                "value": "KAFKA_API_KEY"
              }
            ]
          }
        },
        "inputFormat": {
          "description": "Kafka Input Data Format Type",
          "type": "string",
          "enum": [
            "AVRO",
            "JSON",
            "STRING",
            "BYTES",
            "PROTOBUF"
          ],
          "x-ms-enum": {
            "name": "DataFormatType",
            "modelAsString": true,
            "values": [
              {
                "name": "AVRO",
                "value": "AVRO"
              },
              {
                "name": "JSON",
                "value": "JSON"
              },
              {
                "name": "STRING",
                "value": "STRING"
              },
              {
                "name": "BYTES",
                "value": "BYTES"
              },
              {
                "name": "PROTOBUF",
                "value": "PROTOBUF"
              }
            ]
          }
        },
        "outputFormat": {
          "description": "Kafka Output Data Format Type",
          "type": "string",
          "enum": [
            "AVRO",
            "JSON",
            "STRING",
            "BYTES",
            "PROTOBUF"
          ],
          "x-ms-enum": {
            "name": "DataFormatType",
            "modelAsString": true,
            "values": [
              {
                "name": "AVRO",
                "value": "AVRO"
              },
              {
                "name": "JSON",
                "value": "JSON"
              },
              {
                "name": "STRING",
                "value": "STRING"
              },
              {
                "name": "BYTES",
                "value": "BYTES"
              },
              {
                "name": "PROTOBUF",
                "value": "PROTOBUF"
              }
            ]
          }
        },
        "apiKey": {
          "type": "string",
          "description": "Kafka API Key"
        },
        "apiSecret": {
          "type": "string",
          "description": "Kafka API Key Secret"
        },
        "serviceAccountId": {
          "type": "string",
          "description": "Kafka Service Account Id"
        },
        "topics": {
          "type": "array",
          "description": "Kafka topics list",
          "items": {
            "type": "string"
          }
        },
        "topicsDir": {
          "type": "string",
          "description": "Kafka topics directory"
        },
        "flushSize": {
          "type": "string",
          "description": "Flush size"
        },
        "maxTasks": {
          "type": "string",
          "description": "Maximum Tasks"
        },
        "timeInterval": {
          "type": "string",
          "description": "Time Interval"
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "The partner info base",
          "properties": {
            "partnerConnectorType": {
              "description": "The partner connector type.",
              "type": "string",
              "enum": [
                "KafkaAzureBlobStorageSource",
                "KafkaAzureBlobStorageSink",
                "KafkaAzureCosmosDBSource",
                "KafkaAzureCosmosDBSink",
                "KafkaAzureSynapseAnalyticsSink"
              ],
              "x-ms-enum": {
                "name": "PartnerConnectorType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "KafkaAzureBlobStorageSource",
                    "value": "KafkaAzureBlobStorageSource"
                  },
                  {
                    "name": "KafkaAzureBlobStorageSink",
                    "value": "KafkaAzureBlobStorageSink"
                  },
                  {
                    "name": "KafkaAzureCosmosDBSource",
                    "value": "KafkaAzureCosmosDBSource"
                  },
                  {
                    "name": "KafkaAzureCosmosDBSink",
                    "value": "KafkaAzureCosmosDBSink"
                  },
                  {
                    "name": "KafkaAzureSynapseAnalyticsSink",
                    "value": "KafkaAzureSynapseAnalyticsSink"
                  }
                ]
              }
            }
          },
          "discriminator": "partnerConnectorType",
          "required": [
            "partnerConnectorType"
          ]
        }
      ],
      "x-ms-discriminator-value": "KafkaAzureSynapseAnalyticsSink"
    },
    "LinkOrganization": {
      "type": "object",
      "description": "Link an existing Confluent organization",
      "properties": {
        "token": {
          "type": "string",
          "format": "password",
          "description": "User auth token",
          "x-ms-mutability": [
            "create"
          ],
          "x-ms-secret": true
        }
      },
      "required": [
        "token"
      ]
    },
    "ListAccessRequestModel": {
      "type": "object",
      "description": "List Access Request Model",
      "properties": {
        "searchFilters": {
          "type": "object",
          "description": "Search filters for the request",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ListClustersSuccessResponse": {
      "type": "object",
      "description": "Result of GET request to list clusters in the environment of a confluent organization",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SCClusterRecord items on this page",
          "items": {
            "type": "object",
            "description": "Details of cluster record",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "kind": {
                "type": "string",
                "description": "Type of cluster"
              },
              "properties": {
                "description": "Cluster Properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "metadata": {
                    "description": "Metadata of the record",
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "description": "Self lookup url"
                      },
                      "resourceName": {
                        "type": "string",
                        "description": "Resource name of the record"
                      },
                      "createdTimestamp": {
                        "type": "string",
                        "description": "Created Date Time"
                      },
                      "updatedTimestamp": {
                        "type": "string",
                        "description": "Updated Date time"
                      },
                      "deletedTimestamp": {
                        "type": "string",
                        "description": "Deleted Date time"
                      }
                    }
                  },
                  "spec": {
                    "description": "Specification of the cluster",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the cluster"
                      },
                      "availability": {
                        "type": "string",
                        "description": "The availability zone configuration of the cluster"
                      },
                      "cloud": {
                        "type": "string",
                        "description": "The cloud service provider"
                      },
                      "zone": {
                        "type": "string",
                        "description": "type of zone availability"
                      },
                      "package": {
                        "description": "Stream governance configuration",
                        "type": "string",
                        "enum": [
                          "ESSENTIALS",
                          "ADVANCED"
                        ],
                        "x-ms-enum": {
                          "name": "Package",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "ESSENTIALS",
                              "value": "ESSENTIALS"
                            },
                            {
                              "name": "ADVANCED",
                              "value": "ADVANCED"
                            }
                          ]
                        }
                      },
                      "region": {
                        "type": "string",
                        "description": "The cloud service provider region"
                      },
                      "kafkaBootstrapEndpoint": {
                        "type": "string",
                        "description": "The bootstrap endpoint used by Kafka clients to connect to the cluster"
                      },
                      "httpEndpoint": {
                        "type": "string",
                        "description": "The cluster HTTP request URL."
                      },
                      "apiEndpoint": {
                        "type": "string",
                        "description": "The Kafka API cluster endpoint"
                      },
                      "config": {
                        "description": "Specification of the cluster configuration",
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string",
                            "description": "The lifecycle phase of the cluster"
                          }
                        }
                      },
                      "environment": {
                        "description": "Specification of the cluster environment",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the referred resource"
                          },
                          "environment": {
                            "type": "string",
                            "description": "Environment of the referred resource"
                          },
                          "related": {
                            "type": "string",
                            "description": "API URL for accessing or modifying the referred object"
                          },
                          "resourceName": {
                            "type": "string",
                            "description": "CRN reference to the referred resource"
                          }
                        }
                      },
                      "network": {
                        "description": "Specification of the cluster network",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the referred resource"
                          },
                          "environment": {
                            "type": "string",
                            "description": "Environment of the referred resource"
                          },
                          "related": {
                            "type": "string",
                            "description": "API URL for accessing or modifying the referred object"
                          },
                          "resourceName": {
                            "type": "string",
                            "description": "CRN reference to the referred resource"
                          }
                        }
                      },
                      "byok": {
                        "description": "Specification of the cluster byok",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the referred resource"
                          },
                          "related": {
                            "type": "string",
                            "description": "API URL for accessing or modifying the referred object"
                          },
                          "resourceName": {
                            "type": "string",
                            "description": "CRN reference to the referred resource"
                          }
                        }
                      }
                    }
                  },
                  "status": {
                    "description": "Specification of the cluster status",
                    "type": "object",
                    "properties": {
                      "phase": {
                        "type": "string",
                        "description": "The lifecycle phase of the cluster"
                      },
                      "cku": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of Confluent Kafka Units"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ListConnectorsSuccessResponse": {
      "type": "object",
      "description": "Result of GET request to list connectors in the cluster of a confluent organization",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ConnectorResource items on this page",
          "items": {
            "type": "object",
            "description": "Details of connector record",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The properties of the Connector",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "connectorBasicInfo": {
                    "description": "Connector Info Base",
                    "type": "object",
                    "properties": {
                      "connectorType": {
                        "description": "Connector Type",
                        "type": "string",
                        "enum": [
                          "SINK",
                          "SOURCE"
                        ],
                        "x-ms-enum": {
                          "name": "ConnectorType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "SINK",
                              "value": "SINK"
                            },
                            {
                              "name": "SOURCE",
                              "value": "SOURCE"
                            }
                          ]
                        }
                      },
                      "connectorClass": {
                        "description": "Connector Class",
                        "type": "string",
                        "enum": [
                          "AZUREBLOBSOURCE",
                          "AZUREBLOBSINK"
                        ],
                        "x-ms-enum": {
                          "name": "ConnectorClass",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "AZUREBLOBSOURCE",
                              "value": "AZUREBLOBSOURCE"
                            },
                            {
                              "name": "AZUREBLOBSINK",
                              "value": "AZUREBLOBSINK"
                            }
                          ]
                        }
                      },
                      "connectorName": {
                        "type": "string",
                        "description": "Connector Name"
                      },
                      "connectorId": {
                        "type": "string",
                        "description": "Connector Id"
                      },
                      "connectorState": {
                        "description": "Connector Status",
                        "type": "string",
                        "enum": [
                          "PROVISIONING",
                          "RUNNING",
                          "PAUSED",
                          "FAILED"
                        ],
                        "x-ms-enum": {
                          "name": "ConnectorStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "PROVISIONING",
                              "value": "PROVISIONING"
                            },
                            {
                              "name": "RUNNING",
                              "value": "RUNNING"
                            },
                            {
                              "name": "PAUSED",
                              "value": "PAUSED"
                            },
                            {
                              "name": "FAILED",
                              "value": "FAILED"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "connectorServiceTypeInfo": {
                    "description": "Connector Service type info base properties.",
                    "type": "object",
                    "properties": {
                      "connectorServiceType": {
                        "description": "The connector service type.",
                        "type": "string",
                        "enum": [
                          "AzureBlobStorageSinkConnector",
                          "AzureBlobStorageSourceConnector",
                          "AzureCosmosDBSinkConnector",
                          "AzureCosmosDBSourceConnector",
                          "AzureSynapseAnalyticsSinkConnector"
                        ],
                        "x-ms-enum": {
                          "name": "ConnectorServiceType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "AzureBlobStorageSinkConnector",
                              "value": "AzureBlobStorageSinkConnector"
                            },
                            {
                              "name": "AzureBlobStorageSourceConnector",
                              "value": "AzureBlobStorageSourceConnector"
                            },
                            {
                              "name": "AzureCosmosDBSinkConnector",
                              "value": "AzureCosmosDBSinkConnector"
                            },
                            {
                              "name": "AzureCosmosDBSourceConnector",
                              "value": "AzureCosmosDBSourceConnector"
                            },
                            {
                              "name": "AzureSynapseAnalyticsSinkConnector",
                              "value": "AzureSynapseAnalyticsSinkConnector"
                            }
                          ]
                        }
                      }
                    },
                    "discriminator": "connectorServiceType",
                    "required": [
                      "connectorServiceType"
                    ]
                  },
                  "partnerConnectorInfo": {
                    "description": "The connection information consumed by applications.",
                    "type": "object",
                    "properties": {
                      "partnerConnectorType": {
                        "description": "The partner connector type.",
                        "type": "string",
                        "enum": [
                          "KafkaAzureBlobStorageSource",
                          "KafkaAzureBlobStorageSink",
                          "KafkaAzureCosmosDBSource",
                          "KafkaAzureCosmosDBSink",
                          "KafkaAzureSynapseAnalyticsSink"
                        ],
                        "x-ms-enum": {
                          "name": "PartnerConnectorType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "KafkaAzureBlobStorageSource",
                              "value": "KafkaAzureBlobStorageSource"
                            },
                            {
                              "name": "KafkaAzureBlobStorageSink",
                              "value": "KafkaAzureBlobStorageSink"
                            },
                            {
                              "name": "KafkaAzureCosmosDBSource",
                              "value": "KafkaAzureCosmosDBSource"
                            },
                            {
                              "name": "KafkaAzureCosmosDBSink",
                              "value": "KafkaAzureCosmosDBSink"
                            },
                            {
                              "name": "KafkaAzureSynapseAnalyticsSink",
                              "value": "KafkaAzureSynapseAnalyticsSink"
                            }
                          ]
                        }
                      }
                    },
                    "discriminator": "partnerConnectorType",
                    "required": [
                      "partnerConnectorType"
                    ]
                  }
                }
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ListRegionsSuccessResponse": {
      "type": "object",
      "description": "Result of POST request to list regions supported by confluent",
      "properties": {
        "data": {
          "type": "array",
          "description": "List of regions supported by confluent",
          "items": {
            "type": "object",
            "description": "Details of region record",
            "properties": {
              "kind": {
                "type": "string",
                "description": "Kind of the cluster"
              },
              "id": {
                "type": "string",
                "description": "Id of the cluster"
              },
              "properties": {
                "description": "Region Properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "metadata": {
                    "description": "Metadata of the record",
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "description": "Self lookup url"
                      },
                      "resourceName": {
                        "type": "string",
                        "description": "Resource name of the record"
                      },
                      "createdTimestamp": {
                        "type": "string",
                        "description": "Created Date Time"
                      },
                      "updatedTimestamp": {
                        "type": "string",
                        "description": "Updated Date time"
                      },
                      "deletedTimestamp": {
                        "type": "string",
                        "description": "Deleted Date time"
                      }
                    }
                  },
                  "spec": {
                    "description": "Specification of the region",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Display Name of the region"
                      },
                      "cloud": {
                        "type": "string",
                        "description": "Cloud provider name"
                      },
                      "regionName": {
                        "type": "string",
                        "description": "Region name"
                      },
                      "packages": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "ListSchemaRegistryClustersResponse": {
      "type": "object",
      "description": "Result of GET request to list schema registry clusters in the environment of a confluent organization",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SchemaRegistryClusterRecord items on this page",
          "items": {
            "type": "object",
            "description": "Details of schema registry cluster record",
            "properties": {
              "kind": {
                "type": "string",
                "description": "Kind of the cluster"
              },
              "id": {
                "type": "string",
                "description": "Id of the cluster"
              },
              "properties": {
                "description": "Schema Registry Cluster Properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "metadata": {
                    "description": "Metadata of the record",
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "description": "Self lookup url"
                      },
                      "resourceName": {
                        "type": "string",
                        "description": "Resource name of the record"
                      },
                      "createdTimestamp": {
                        "type": "string",
                        "description": "Created Date Time"
                      },
                      "updatedTimestamp": {
                        "type": "string",
                        "description": "Updated Date time"
                      },
                      "deletedTimestamp": {
                        "type": "string",
                        "description": "Deleted Date time"
                      }
                    }
                  },
                  "spec": {
                    "description": "Specification of the schema registry cluster",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the schema registry cluster"
                      },
                      "httpEndpoint": {
                        "type": "string",
                        "description": "Http endpoint of the cluster"
                      },
                      "package": {
                        "type": "string",
                        "description": "Type of the cluster package Advanced, essentials"
                      },
                      "region": {
                        "description": "Region details of the schema registry cluster",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the referred resource"
                          },
                          "related": {
                            "type": "string",
                            "description": "API URL for accessing or modifying the referred object"
                          },
                          "resourceName": {
                            "type": "string",
                            "description": "CRN reference to the referred resource"
                          }
                        }
                      },
                      "environment": {
                        "description": "Environment details of the schema registry cluster",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the referred resource"
                          },
                          "related": {
                            "type": "string",
                            "description": "API URL for accessing or modifying the referred object"
                          },
                          "resourceName": {
                            "type": "string",
                            "description": "CRN reference to the referred resource"
                          }
                        }
                      },
                      "cloud": {
                        "type": "string",
                        "description": "The cloud service provider"
                      }
                    }
                  },
                  "status": {
                    "description": "Specification of the cluster status",
                    "type": "object",
                    "properties": {
                      "phase": {
                        "type": "string",
                        "description": "The lifecycle phase of the cluster"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ListTopicsSuccessResponse": {
      "type": "object",
      "description": "Result of GET request to list topics in the cluster of a confluent organization",
      "properties": {
        "value": {
          "type": "array",
          "description": "The TopicRecord items on this page",
          "items": {
            "type": "object",
            "description": "Details of topic record",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Topic Properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "description": "Type of topic"
                  },
                  "topicId": {
                    "type": "string",
                    "description": "Topic Id returned by Confluent"
                  },
                  "metadata": {
                    "description": "Metadata of the record",
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "description": "Self lookup url"
                      },
                      "resourceName": {
                        "type": "string",
                        "description": "Resource name of the record"
                      }
                    }
                  },
                  "partitions": {
                    "description": "Partition Specification of the topic",
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "description": "Relationship of the topic"
                      }
                    }
                  },
                  "configs": {
                    "description": "Config Specification of the topic",
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "description": "Relationship of the topic"
                      }
                    }
                  },
                  "inputConfigs": {
                    "type": "array",
                    "description": "Input Config Specification of the topic",
                    "items": {
                      "type": "object",
                      "description": "Topics input config",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the topic input config"
                        },
                        "value": {
                          "type": "string",
                          "description": "Value of the topic input config"
                        }
                      }
                    }
                  },
                  "partitionsReassignments": {
                    "description": "Partition Reassignment Specification of the topic",
                    "type": "object",
                    "properties": {
                      "related": {
                        "type": "string",
                        "description": "Relationship of the topic"
                      }
                    }
                  },
                  "partitionsCount": {
                    "type": "string",
                    "description": "Partition count of the topic"
                  },
                  "replicationFactor": {
                    "type": "string",
                    "description": "Replication factor of the topic"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "MetadataEntity": {
      "type": "object",
      "description": "Metadata of the data record",
      "properties": {
        "self": {
          "type": "string",
          "description": "Self lookup url"
        },
        "resource_name": {
          "type": "string",
          "description": "Resource name of the record"
        },
        "created_at": {
          "type": "string",
          "description": "Created Date Time"
        },
        "updated_at": {
          "type": "string",
          "description": "Updated Date time"
        },
        "deleted_at": {
          "type": "string",
          "description": "Deleted Date time"
        }
      }
    },
    "OfferDetail": {
      "type": "object",
      "description": "Confluent Offer detail",
      "properties": {
        "publisherId": {
          "type": "string",
          "description": "Publisher Id",
          "maxLength": 50
        },
        "id": {
          "type": "string",
          "description": "Offer Id",
          "maxLength": 50
        },
        "planId": {
          "type": "string",
          "description": "Offer Plan Id",
          "maxLength": 200
        },
        "planName": {
          "type": "string",
          "description": "Offer Plan Name",
          "maxLength": 200
        },
        "termUnit": {
          "type": "string",
          "description": "Offer Plan Term unit",
          "maxLength": 25
        },
        "termId": {
          "type": "string",
          "description": "Offer Plan Term Id",
          "maxLength": 50
        },
        "privateOfferId": {
          "type": "string",
          "description": "Private Offer Id",
          "maxLength": 255
        },
        "privateOfferIds": {
          "type": "array",
          "description": "Array of Private Offer Ids",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "SaaS Offer Status",
          "type": "string",
          "enum": [
            "Started",
            "PendingFulfillmentStart",
            "InProgress",
            "Subscribed",
            "Suspended",
            "Reinstated",
            "Succeeded",
            "Failed",
            "Unsubscribed",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "SaaSOfferStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Started",
                "value": "Started"
              },
              {
                "name": "PendingFulfillmentStart",
                "value": "PendingFulfillmentStart"
              },
              {
                "name": "InProgress",
                "value": "InProgress"
              },
              {
                "name": "Subscribed",
                "value": "Subscribed"
              },
              {
                "name": "Suspended",
                "value": "Suspended"
              },
              {
                "name": "Reinstated",
                "value": "Reinstated"
              },
              {
                "name": "Succeeded",
                "value": "Succeeded"
              },
              {
                "name": "Failed",
                "value": "Failed"
              },
              {
                "name": "Unsubscribed",
                "value": "Unsubscribed"
              },
              {
                "name": "Updating",
                "value": "Updating"
              }
            ]
          }
        }
      },
      "required": [
        "publisherId",
        "id",
        "planId",
        "planName",
        "termUnit"
      ]
    },
    "OperationDisplay": {
      "type": "object",
      "description": "The object that represents the operation.",
      "properties": {
        "provider": {
          "type": "string",
          "description": "Service provider: Microsoft.Confluent"
        },
        "resource": {
          "type": "string",
          "description": "Type on which the operation is performed, e.g., 'clusters'."
        },
        "operation": {
          "type": "string",
          "description": "Operation type, e.g., read, write, delete, etc."
        },
        "description": {
          "type": "string",
          "description": "Description of the operation, e.g., 'Write confluent'."
        }
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "Result of GET request to list Confluent operations.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Confluent operations supported by the Microsoft.Confluent provider.",
          "items": {
            "type": "object",
            "description": "An Confluent REST API operation.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Operation name: {provider}/{resource}/{operation}"
              },
              "display": {
                "description": "The object that represents the operation.",
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "description": "Service provider: Microsoft.Confluent"
                  },
                  "resource": {
                    "type": "string",
                    "description": "Type on which the operation is performed, e.g., 'clusters'."
                  },
                  "operation": {
                    "type": "string",
                    "description": "Operation type, e.g., read, write, delete, etc."
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the operation, e.g., 'Write confluent'."
                  }
                }
              },
              "isDataAction": {
                "type": "boolean",
                "description": "Indicates whether the operation is a data action"
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      },
      "required": [
        "value"
      ]
    },
    "OperationResult": {
      "type": "object",
      "description": "An Confluent REST API operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Operation name: {provider}/{resource}/{operation}"
        },
        "display": {
          "description": "The object that represents the operation.",
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "description": "Service provider: Microsoft.Confluent"
            },
            "resource": {
              "type": "string",
              "description": "Type on which the operation is performed, e.g., 'clusters'."
            },
            "operation": {
              "type": "string",
              "description": "Operation type, e.g., read, write, delete, etc."
            },
            "description": {
              "type": "string",
              "description": "Description of the operation, e.g., 'Write confluent'."
            }
          }
        },
        "isDataAction": {
          "type": "boolean",
          "description": "Indicates whether the operation is a data action"
        }
      }
    },
    "OrganizationResource": {
      "type": "object",
      "description": "Organization resource.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "Organization resource properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "createdTime": {
              "type": "string",
              "format": "date-time",
              "description": "The creation time of the resource.",
              "readOnly": true
            },
            "provisioningState": {
              "description": "Provision states for confluent RP",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Accepted",
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Canceled",
                "Deleted",
                "NotSpecified"
              ],
              "x-ms-enum": {
                "name": "ProvisionState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Accepted",
                    "value": "Accepted"
                  },
                  {
                    "name": "Creating",
                    "value": "Creating"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting"
                  },
                  {
                    "name": "Succeeded",
                    "value": "Succeeded"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed"
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled"
                  },
                  {
                    "name": "Deleted",
                    "value": "Deleted"
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified"
                  }
                ]
              }
            },
            "organizationId": {
              "type": "string",
              "description": "Id of the Confluent organization.",
              "readOnly": true
            },
            "ssoUrl": {
              "type": "string",
              "description": "SSO url for the Confluent organization.",
              "readOnly": true
            },
            "offerDetail": {
              "description": "Confluent offer detail",
              "type": "object",
              "properties": {
                "publisherId": {
                  "type": "string",
                  "description": "Publisher Id",
                  "maxLength": 50
                },
                "id": {
                  "type": "string",
                  "description": "Offer Id",
                  "maxLength": 50
                },
                "planId": {
                  "type": "string",
                  "description": "Offer Plan Id",
                  "maxLength": 200
                },
                "planName": {
                  "type": "string",
                  "description": "Offer Plan Name",
                  "maxLength": 200
                },
                "termUnit": {
                  "type": "string",
                  "description": "Offer Plan Term unit",
                  "maxLength": 25
                },
                "termId": {
                  "type": "string",
                  "description": "Offer Plan Term Id",
                  "maxLength": 50
                },
                "privateOfferId": {
                  "type": "string",
                  "description": "Private Offer Id",
                  "maxLength": 255
                },
                "privateOfferIds": {
                  "type": "array",
                  "description": "Array of Private Offer Ids",
                  "items": {
                    "type": "string"
                  }
                },
                "status": {
                  "description": "SaaS Offer Status",
                  "type": "string",
                  "enum": [
                    "Started",
                    "PendingFulfillmentStart",
                    "InProgress",
                    "Subscribed",
                    "Suspended",
                    "Reinstated",
                    "Succeeded",
                    "Failed",
                    "Unsubscribed",
                    "Updating"
                  ],
                  "x-ms-enum": {
                    "name": "SaaSOfferStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Started",
                        "value": "Started"
                      },
                      {
                        "name": "PendingFulfillmentStart",
                        "value": "PendingFulfillmentStart"
                      },
                      {
                        "name": "InProgress",
                        "value": "InProgress"
                      },
                      {
                        "name": "Subscribed",
                        "value": "Subscribed"
                      },
                      {
                        "name": "Suspended",
                        "value": "Suspended"
                      },
                      {
                        "name": "Reinstated",
                        "value": "Reinstated"
                      },
                      {
                        "name": "Succeeded",
                        "value": "Succeeded"
                      },
                      {
                        "name": "Failed",
                        "value": "Failed"
                      },
                      {
                        "name": "Unsubscribed",
                        "value": "Unsubscribed"
                      },
                      {
                        "name": "Updating",
                        "value": "Updating"
                      }
                    ]
                  }
                }
              },
              "required": [
                "publisherId",
                "id",
                "planId",
                "planName",
                "termUnit"
              ]
            },
            "userDetail": {
              "description": "Subscriber detail",
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "First name",
                  "maxLength": 50
                },
                "lastName": {
                  "type": "string",
                  "description": "Last name",
                  "maxLength": 50
                },
                "emailAddress": {
                  "type": "string",
                  "description": "Email address",
                  "pattern": "^\\S+@\\S+\\.\\S+$"
                },
                "userPrincipalName": {
                  "type": "string",
                  "description": "User principal name"
                },
                "aadEmail": {
                  "type": "string",
                  "description": "AAD email address"
                }
              },
              "required": [
                "emailAddress"
              ]
            },
            "linkOrganization": {
              "description": "Link an existing Confluent organization",
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "format": "password",
                  "description": "User auth token",
                  "x-ms-mutability": [
                    "create"
                  ],
                  "x-ms-secret": true
                }
              },
              "required": [
                "token"
              ]
            }
          },
          "required": [
            "offerDetail",
            "userDetail"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "OrganizationResourceListResult": {
      "type": "object",
      "description": "The response of a OrganizationResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The OrganizationResource items on this page",
          "items": {
            "type": "object",
            "description": "Organization resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "Organization resource properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "createdTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation time of the resource.",
                    "readOnly": true
                  },
                  "provisioningState": {
                    "description": "Provision states for confluent RP",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Accepted",
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Deleted",
                      "NotSpecified"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisionState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Accepted",
                          "value": "Accepted"
                        },
                        {
                          "name": "Creating",
                          "value": "Creating"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting"
                        },
                        {
                          "name": "Succeeded",
                          "value": "Succeeded"
                        },
                        {
                          "name": "Failed",
                          "value": "Failed"
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled"
                        },
                        {
                          "name": "Deleted",
                          "value": "Deleted"
                        },
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified"
                        }
                      ]
                    }
                  },
                  "organizationId": {
                    "type": "string",
                    "description": "Id of the Confluent organization.",
                    "readOnly": true
                  },
                  "ssoUrl": {
                    "type": "string",
                    "description": "SSO url for the Confluent organization.",
                    "readOnly": true
                  },
                  "offerDetail": {
                    "description": "Confluent offer detail",
                    "type": "object",
                    "properties": {
                      "publisherId": {
                        "type": "string",
                        "description": "Publisher Id",
                        "maxLength": 50
                      },
                      "id": {
                        "type": "string",
                        "description": "Offer Id",
                        "maxLength": 50
                      },
                      "planId": {
                        "type": "string",
                        "description": "Offer Plan Id",
                        "maxLength": 200
                      },
                      "planName": {
                        "type": "string",
                        "description": "Offer Plan Name",
                        "maxLength": 200
                      },
                      "termUnit": {
                        "type": "string",
                        "description": "Offer Plan Term unit",
                        "maxLength": 25
                      },
                      "termId": {
                        "type": "string",
                        "description": "Offer Plan Term Id",
                        "maxLength": 50
                      },
                      "privateOfferId": {
                        "type": "string",
                        "description": "Private Offer Id",
                        "maxLength": 255
                      },
                      "privateOfferIds": {
                        "type": "array",
                        "description": "Array of Private Offer Ids",
                        "items": {
                          "type": "string"
                        }
                      },
                      "status": {
                        "description": "SaaS Offer Status",
                        "type": "string",
                        "enum": [
                          "Started",
                          "PendingFulfillmentStart",
                          "InProgress",
                          "Subscribed",
                          "Suspended",
                          "Reinstated",
                          "Succeeded",
                          "Failed",
                          "Unsubscribed",
                          "Updating"
                        ],
                        "x-ms-enum": {
                          "name": "SaaSOfferStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Started",
                              "value": "Started"
                            },
                            {
                              "name": "PendingFulfillmentStart",
                              "value": "PendingFulfillmentStart"
                            },
                            {
                              "name": "InProgress",
                              "value": "InProgress"
                            },
                            {
                              "name": "Subscribed",
                              "value": "Subscribed"
                            },
                            {
                              "name": "Suspended",
                              "value": "Suspended"
                            },
                            {
                              "name": "Reinstated",
                              "value": "Reinstated"
                            },
                            {
                              "name": "Succeeded",
                              "value": "Succeeded"
                            },
                            {
                              "name": "Failed",
                              "value": "Failed"
                            },
                            {
                              "name": "Unsubscribed",
                              "value": "Unsubscribed"
                            },
                            {
                              "name": "Updating",
                              "value": "Updating"
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "publisherId",
                      "id",
                      "planId",
                      "planName",
                      "termUnit"
                    ]
                  },
                  "userDetail": {
                    "description": "Subscriber detail",
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string",
                        "description": "First name",
                        "maxLength": 50
                      },
                      "lastName": {
                        "type": "string",
                        "description": "Last name",
                        "maxLength": 50
                      },
                      "emailAddress": {
                        "type": "string",
                        "description": "Email address",
                        "pattern": "^\\S+@\\S+\\.\\S+$"
                      },
                      "userPrincipalName": {
                        "type": "string",
                        "description": "User principal name"
                      },
                      "aadEmail": {
                        "type": "string",
                        "description": "AAD email address"
                      }
                    },
                    "required": [
                      "emailAddress"
                    ]
                  },
                  "linkOrganization": {
                    "description": "Link an existing Confluent organization",
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string",
                        "format": "password",
                        "description": "User auth token",
                        "x-ms-mutability": [
                          "create"
                        ],
                        "x-ms-secret": true
                      }
                    },
                    "required": [
                      "token"
                    ]
                  }
                },
                "required": [
                  "offerDetail",
                  "userDetail"
                ]
              }
            },
            "required": [
              "properties"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OrganizationResourceProperties": {
      "type": "object",
      "description": "Organization resource property",
      "properties": {
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the resource.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provision states for confluent RP",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Accepted",
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Failed",
            "Canceled",
            "Deleted",
            "NotSpecified"
          ],
          "x-ms-enum": {
            "name": "ProvisionState",
            "modelAsString": true,
            "values": [
              {
                "name": "Accepted",
                "value": "Accepted"
              },
              {
                "name": "Creating",
                "value": "Creating"
              },
              {
                "name": "Updating",
                "value": "Updating"
              },
              {
                "name": "Deleting",
                "value": "Deleting"
              },
              {
                "name": "Succeeded",
                "value": "Succeeded"
              },
              {
                "name": "Failed",
                "value": "Failed"
              },
              {
                "name": "Canceled",
                "value": "Canceled"
              },
              {
                "name": "Deleted",
                "value": "Deleted"
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified"
              }
            ]
          }
        },
        "organizationId": {
          "type": "string",
          "description": "Id of the Confluent organization.",
          "readOnly": true
        },
        "ssoUrl": {
          "type": "string",
          "description": "SSO url for the Confluent organization.",
          "readOnly": true
        },
        "offerDetail": {
          "description": "Confluent offer detail",
          "type": "object",
          "properties": {
            "publisherId": {
              "type": "string",
              "description": "Publisher Id",
              "maxLength": 50
            },
            "id": {
              "type": "string",
              "description": "Offer Id",
              "maxLength": 50
            },
            "planId": {
              "type": "string",
              "description": "Offer Plan Id",
              "maxLength": 200
            },
            "planName": {
              "type": "string",
              "description": "Offer Plan Name",
              "maxLength": 200
            },
            "termUnit": {
              "type": "string",
              "description": "Offer Plan Term unit",
              "maxLength": 25
            },
            "termId": {
              "type": "string",
              "description": "Offer Plan Term Id",
              "maxLength": 50
            },
            "privateOfferId": {
              "type": "string",
              "description": "Private Offer Id",
              "maxLength": 255
            },
            "privateOfferIds": {
              "type": "array",
              "description": "Array of Private Offer Ids",
              "items": {
                "type": "string"
              }
            },
            "status": {
              "description": "SaaS Offer Status",
              "type": "string",
              "enum": [
                "Started",
                "PendingFulfillmentStart",
                "InProgress",
                "Subscribed",
                "Suspended",
                "Reinstated",
                "Succeeded",
                "Failed",
                "Unsubscribed",
                "Updating"
              ],
              "x-ms-enum": {
                "name": "SaaSOfferStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Started",
                    "value": "Started"
                  },
                  {
                    "name": "PendingFulfillmentStart",
                    "value": "PendingFulfillmentStart"
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress"
                  },
                  {
                    "name": "Subscribed",
                    "value": "Subscribed"
                  },
                  {
                    "name": "Suspended",
                    "value": "Suspended"
                  },
                  {
                    "name": "Reinstated",
                    "value": "Reinstated"
                  },
                  {
                    "name": "Succeeded",
                    "value": "Succeeded"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed"
                  },
                  {
                    "name": "Unsubscribed",
                    "value": "Unsubscribed"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating"
                  }
                ]
              }
            }
          },
          "required": [
            "publisherId",
            "id",
            "planId",
            "planName",
            "termUnit"
          ]
        },
        "userDetail": {
          "description": "Subscriber detail",
          "type": "object",
          "properties": {
            "firstName": {
              "type": "string",
              "description": "First name",
              "maxLength": 50
            },
            "lastName": {
              "type": "string",
              "description": "Last name",
              "maxLength": 50
            },
            "emailAddress": {
              "type": "string",
              "description": "Email address",
              "pattern": "^\\S+@\\S+\\.\\S+$"
            },
            "userPrincipalName": {
              "type": "string",
              "description": "User principal name"
            },
            "aadEmail": {
              "type": "string",
              "description": "AAD email address"
            }
          },
          "required": [
            "emailAddress"
          ]
        },
        "linkOrganization": {
          "description": "Link an existing Confluent organization",
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "format": "password",
              "description": "User auth token",
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true
            }
          },
          "required": [
            "token"
          ]
        }
      },
      "required": [
        "offerDetail",
        "userDetail"
      ]
    },
    "OrganizationResourceUpdate": {
      "type": "object",
      "description": "Organization Resource update",
      "properties": {
        "tags": {
          "type": "object",
          "description": "ARM resource tags",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Package": {
      "type": "string",
      "description": "Stream Governance Package. Supported values are ESSENTIALS and ADVANCED",
      "enum": [
        "ESSENTIALS",
        "ADVANCED"
      ],
      "x-ms-enum": {
        "name": "Package",
        "modelAsString": true,
        "values": [
          {
            "name": "ESSENTIALS",
            "value": "ESSENTIALS"
          },
          {
            "name": "ADVANCED",
            "value": "ADVANCED"
          }
        ]
      }
    },
    "PartnerConnectorType": {
      "type": "string",
      "description": "Partner Connector type.",
      "enum": [
        "KafkaAzureBlobStorageSource",
        "KafkaAzureBlobStorageSink",
        "KafkaAzureCosmosDBSource",
        "KafkaAzureCosmosDBSink",
        "KafkaAzureSynapseAnalyticsSink"
      ],
      "x-ms-enum": {
        "name": "PartnerConnectorType",
        "modelAsString": true,
        "values": [
          {
            "name": "KafkaAzureBlobStorageSource",
            "value": "KafkaAzureBlobStorageSource"
          },
          {
            "name": "KafkaAzureBlobStorageSink",
            "value": "KafkaAzureBlobStorageSink"
          },
          {
            "name": "KafkaAzureCosmosDBSource",
            "value": "KafkaAzureCosmosDBSource"
          },
          {
            "name": "KafkaAzureCosmosDBSink",
            "value": "KafkaAzureCosmosDBSink"
          },
          {
            "name": "KafkaAzureSynapseAnalyticsSink",
            "value": "KafkaAzureSynapseAnalyticsSink"
          }
        ]
      }
    },
    "PartnerInfoBase": {
      "type": "object",
      "description": "The partner info base",
      "properties": {
        "partnerConnectorType": {
          "description": "The partner connector type.",
          "type": "string",
          "enum": [
            "KafkaAzureBlobStorageSource",
            "KafkaAzureBlobStorageSink",
            "KafkaAzureCosmosDBSource",
            "KafkaAzureCosmosDBSink",
            "KafkaAzureSynapseAnalyticsSink"
          ],
          "x-ms-enum": {
            "name": "PartnerConnectorType",
            "modelAsString": true,
            "values": [
              {
                "name": "KafkaAzureBlobStorageSource",
                "value": "KafkaAzureBlobStorageSource"
              },
              {
                "name": "KafkaAzureBlobStorageSink",
                "value": "KafkaAzureBlobStorageSink"
              },
              {
                "name": "KafkaAzureCosmosDBSource",
                "value": "KafkaAzureCosmosDBSource"
              },
              {
                "name": "KafkaAzureCosmosDBSink",
                "value": "KafkaAzureCosmosDBSink"
              },
              {
                "name": "KafkaAzureSynapseAnalyticsSink",
                "value": "KafkaAzureSynapseAnalyticsSink"
              }
            ]
          }
        }
      },
      "discriminator": "partnerConnectorType",
      "required": [
        "partnerConnectorType"
      ]
    },
    "ProvisionState": {
      "type": "string",
      "description": "Provision states for confluent RP",
      "enum": [
        "Accepted",
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleted",
        "NotSpecified"
      ],
      "x-ms-enum": {
        "name": "ProvisionState",
        "modelAsString": true,
        "values": [
          {
            "name": "Accepted",
            "value": "Accepted"
          },
          {
            "name": "Creating",
            "value": "Creating"
          },
          {
            "name": "Updating",
            "value": "Updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled"
          },
          {
            "name": "Deleted",
            "value": "Deleted"
          },
          {
            "name": "NotSpecified",
            "value": "NotSpecified"
          }
        ]
      }
    },
    "RegionProperties": {
      "type": "object",
      "description": "Region Properties",
      "properties": {
        "metadata": {
          "description": "Metadata of the record",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "Self lookup url"
            },
            "resourceName": {
              "type": "string",
              "description": "Resource name of the record"
            },
            "createdTimestamp": {
              "type": "string",
              "description": "Created Date Time"
            },
            "updatedTimestamp": {
              "type": "string",
              "description": "Updated Date time"
            },
            "deletedTimestamp": {
              "type": "string",
              "description": "Deleted Date time"
            }
          }
        },
        "spec": {
          "description": "Specification of the region",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Display Name of the region"
            },
            "cloud": {
              "type": "string",
              "description": "Cloud provider name"
            },
            "regionName": {
              "type": "string",
              "description": "Region name"
            },
            "packages": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "RegionRecord": {
      "type": "object",
      "description": "Details of region record",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind of the cluster"
        },
        "id": {
          "type": "string",
          "description": "Id of the cluster"
        },
        "properties": {
          "description": "Region Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "metadata": {
              "description": "Metadata of the record",
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "description": "Self lookup url"
                },
                "resourceName": {
                  "type": "string",
                  "description": "Resource name of the record"
                },
                "createdTimestamp": {
                  "type": "string",
                  "description": "Created Date Time"
                },
                "updatedTimestamp": {
                  "type": "string",
                  "description": "Updated Date time"
                },
                "deletedTimestamp": {
                  "type": "string",
                  "description": "Deleted Date time"
                }
              }
            },
            "spec": {
              "description": "Specification of the region",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Display Name of the region"
                },
                "cloud": {
                  "type": "string",
                  "description": "Cloud provider name"
                },
                "regionName": {
                  "type": "string",
                  "description": "Region name"
                },
                "packages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "RegionSpecEntity": {
      "type": "object",
      "description": "Region spec details",
      "properties": {
        "name": {
          "type": "string",
          "description": "Display Name of the region"
        },
        "cloud": {
          "type": "string",
          "description": "Cloud provider name"
        },
        "regionName": {
          "type": "string",
          "description": "Region name"
        },
        "packages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceProviderDefaultErrorResponse": {
      "type": "object",
      "description": "Default error response for resource provider",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorResponseBody",
          "description": "Response body of Error",
          "readOnly": true
        }
      }
    },
    "RoleBindingRecord": {
      "type": "object",
      "description": "Details on principal, role name and crn pattern of a role binding",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The type of the resource."
        },
        "id": {
          "type": "string",
          "description": "Id of the role binding"
        },
        "metadata": {
          "description": "Metadata of the record",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "Self lookup url"
            },
            "resource_name": {
              "type": "string",
              "description": "Resource name of the record"
            },
            "created_at": {
              "type": "string",
              "description": "Created Date Time"
            },
            "updated_at": {
              "type": "string",
              "description": "Updated Date time"
            },
            "deleted_at": {
              "type": "string",
              "description": "Deleted Date time"
            }
          }
        },
        "principal": {
          "type": "string",
          "description": "The principal User or Group to bind the role to"
        },
        "role_name": {
          "type": "string",
          "description": "The name of the role to bind to the principal"
        },
        "crn_pattern": {
          "type": "string",
          "description": "A CRN that specifies the scope and resource patterns necessary for the role to bind"
        }
      }
    },
    "SCClusterByokEntity": {
      "type": "object",
      "description": "The network associated with this object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the referred resource"
        },
        "related": {
          "type": "string",
          "description": "API URL for accessing or modifying the referred object"
        },
        "resourceName": {
          "type": "string",
          "description": "CRN reference to the referred resource"
        }
      }
    },
    "SCClusterNetworkEnvironmentEntity": {
      "type": "object",
      "description": "The environment or the network to which cluster belongs",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the referred resource"
        },
        "environment": {
          "type": "string",
          "description": "Environment of the referred resource"
        },
        "related": {
          "type": "string",
          "description": "API URL for accessing or modifying the referred object"
        },
        "resourceName": {
          "type": "string",
          "description": "CRN reference to the referred resource"
        }
      }
    },
    "SCClusterRecord": {
      "type": "object",
      "description": "Details of cluster record",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Type of cluster"
        },
        "properties": {
          "description": "Cluster Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "metadata": {
              "description": "Metadata of the record",
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "description": "Self lookup url"
                },
                "resourceName": {
                  "type": "string",
                  "description": "Resource name of the record"
                },
                "createdTimestamp": {
                  "type": "string",
                  "description": "Created Date Time"
                },
                "updatedTimestamp": {
                  "type": "string",
                  "description": "Updated Date time"
                },
                "deletedTimestamp": {
                  "type": "string",
                  "description": "Deleted Date time"
                }
              }
            },
            "spec": {
              "description": "Specification of the cluster",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the cluster"
                },
                "availability": {
                  "type": "string",
                  "description": "The availability zone configuration of the cluster"
                },
                "cloud": {
                  "type": "string",
                  "description": "The cloud service provider"
                },
                "zone": {
                  "type": "string",
                  "description": "type of zone availability"
                },
                "package": {
                  "description": "Stream governance configuration",
                  "type": "string",
                  "enum": [
                    "ESSENTIALS",
                    "ADVANCED"
                  ],
                  "x-ms-enum": {
                    "name": "Package",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ESSENTIALS",
                        "value": "ESSENTIALS"
                      },
                      {
                        "name": "ADVANCED",
                        "value": "ADVANCED"
                      }
                    ]
                  }
                },
                "region": {
                  "type": "string",
                  "description": "The cloud service provider region"
                },
                "kafkaBootstrapEndpoint": {
                  "type": "string",
                  "description": "The bootstrap endpoint used by Kafka clients to connect to the cluster"
                },
                "httpEndpoint": {
                  "type": "string",
                  "description": "The cluster HTTP request URL."
                },
                "apiEndpoint": {
                  "type": "string",
                  "description": "The Kafka API cluster endpoint"
                },
                "config": {
                  "description": "Specification of the cluster configuration",
                  "type": "object",
                  "properties": {
                    "kind": {
                      "type": "string",
                      "description": "The lifecycle phase of the cluster"
                    }
                  }
                },
                "environment": {
                  "description": "Specification of the cluster environment",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the referred resource"
                    },
                    "environment": {
                      "type": "string",
                      "description": "Environment of the referred resource"
                    },
                    "related": {
                      "type": "string",
                      "description": "API URL for accessing or modifying the referred object"
                    },
                    "resourceName": {
                      "type": "string",
                      "description": "CRN reference to the referred resource"
                    }
                  }
                },
                "network": {
                  "description": "Specification of the cluster network",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the referred resource"
                    },
                    "environment": {
                      "type": "string",
                      "description": "Environment of the referred resource"
                    },
                    "related": {
                      "type": "string",
                      "description": "API URL for accessing or modifying the referred object"
                    },
                    "resourceName": {
                      "type": "string",
                      "description": "CRN reference to the referred resource"
                    }
                  }
                },
                "byok": {
                  "description": "Specification of the cluster byok",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the referred resource"
                    },
                    "related": {
                      "type": "string",
                      "description": "API URL for accessing or modifying the referred object"
                    },
                    "resourceName": {
                      "type": "string",
                      "description": "CRN reference to the referred resource"
                    }
                  }
                }
              }
            },
            "status": {
              "description": "Specification of the cluster status",
              "type": "object",
              "properties": {
                "phase": {
                  "type": "string",
                  "description": "The lifecycle phase of the cluster"
                },
                "cku": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of Confluent Kafka Units"
                }
              }
            }
          }
        }
      }
    },
    "SCClusterSpecEntity": {
      "type": "object",
      "description": "Spec of the cluster record",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the cluster"
        },
        "availability": {
          "type": "string",
          "description": "The availability zone configuration of the cluster"
        },
        "cloud": {
          "type": "string",
          "description": "The cloud service provider"
        },
        "zone": {
          "type": "string",
          "description": "type of zone availability"
        },
        "package": {
          "description": "Stream governance configuration",
          "type": "string",
          "enum": [
            "ESSENTIALS",
            "ADVANCED"
          ],
          "x-ms-enum": {
            "name": "Package",
            "modelAsString": true,
            "values": [
              {
                "name": "ESSENTIALS",
                "value": "ESSENTIALS"
              },
              {
                "name": "ADVANCED",
                "value": "ADVANCED"
              }
            ]
          }
        },
        "region": {
          "type": "string",
          "description": "The cloud service provider region"
        },
        "kafkaBootstrapEndpoint": {
          "type": "string",
          "description": "The bootstrap endpoint used by Kafka clients to connect to the cluster"
        },
        "httpEndpoint": {
          "type": "string",
          "description": "The cluster HTTP request URL."
        },
        "apiEndpoint": {
          "type": "string",
          "description": "The Kafka API cluster endpoint"
        },
        "config": {
          "description": "Specification of the cluster configuration",
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "The lifecycle phase of the cluster"
            }
          }
        },
        "environment": {
          "description": "Specification of the cluster environment",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID of the referred resource"
            },
            "environment": {
              "type": "string",
              "description": "Environment of the referred resource"
            },
            "related": {
              "type": "string",
              "description": "API URL for accessing or modifying the referred object"
            },
            "resourceName": {
              "type": "string",
              "description": "CRN reference to the referred resource"
            }
          }
        },
        "network": {
          "description": "Specification of the cluster network",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID of the referred resource"
            },
            "environment": {
              "type": "string",
              "description": "Environment of the referred resource"
            },
            "related": {
              "type": "string",
              "description": "API URL for accessing or modifying the referred object"
            },
            "resourceName": {
              "type": "string",
              "description": "CRN reference to the referred resource"
            }
          }
        },
        "byok": {
          "description": "Specification of the cluster byok",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID of the referred resource"
            },
            "related": {
              "type": "string",
              "description": "API URL for accessing or modifying the referred object"
            },
            "resourceName": {
              "type": "string",
              "description": "CRN reference to the referred resource"
            }
          }
        }
      }
    },
    "SCEnvironmentRecord": {
      "type": "object",
      "description": "Details about environment name, metadata and environment id of an environment",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Type of environment"
        },
        "properties": {
          "description": "Environment properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "streamGovernanceConfig": {
              "description": "Stream governance configuration",
              "type": "object",
              "properties": {
                "package": {
                  "description": "Stream governance configuration",
                  "type": "string",
                  "enum": [
                    "ESSENTIALS",
                    "ADVANCED"
                  ],
                  "x-ms-enum": {
                    "name": "Package",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "ESSENTIALS",
                        "value": "ESSENTIALS"
                      },
                      {
                        "name": "ADVANCED",
                        "value": "ADVANCED"
                      }
                    ]
                  }
                }
              }
            },
            "metadata": {
              "description": "Metadata of the record",
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "description": "Self lookup url"
                },
                "resourceName": {
                  "type": "string",
                  "description": "Resource name of the record"
                },
                "createdTimestamp": {
                  "type": "string",
                  "description": "Created Date Time"
                },
                "updatedTimestamp": {
                  "type": "string",
                  "description": "Updated Date time"
                },
                "deletedTimestamp": {
                  "type": "string",
                  "description": "Deleted Date time"
                }
              }
            }
          }
        }
      }
    },
    "SCMetadataEntity": {
      "type": "object",
      "description": "Metadata of the data record",
      "properties": {
        "self": {
          "type": "string",
          "description": "Self lookup url"
        },
        "resourceName": {
          "type": "string",
          "description": "Resource name of the record"
        },
        "createdTimestamp": {
          "type": "string",
          "description": "Created Date Time"
        },
        "updatedTimestamp": {
          "type": "string",
          "description": "Updated Date time"
        },
        "deletedTimestamp": {
          "type": "string",
          "description": "Deleted Date time"
        }
      }
    },
    "SaaSOfferStatus": {
      "type": "string",
      "description": "SaaS Offer Status for confluent RP",
      "enum": [
        "Started",
        "PendingFulfillmentStart",
        "InProgress",
        "Subscribed",
        "Suspended",
        "Reinstated",
        "Succeeded",
        "Failed",
        "Unsubscribed",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "SaaSOfferStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Started",
            "value": "Started"
          },
          {
            "name": "PendingFulfillmentStart",
            "value": "PendingFulfillmentStart"
          },
          {
            "name": "InProgress",
            "value": "InProgress"
          },
          {
            "name": "Subscribed",
            "value": "Subscribed"
          },
          {
            "name": "Suspended",
            "value": "Suspended"
          },
          {
            "name": "Reinstated",
            "value": "Reinstated"
          },
          {
            "name": "Succeeded",
            "value": "Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed"
          },
          {
            "name": "Unsubscribed",
            "value": "Unsubscribed"
          },
          {
            "name": "Updating",
            "value": "Updating"
          }
        ]
      }
    },
    "SchemaRegistryClusterEnvironmentRegionEntity": {
      "type": "object",
      "description": "The environment associated with this object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the referred resource"
        },
        "related": {
          "type": "string",
          "description": "API URL for accessing or modifying the referred object"
        },
        "resourceName": {
          "type": "string",
          "description": "CRN reference to the referred resource"
        }
      }
    },
    "SchemaRegistryClusterProperties": {
      "type": "object",
      "description": "Schema Registry Cluster Properties",
      "properties": {
        "metadata": {
          "description": "Metadata of the record",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "Self lookup url"
            },
            "resourceName": {
              "type": "string",
              "description": "Resource name of the record"
            },
            "createdTimestamp": {
              "type": "string",
              "description": "Created Date Time"
            },
            "updatedTimestamp": {
              "type": "string",
              "description": "Updated Date time"
            },
            "deletedTimestamp": {
              "type": "string",
              "description": "Deleted Date time"
            }
          }
        },
        "spec": {
          "description": "Specification of the schema registry cluster",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the schema registry cluster"
            },
            "httpEndpoint": {
              "type": "string",
              "description": "Http endpoint of the cluster"
            },
            "package": {
              "type": "string",
              "description": "Type of the cluster package Advanced, essentials"
            },
            "region": {
              "description": "Region details of the schema registry cluster",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the referred resource"
                },
                "related": {
                  "type": "string",
                  "description": "API URL for accessing or modifying the referred object"
                },
                "resourceName": {
                  "type": "string",
                  "description": "CRN reference to the referred resource"
                }
              }
            },
            "environment": {
              "description": "Environment details of the schema registry cluster",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the referred resource"
                },
                "related": {
                  "type": "string",
                  "description": "API URL for accessing or modifying the referred object"
                },
                "resourceName": {
                  "type": "string",
                  "description": "CRN reference to the referred resource"
                }
              }
            },
            "cloud": {
              "type": "string",
              "description": "The cloud service provider"
            }
          }
        },
        "status": {
          "description": "Specification of the cluster status",
          "type": "object",
          "properties": {
            "phase": {
              "type": "string",
              "description": "The lifecycle phase of the cluster"
            }
          }
        }
      }
    },
    "SchemaRegistryClusterRecord": {
      "type": "object",
      "description": "Details of schema registry cluster record",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind of the cluster"
        },
        "id": {
          "type": "string",
          "description": "Id of the cluster"
        },
        "properties": {
          "description": "Schema Registry Cluster Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "metadata": {
              "description": "Metadata of the record",
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "description": "Self lookup url"
                },
                "resourceName": {
                  "type": "string",
                  "description": "Resource name of the record"
                },
                "createdTimestamp": {
                  "type": "string",
                  "description": "Created Date Time"
                },
                "updatedTimestamp": {
                  "type": "string",
                  "description": "Updated Date time"
                },
                "deletedTimestamp": {
                  "type": "string",
                  "description": "Deleted Date time"
                }
              }
            },
            "spec": {
              "description": "Specification of the schema registry cluster",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the schema registry cluster"
                },
                "httpEndpoint": {
                  "type": "string",
                  "description": "Http endpoint of the cluster"
                },
                "package": {
                  "type": "string",
                  "description": "Type of the cluster package Advanced, essentials"
                },
                "region": {
                  "description": "Region details of the schema registry cluster",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the referred resource"
                    },
                    "related": {
                      "type": "string",
                      "description": "API URL for accessing or modifying the referred object"
                    },
                    "resourceName": {
                      "type": "string",
                      "description": "CRN reference to the referred resource"
                    }
                  }
                },
                "environment": {
                  "description": "Environment details of the schema registry cluster",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the referred resource"
                    },
                    "related": {
                      "type": "string",
                      "description": "API URL for accessing or modifying the referred object"
                    },
                    "resourceName": {
                      "type": "string",
                      "description": "CRN reference to the referred resource"
                    }
                  }
                },
                "cloud": {
                  "type": "string",
                  "description": "The cloud service provider"
                }
              }
            },
            "status": {
              "description": "Specification of the cluster status",
              "type": "object",
              "properties": {
                "phase": {
                  "type": "string",
                  "description": "The lifecycle phase of the cluster"
                }
              }
            }
          }
        }
      }
    },
    "SchemaRegistryClusterSpecEntity": {
      "type": "object",
      "description": "Details of schema registry cluster spec",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the schema registry cluster"
        },
        "httpEndpoint": {
          "type": "string",
          "description": "Http endpoint of the cluster"
        },
        "package": {
          "type": "string",
          "description": "Type of the cluster package Advanced, essentials"
        },
        "region": {
          "description": "Region details of the schema registry cluster",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID of the referred resource"
            },
            "related": {
              "type": "string",
              "description": "API URL for accessing or modifying the referred object"
            },
            "resourceName": {
              "type": "string",
              "description": "CRN reference to the referred resource"
            }
          }
        },
        "environment": {
          "description": "Environment details of the schema registry cluster",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "ID of the referred resource"
            },
            "related": {
              "type": "string",
              "description": "API URL for accessing or modifying the referred object"
            },
            "resourceName": {
              "type": "string",
              "description": "CRN reference to the referred resource"
            }
          }
        },
        "cloud": {
          "type": "string",
          "description": "The cloud service provider"
        }
      }
    },
    "SchemaRegistryClusterStatusEntity": {
      "type": "object",
      "description": "Status of the schema registry cluster record",
      "properties": {
        "phase": {
          "type": "string",
          "description": "The lifecycle phase of the cluster"
        }
      }
    },
    "ServiceAccountRecord": {
      "type": "object",
      "description": "Record of the service account",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of account"
        },
        "id": {
          "type": "string",
          "description": "Id of the service account"
        },
        "metadata": {
          "description": "Metadata of the record",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "Self lookup url"
            },
            "resource_name": {
              "type": "string",
              "description": "Resource name of the record"
            },
            "created_at": {
              "type": "string",
              "description": "Created Date Time"
            },
            "updated_at": {
              "type": "string",
              "description": "Updated Date time"
            },
            "deleted_at": {
              "type": "string",
              "description": "Deleted Date time"
            }
          }
        },
        "display_name": {
          "type": "string",
          "description": "Name of the service account"
        },
        "description": {
          "type": "string",
          "description": "Description of the service account"
        }
      }
    },
    "StreamGovernanceConfig": {
      "type": "object",
      "description": "Stream governance configuration",
      "properties": {
        "package": {
          "description": "Stream governance configuration",
          "type": "string",
          "enum": [
            "ESSENTIALS",
            "ADVANCED"
          ],
          "x-ms-enum": {
            "name": "Package",
            "modelAsString": true,
            "values": [
              {
                "name": "ESSENTIALS",
                "value": "ESSENTIALS"
              },
              {
                "name": "ADVANCED",
                "value": "ADVANCED"
              }
            ]
          }
        }
      }
    },
    "TopicMetadataEntity": {
      "type": "object",
      "description": "Metadata of the data record",
      "properties": {
        "self": {
          "type": "string",
          "description": "Self lookup url"
        },
        "resourceName": {
          "type": "string",
          "description": "Resource name of the record"
        }
      }
    },
    "TopicProperties": {
      "type": "object",
      "description": "Topic Properties",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of topic"
        },
        "topicId": {
          "type": "string",
          "description": "Topic Id returned by Confluent"
        },
        "metadata": {
          "description": "Metadata of the record",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "Self lookup url"
            },
            "resourceName": {
              "type": "string",
              "description": "Resource name of the record"
            }
          }
        },
        "partitions": {
          "description": "Partition Specification of the topic",
          "type": "object",
          "properties": {
            "related": {
              "type": "string",
              "description": "Relationship of the topic"
            }
          }
        },
        "configs": {
          "description": "Config Specification of the topic",
          "type": "object",
          "properties": {
            "related": {
              "type": "string",
              "description": "Relationship of the topic"
            }
          }
        },
        "inputConfigs": {
          "type": "array",
          "description": "Input Config Specification of the topic",
          "items": {
            "type": "object",
            "description": "Topics input config",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the topic input config"
              },
              "value": {
                "type": "string",
                "description": "Value of the topic input config"
              }
            }
          }
        },
        "partitionsReassignments": {
          "description": "Partition Reassignment Specification of the topic",
          "type": "object",
          "properties": {
            "related": {
              "type": "string",
              "description": "Relationship of the topic"
            }
          }
        },
        "partitionsCount": {
          "type": "string",
          "description": "Partition count of the topic"
        },
        "replicationFactor": {
          "type": "string",
          "description": "Replication factor of the topic"
        }
      }
    },
    "TopicRecord": {
      "type": "object",
      "description": "Details of topic record",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Topic Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "description": "Type of topic"
            },
            "topicId": {
              "type": "string",
              "description": "Topic Id returned by Confluent"
            },
            "metadata": {
              "description": "Metadata of the record",
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "description": "Self lookup url"
                },
                "resourceName": {
                  "type": "string",
                  "description": "Resource name of the record"
                }
              }
            },
            "partitions": {
              "description": "Partition Specification of the topic",
              "type": "object",
              "properties": {
                "related": {
                  "type": "string",
                  "description": "Relationship of the topic"
                }
              }
            },
            "configs": {
              "description": "Config Specification of the topic",
              "type": "object",
              "properties": {
                "related": {
                  "type": "string",
                  "description": "Relationship of the topic"
                }
              }
            },
            "inputConfigs": {
              "type": "array",
              "description": "Input Config Specification of the topic",
              "items": {
                "type": "object",
                "description": "Topics input config",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the topic input config"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value of the topic input config"
                  }
                }
              }
            },
            "partitionsReassignments": {
              "description": "Partition Reassignment Specification of the topic",
              "type": "object",
              "properties": {
                "related": {
                  "type": "string",
                  "description": "Relationship of the topic"
                }
              }
            },
            "partitionsCount": {
              "type": "string",
              "description": "Partition count of the topic"
            },
            "replicationFactor": {
              "type": "string",
              "description": "Replication factor of the topic"
            }
          }
        }
      }
    },
    "TopicsInputConfig": {
      "type": "object",
      "description": "Topics input config",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the topic input config"
        },
        "value": {
          "type": "string",
          "description": "Value of the topic input config"
        }
      }
    },
    "TopicsRelatedLink": {
      "type": "object",
      "description": "Partition Config spec of the topic record",
      "properties": {
        "related": {
          "type": "string",
          "description": "Relationship of the topic"
        }
      }
    },
    "UserDetail": {
      "type": "object",
      "description": "Subscriber detail",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First name",
          "maxLength": 50
        },
        "lastName": {
          "type": "string",
          "description": "Last name",
          "maxLength": 50
        },
        "emailAddress": {
          "type": "string",
          "description": "Email address",
          "pattern": "^\\S+@\\S+\\.\\S+$"
        },
        "userPrincipalName": {
          "type": "string",
          "description": "User principal name"
        },
        "aadEmail": {
          "type": "string",
          "description": "AAD email address"
        }
      },
      "required": [
        "emailAddress"
      ]
    },
    "UserRecord": {
      "type": "object",
      "description": "Record of the user",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of account"
        },
        "id": {
          "type": "string",
          "description": "Id of the user"
        },
        "metadata": {
          "description": "Metadata of the record",
          "type": "object",
          "properties": {
            "self": {
              "type": "string",
              "description": "Self lookup url"
            },
            "resource_name": {
              "type": "string",
              "description": "Resource name of the record"
            },
            "created_at": {
              "type": "string",
              "description": "Created Date Time"
            },
            "updated_at": {
              "type": "string",
              "description": "Updated Date time"
            },
            "deleted_at": {
              "type": "string",
              "description": "Deleted Date time"
            }
          }
        },
        "email": {
          "type": "string",
          "description": "Email of the user"
        },
        "full_name": {
          "type": "string",
          "description": "Name of the user"
        },
        "auth_type": {
          "type": "string",
          "description": "Auth type of the user"
        }
      }
    },
    "ValidationResponse": {
      "type": "object",
      "description": "Validation response from the provider",
      "properties": {
        "info": {
          "type": "object",
          "description": "Info from the response",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {}
}