{
  "swagger": "2.0",
  "info": {
    "title": "Azure netapp",
    "version": "2025-06-01",
    "description": "Azure netapp service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.NetApp/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Describes the Resource Provider",
        "description": "Lists all of the available Microsoft.NetApp Rest API operations",
        "operationId": "Operations_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the request to list Cloud Volume operations. It contains a list of operations and a URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Microsoft.NetApp REST API operation definition.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Operation name: {provider}/{resource}/{operation}",
                        "type": "string"
                      },
                      "display": {
                        "description": "Display metadata associated with the operation.",
                        "properties": {
                          "provider": {
                            "description": "Service provider: Microsoft NetApp.",
                            "type": "string"
                          },
                          "resource": {
                            "description": "Resource on which the operation is performed etc.",
                            "type": "string"
                          },
                          "operation": {
                            "description": "Type of operation: get, read, delete, etc.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Operation description.",
                            "type": "string"
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The origin of operations."
                      },
                      "properties": {
                        "description": "Properties of operation, include metric specifications.",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "serviceSpecification": {
                            "description": "One property of operation, include metric specifications.",
                            "properties": {
                              "metricSpecifications": {
                                "description": "Metric specifications of operation.",
                                "type": "array",
                                "items": {
                                  "description": "Metric specification of operation.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of metric specification."
                                    },
                                    "displayName": {
                                      "type": "string",
                                      "description": "Display name of metric specification."
                                    },
                                    "displayDescription": {
                                      "type": "string",
                                      "description": "Display description of metric specification."
                                    },
                                    "unit": {
                                      "type": "string",
                                      "description": "Unit could be Bytes or Count."
                                    },
                                    "supportedAggregationTypes": {
                                      "description": "Support metric aggregation type.",
                                      "uniqueItems": false,
                                      "type": "array",
                                      "items": {
                                        "enum": [
                                          "Average"
                                        ],
                                        "type": "string",
                                        "x-ms-enum": {
                                          "name": "MetricAggregationType",
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "supportedTimeGrainTypes": {
                                      "type": "array",
                                      "description": "The supported time grain types for the metrics.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "internalMetricName": {
                                      "type": "string",
                                      "description": "The internal metric name."
                                    },
                                    "enableRegionalMdmAccount": {
                                      "description": "Whether or not the service is using regional MDM accounts.",
                                      "type": "boolean"
                                    },
                                    "sourceMdmAccount": {
                                      "type": "string",
                                      "description": "The source MDM account."
                                    },
                                    "sourceMdmNamespace": {
                                      "type": "string",
                                      "description": "The source MDM namespace."
                                    },
                                    "dimensions": {
                                      "description": "Dimensions of blobs, including blob type and access tier.",
                                      "type": "array",
                                      "items": {
                                        "description": "Dimension of blobs, possibly be blob type or access tier.",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Display name of dimension."
                                          },
                                          "displayName": {
                                            "type": "string",
                                            "description": "Display name of dimension."
                                          }
                                        }
                                      },
                                      "x-ms-identifiers": [
                                        "name"
                                      ]
                                    },
                                    "aggregationType": {
                                      "type": "string",
                                      "description": "Aggregation type could be Average."
                                    },
                                    "fillGapWithZero": {
                                      "type": "boolean",
                                      "description": "The property to decide fill gap with zero or not."
                                    },
                                    "category": {
                                      "type": "string",
                                      "description": "The category this metric specification belong to, could be Capacity."
                                    },
                                    "resourceIdDimensionNameOverride": {
                                      "type": "string",
                                      "description": "Account Resource Id."
                                    },
                                    "isInternal": {
                                      "description": "Whether the metric is internal.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              },
                              "logSpecifications": {
                                "description": "Log specification of operation.",
                                "type": "array",
                                "items": {
                                  "description": "Log Definition of a single resource metric.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of log specification.",
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "description": "Display name of log specification.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "name"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ],
                  "description": "List of Storage operations supported by the Storage resource provider."
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkNameAvailability": {
      "post": {
        "tags": [
          "NetApp Resource"
        ],
        "summary": "Check resource name availability",
        "description": "Check if a resource name is available.",
        "operationId": "NetAppResource_CheckNameAvailability",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Name availability request.",
            "required": true,
            "schema": {
              "description": "Resource name availability request content.",
              "required": [
                "name",
                "type",
                "resourceGroup"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "description": "Resource name to verify.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type used for verification.",
                  "enum": [
                    "Microsoft.NetApp/netAppAccounts",
                    "Microsoft.NetApp/netAppAccounts/capacityPools",
                    "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
                    "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "CheckNameResourceTypes",
                    "modelAsString": true
                  }
                },
                "resourceGroup": {
                  "description": "Resource group name.",
                  "type": "string"
                }
              }
            },
            "x-ms-client-flatten": true
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Information regarding availability of a resource.",
              "type": "object",
              "properties": {
                "isAvailable": {
                  "description": "<code>true</code> indicates name is valid and available. <code>false</code> indicates the name is invalid, unavailable, or both.",
                  "type": "boolean"
                },
                "reason": {
                  "description": "<code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable.",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "InAvailabilityReasonType",
                    "modelAsString": true
                  }
                },
                "message": {
                  "description": "If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that resource name is already in use, and direct them to select a different name.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkFilePathAvailability": {
      "post": {
        "tags": [
          "NetApp Resource"
        ],
        "summary": "Check file path availability",
        "description": "Check if a file path is available.",
        "operationId": "NetAppResource_CheckFilePathAvailability",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "File path availability request.",
            "required": true,
            "schema": {
              "description": "File path availability request content - availability is based on the name and the subnetId.",
              "required": [
                "name",
                "subnetId"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "description": "File path to verify.",
                  "type": "string"
                },
                "subnetId": {
                  "type": "string",
                  "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                },
                "availabilityZone": {
                  "title": "Logical availability zone",
                  "type": "string",
                  "example": "1",
                  "x-nullable": true,
                  "description": "The Azure Resource logical availability zone which is used within zone mapping lookup for the subscription and region. The lookup will retrieve the physical zone where volume is placed."
                }
              }
            },
            "x-ms-client-flatten": true
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Information regarding availability of a resource.",
              "type": "object",
              "properties": {
                "isAvailable": {
                  "description": "<code>true</code> indicates name is valid and available. <code>false</code> indicates the name is invalid, unavailable, or both.",
                  "type": "boolean"
                },
                "reason": {
                  "description": "<code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable.",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "InAvailabilityReasonType",
                    "modelAsString": true
                  }
                },
                "message": {
                  "description": "If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that resource name is already in use, and direct them to select a different name.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/checkQuotaAvailability": {
      "post": {
        "tags": [
          "NetApp Resource"
        ],
        "summary": "Check quota availability",
        "description": "Check if a quota is available.",
        "operationId": "NetAppResource_CheckQuotaAvailability",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Quota availability request.",
            "required": true,
            "schema": {
              "description": "Quota availability request content.",
              "required": [
                "name",
                "type",
                "resourceGroup"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the resource to verify.",
                  "type": "string"
                },
                "type": {
                  "description": "Resource type used for verification.",
                  "enum": [
                    "Microsoft.NetApp/netAppAccounts",
                    "Microsoft.NetApp/netAppAccounts/capacityPools",
                    "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
                    "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "CheckQuotaNameResourceTypes",
                    "modelAsString": true
                  }
                },
                "resourceGroup": {
                  "description": "Resource group name.",
                  "type": "string"
                }
              }
            },
            "x-ms-client-flatten": true
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Information regarding availability of a resource.",
              "type": "object",
              "properties": {
                "isAvailable": {
                  "description": "<code>true</code> indicates name is valid and available. <code>false</code> indicates the name is invalid, unavailable, or both.",
                  "type": "boolean"
                },
                "reason": {
                  "description": "<code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable.",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "InAvailabilityReasonType",
                    "modelAsString": true
                  }
                },
                "message": {
                  "description": "If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that resource name is already in use, and direct them to select a different name.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/usages": {
      "get": {
        "tags": [
          "NetApp Resource"
        ],
        "summary": "Get usages",
        "description": "Get current subscription usages",
        "operationId": "NetAppResourceUsages_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Usages result",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A list of usages",
                  "type": "array",
                  "items": {
                    "description": "Usages entity model",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The id of the usage.",
                        "readOnly": true,
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the usage.",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "value": {
                            "description": "The name of the usage.",
                            "type": "string"
                          },
                          "localizedValue": {
                            "description": "The localized name of the usage.",
                            "type": "string"
                          }
                        }
                      },
                      "properties": {
                        "description": "Usage properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "currentValue": {
                            "description": "The current usage value for the subscription.",
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "limit": {
                            "description": "The limit of the usage.",
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "unit": {
                            "description": "The unit of the usage.",
                            "readOnly": true,
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of results."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/usages/{usageType}": {
      "get": {
        "tags": [
          "NetApp Resource"
        ],
        "summary": "Get specific type of usage",
        "description": "Get current subscription usage of the specific type",
        "operationId": "NetAppResourceUsages_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "usageType",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The type of usage",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Usages entity model",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The id of the usage.",
                  "readOnly": true,
                  "type": "string"
                },
                "name": {
                  "description": "The name of the usage.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "value": {
                      "description": "The name of the usage.",
                      "type": "string"
                    },
                    "localizedValue": {
                      "description": "The localized name of the usage.",
                      "type": "string"
                    }
                  }
                },
                "properties": {
                  "description": "Usage properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "currentValue": {
                      "description": "The current usage value for the subscription.",
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32"
                    },
                    "limit": {
                      "description": "The limit of the usage.",
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32"
                    },
                    "unit": {
                      "description": "The unit of the usage.",
                      "readOnly": true,
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/quotaLimits": {
      "get": {
        "tags": [
          "NetApp Resource"
        ],
        "summary": "Get quota limits",
        "description": "Get the default and current limits for quotas",
        "operationId": "NetAppResourceQuotaLimits_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of Subscription Quota Items",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A list of SubscriptionQuotaItems",
                  "type": "array",
                  "items": {
                    "description": "Information regarding Subscription Quota Item.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "SubscriptionQuotaItem properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "current": {
                            "description": "The current quota value.",
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          },
                          "default": {
                            "description": "The default quota value.",
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of results."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/quotaLimits/{quotaLimitName}": {
      "get": {
        "tags": [
          "NetApp Resource"
        ],
        "summary": "Get quota limits",
        "description": "Get the default and current subscription quota limit",
        "operationId": "NetAppResourceQuotaLimits_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "quotaLimitName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,62}$",
            "description": "The name of the Quota Limit",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Information regarding Subscription Quota Item.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "SubscriptionQuotaItem properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "current": {
                      "description": "The current quota value.",
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32"
                    },
                    "default": {
                      "description": "The default quota value.",
                      "readOnly": true,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/regionInfo": {
      "get": {
        "summary": "Describes region specific information.",
        "description": "Provides storage to network proximity and logical zone mapping information.",
        "tags": [
          "NetApp Resource"
        ],
        "operationId": "NetAppResource_QueryRegionInfo",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Provides region specific information.",
              "type": "object",
              "properties": {
                "storageToNetworkProximity": {
                  "title": "Storage to Network Proximity",
                  "description": "Provides storage to network proximity information in the region.",
                  "type": "string",
                  "enum": [
                    "Default",
                    "T1",
                    "T2",
                    "AcrossT2",
                    "T1AndT2",
                    "T1AndAcrossT2",
                    "T2AndAcrossT2",
                    "T1AndT2AndAcrossT2"
                  ],
                  "x-ms-enum": {
                    "name": "RegionStorageToNetworkProximity",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Default",
                        "description": "Basic network connectivity."
                      },
                      {
                        "value": "T1",
                        "description": "Standard T1 network connectivity."
                      },
                      {
                        "value": "T2",
                        "description": "Standard T2 network connectivity."
                      },
                      {
                        "value": "AcrossT2",
                        "description": "Standard AcrossT2 network connectivity."
                      },
                      {
                        "value": "T1AndT2",
                        "description": "Standard T1 and T2 network connectivity."
                      },
                      {
                        "value": "T1AndAcrossT2",
                        "description": "Standard T1 and AcrossT2 network connectivity."
                      },
                      {
                        "value": "T2AndAcrossT2",
                        "description": "Standard T2 and AcrossT2 network connectivity."
                      },
                      {
                        "value": "T1AndT2AndAcrossT2",
                        "description": "Standard T1, T2 and AcrossT2 network connectivity."
                      }
                    ]
                  },
                  "example": "T2"
                },
                "availabilityZoneMappings": {
                  "title": "Logical availability zone mappings.",
                  "description": "Provides logical availability zone mappings for the subscription for a region.",
                  "type": "array",
                  "x-ms-identifiers": [
                    "availabilityZone"
                  ],
                  "items": {
                    "type": "object",
                    "properties": {
                      "availabilityZone": {
                        "description": "Logical availability zone.",
                        "type": "string",
                        "example": "1"
                      },
                      "isAvailable": {
                        "description": "Available availability zone",
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/regionInfos": {
      "get": {
        "summary": "Describes region specific information.",
        "description": "Provides region specific information.",
        "tags": [
          "NetApp Resource"
        ],
        "operationId": "NetAppResourceRegionInfos_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of regionInfo resources",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A list of regionInfo resources",
                  "type": "array",
                  "items": {
                    "description": "Information regarding regionInfo Item.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Provides region specific information.",
                        "type": "object",
                        "properties": {
                          "storageToNetworkProximity": {
                            "title": "Storage to Network Proximity",
                            "description": "Provides storage to network proximity information in the region.",
                            "type": "string",
                            "enum": [
                              "Default",
                              "T1",
                              "T2",
                              "AcrossT2",
                              "T1AndT2",
                              "T1AndAcrossT2",
                              "T2AndAcrossT2",
                              "T1AndT2AndAcrossT2"
                            ],
                            "x-ms-enum": {
                              "name": "RegionStorageToNetworkProximity",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Default",
                                  "description": "Basic network connectivity."
                                },
                                {
                                  "value": "T1",
                                  "description": "Standard T1 network connectivity."
                                },
                                {
                                  "value": "T2",
                                  "description": "Standard T2 network connectivity."
                                },
                                {
                                  "value": "AcrossT2",
                                  "description": "Standard AcrossT2 network connectivity."
                                },
                                {
                                  "value": "T1AndT2",
                                  "description": "Standard T1 and T2 network connectivity."
                                },
                                {
                                  "value": "T1AndAcrossT2",
                                  "description": "Standard T1 and AcrossT2 network connectivity."
                                },
                                {
                                  "value": "T2AndAcrossT2",
                                  "description": "Standard T2 and AcrossT2 network connectivity."
                                },
                                {
                                  "value": "T1AndT2AndAcrossT2",
                                  "description": "Standard T1, T2 and AcrossT2 network connectivity."
                                }
                              ]
                            },
                            "example": "T2"
                          },
                          "availabilityZoneMappings": {
                            "title": "Logical availability zone mappings.",
                            "description": "Provides logical availability zone mappings for the subscription for a region.",
                            "type": "array",
                            "x-ms-identifiers": [
                              "availabilityZone"
                            ],
                            "items": {
                              "type": "object",
                              "properties": {
                                "availabilityZone": {
                                  "description": "Logical availability zone.",
                                  "type": "string",
                                  "example": "1"
                                },
                                "isAvailable": {
                                  "description": "Available availability zone",
                                  "type": "boolean",
                                  "example": true
                                }
                              }
                            }
                          }
                        },
                        "x-ms-client-flatten": true
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of results."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/regionInfos/default": {
      "get": {
        "summary": "Describes region specific information.",
        "description": "Provides storage to network proximity and logical zone mapping information.",
        "tags": [
          "NetApp Resource"
        ],
        "operationId": "NetAppResourceRegionInfos_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Information regarding regionInfo Item.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Provides region specific information.",
                  "type": "object",
                  "properties": {
                    "storageToNetworkProximity": {
                      "title": "Storage to Network Proximity",
                      "description": "Provides storage to network proximity information in the region.",
                      "type": "string",
                      "enum": [
                        "Default",
                        "T1",
                        "T2",
                        "AcrossT2",
                        "T1AndT2",
                        "T1AndAcrossT2",
                        "T2AndAcrossT2",
                        "T1AndT2AndAcrossT2"
                      ],
                      "x-ms-enum": {
                        "name": "RegionStorageToNetworkProximity",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Default",
                            "description": "Basic network connectivity."
                          },
                          {
                            "value": "T1",
                            "description": "Standard T1 network connectivity."
                          },
                          {
                            "value": "T2",
                            "description": "Standard T2 network connectivity."
                          },
                          {
                            "value": "AcrossT2",
                            "description": "Standard AcrossT2 network connectivity."
                          },
                          {
                            "value": "T1AndT2",
                            "description": "Standard T1 and T2 network connectivity."
                          },
                          {
                            "value": "T1AndAcrossT2",
                            "description": "Standard T1 and AcrossT2 network connectivity."
                          },
                          {
                            "value": "T2AndAcrossT2",
                            "description": "Standard T2 and AcrossT2 network connectivity."
                          },
                          {
                            "value": "T1AndT2AndAcrossT2",
                            "description": "Standard T1, T2 and AcrossT2 network connectivity."
                          }
                        ]
                      },
                      "example": "T2"
                    },
                    "availabilityZoneMappings": {
                      "title": "Logical availability zone mappings.",
                      "description": "Provides logical availability zone mappings for the subscription for a region.",
                      "type": "array",
                      "x-ms-identifiers": [
                        "availabilityZone"
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "availabilityZone": {
                            "description": "Logical availability zone.",
                            "type": "string",
                            "example": "1"
                          },
                          "isAvailable": {
                            "description": "Available availability zone",
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    }
                  },
                  "x-ms-client-flatten": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/queryNetworkSiblingSet": {
      "post": {
        "tags": [
          "NetApp Resource"
        ],
        "summary": "Describe a network sibling set",
        "description": "Get details of the specified network sibling set.",
        "operationId": "NetAppResource_QueryNetworkSiblingSet",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Network sibling set to query.",
            "required": true,
            "schema": {
              "title": "QueryNetworkSiblingSetRequest",
              "description": "Network sibling set query.",
              "type": "object",
              "required": [
                "networkSiblingSetId",
                "subnetId"
              ],
              "properties": {
                "networkSiblingSetId": {
                  "title": "Network Sibling Set ID",
                  "description": "Network Sibling Set ID for a group of volumes sharing networking resources in a subnet.",
                  "type": "string",
                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                },
                "subnetId": {
                  "title": "Subnet resource Id",
                  "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes. Example /subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/Microsoft.Network/virtualNetworks/testVnet/subnets/{mySubnet}",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                      }
                    ]
                  },
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                }
              }
            },
            "x-ms-client-flatten": true
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "Network sibling set",
              "description": "Describes the contents of a network sibling set.",
              "type": "object",
              "properties": {
                "networkSiblingSetId": {
                  "title": "Network Sibling Set ID",
                  "description": "Network Sibling Set ID for a group of volumes sharing networking resources in a subnet.",
                  "type": "string",
                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                },
                "subnetId": {
                  "title": "Subnet resource Id",
                  "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes. Example /subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/Microsoft.Network/virtualNetworks/testVnet/subnets/{mySubnet}",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                      }
                    ]
                  },
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "networkSiblingSetStateId": {
                  "title": "Network sibling set state Id",
                  "description": "Network sibling set state Id identifying the current state of the sibling set.",
                  "type": "string",
                  "example": "12345_44420.8001578125"
                },
                "networkFeatures": {
                  "title": "Network features",
                  "description": "Network features available to the volume, or current state of update.",
                  "type": "string",
                  "enum": [
                    "Basic",
                    "Standard",
                    "Basic_Standard",
                    "Standard_Basic"
                  ],
                  "x-ms-enum": {
                    "name": "NetworkFeatures",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Basic",
                        "description": "Basic network features."
                      },
                      {
                        "value": "Standard",
                        "description": "Standard network features."
                      },
                      {
                        "value": "Basic_Standard",
                        "description": "Updating from Basic to Standard network features."
                      },
                      {
                        "value": "Standard_Basic",
                        "description": "Updating from Standard to Basic network features."
                      }
                    ]
                  },
                  "example": "Standard",
                  "default": "Basic"
                },
                "provisioningState": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Gets the status of the NetworkSiblingSet at the time the operation was called.",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Updating"
                  ],
                  "x-ms-enum": {
                    "name": "NetworkSiblingSetProvisioningState",
                    "modelAsString": true
                  }
                },
                "nicInfoList": {
                  "type": "array",
                  "x-ms-identifiers": [],
                  "description": "List of NIC information",
                  "items": {
                    "title": "NIC information",
                    "description": "NIC information and list of volumes for which the NIC has the primary mount ip address.",
                    "type": "object",
                    "properties": {
                      "ipAddress": {
                        "title": "ipAddress",
                        "type": "string",
                        "readOnly": true,
                        "example": "1.2.3.4"
                      },
                      "volumeResourceIds": {
                        "title": "Volume resource Ids",
                        "type": "array",
                        "items": {
                          "title": "Resource Id of volume",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/locations/{location}/updateNetworkSiblingSet": {
      "post": {
        "tags": [
          "NetApp Resource"
        ],
        "summary": "Update the network features of a network sibling set",
        "description": "Update the network features of the specified network sibling set.",
        "operationId": "NetAppResource_UpdateNetworkSiblingSet",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update for the specified network sibling set.",
            "required": true,
            "schema": {
              "title": "UpdateNetworkSiblingSetRequest",
              "description": "Network sibling set update.",
              "type": "object",
              "required": [
                "networkSiblingSetId",
                "subnetId",
                "networkSiblingSetStateId",
                "networkFeatures"
              ],
              "properties": {
                "networkSiblingSetId": {
                  "title": "Network Sibling Set ID",
                  "description": "Network Sibling Set ID for a group of volumes sharing networking resources in a subnet.",
                  "type": "string",
                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                },
                "subnetId": {
                  "title": "Subnet resource Id",
                  "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes. Example /subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/Microsoft.Network/virtualNetworks/testVnet/subnets/{mySubnet}",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                      }
                    ]
                  },
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "networkSiblingSetStateId": {
                  "title": "Network sibling set state Id",
                  "description": "Network sibling set state Id identifying the current state of the sibling set.",
                  "type": "string",
                  "example": "12345_44420.8001578125"
                },
                "networkFeatures": {
                  "title": "Network features",
                  "description": "Network features available to the volume, or current state of update.",
                  "type": "string",
                  "enum": [
                    "Basic",
                    "Standard",
                    "Basic_Standard",
                    "Standard_Basic"
                  ],
                  "x-ms-enum": {
                    "name": "NetworkFeatures",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Basic",
                        "description": "Basic network features."
                      },
                      {
                        "value": "Standard",
                        "description": "Standard network features."
                      },
                      {
                        "value": "Basic_Standard",
                        "description": "Updating from Basic to Standard network features."
                      },
                      {
                        "value": "Standard_Basic",
                        "description": "Updating from Standard to Basic network features."
                      }
                    ]
                  },
                  "example": "Standard",
                  "default": "Basic"
                }
              }
            },
            "x-ms-client-flatten": true
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "Network sibling set",
              "description": "Describes the contents of a network sibling set.",
              "type": "object",
              "properties": {
                "networkSiblingSetId": {
                  "title": "Network Sibling Set ID",
                  "description": "Network Sibling Set ID for a group of volumes sharing networking resources in a subnet.",
                  "type": "string",
                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                },
                "subnetId": {
                  "title": "Subnet resource Id",
                  "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes. Example /subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/Microsoft.Network/virtualNetworks/testVnet/subnets/{mySubnet}",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                      }
                    ]
                  },
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "networkSiblingSetStateId": {
                  "title": "Network sibling set state Id",
                  "description": "Network sibling set state Id identifying the current state of the sibling set.",
                  "type": "string",
                  "example": "12345_44420.8001578125"
                },
                "networkFeatures": {
                  "title": "Network features",
                  "description": "Network features available to the volume, or current state of update.",
                  "type": "string",
                  "enum": [
                    "Basic",
                    "Standard",
                    "Basic_Standard",
                    "Standard_Basic"
                  ],
                  "x-ms-enum": {
                    "name": "NetworkFeatures",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Basic",
                        "description": "Basic network features."
                      },
                      {
                        "value": "Standard",
                        "description": "Standard network features."
                      },
                      {
                        "value": "Basic_Standard",
                        "description": "Updating from Basic to Standard network features."
                      },
                      {
                        "value": "Standard_Basic",
                        "description": "Updating from Standard to Basic network features."
                      }
                    ]
                  },
                  "example": "Standard",
                  "default": "Basic"
                },
                "provisioningState": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Gets the status of the NetworkSiblingSet at the time the operation was called.",
                  "enum": [
                    "Succeeded",
                    "Failed",
                    "Canceled",
                    "Updating"
                  ],
                  "x-ms-enum": {
                    "name": "NetworkSiblingSetProvisioningState",
                    "modelAsString": true
                  }
                },
                "nicInfoList": {
                  "type": "array",
                  "x-ms-identifiers": [],
                  "description": "List of NIC information",
                  "items": {
                    "title": "NIC information",
                    "description": "NIC information and list of volumes for which the NIC has the primary mount ip address.",
                    "type": "object",
                    "properties": {
                      "ipAddress": {
                        "title": "ipAddress",
                        "type": "string",
                        "readOnly": true,
                        "example": "1.2.3.4"
                      },
                      "volumeResourceIds": {
                        "title": "Volume resource Ids",
                        "type": "array",
                        "items": {
                          "title": "Resource Id of volume",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted -- Update request accepted; operation will complete asynchronously",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/netAppAccounts": {
      "get": {
        "summary": "Describe all NetApp Accounts in a subscription",
        "description": "List and describe all NetApp accounts in the subscription.",
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_ListBySubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of NetApp account resources",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Multiple NetApp accounts",
                  "items": {
                    "description": "NetApp account resource",
                    "type": "object",
                    "required": [
                      "location"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "etag": {
                        "readOnly": true,
                        "type": "string",
                        "description": "A unique read-only string that changes whenever the resource is updated."
                      },
                      "properties": {
                        "description": "NetApp Account properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Azure lifecycle management"
                          },
                          "activeDirectories": {
                            "description": "Active Directories",
                            "type": "array",
                            "items": {
                              "description": "Active Directory",
                              "type": "object",
                              "properties": {
                                "activeDirectoryId": {
                                  "type": "string",
                                  "x-nullable": true,
                                  "description": "Id of the Active Directory"
                                },
                                "username": {
                                  "type": "string",
                                  "description": "A domain user account with permission to create machine accounts"
                                },
                                "password": {
                                  "type": "string",
                                  "x-ms-secret": true,
                                  "maxLength": 64,
                                  "description": "Plain text password of Active Directory domain administrator, value is masked in the response"
                                },
                                "domain": {
                                  "type": "string",
                                  "description": "Name of the Active Directory domain"
                                },
                                "dns": {
                                  "type": "string",
                                  "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
                                  "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
                                  "example": "101.102.103.104,101.102.103.105"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status of the Active Directory",
                                  "readOnly": true,
                                  "enum": [
                                    "Created",
                                    "Updating",
                                    "InUse",
                                    "Deleted",
                                    "Error"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ActiveDirectoryStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Created",
                                        "description": "Active Directory created but not in use"
                                      },
                                      {
                                        "value": "InUse",
                                        "description": "Active Directory in use by SMB Volume"
                                      },
                                      {
                                        "value": "Deleted",
                                        "description": "Active Directory Deleted"
                                      },
                                      {
                                        "value": "Error",
                                        "description": "Error with the Active Directory"
                                      },
                                      {
                                        "value": "Updating",
                                        "description": "Active Directory Updating"
                                      }
                                    ]
                                  }
                                },
                                "statusDetails": {
                                  "type": "string",
                                  "description": "Any details in regards to the Status of the Active Directory",
                                  "readOnly": true
                                },
                                "smbServerName": {
                                  "type": "string",
                                  "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
                                },
                                "organizationalUnit": {
                                  "type": "string",
                                  "default": "CN=Computers",
                                  "description": "The Organizational Unit (OU) within the Windows Active Directory"
                                },
                                "site": {
                                  "type": "string",
                                  "description": "The Active Directory site the service will limit Domain Controller discovery to"
                                },
                                "backupOperators": {
                                  "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "minLength": 1
                                  },
                                  "example": [
                                    "user1",
                                    "user2"
                                  ]
                                },
                                "administrators": {
                                  "description": "Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier",
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "minLength": 1
                                  },
                                  "example": [
                                    "user1",
                                    "user2"
                                  ]
                                },
                                "kdcIP": {
                                  "type": "string",
                                  "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                                  "description": "kdc server IP address for the active directory machine. This optional parameter is used only while creating kerberos volume.",
                                  "example": "101.102.103.104"
                                },
                                "adName": {
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
                                  "example": "ADServerName"
                                },
                                "serverRootCACertificate": {
                                  "type": "string",
                                  "maxLength": 10240,
                                  "minLength": 1,
                                  "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
                                  "x-ms-secret": true,
                                  "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                                },
                                "aesEncryption": {
                                  "type": "boolean",
                                  "description": "If enabled, AES encryption will be enabled for SMB communication."
                                },
                                "ldapSigning": {
                                  "type": "boolean",
                                  "description": "Specifies whether or not the LDAP traffic needs to be signed."
                                },
                                "securityOperators": {
                                  "type": "array",
                                  "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
                                  "items": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "minLength": 1
                                  },
                                  "example": [
                                    "user1",
                                    "user2"
                                  ]
                                },
                                "ldapOverTLS": {
                                  "type": "boolean",
                                  "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
                                },
                                "allowLocalNfsUsersWithLdap": {
                                  "type": "boolean",
                                  "description": " If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
                                },
                                "encryptDCConnections": {
                                  "type": "boolean",
                                  "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
                                },
                                "ldapSearchScope": {
                                  "description": "LDAP Search scope options",
                                  "type": "object",
                                  "properties": {
                                    "userDN": {
                                      "type": "string",
                                      "description": "This specifies the user DN, which overrides the base DN for user lookups.",
                                      "maxLength": 255,
                                      "example": "OU=fin,OU=hr,dc=domain,dc=com"
                                    },
                                    "groupDN": {
                                      "type": "string",
                                      "description": "This specifies the group DN, which overrides the base DN for group lookups.",
                                      "maxLength": 255,
                                      "example": "OU=fin,OU=hr,dc=domain,dc=com"
                                    },
                                    "groupMembershipFilter": {
                                      "type": "string",
                                      "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
                                      "maxLength": 255,
                                      "example": "cn=*99"
                                    }
                                  }
                                },
                                "preferredServersForLdapClient": {
                                  "type": "string",
                                  "maxLength": 32,
                                  "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
                                  "description": "Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.",
                                  "example": "101.102.103.104, 101.102.103.105"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "activeDirectoryId"
                            ]
                          },
                          "encryption": {
                            "description": "Encryption settings",
                            "type": "object",
                            "properties": {
                              "keySource": {
                                "type": "string",
                                "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
                                "enum": [
                                  "Microsoft.NetApp",
                                  "Microsoft.KeyVault"
                                ],
                                "x-ms-enum": {
                                  "name": "KeySource",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Microsoft.NetApp",
                                      "description": "Microsoft-managed key encryption"
                                    },
                                    {
                                      "value": "Microsoft.KeyVault",
                                      "description": "Customer-managed key encryption"
                                    }
                                  ]
                                },
                                "default": "Microsoft.NetApp"
                              },
                              "keyVaultProperties": {
                                "description": "Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                                "type": "object",
                                "required": [
                                  "keyVaultUri",
                                  "keyName"
                                ],
                                "properties": {
                                  "keyVaultId": {
                                    "type": "string",
                                    "description": "UUID v4 used to identify the Azure Key Vault configuration",
                                    "readOnly": true,
                                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                                  },
                                  "keyVaultUri": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "The Uri of KeyVault."
                                  },
                                  "keyName": {
                                    "type": "string",
                                    "description": "The name of KeyVault key."
                                  },
                                  "keyVaultResourceId": {
                                    "type": "string",
                                    "description": "The resource ID of KeyVault.",
                                    "format": "arm-id",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.KeyVault/vaults"
                                        }
                                      ]
                                    }
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Status of the KeyVault connection.",
                                    "readOnly": true,
                                    "enum": [
                                      "Created",
                                      "Updating",
                                      "InUse",
                                      "Deleted",
                                      "Error"
                                    ],
                                    "x-ms-enum": {
                                      "name": "KeyVaultStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "Created",
                                          "description": "KeyVault connection created but not in use"
                                        },
                                        {
                                          "value": "InUse",
                                          "description": "KeyVault connection in use by SMB Volume"
                                        },
                                        {
                                          "value": "Deleted",
                                          "description": "KeyVault connection Deleted"
                                        },
                                        {
                                          "value": "Error",
                                          "description": "Error with the KeyVault connection"
                                        },
                                        {
                                          "value": "Updating",
                                          "description": "KeyVault connection Updating"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "identity": {
                                "description": "Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                                "type": "object",
                                "properties": {
                                  "principalId": {
                                    "type": "string",
                                    "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
                                    "readOnly": true
                                  },
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
                                  },
                                  "federatedClientId": {
                                    "type": "string",
                                    "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults.",
                                    "example": "87654321-1234-1234-1234-876543214321"
                                  }
                                }
                              }
                            }
                          },
                          "disableShowmount": {
                            "type": "boolean",
                            "readOnly": true,
                            "x-nullable": true,
                            "description": "Shows the status of disableShowmount for all volumes under the subscription, null equals false"
                          },
                          "nfsV4IDDomain": {
                            "type": "string",
                            "description": "Domain for NFSv4 user ID mapping. This property will be set for all NetApp accounts in the subscription and region and only affect non ldap NFSv4 volumes.",
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$",
                            "x-nullable": true,
                            "example": "defaultv4iddomain.com"
                          },
                          "multiAdStatus": {
                            "title": "multiAdStatus",
                            "type": "string",
                            "readOnly": true,
                            "description": "MultiAD Status for the account",
                            "enum": [
                              "Disabled",
                              "Enabled"
                            ],
                            "x-ms-enum": {
                              "name": "multiAdStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Disabled",
                                  "description": "Account is MultiAD disabled, Means its a SharedAD or SingleAD account."
                                },
                                {
                                  "value": "Enabled",
                                  "description": "Account is MultiAD enabled"
                                }
                              ]
                            },
                            "example": "Enabled"
                          }
                        }
                      },
                      "identity": {
                        "description": "The identity used for the resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of results."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts": {
      "get": {
        "summary": "Describe all NetApp Accounts in a resource group",
        "description": "List and describe all NetApp accounts in the resource group.",
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of NetApp account resources",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Multiple NetApp accounts",
                  "items": {
                    "description": "NetApp account resource",
                    "type": "object",
                    "required": [
                      "location"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "etag": {
                        "readOnly": true,
                        "type": "string",
                        "description": "A unique read-only string that changes whenever the resource is updated."
                      },
                      "properties": {
                        "description": "NetApp Account properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Azure lifecycle management"
                          },
                          "activeDirectories": {
                            "description": "Active Directories",
                            "type": "array",
                            "items": {
                              "description": "Active Directory",
                              "type": "object",
                              "properties": {
                                "activeDirectoryId": {
                                  "type": "string",
                                  "x-nullable": true,
                                  "description": "Id of the Active Directory"
                                },
                                "username": {
                                  "type": "string",
                                  "description": "A domain user account with permission to create machine accounts"
                                },
                                "password": {
                                  "type": "string",
                                  "x-ms-secret": true,
                                  "maxLength": 64,
                                  "description": "Plain text password of Active Directory domain administrator, value is masked in the response"
                                },
                                "domain": {
                                  "type": "string",
                                  "description": "Name of the Active Directory domain"
                                },
                                "dns": {
                                  "type": "string",
                                  "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
                                  "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
                                  "example": "101.102.103.104,101.102.103.105"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status of the Active Directory",
                                  "readOnly": true,
                                  "enum": [
                                    "Created",
                                    "Updating",
                                    "InUse",
                                    "Deleted",
                                    "Error"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ActiveDirectoryStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Created",
                                        "description": "Active Directory created but not in use"
                                      },
                                      {
                                        "value": "InUse",
                                        "description": "Active Directory in use by SMB Volume"
                                      },
                                      {
                                        "value": "Deleted",
                                        "description": "Active Directory Deleted"
                                      },
                                      {
                                        "value": "Error",
                                        "description": "Error with the Active Directory"
                                      },
                                      {
                                        "value": "Updating",
                                        "description": "Active Directory Updating"
                                      }
                                    ]
                                  }
                                },
                                "statusDetails": {
                                  "type": "string",
                                  "description": "Any details in regards to the Status of the Active Directory",
                                  "readOnly": true
                                },
                                "smbServerName": {
                                  "type": "string",
                                  "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
                                },
                                "organizationalUnit": {
                                  "type": "string",
                                  "default": "CN=Computers",
                                  "description": "The Organizational Unit (OU) within the Windows Active Directory"
                                },
                                "site": {
                                  "type": "string",
                                  "description": "The Active Directory site the service will limit Domain Controller discovery to"
                                },
                                "backupOperators": {
                                  "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "minLength": 1
                                  },
                                  "example": [
                                    "user1",
                                    "user2"
                                  ]
                                },
                                "administrators": {
                                  "description": "Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier",
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "minLength": 1
                                  },
                                  "example": [
                                    "user1",
                                    "user2"
                                  ]
                                },
                                "kdcIP": {
                                  "type": "string",
                                  "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                                  "description": "kdc server IP address for the active directory machine. This optional parameter is used only while creating kerberos volume.",
                                  "example": "101.102.103.104"
                                },
                                "adName": {
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
                                  "example": "ADServerName"
                                },
                                "serverRootCACertificate": {
                                  "type": "string",
                                  "maxLength": 10240,
                                  "minLength": 1,
                                  "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
                                  "x-ms-secret": true,
                                  "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                                },
                                "aesEncryption": {
                                  "type": "boolean",
                                  "description": "If enabled, AES encryption will be enabled for SMB communication."
                                },
                                "ldapSigning": {
                                  "type": "boolean",
                                  "description": "Specifies whether or not the LDAP traffic needs to be signed."
                                },
                                "securityOperators": {
                                  "type": "array",
                                  "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
                                  "items": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "minLength": 1
                                  },
                                  "example": [
                                    "user1",
                                    "user2"
                                  ]
                                },
                                "ldapOverTLS": {
                                  "type": "boolean",
                                  "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
                                },
                                "allowLocalNfsUsersWithLdap": {
                                  "type": "boolean",
                                  "description": " If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
                                },
                                "encryptDCConnections": {
                                  "type": "boolean",
                                  "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
                                },
                                "ldapSearchScope": {
                                  "description": "LDAP Search scope options",
                                  "type": "object",
                                  "properties": {
                                    "userDN": {
                                      "type": "string",
                                      "description": "This specifies the user DN, which overrides the base DN for user lookups.",
                                      "maxLength": 255,
                                      "example": "OU=fin,OU=hr,dc=domain,dc=com"
                                    },
                                    "groupDN": {
                                      "type": "string",
                                      "description": "This specifies the group DN, which overrides the base DN for group lookups.",
                                      "maxLength": 255,
                                      "example": "OU=fin,OU=hr,dc=domain,dc=com"
                                    },
                                    "groupMembershipFilter": {
                                      "type": "string",
                                      "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
                                      "maxLength": 255,
                                      "example": "cn=*99"
                                    }
                                  }
                                },
                                "preferredServersForLdapClient": {
                                  "type": "string",
                                  "maxLength": 32,
                                  "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
                                  "description": "Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.",
                                  "example": "101.102.103.104, 101.102.103.105"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "activeDirectoryId"
                            ]
                          },
                          "encryption": {
                            "description": "Encryption settings",
                            "type": "object",
                            "properties": {
                              "keySource": {
                                "type": "string",
                                "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
                                "enum": [
                                  "Microsoft.NetApp",
                                  "Microsoft.KeyVault"
                                ],
                                "x-ms-enum": {
                                  "name": "KeySource",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Microsoft.NetApp",
                                      "description": "Microsoft-managed key encryption"
                                    },
                                    {
                                      "value": "Microsoft.KeyVault",
                                      "description": "Customer-managed key encryption"
                                    }
                                  ]
                                },
                                "default": "Microsoft.NetApp"
                              },
                              "keyVaultProperties": {
                                "description": "Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                                "type": "object",
                                "required": [
                                  "keyVaultUri",
                                  "keyName"
                                ],
                                "properties": {
                                  "keyVaultId": {
                                    "type": "string",
                                    "description": "UUID v4 used to identify the Azure Key Vault configuration",
                                    "readOnly": true,
                                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                                  },
                                  "keyVaultUri": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "The Uri of KeyVault."
                                  },
                                  "keyName": {
                                    "type": "string",
                                    "description": "The name of KeyVault key."
                                  },
                                  "keyVaultResourceId": {
                                    "type": "string",
                                    "description": "The resource ID of KeyVault.",
                                    "format": "arm-id",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.KeyVault/vaults"
                                        }
                                      ]
                                    }
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Status of the KeyVault connection.",
                                    "readOnly": true,
                                    "enum": [
                                      "Created",
                                      "Updating",
                                      "InUse",
                                      "Deleted",
                                      "Error"
                                    ],
                                    "x-ms-enum": {
                                      "name": "KeyVaultStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "Created",
                                          "description": "KeyVault connection created but not in use"
                                        },
                                        {
                                          "value": "InUse",
                                          "description": "KeyVault connection in use by SMB Volume"
                                        },
                                        {
                                          "value": "Deleted",
                                          "description": "KeyVault connection Deleted"
                                        },
                                        {
                                          "value": "Error",
                                          "description": "Error with the KeyVault connection"
                                        },
                                        {
                                          "value": "Updating",
                                          "description": "KeyVault connection Updating"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "identity": {
                                "description": "Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                                "type": "object",
                                "properties": {
                                  "principalId": {
                                    "type": "string",
                                    "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
                                    "readOnly": true
                                  },
                                  "userAssignedIdentity": {
                                    "type": "string",
                                    "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
                                  },
                                  "federatedClientId": {
                                    "type": "string",
                                    "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults.",
                                    "example": "87654321-1234-1234-1234-876543214321"
                                  }
                                }
                              }
                            }
                          },
                          "disableShowmount": {
                            "type": "boolean",
                            "readOnly": true,
                            "x-nullable": true,
                            "description": "Shows the status of disableShowmount for all volumes under the subscription, null equals false"
                          },
                          "nfsV4IDDomain": {
                            "type": "string",
                            "description": "Domain for NFSv4 user ID mapping. This property will be set for all NetApp accounts in the subscription and region and only affect non ldap NFSv4 volumes.",
                            "maxLength": 255,
                            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$",
                            "x-nullable": true,
                            "example": "defaultv4iddomain.com"
                          },
                          "multiAdStatus": {
                            "title": "multiAdStatus",
                            "type": "string",
                            "readOnly": true,
                            "description": "MultiAD Status for the account",
                            "enum": [
                              "Disabled",
                              "Enabled"
                            ],
                            "x-ms-enum": {
                              "name": "multiAdStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Disabled",
                                  "description": "Account is MultiAD disabled, Means its a SharedAD or SingleAD account."
                                },
                                {
                                  "value": "Enabled",
                                  "description": "Account is MultiAD enabled"
                                }
                              ]
                            },
                            "example": "Enabled"
                          }
                        }
                      },
                      "identity": {
                        "description": "The identity used for the resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "x-nullable": true,
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of results."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}": {
      "get": {
        "summary": "Describe a NetApp Account",
        "description": "Get the NetApp account",
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "NetApp account resource",
              "type": "object",
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "NetApp Account properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "activeDirectories": {
                      "description": "Active Directories",
                      "type": "array",
                      "items": {
                        "description": "Active Directory",
                        "type": "object",
                        "properties": {
                          "activeDirectoryId": {
                            "type": "string",
                            "x-nullable": true,
                            "description": "Id of the Active Directory"
                          },
                          "username": {
                            "type": "string",
                            "description": "A domain user account with permission to create machine accounts"
                          },
                          "password": {
                            "type": "string",
                            "x-ms-secret": true,
                            "maxLength": 64,
                            "description": "Plain text password of Active Directory domain administrator, value is masked in the response"
                          },
                          "domain": {
                            "type": "string",
                            "description": "Name of the Active Directory domain"
                          },
                          "dns": {
                            "type": "string",
                            "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
                            "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
                            "example": "101.102.103.104,101.102.103.105"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the Active Directory",
                            "readOnly": true,
                            "enum": [
                              "Created",
                              "Updating",
                              "InUse",
                              "Deleted",
                              "Error"
                            ],
                            "x-ms-enum": {
                              "name": "ActiveDirectoryStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Created",
                                  "description": "Active Directory created but not in use"
                                },
                                {
                                  "value": "InUse",
                                  "description": "Active Directory in use by SMB Volume"
                                },
                                {
                                  "value": "Deleted",
                                  "description": "Active Directory Deleted"
                                },
                                {
                                  "value": "Error",
                                  "description": "Error with the Active Directory"
                                },
                                {
                                  "value": "Updating",
                                  "description": "Active Directory Updating"
                                }
                              ]
                            }
                          },
                          "statusDetails": {
                            "type": "string",
                            "description": "Any details in regards to the Status of the Active Directory",
                            "readOnly": true
                          },
                          "smbServerName": {
                            "type": "string",
                            "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
                          },
                          "organizationalUnit": {
                            "type": "string",
                            "default": "CN=Computers",
                            "description": "The Organizational Unit (OU) within the Windows Active Directory"
                          },
                          "site": {
                            "type": "string",
                            "description": "The Active Directory site the service will limit Domain Controller discovery to"
                          },
                          "backupOperators": {
                            "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "administrators": {
                            "description": "Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "kdcIP": {
                            "type": "string",
                            "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                            "description": "kdc server IP address for the active directory machine. This optional parameter is used only while creating kerberos volume.",
                            "example": "101.102.103.104"
                          },
                          "adName": {
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
                            "example": "ADServerName"
                          },
                          "serverRootCACertificate": {
                            "type": "string",
                            "maxLength": 10240,
                            "minLength": 1,
                            "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
                            "x-ms-secret": true,
                            "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                          },
                          "aesEncryption": {
                            "type": "boolean",
                            "description": "If enabled, AES encryption will be enabled for SMB communication."
                          },
                          "ldapSigning": {
                            "type": "boolean",
                            "description": "Specifies whether or not the LDAP traffic needs to be signed."
                          },
                          "securityOperators": {
                            "type": "array",
                            "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "ldapOverTLS": {
                            "type": "boolean",
                            "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
                          },
                          "allowLocalNfsUsersWithLdap": {
                            "type": "boolean",
                            "description": " If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
                          },
                          "encryptDCConnections": {
                            "type": "boolean",
                            "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
                          },
                          "ldapSearchScope": {
                            "description": "LDAP Search scope options",
                            "type": "object",
                            "properties": {
                              "userDN": {
                                "type": "string",
                                "description": "This specifies the user DN, which overrides the base DN for user lookups.",
                                "maxLength": 255,
                                "example": "OU=fin,OU=hr,dc=domain,dc=com"
                              },
                              "groupDN": {
                                "type": "string",
                                "description": "This specifies the group DN, which overrides the base DN for group lookups.",
                                "maxLength": 255,
                                "example": "OU=fin,OU=hr,dc=domain,dc=com"
                              },
                              "groupMembershipFilter": {
                                "type": "string",
                                "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
                                "maxLength": 255,
                                "example": "cn=*99"
                              }
                            }
                          },
                          "preferredServersForLdapClient": {
                            "type": "string",
                            "maxLength": 32,
                            "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
                            "description": "Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.",
                            "example": "101.102.103.104, 101.102.103.105"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "activeDirectoryId"
                      ]
                    },
                    "encryption": {
                      "description": "Encryption settings",
                      "type": "object",
                      "properties": {
                        "keySource": {
                          "type": "string",
                          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.NetApp",
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "KeySource",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Microsoft.NetApp",
                                "description": "Microsoft-managed key encryption"
                              },
                              {
                                "value": "Microsoft.KeyVault",
                                "description": "Customer-managed key encryption"
                              }
                            ]
                          },
                          "default": "Microsoft.NetApp"
                        },
                        "keyVaultProperties": {
                          "description": "Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                          "type": "object",
                          "required": [
                            "keyVaultUri",
                            "keyName"
                          ],
                          "properties": {
                            "keyVaultId": {
                              "type": "string",
                              "description": "UUID v4 used to identify the Azure Key Vault configuration",
                              "readOnly": true,
                              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                            },
                            "keyVaultUri": {
                              "type": "string",
                              "format": "uri",
                              "description": "The Uri of KeyVault."
                            },
                            "keyName": {
                              "type": "string",
                              "description": "The name of KeyVault key."
                            },
                            "keyVaultResourceId": {
                              "type": "string",
                              "description": "The resource ID of KeyVault.",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.KeyVault/vaults"
                                  }
                                ]
                              }
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the KeyVault connection.",
                              "readOnly": true,
                              "enum": [
                                "Created",
                                "Updating",
                                "InUse",
                                "Deleted",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "KeyVaultStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Created",
                                    "description": "KeyVault connection created but not in use"
                                  },
                                  {
                                    "value": "InUse",
                                    "description": "KeyVault connection in use by SMB Volume"
                                  },
                                  {
                                    "value": "Deleted",
                                    "description": "KeyVault connection Deleted"
                                  },
                                  {
                                    "value": "Error",
                                    "description": "Error with the KeyVault connection"
                                  },
                                  {
                                    "value": "Updating",
                                    "description": "KeyVault connection Updating"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "identity": {
                          "description": "Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                          "type": "object",
                          "properties": {
                            "principalId": {
                              "type": "string",
                              "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
                              "readOnly": true
                            },
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
                            },
                            "federatedClientId": {
                              "type": "string",
                              "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults.",
                              "example": "87654321-1234-1234-1234-876543214321"
                            }
                          }
                        }
                      }
                    },
                    "disableShowmount": {
                      "type": "boolean",
                      "readOnly": true,
                      "x-nullable": true,
                      "description": "Shows the status of disableShowmount for all volumes under the subscription, null equals false"
                    },
                    "nfsV4IDDomain": {
                      "type": "string",
                      "description": "Domain for NFSv4 user ID mapping. This property will be set for all NetApp accounts in the subscription and region and only affect non ldap NFSv4 volumes.",
                      "maxLength": 255,
                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$",
                      "x-nullable": true,
                      "example": "defaultv4iddomain.com"
                    },
                    "multiAdStatus": {
                      "title": "multiAdStatus",
                      "type": "string",
                      "readOnly": true,
                      "description": "MultiAD Status for the account",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "multiAdStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "Account is MultiAD disabled, Means its a SharedAD or SingleAD account."
                          },
                          {
                            "value": "Enabled",
                            "description": "Account is MultiAD enabled"
                          }
                        ]
                      },
                      "example": "Enabled"
                    }
                  }
                },
                "identity": {
                  "description": "The identity used for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_CreateOrUpdate",
        "summary": "Create or update a NetApp account",
        "description": "Create or update the specified NetApp account within the resource group",
        "parameters": [
          {
            "name": "body",
            "description": "NetApp Account object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "NetApp account resource",
              "type": "object",
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "NetApp Account properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "activeDirectories": {
                      "description": "Active Directories",
                      "type": "array",
                      "items": {
                        "description": "Active Directory",
                        "type": "object",
                        "properties": {
                          "activeDirectoryId": {
                            "type": "string",
                            "x-nullable": true,
                            "description": "Id of the Active Directory"
                          },
                          "username": {
                            "type": "string",
                            "description": "A domain user account with permission to create machine accounts"
                          },
                          "password": {
                            "type": "string",
                            "x-ms-secret": true,
                            "maxLength": 64,
                            "description": "Plain text password of Active Directory domain administrator, value is masked in the response"
                          },
                          "domain": {
                            "type": "string",
                            "description": "Name of the Active Directory domain"
                          },
                          "dns": {
                            "type": "string",
                            "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
                            "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
                            "example": "101.102.103.104,101.102.103.105"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the Active Directory",
                            "readOnly": true,
                            "enum": [
                              "Created",
                              "Updating",
                              "InUse",
                              "Deleted",
                              "Error"
                            ],
                            "x-ms-enum": {
                              "name": "ActiveDirectoryStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Created",
                                  "description": "Active Directory created but not in use"
                                },
                                {
                                  "value": "InUse",
                                  "description": "Active Directory in use by SMB Volume"
                                },
                                {
                                  "value": "Deleted",
                                  "description": "Active Directory Deleted"
                                },
                                {
                                  "value": "Error",
                                  "description": "Error with the Active Directory"
                                },
                                {
                                  "value": "Updating",
                                  "description": "Active Directory Updating"
                                }
                              ]
                            }
                          },
                          "statusDetails": {
                            "type": "string",
                            "description": "Any details in regards to the Status of the Active Directory",
                            "readOnly": true
                          },
                          "smbServerName": {
                            "type": "string",
                            "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
                          },
                          "organizationalUnit": {
                            "type": "string",
                            "default": "CN=Computers",
                            "description": "The Organizational Unit (OU) within the Windows Active Directory"
                          },
                          "site": {
                            "type": "string",
                            "description": "The Active Directory site the service will limit Domain Controller discovery to"
                          },
                          "backupOperators": {
                            "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "administrators": {
                            "description": "Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "kdcIP": {
                            "type": "string",
                            "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                            "description": "kdc server IP address for the active directory machine. This optional parameter is used only while creating kerberos volume.",
                            "example": "101.102.103.104"
                          },
                          "adName": {
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
                            "example": "ADServerName"
                          },
                          "serverRootCACertificate": {
                            "type": "string",
                            "maxLength": 10240,
                            "minLength": 1,
                            "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
                            "x-ms-secret": true,
                            "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                          },
                          "aesEncryption": {
                            "type": "boolean",
                            "description": "If enabled, AES encryption will be enabled for SMB communication."
                          },
                          "ldapSigning": {
                            "type": "boolean",
                            "description": "Specifies whether or not the LDAP traffic needs to be signed."
                          },
                          "securityOperators": {
                            "type": "array",
                            "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "ldapOverTLS": {
                            "type": "boolean",
                            "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
                          },
                          "allowLocalNfsUsersWithLdap": {
                            "type": "boolean",
                            "description": " If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
                          },
                          "encryptDCConnections": {
                            "type": "boolean",
                            "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
                          },
                          "ldapSearchScope": {
                            "description": "LDAP Search scope options",
                            "type": "object",
                            "properties": {
                              "userDN": {
                                "type": "string",
                                "description": "This specifies the user DN, which overrides the base DN for user lookups.",
                                "maxLength": 255,
                                "example": "OU=fin,OU=hr,dc=domain,dc=com"
                              },
                              "groupDN": {
                                "type": "string",
                                "description": "This specifies the group DN, which overrides the base DN for group lookups.",
                                "maxLength": 255,
                                "example": "OU=fin,OU=hr,dc=domain,dc=com"
                              },
                              "groupMembershipFilter": {
                                "type": "string",
                                "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
                                "maxLength": 255,
                                "example": "cn=*99"
                              }
                            }
                          },
                          "preferredServersForLdapClient": {
                            "type": "string",
                            "maxLength": 32,
                            "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
                            "description": "Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.",
                            "example": "101.102.103.104, 101.102.103.105"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "activeDirectoryId"
                      ]
                    },
                    "encryption": {
                      "description": "Encryption settings",
                      "type": "object",
                      "properties": {
                        "keySource": {
                          "type": "string",
                          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.NetApp",
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "KeySource",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Microsoft.NetApp",
                                "description": "Microsoft-managed key encryption"
                              },
                              {
                                "value": "Microsoft.KeyVault",
                                "description": "Customer-managed key encryption"
                              }
                            ]
                          },
                          "default": "Microsoft.NetApp"
                        },
                        "keyVaultProperties": {
                          "description": "Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                          "type": "object",
                          "required": [
                            "keyVaultUri",
                            "keyName"
                          ],
                          "properties": {
                            "keyVaultId": {
                              "type": "string",
                              "description": "UUID v4 used to identify the Azure Key Vault configuration",
                              "readOnly": true,
                              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                            },
                            "keyVaultUri": {
                              "type": "string",
                              "format": "uri",
                              "description": "The Uri of KeyVault."
                            },
                            "keyName": {
                              "type": "string",
                              "description": "The name of KeyVault key."
                            },
                            "keyVaultResourceId": {
                              "type": "string",
                              "description": "The resource ID of KeyVault.",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.KeyVault/vaults"
                                  }
                                ]
                              }
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the KeyVault connection.",
                              "readOnly": true,
                              "enum": [
                                "Created",
                                "Updating",
                                "InUse",
                                "Deleted",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "KeyVaultStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Created",
                                    "description": "KeyVault connection created but not in use"
                                  },
                                  {
                                    "value": "InUse",
                                    "description": "KeyVault connection in use by SMB Volume"
                                  },
                                  {
                                    "value": "Deleted",
                                    "description": "KeyVault connection Deleted"
                                  },
                                  {
                                    "value": "Error",
                                    "description": "Error with the KeyVault connection"
                                  },
                                  {
                                    "value": "Updating",
                                    "description": "KeyVault connection Updating"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "identity": {
                          "description": "Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                          "type": "object",
                          "properties": {
                            "principalId": {
                              "type": "string",
                              "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
                              "readOnly": true
                            },
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
                            },
                            "federatedClientId": {
                              "type": "string",
                              "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults.",
                              "example": "87654321-1234-1234-1234-876543214321"
                            }
                          }
                        }
                      }
                    },
                    "disableShowmount": {
                      "type": "boolean",
                      "readOnly": true,
                      "x-nullable": true,
                      "description": "Shows the status of disableShowmount for all volumes under the subscription, null equals false"
                    },
                    "nfsV4IDDomain": {
                      "type": "string",
                      "description": "Domain for NFSv4 user ID mapping. This property will be set for all NetApp accounts in the subscription and region and only affect non ldap NFSv4 volumes.",
                      "maxLength": 255,
                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$",
                      "x-nullable": true,
                      "example": "defaultv4iddomain.com"
                    },
                    "multiAdStatus": {
                      "title": "multiAdStatus",
                      "type": "string",
                      "readOnly": true,
                      "description": "MultiAD Status for the account",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "multiAdStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "Account is MultiAD disabled, Means its a SharedAD or SingleAD account."
                          },
                          {
                            "value": "Enabled",
                            "description": "Account is MultiAD enabled"
                          }
                        ]
                      },
                      "example": "Enabled"
                    }
                  }
                },
                "identity": {
                  "description": "The identity used for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - account updated",
            "schema": {
              "description": "NetApp account resource",
              "type": "object",
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "NetApp Account properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "activeDirectories": {
                      "description": "Active Directories",
                      "type": "array",
                      "items": {
                        "description": "Active Directory",
                        "type": "object",
                        "properties": {
                          "activeDirectoryId": {
                            "type": "string",
                            "x-nullable": true,
                            "description": "Id of the Active Directory"
                          },
                          "username": {
                            "type": "string",
                            "description": "A domain user account with permission to create machine accounts"
                          },
                          "password": {
                            "type": "string",
                            "x-ms-secret": true,
                            "maxLength": 64,
                            "description": "Plain text password of Active Directory domain administrator, value is masked in the response"
                          },
                          "domain": {
                            "type": "string",
                            "description": "Name of the Active Directory domain"
                          },
                          "dns": {
                            "type": "string",
                            "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
                            "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
                            "example": "101.102.103.104,101.102.103.105"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the Active Directory",
                            "readOnly": true,
                            "enum": [
                              "Created",
                              "Updating",
                              "InUse",
                              "Deleted",
                              "Error"
                            ],
                            "x-ms-enum": {
                              "name": "ActiveDirectoryStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Created",
                                  "description": "Active Directory created but not in use"
                                },
                                {
                                  "value": "InUse",
                                  "description": "Active Directory in use by SMB Volume"
                                },
                                {
                                  "value": "Deleted",
                                  "description": "Active Directory Deleted"
                                },
                                {
                                  "value": "Error",
                                  "description": "Error with the Active Directory"
                                },
                                {
                                  "value": "Updating",
                                  "description": "Active Directory Updating"
                                }
                              ]
                            }
                          },
                          "statusDetails": {
                            "type": "string",
                            "description": "Any details in regards to the Status of the Active Directory",
                            "readOnly": true
                          },
                          "smbServerName": {
                            "type": "string",
                            "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
                          },
                          "organizationalUnit": {
                            "type": "string",
                            "default": "CN=Computers",
                            "description": "The Organizational Unit (OU) within the Windows Active Directory"
                          },
                          "site": {
                            "type": "string",
                            "description": "The Active Directory site the service will limit Domain Controller discovery to"
                          },
                          "backupOperators": {
                            "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "administrators": {
                            "description": "Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "kdcIP": {
                            "type": "string",
                            "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                            "description": "kdc server IP address for the active directory machine. This optional parameter is used only while creating kerberos volume.",
                            "example": "101.102.103.104"
                          },
                          "adName": {
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
                            "example": "ADServerName"
                          },
                          "serverRootCACertificate": {
                            "type": "string",
                            "maxLength": 10240,
                            "minLength": 1,
                            "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
                            "x-ms-secret": true,
                            "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                          },
                          "aesEncryption": {
                            "type": "boolean",
                            "description": "If enabled, AES encryption will be enabled for SMB communication."
                          },
                          "ldapSigning": {
                            "type": "boolean",
                            "description": "Specifies whether or not the LDAP traffic needs to be signed."
                          },
                          "securityOperators": {
                            "type": "array",
                            "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "ldapOverTLS": {
                            "type": "boolean",
                            "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
                          },
                          "allowLocalNfsUsersWithLdap": {
                            "type": "boolean",
                            "description": " If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
                          },
                          "encryptDCConnections": {
                            "type": "boolean",
                            "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
                          },
                          "ldapSearchScope": {
                            "description": "LDAP Search scope options",
                            "type": "object",
                            "properties": {
                              "userDN": {
                                "type": "string",
                                "description": "This specifies the user DN, which overrides the base DN for user lookups.",
                                "maxLength": 255,
                                "example": "OU=fin,OU=hr,dc=domain,dc=com"
                              },
                              "groupDN": {
                                "type": "string",
                                "description": "This specifies the group DN, which overrides the base DN for group lookups.",
                                "maxLength": 255,
                                "example": "OU=fin,OU=hr,dc=domain,dc=com"
                              },
                              "groupMembershipFilter": {
                                "type": "string",
                                "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
                                "maxLength": 255,
                                "example": "cn=*99"
                              }
                            }
                          },
                          "preferredServersForLdapClient": {
                            "type": "string",
                            "maxLength": 32,
                            "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
                            "description": "Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.",
                            "example": "101.102.103.104, 101.102.103.105"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "activeDirectoryId"
                      ]
                    },
                    "encryption": {
                      "description": "Encryption settings",
                      "type": "object",
                      "properties": {
                        "keySource": {
                          "type": "string",
                          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.NetApp",
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "KeySource",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Microsoft.NetApp",
                                "description": "Microsoft-managed key encryption"
                              },
                              {
                                "value": "Microsoft.KeyVault",
                                "description": "Customer-managed key encryption"
                              }
                            ]
                          },
                          "default": "Microsoft.NetApp"
                        },
                        "keyVaultProperties": {
                          "description": "Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                          "type": "object",
                          "required": [
                            "keyVaultUri",
                            "keyName"
                          ],
                          "properties": {
                            "keyVaultId": {
                              "type": "string",
                              "description": "UUID v4 used to identify the Azure Key Vault configuration",
                              "readOnly": true,
                              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                            },
                            "keyVaultUri": {
                              "type": "string",
                              "format": "uri",
                              "description": "The Uri of KeyVault."
                            },
                            "keyName": {
                              "type": "string",
                              "description": "The name of KeyVault key."
                            },
                            "keyVaultResourceId": {
                              "type": "string",
                              "description": "The resource ID of KeyVault.",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.KeyVault/vaults"
                                  }
                                ]
                              }
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the KeyVault connection.",
                              "readOnly": true,
                              "enum": [
                                "Created",
                                "Updating",
                                "InUse",
                                "Deleted",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "KeyVaultStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Created",
                                    "description": "KeyVault connection created but not in use"
                                  },
                                  {
                                    "value": "InUse",
                                    "description": "KeyVault connection in use by SMB Volume"
                                  },
                                  {
                                    "value": "Deleted",
                                    "description": "KeyVault connection Deleted"
                                  },
                                  {
                                    "value": "Error",
                                    "description": "Error with the KeyVault connection"
                                  },
                                  {
                                    "value": "Updating",
                                    "description": "KeyVault connection Updating"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "identity": {
                          "description": "Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                          "type": "object",
                          "properties": {
                            "principalId": {
                              "type": "string",
                              "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
                              "readOnly": true
                            },
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
                            },
                            "federatedClientId": {
                              "type": "string",
                              "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults.",
                              "example": "87654321-1234-1234-1234-876543214321"
                            }
                          }
                        }
                      }
                    },
                    "disableShowmount": {
                      "type": "boolean",
                      "readOnly": true,
                      "x-nullable": true,
                      "description": "Shows the status of disableShowmount for all volumes under the subscription, null equals false"
                    },
                    "nfsV4IDDomain": {
                      "type": "string",
                      "description": "Domain for NFSv4 user ID mapping. This property will be set for all NetApp accounts in the subscription and region and only affect non ldap NFSv4 volumes.",
                      "maxLength": 255,
                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$",
                      "x-nullable": true,
                      "example": "defaultv4iddomain.com"
                    },
                    "multiAdStatus": {
                      "title": "multiAdStatus",
                      "type": "string",
                      "readOnly": true,
                      "description": "MultiAD Status for the account",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "multiAdStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "Account is MultiAD disabled, Means its a SharedAD or SingleAD account."
                          },
                          {
                            "value": "Enabled",
                            "description": "Account is MultiAD enabled"
                          }
                        ]
                      },
                      "example": "Enabled"
                    }
                  }
                },
                "identity": {
                  "description": "The identity used for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Account created",
            "schema": {
              "description": "NetApp account resource",
              "type": "object",
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "NetApp Account properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "activeDirectories": {
                      "description": "Active Directories",
                      "type": "array",
                      "items": {
                        "description": "Active Directory",
                        "type": "object",
                        "properties": {
                          "activeDirectoryId": {
                            "type": "string",
                            "x-nullable": true,
                            "description": "Id of the Active Directory"
                          },
                          "username": {
                            "type": "string",
                            "description": "A domain user account with permission to create machine accounts"
                          },
                          "password": {
                            "type": "string",
                            "x-ms-secret": true,
                            "maxLength": 64,
                            "description": "Plain text password of Active Directory domain administrator, value is masked in the response"
                          },
                          "domain": {
                            "type": "string",
                            "description": "Name of the Active Directory domain"
                          },
                          "dns": {
                            "type": "string",
                            "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
                            "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
                            "example": "101.102.103.104,101.102.103.105"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the Active Directory",
                            "readOnly": true,
                            "enum": [
                              "Created",
                              "Updating",
                              "InUse",
                              "Deleted",
                              "Error"
                            ],
                            "x-ms-enum": {
                              "name": "ActiveDirectoryStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Created",
                                  "description": "Active Directory created but not in use"
                                },
                                {
                                  "value": "InUse",
                                  "description": "Active Directory in use by SMB Volume"
                                },
                                {
                                  "value": "Deleted",
                                  "description": "Active Directory Deleted"
                                },
                                {
                                  "value": "Error",
                                  "description": "Error with the Active Directory"
                                },
                                {
                                  "value": "Updating",
                                  "description": "Active Directory Updating"
                                }
                              ]
                            }
                          },
                          "statusDetails": {
                            "type": "string",
                            "description": "Any details in regards to the Status of the Active Directory",
                            "readOnly": true
                          },
                          "smbServerName": {
                            "type": "string",
                            "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
                          },
                          "organizationalUnit": {
                            "type": "string",
                            "default": "CN=Computers",
                            "description": "The Organizational Unit (OU) within the Windows Active Directory"
                          },
                          "site": {
                            "type": "string",
                            "description": "The Active Directory site the service will limit Domain Controller discovery to"
                          },
                          "backupOperators": {
                            "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "administrators": {
                            "description": "Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "kdcIP": {
                            "type": "string",
                            "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                            "description": "kdc server IP address for the active directory machine. This optional parameter is used only while creating kerberos volume.",
                            "example": "101.102.103.104"
                          },
                          "adName": {
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
                            "example": "ADServerName"
                          },
                          "serverRootCACertificate": {
                            "type": "string",
                            "maxLength": 10240,
                            "minLength": 1,
                            "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
                            "x-ms-secret": true,
                            "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                          },
                          "aesEncryption": {
                            "type": "boolean",
                            "description": "If enabled, AES encryption will be enabled for SMB communication."
                          },
                          "ldapSigning": {
                            "type": "boolean",
                            "description": "Specifies whether or not the LDAP traffic needs to be signed."
                          },
                          "securityOperators": {
                            "type": "array",
                            "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "ldapOverTLS": {
                            "type": "boolean",
                            "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
                          },
                          "allowLocalNfsUsersWithLdap": {
                            "type": "boolean",
                            "description": " If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
                          },
                          "encryptDCConnections": {
                            "type": "boolean",
                            "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
                          },
                          "ldapSearchScope": {
                            "description": "LDAP Search scope options",
                            "type": "object",
                            "properties": {
                              "userDN": {
                                "type": "string",
                                "description": "This specifies the user DN, which overrides the base DN for user lookups.",
                                "maxLength": 255,
                                "example": "OU=fin,OU=hr,dc=domain,dc=com"
                              },
                              "groupDN": {
                                "type": "string",
                                "description": "This specifies the group DN, which overrides the base DN for group lookups.",
                                "maxLength": 255,
                                "example": "OU=fin,OU=hr,dc=domain,dc=com"
                              },
                              "groupMembershipFilter": {
                                "type": "string",
                                "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
                                "maxLength": 255,
                                "example": "cn=*99"
                              }
                            }
                          },
                          "preferredServersForLdapClient": {
                            "type": "string",
                            "maxLength": 32,
                            "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
                            "description": "Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.",
                            "example": "101.102.103.104, 101.102.103.105"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "activeDirectoryId"
                      ]
                    },
                    "encryption": {
                      "description": "Encryption settings",
                      "type": "object",
                      "properties": {
                        "keySource": {
                          "type": "string",
                          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.NetApp",
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "KeySource",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Microsoft.NetApp",
                                "description": "Microsoft-managed key encryption"
                              },
                              {
                                "value": "Microsoft.KeyVault",
                                "description": "Customer-managed key encryption"
                              }
                            ]
                          },
                          "default": "Microsoft.NetApp"
                        },
                        "keyVaultProperties": {
                          "description": "Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                          "type": "object",
                          "required": [
                            "keyVaultUri",
                            "keyName"
                          ],
                          "properties": {
                            "keyVaultId": {
                              "type": "string",
                              "description": "UUID v4 used to identify the Azure Key Vault configuration",
                              "readOnly": true,
                              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                            },
                            "keyVaultUri": {
                              "type": "string",
                              "format": "uri",
                              "description": "The Uri of KeyVault."
                            },
                            "keyName": {
                              "type": "string",
                              "description": "The name of KeyVault key."
                            },
                            "keyVaultResourceId": {
                              "type": "string",
                              "description": "The resource ID of KeyVault.",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.KeyVault/vaults"
                                  }
                                ]
                              }
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the KeyVault connection.",
                              "readOnly": true,
                              "enum": [
                                "Created",
                                "Updating",
                                "InUse",
                                "Deleted",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "KeyVaultStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Created",
                                    "description": "KeyVault connection created but not in use"
                                  },
                                  {
                                    "value": "InUse",
                                    "description": "KeyVault connection in use by SMB Volume"
                                  },
                                  {
                                    "value": "Deleted",
                                    "description": "KeyVault connection Deleted"
                                  },
                                  {
                                    "value": "Error",
                                    "description": "Error with the KeyVault connection"
                                  },
                                  {
                                    "value": "Updating",
                                    "description": "KeyVault connection Updating"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "identity": {
                          "description": "Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                          "type": "object",
                          "properties": {
                            "principalId": {
                              "type": "string",
                              "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
                              "readOnly": true
                            },
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
                            },
                            "federatedClientId": {
                              "type": "string",
                              "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults.",
                              "example": "87654321-1234-1234-1234-876543214321"
                            }
                          }
                        }
                      }
                    },
                    "disableShowmount": {
                      "type": "boolean",
                      "readOnly": true,
                      "x-nullable": true,
                      "description": "Shows the status of disableShowmount for all volumes under the subscription, null equals false"
                    },
                    "nfsV4IDDomain": {
                      "type": "string",
                      "description": "Domain for NFSv4 user ID mapping. This property will be set for all NetApp accounts in the subscription and region and only affect non ldap NFSv4 volumes.",
                      "maxLength": 255,
                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$",
                      "x-nullable": true,
                      "example": "defaultv4iddomain.com"
                    },
                    "multiAdStatus": {
                      "title": "multiAdStatus",
                      "type": "string",
                      "readOnly": true,
                      "description": "MultiAD Status for the account",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "multiAdStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "Account is MultiAD disabled, Means its a SharedAD or SingleAD account."
                          },
                          {
                            "value": "Enabled",
                            "description": "Account is MultiAD enabled"
                          }
                        ]
                      },
                      "example": "Enabled"
                    }
                  }
                },
                "identity": {
                  "description": "The identity used for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_Delete",
        "summary": "Delete a NetApp account",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "description": "Delete the specified NetApp account",
        "responses": {
          "202": {
            "description": "Accepted -- Delete request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          }
        }
      },
      "patch": {
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_Update",
        "summary": "Update a NetApp account",
        "description": "Patch the specified NetApp account",
        "parameters": [
          {
            "name": "body",
            "description": "NetApp Account object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "NetApp account patch resource",
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "location": {
                  "type": "string",
                  "description": "Resource location"
                },
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "tags": {
                  "description": "Resource tags",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "NetApp Account properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "activeDirectories": {
                      "description": "Active Directories",
                      "type": "array",
                      "items": {
                        "description": "Active Directory",
                        "type": "object",
                        "properties": {
                          "activeDirectoryId": {
                            "type": "string",
                            "x-nullable": true,
                            "description": "Id of the Active Directory"
                          },
                          "username": {
                            "type": "string",
                            "description": "A domain user account with permission to create machine accounts"
                          },
                          "password": {
                            "type": "string",
                            "x-ms-secret": true,
                            "maxLength": 64,
                            "description": "Plain text password of Active Directory domain administrator, value is masked in the response"
                          },
                          "domain": {
                            "type": "string",
                            "description": "Name of the Active Directory domain"
                          },
                          "dns": {
                            "type": "string",
                            "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
                            "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
                            "example": "101.102.103.104,101.102.103.105"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the Active Directory",
                            "readOnly": true,
                            "enum": [
                              "Created",
                              "Updating",
                              "InUse",
                              "Deleted",
                              "Error"
                            ],
                            "x-ms-enum": {
                              "name": "ActiveDirectoryStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Created",
                                  "description": "Active Directory created but not in use"
                                },
                                {
                                  "value": "InUse",
                                  "description": "Active Directory in use by SMB Volume"
                                },
                                {
                                  "value": "Deleted",
                                  "description": "Active Directory Deleted"
                                },
                                {
                                  "value": "Error",
                                  "description": "Error with the Active Directory"
                                },
                                {
                                  "value": "Updating",
                                  "description": "Active Directory Updating"
                                }
                              ]
                            }
                          },
                          "statusDetails": {
                            "type": "string",
                            "description": "Any details in regards to the Status of the Active Directory",
                            "readOnly": true
                          },
                          "smbServerName": {
                            "type": "string",
                            "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
                          },
                          "organizationalUnit": {
                            "type": "string",
                            "default": "CN=Computers",
                            "description": "The Organizational Unit (OU) within the Windows Active Directory"
                          },
                          "site": {
                            "type": "string",
                            "description": "The Active Directory site the service will limit Domain Controller discovery to"
                          },
                          "backupOperators": {
                            "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "administrators": {
                            "description": "Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "kdcIP": {
                            "type": "string",
                            "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                            "description": "kdc server IP address for the active directory machine. This optional parameter is used only while creating kerberos volume.",
                            "example": "101.102.103.104"
                          },
                          "adName": {
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
                            "example": "ADServerName"
                          },
                          "serverRootCACertificate": {
                            "type": "string",
                            "maxLength": 10240,
                            "minLength": 1,
                            "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
                            "x-ms-secret": true,
                            "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                          },
                          "aesEncryption": {
                            "type": "boolean",
                            "description": "If enabled, AES encryption will be enabled for SMB communication."
                          },
                          "ldapSigning": {
                            "type": "boolean",
                            "description": "Specifies whether or not the LDAP traffic needs to be signed."
                          },
                          "securityOperators": {
                            "type": "array",
                            "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "ldapOverTLS": {
                            "type": "boolean",
                            "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
                          },
                          "allowLocalNfsUsersWithLdap": {
                            "type": "boolean",
                            "description": " If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
                          },
                          "encryptDCConnections": {
                            "type": "boolean",
                            "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
                          },
                          "ldapSearchScope": {
                            "description": "LDAP Search scope options",
                            "type": "object",
                            "properties": {
                              "userDN": {
                                "type": "string",
                                "description": "This specifies the user DN, which overrides the base DN for user lookups.",
                                "maxLength": 255,
                                "example": "OU=fin,OU=hr,dc=domain,dc=com"
                              },
                              "groupDN": {
                                "type": "string",
                                "description": "This specifies the group DN, which overrides the base DN for group lookups.",
                                "maxLength": 255,
                                "example": "OU=fin,OU=hr,dc=domain,dc=com"
                              },
                              "groupMembershipFilter": {
                                "type": "string",
                                "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
                                "maxLength": 255,
                                "example": "cn=*99"
                              }
                            }
                          },
                          "preferredServersForLdapClient": {
                            "type": "string",
                            "maxLength": 32,
                            "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
                            "description": "Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.",
                            "example": "101.102.103.104, 101.102.103.105"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "activeDirectoryId"
                      ]
                    },
                    "encryption": {
                      "description": "Encryption settings",
                      "type": "object",
                      "properties": {
                        "keySource": {
                          "type": "string",
                          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.NetApp",
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "KeySource",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Microsoft.NetApp",
                                "description": "Microsoft-managed key encryption"
                              },
                              {
                                "value": "Microsoft.KeyVault",
                                "description": "Customer-managed key encryption"
                              }
                            ]
                          },
                          "default": "Microsoft.NetApp"
                        },
                        "keyVaultProperties": {
                          "description": "Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                          "type": "object",
                          "required": [
                            "keyVaultUri",
                            "keyName"
                          ],
                          "properties": {
                            "keyVaultId": {
                              "type": "string",
                              "description": "UUID v4 used to identify the Azure Key Vault configuration",
                              "readOnly": true,
                              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                            },
                            "keyVaultUri": {
                              "type": "string",
                              "format": "uri",
                              "description": "The Uri of KeyVault."
                            },
                            "keyName": {
                              "type": "string",
                              "description": "The name of KeyVault key."
                            },
                            "keyVaultResourceId": {
                              "type": "string",
                              "description": "The resource ID of KeyVault.",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.KeyVault/vaults"
                                  }
                                ]
                              }
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the KeyVault connection.",
                              "readOnly": true,
                              "enum": [
                                "Created",
                                "Updating",
                                "InUse",
                                "Deleted",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "KeyVaultStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Created",
                                    "description": "KeyVault connection created but not in use"
                                  },
                                  {
                                    "value": "InUse",
                                    "description": "KeyVault connection in use by SMB Volume"
                                  },
                                  {
                                    "value": "Deleted",
                                    "description": "KeyVault connection Deleted"
                                  },
                                  {
                                    "value": "Error",
                                    "description": "Error with the KeyVault connection"
                                  },
                                  {
                                    "value": "Updating",
                                    "description": "KeyVault connection Updating"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "identity": {
                          "description": "Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                          "type": "object",
                          "properties": {
                            "principalId": {
                              "type": "string",
                              "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
                              "readOnly": true
                            },
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
                            },
                            "federatedClientId": {
                              "type": "string",
                              "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults.",
                              "example": "87654321-1234-1234-1234-876543214321"
                            }
                          }
                        }
                      }
                    },
                    "disableShowmount": {
                      "type": "boolean",
                      "readOnly": true,
                      "x-nullable": true,
                      "description": "Shows the status of disableShowmount for all volumes under the subscription, null equals false"
                    },
                    "nfsV4IDDomain": {
                      "type": "string",
                      "description": "Domain for NFSv4 user ID mapping. This property will be set for all NetApp accounts in the subscription and region and only affect non ldap NFSv4 volumes.",
                      "maxLength": 255,
                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$",
                      "x-nullable": true,
                      "example": "defaultv4iddomain.com"
                    },
                    "multiAdStatus": {
                      "title": "multiAdStatus",
                      "type": "string",
                      "readOnly": true,
                      "description": "MultiAD Status for the account",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "multiAdStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "Account is MultiAD disabled, Means its a SharedAD or SingleAD account."
                          },
                          {
                            "value": "Enabled",
                            "description": "Account is MultiAD enabled"
                          }
                        ]
                      },
                      "example": "Enabled"
                    }
                  }
                },
                "identity": {
                  "description": "The identity used for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - account updated",
            "schema": {
              "description": "NetApp account resource",
              "type": "object",
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "NetApp Account properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "activeDirectories": {
                      "description": "Active Directories",
                      "type": "array",
                      "items": {
                        "description": "Active Directory",
                        "type": "object",
                        "properties": {
                          "activeDirectoryId": {
                            "type": "string",
                            "x-nullable": true,
                            "description": "Id of the Active Directory"
                          },
                          "username": {
                            "type": "string",
                            "description": "A domain user account with permission to create machine accounts"
                          },
                          "password": {
                            "type": "string",
                            "x-ms-secret": true,
                            "maxLength": 64,
                            "description": "Plain text password of Active Directory domain administrator, value is masked in the response"
                          },
                          "domain": {
                            "type": "string",
                            "description": "Name of the Active Directory domain"
                          },
                          "dns": {
                            "type": "string",
                            "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
                            "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
                            "example": "101.102.103.104,101.102.103.105"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the Active Directory",
                            "readOnly": true,
                            "enum": [
                              "Created",
                              "Updating",
                              "InUse",
                              "Deleted",
                              "Error"
                            ],
                            "x-ms-enum": {
                              "name": "ActiveDirectoryStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Created",
                                  "description": "Active Directory created but not in use"
                                },
                                {
                                  "value": "InUse",
                                  "description": "Active Directory in use by SMB Volume"
                                },
                                {
                                  "value": "Deleted",
                                  "description": "Active Directory Deleted"
                                },
                                {
                                  "value": "Error",
                                  "description": "Error with the Active Directory"
                                },
                                {
                                  "value": "Updating",
                                  "description": "Active Directory Updating"
                                }
                              ]
                            }
                          },
                          "statusDetails": {
                            "type": "string",
                            "description": "Any details in regards to the Status of the Active Directory",
                            "readOnly": true
                          },
                          "smbServerName": {
                            "type": "string",
                            "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
                          },
                          "organizationalUnit": {
                            "type": "string",
                            "default": "CN=Computers",
                            "description": "The Organizational Unit (OU) within the Windows Active Directory"
                          },
                          "site": {
                            "type": "string",
                            "description": "The Active Directory site the service will limit Domain Controller discovery to"
                          },
                          "backupOperators": {
                            "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "administrators": {
                            "description": "Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "kdcIP": {
                            "type": "string",
                            "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                            "description": "kdc server IP address for the active directory machine. This optional parameter is used only while creating kerberos volume.",
                            "example": "101.102.103.104"
                          },
                          "adName": {
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
                            "example": "ADServerName"
                          },
                          "serverRootCACertificate": {
                            "type": "string",
                            "maxLength": 10240,
                            "minLength": 1,
                            "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
                            "x-ms-secret": true,
                            "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                          },
                          "aesEncryption": {
                            "type": "boolean",
                            "description": "If enabled, AES encryption will be enabled for SMB communication."
                          },
                          "ldapSigning": {
                            "type": "boolean",
                            "description": "Specifies whether or not the LDAP traffic needs to be signed."
                          },
                          "securityOperators": {
                            "type": "array",
                            "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "ldapOverTLS": {
                            "type": "boolean",
                            "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
                          },
                          "allowLocalNfsUsersWithLdap": {
                            "type": "boolean",
                            "description": " If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
                          },
                          "encryptDCConnections": {
                            "type": "boolean",
                            "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
                          },
                          "ldapSearchScope": {
                            "description": "LDAP Search scope options",
                            "type": "object",
                            "properties": {
                              "userDN": {
                                "type": "string",
                                "description": "This specifies the user DN, which overrides the base DN for user lookups.",
                                "maxLength": 255,
                                "example": "OU=fin,OU=hr,dc=domain,dc=com"
                              },
                              "groupDN": {
                                "type": "string",
                                "description": "This specifies the group DN, which overrides the base DN for group lookups.",
                                "maxLength": 255,
                                "example": "OU=fin,OU=hr,dc=domain,dc=com"
                              },
                              "groupMembershipFilter": {
                                "type": "string",
                                "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
                                "maxLength": 255,
                                "example": "cn=*99"
                              }
                            }
                          },
                          "preferredServersForLdapClient": {
                            "type": "string",
                            "maxLength": 32,
                            "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
                            "description": "Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.",
                            "example": "101.102.103.104, 101.102.103.105"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "activeDirectoryId"
                      ]
                    },
                    "encryption": {
                      "description": "Encryption settings",
                      "type": "object",
                      "properties": {
                        "keySource": {
                          "type": "string",
                          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.NetApp",
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "KeySource",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Microsoft.NetApp",
                                "description": "Microsoft-managed key encryption"
                              },
                              {
                                "value": "Microsoft.KeyVault",
                                "description": "Customer-managed key encryption"
                              }
                            ]
                          },
                          "default": "Microsoft.NetApp"
                        },
                        "keyVaultProperties": {
                          "description": "Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                          "type": "object",
                          "required": [
                            "keyVaultUri",
                            "keyName"
                          ],
                          "properties": {
                            "keyVaultId": {
                              "type": "string",
                              "description": "UUID v4 used to identify the Azure Key Vault configuration",
                              "readOnly": true,
                              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                            },
                            "keyVaultUri": {
                              "type": "string",
                              "format": "uri",
                              "description": "The Uri of KeyVault."
                            },
                            "keyName": {
                              "type": "string",
                              "description": "The name of KeyVault key."
                            },
                            "keyVaultResourceId": {
                              "type": "string",
                              "description": "The resource ID of KeyVault.",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.KeyVault/vaults"
                                  }
                                ]
                              }
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the KeyVault connection.",
                              "readOnly": true,
                              "enum": [
                                "Created",
                                "Updating",
                                "InUse",
                                "Deleted",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "KeyVaultStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Created",
                                    "description": "KeyVault connection created but not in use"
                                  },
                                  {
                                    "value": "InUse",
                                    "description": "KeyVault connection in use by SMB Volume"
                                  },
                                  {
                                    "value": "Deleted",
                                    "description": "KeyVault connection Deleted"
                                  },
                                  {
                                    "value": "Error",
                                    "description": "Error with the KeyVault connection"
                                  },
                                  {
                                    "value": "Updating",
                                    "description": "KeyVault connection Updating"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "identity": {
                          "description": "Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                          "type": "object",
                          "properties": {
                            "principalId": {
                              "type": "string",
                              "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
                              "readOnly": true
                            },
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
                            },
                            "federatedClientId": {
                              "type": "string",
                              "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults.",
                              "example": "87654321-1234-1234-1234-876543214321"
                            }
                          }
                        }
                      }
                    },
                    "disableShowmount": {
                      "type": "boolean",
                      "readOnly": true,
                      "x-nullable": true,
                      "description": "Shows the status of disableShowmount for all volumes under the subscription, null equals false"
                    },
                    "nfsV4IDDomain": {
                      "type": "string",
                      "description": "Domain for NFSv4 user ID mapping. This property will be set for all NetApp accounts in the subscription and region and only affect non ldap NFSv4 volumes.",
                      "maxLength": 255,
                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$",
                      "x-nullable": true,
                      "example": "defaultv4iddomain.com"
                    },
                    "multiAdStatus": {
                      "title": "multiAdStatus",
                      "type": "string",
                      "readOnly": true,
                      "description": "MultiAD Status for the account",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "multiAdStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "Account is MultiAD disabled, Means its a SharedAD or SingleAD account."
                          },
                          {
                            "value": "Enabled",
                            "description": "Account is MultiAD enabled"
                          }
                        ]
                      },
                      "example": "Enabled"
                    }
                  }
                },
                "identity": {
                  "description": "The identity used for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "description": "NetApp account resource",
              "type": "object",
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "NetApp Account properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "activeDirectories": {
                      "description": "Active Directories",
                      "type": "array",
                      "items": {
                        "description": "Active Directory",
                        "type": "object",
                        "properties": {
                          "activeDirectoryId": {
                            "type": "string",
                            "x-nullable": true,
                            "description": "Id of the Active Directory"
                          },
                          "username": {
                            "type": "string",
                            "description": "A domain user account with permission to create machine accounts"
                          },
                          "password": {
                            "type": "string",
                            "x-ms-secret": true,
                            "maxLength": 64,
                            "description": "Plain text password of Active Directory domain administrator, value is masked in the response"
                          },
                          "domain": {
                            "type": "string",
                            "description": "Name of the Active Directory domain"
                          },
                          "dns": {
                            "type": "string",
                            "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
                            "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
                            "example": "101.102.103.104,101.102.103.105"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the Active Directory",
                            "readOnly": true,
                            "enum": [
                              "Created",
                              "Updating",
                              "InUse",
                              "Deleted",
                              "Error"
                            ],
                            "x-ms-enum": {
                              "name": "ActiveDirectoryStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Created",
                                  "description": "Active Directory created but not in use"
                                },
                                {
                                  "value": "InUse",
                                  "description": "Active Directory in use by SMB Volume"
                                },
                                {
                                  "value": "Deleted",
                                  "description": "Active Directory Deleted"
                                },
                                {
                                  "value": "Error",
                                  "description": "Error with the Active Directory"
                                },
                                {
                                  "value": "Updating",
                                  "description": "Active Directory Updating"
                                }
                              ]
                            }
                          },
                          "statusDetails": {
                            "type": "string",
                            "description": "Any details in regards to the Status of the Active Directory",
                            "readOnly": true
                          },
                          "smbServerName": {
                            "type": "string",
                            "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
                          },
                          "organizationalUnit": {
                            "type": "string",
                            "default": "CN=Computers",
                            "description": "The Organizational Unit (OU) within the Windows Active Directory"
                          },
                          "site": {
                            "type": "string",
                            "description": "The Active Directory site the service will limit Domain Controller discovery to"
                          },
                          "backupOperators": {
                            "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "administrators": {
                            "description": "Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "kdcIP": {
                            "type": "string",
                            "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                            "description": "kdc server IP address for the active directory machine. This optional parameter is used only while creating kerberos volume.",
                            "example": "101.102.103.104"
                          },
                          "adName": {
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
                            "example": "ADServerName"
                          },
                          "serverRootCACertificate": {
                            "type": "string",
                            "maxLength": 10240,
                            "minLength": 1,
                            "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
                            "x-ms-secret": true,
                            "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                          },
                          "aesEncryption": {
                            "type": "boolean",
                            "description": "If enabled, AES encryption will be enabled for SMB communication."
                          },
                          "ldapSigning": {
                            "type": "boolean",
                            "description": "Specifies whether or not the LDAP traffic needs to be signed."
                          },
                          "securityOperators": {
                            "type": "array",
                            "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "example": [
                              "user1",
                              "user2"
                            ]
                          },
                          "ldapOverTLS": {
                            "type": "boolean",
                            "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
                          },
                          "allowLocalNfsUsersWithLdap": {
                            "type": "boolean",
                            "description": " If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
                          },
                          "encryptDCConnections": {
                            "type": "boolean",
                            "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
                          },
                          "ldapSearchScope": {
                            "description": "LDAP Search scope options",
                            "type": "object",
                            "properties": {
                              "userDN": {
                                "type": "string",
                                "description": "This specifies the user DN, which overrides the base DN for user lookups.",
                                "maxLength": 255,
                                "example": "OU=fin,OU=hr,dc=domain,dc=com"
                              },
                              "groupDN": {
                                "type": "string",
                                "description": "This specifies the group DN, which overrides the base DN for group lookups.",
                                "maxLength": 255,
                                "example": "OU=fin,OU=hr,dc=domain,dc=com"
                              },
                              "groupMembershipFilter": {
                                "type": "string",
                                "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
                                "maxLength": 255,
                                "example": "cn=*99"
                              }
                            }
                          },
                          "preferredServersForLdapClient": {
                            "type": "string",
                            "maxLength": 32,
                            "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
                            "description": "Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.",
                            "example": "101.102.103.104, 101.102.103.105"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "activeDirectoryId"
                      ]
                    },
                    "encryption": {
                      "description": "Encryption settings",
                      "type": "object",
                      "properties": {
                        "keySource": {
                          "type": "string",
                          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
                          "enum": [
                            "Microsoft.NetApp",
                            "Microsoft.KeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "KeySource",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Microsoft.NetApp",
                                "description": "Microsoft-managed key encryption"
                              },
                              {
                                "value": "Microsoft.KeyVault",
                                "description": "Customer-managed key encryption"
                              }
                            ]
                          },
                          "default": "Microsoft.NetApp"
                        },
                        "keyVaultProperties": {
                          "description": "Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                          "type": "object",
                          "required": [
                            "keyVaultUri",
                            "keyName"
                          ],
                          "properties": {
                            "keyVaultId": {
                              "type": "string",
                              "description": "UUID v4 used to identify the Azure Key Vault configuration",
                              "readOnly": true,
                              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                            },
                            "keyVaultUri": {
                              "type": "string",
                              "format": "uri",
                              "description": "The Uri of KeyVault."
                            },
                            "keyName": {
                              "type": "string",
                              "description": "The name of KeyVault key."
                            },
                            "keyVaultResourceId": {
                              "type": "string",
                              "description": "The resource ID of KeyVault.",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.KeyVault/vaults"
                                  }
                                ]
                              }
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the KeyVault connection.",
                              "readOnly": true,
                              "enum": [
                                "Created",
                                "Updating",
                                "InUse",
                                "Deleted",
                                "Error"
                              ],
                              "x-ms-enum": {
                                "name": "KeyVaultStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Created",
                                    "description": "KeyVault connection created but not in use"
                                  },
                                  {
                                    "value": "InUse",
                                    "description": "KeyVault connection in use by SMB Volume"
                                  },
                                  {
                                    "value": "Deleted",
                                    "description": "KeyVault connection Deleted"
                                  },
                                  {
                                    "value": "Error",
                                    "description": "Error with the KeyVault connection"
                                  },
                                  {
                                    "value": "Updating",
                                    "description": "KeyVault connection Updating"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "identity": {
                          "description": "Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                          "type": "object",
                          "properties": {
                            "principalId": {
                              "type": "string",
                              "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
                              "readOnly": true
                            },
                            "userAssignedIdentity": {
                              "type": "string",
                              "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
                            },
                            "federatedClientId": {
                              "type": "string",
                              "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults.",
                              "example": "87654321-1234-1234-1234-876543214321"
                            }
                          }
                        }
                      }
                    },
                    "disableShowmount": {
                      "type": "boolean",
                      "readOnly": true,
                      "x-nullable": true,
                      "description": "Shows the status of disableShowmount for all volumes under the subscription, null equals false"
                    },
                    "nfsV4IDDomain": {
                      "type": "string",
                      "description": "Domain for NFSv4 user ID mapping. This property will be set for all NetApp accounts in the subscription and region and only affect non ldap NFSv4 volumes.",
                      "maxLength": 255,
                      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$",
                      "x-nullable": true,
                      "example": "defaultv4iddomain.com"
                    },
                    "multiAdStatus": {
                      "title": "multiAdStatus",
                      "type": "string",
                      "readOnly": true,
                      "description": "MultiAD Status for the account",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "multiAdStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "Account is MultiAD disabled, Means its a SharedAD or SingleAD account."
                          },
                          {
                            "value": "Enabled",
                            "description": "Account is MultiAD enabled"
                          }
                        ]
                      },
                      "example": "Enabled"
                    }
                  }
                },
                "identity": {
                  "description": "The identity used for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "x-nullable": true,
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/renewCredentials": {
      "post": {
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_RenewCredentials",
        "summary": "Renew identity credentials",
        "description": "Renew identity credentials that are used to authenticate to key vault, for customer-managed key encryption. If encryption.identity.principalId does not match identity.principalId, running this operation will fix it.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/transitiontocmk": {
      "post": {
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_TransitionToCmk",
        "summary": "Transition volumes encryption from PMK to CMK.",
        "description": "Transitions all volumes in a VNet to a different encryption key source (Microsoft-managed key or Azure Key Vault). Operation fails if targeted volumes share encryption sibling set with volumes from another account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "The required parameters to perform encryption transition.",
            "in": "body",
            "required": false,
            "schema": {
              "description": "Encryption transition request",
              "type": "object",
              "required": [
                "virtualNetworkId",
                "privateEndpointId"
              ],
              "properties": {
                "virtualNetworkId": {
                  "title": "virtualNetworkId",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Network/virtualNetworks"
                      }
                    ]
                  },
                  "description": "Identifier for the virtual network",
                  "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/virtualNetworks/vnet1"
                },
                "privateEndpointId": {
                  "title": "privateEndpointId",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Network/privateEndpoints"
                      }
                    ]
                  },
                  "description": "Identifier of the private endpoint to reach the Azure Key Vault",
                  "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/privateEndpoints/privateIP1"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/getKeyVaultStatus": {
      "post": {
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_GetChangeKeyVaultInformation",
        "summary": "Get information about how volumes under NetApp account are encrypted.",
        "description": "Contains data from encryption.keyVaultProperties as well as information about which private endpoint is used by each encryption sibling set. Response from this endpoint can be modified and used as request body for POST request.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of getKeyVaultStatus with information about how volumes under NetApp account are encrypted.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Represents the properties of the getKeyVaultStatus.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "keyVaultUri": {
                      "title": "keyVaultUri",
                      "description": "The URI of the key vault/managed HSM that should be used for encryption.",
                      "format": "uri",
                      "type": "string",
                      "example": "https://my-key-vault.managedhsm.azure.net"
                    },
                    "keyName": {
                      "title": "keyName",
                      "description": "The name of the key that should be used for encryption.",
                      "type": "string",
                      "example": "rsaKeyName"
                    },
                    "keyVaultResourceId": {
                      "title": "keyVaultResourceId",
                      "description": "Azure resource ID of the key vault/managed HSM that should be used for encryption.",
                      "type": "string",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.KeyVault/managedHSMs/my-hsm",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.KeyVault/vaults"
                          }
                        ]
                      }
                    },
                    "keyVaultPrivateEndpoints": {
                      "title": "keyVaultPrivateEndpoints",
                      "description": "Pairs of virtual network ID and private endpoint ID. Every virtual network that has volumes encrypted with customer-managed keys needs its own key vault private endpoint.",
                      "type": "array",
                      "items": {
                        "title": "keyVaultPrivateEndpoint",
                        "description": "Pairs of virtual network ID and private endpoint ID. Every virtual network that has volumes encrypted with customer-managed keys needs its own key vault private endpoint.",
                        "type": "object",
                        "properties": {
                          "virtualNetworkId": {
                            "title": "virtualNetworkId",
                            "type": "string",
                            "description": "Identifier for the virtual network id",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/virtualNetworks"
                                }
                              ]
                            },
                            "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/virtualNetworks/vnet1"
                          },
                          "privateEndpointId": {
                            "title": "privateEndpointId",
                            "type": "string",
                            "description": "Identifier of the private endpoint to reach the Azure Key Vault",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/privateEndpoints"
                                }
                              ]
                            },
                            "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/privateEndpoints/privateIP1"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "virtualNetworkId"
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/changeKeyVault": {
      "post": {
        "tags": [
          "NetApp Accounts"
        ],
        "operationId": "Accounts_ChangeKeyVault",
        "summary": "Change Key Vault/Managed HSM that is used for encryption of volumes under NetApp account.",
        "description": "Affects existing volumes that are encrypted with Key Vault/Managed HSM, and new volumes. Supports HSM to Key Vault, Key Vault to HSM, HSM to HSM and Key Vault to Key Vault.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "The required parameters to perform encryption migration.",
            "in": "body",
            "required": false,
            "schema": {
              "description": "Change key vault request",
              "type": "object",
              "required": [
                "keyVaultUri",
                "keyName",
                "keyVaultPrivateEndpoints"
              ],
              "properties": {
                "keyVaultUri": {
                  "title": "keyVaultUri",
                  "format": "uri",
                  "description": "The URI of the key vault/managed HSM that should be used for encryption.",
                  "type": "string",
                  "example": "https://my-key-vault.managedhsm.azure.net"
                },
                "keyName": {
                  "title": "keyName",
                  "description": "The name of the key that should be used for encryption.",
                  "type": "string",
                  "example": "rsaKeyName"
                },
                "keyVaultResourceId": {
                  "title": "keyVaultResourceId",
                  "description": "Azure resource ID of the key vault/managed HSM that should be used for encryption.",
                  "type": "string",
                  "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.KeyVault/managedHSMs/my-hsm",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.KeyVault/vaults"
                      }
                    ]
                  }
                },
                "keyVaultPrivateEndpoints": {
                  "title": "keyVaultPrivateEndpoints",
                  "description": "Pairs of virtual network ID and private endpoint ID. Every virtual network that has volumes encrypted with customer-managed keys needs its own key vault private endpoint.",
                  "type": "array",
                  "items": {
                    "title": "keyVaultPrivateEndpoint",
                    "description": "Pairs of virtual network ID and private endpoint ID. Every virtual network that has volumes encrypted with customer-managed keys needs its own key vault private endpoint.",
                    "type": "object",
                    "properties": {
                      "virtualNetworkId": {
                        "title": "virtualNetworkId",
                        "type": "string",
                        "description": "Identifier for the virtual network id",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Network/virtualNetworks"
                            }
                          ]
                        },
                        "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/virtualNetworks/vnet1"
                      },
                      "privateEndpointId": {
                        "title": "privateEndpointId",
                        "type": "string",
                        "description": "Identifier of the private endpoint to reach the Azure Key Vault",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints"
                            }
                          ]
                        },
                        "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/privateEndpoints/privateIP1"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "virtualNetworkId"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools": {
      "get": {
        "summary": "Describe all Capacity Pools",
        "description": "List all capacity pools in the NetApp Account",
        "tags": [
          "Capacity Pools"
        ],
        "operationId": "Pools_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of capacity pool resources",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of Capacity pools",
                  "type": "array",
                  "items": {
                    "description": "Capacity pool resource",
                    "type": "object",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "etag": {
                        "readOnly": true,
                        "type": "string",
                        "description": "A unique read-only string that changes whenever the resource is updated."
                      },
                      "properties": {
                        "description": "Capacity pool properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "required": [
                          "size",
                          "serviceLevel"
                        ],
                        "properties": {
                          "poolId": {
                            "title": "poolId",
                            "type": "string",
                            "readOnly": true,
                            "description": "UUID v4 used to identify the Pool",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                          },
                          "size": {
                            "title": "size",
                            "type": "integer",
                            "format": "int64",
                            "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).",
                            "default": 4398046511104
                          },
                          "serviceLevel": {
                            "title": "serviceLevel",
                            "type": "string",
                            "description": "The service level of the file system",
                            "enum": [
                              "Standard",
                              "Premium",
                              "Ultra",
                              "StandardZRS",
                              "Flexible"
                            ],
                            "default": "Premium",
                            "x-ms-enum": {
                              "name": "ServiceLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Standard",
                                  "description": "Standard service level"
                                },
                                {
                                  "value": "Premium",
                                  "description": "Premium service level"
                                },
                                {
                                  "value": "Ultra",
                                  "description": "Ultra service level"
                                },
                                {
                                  "value": "StandardZRS",
                                  "description": "Zone redundant storage service level. This will be deprecated soon."
                                },
                                {
                                  "value": "Flexible",
                                  "description": "Flexible service level"
                                }
                              ]
                            }
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Azure lifecycle management"
                          },
                          "totalThroughputMibps": {
                            "type": "number",
                            "description": "Total throughput of pool in MiB/s",
                            "example": 164.221,
                            "readOnly": true
                          },
                          "utilizedThroughputMibps": {
                            "type": "number",
                            "description": "Utilized throughput of pool in MiB/s",
                            "example": 164.221,
                            "readOnly": true
                          },
                          "customThroughputMibps": {
                            "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
                            "type": "number",
                            "x-nullable": true,
                            "example": 128
                          },
                          "qosType": {
                            "title": "qosType",
                            "type": "string",
                            "description": "The qos type of the pool",
                            "enum": [
                              "Auto",
                              "Manual"
                            ],
                            "x-ms-enum": {
                              "name": "qosType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Auto",
                                  "description": "qos type Auto"
                                },
                                {
                                  "value": "Manual",
                                  "description": "qos type Manual"
                                }
                              ]
                            },
                            "example": "Manual",
                            "default": "Auto"
                          },
                          "coolAccess": {
                            "type": "boolean",
                            "default": false,
                            "example": false,
                            "description": "If enabled (true) the pool can contain cool Access enabled volumes."
                          },
                          "encryptionType": {
                            "title": "encryptionType",
                            "type": "string",
                            "x-nullable": true,
                            "description": "Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "enum": [
                              "Single",
                              "Double"
                            ],
                            "x-ms-enum": {
                              "name": "encryptionType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Single",
                                  "description": "EncryptionType Single, volumes will use single encryption at rest"
                                },
                                {
                                  "value": "Double",
                                  "description": "EncryptionType Double, volumes will use double encryption at rest"
                                }
                              ]
                            },
                            "example": "Single",
                            "default": "Single"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of results."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}": {
      "get": {
        "summary": "Describe a Capacity Pool",
        "description": "Get details of the specified capacity pool",
        "tags": [
          "Capacity Pools"
        ],
        "operationId": "Pools_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Capacity pool resource",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Capacity pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "size",
                    "serviceLevel"
                  ],
                  "properties": {
                    "poolId": {
                      "title": "poolId",
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID v4 used to identify the Pool",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                    },
                    "size": {
                      "title": "size",
                      "type": "integer",
                      "format": "int64",
                      "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).",
                      "default": 4398046511104
                    },
                    "serviceLevel": {
                      "title": "serviceLevel",
                      "type": "string",
                      "description": "The service level of the file system",
                      "enum": [
                        "Standard",
                        "Premium",
                        "Ultra",
                        "StandardZRS",
                        "Flexible"
                      ],
                      "default": "Premium",
                      "x-ms-enum": {
                        "name": "ServiceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard service level"
                          },
                          {
                            "value": "Premium",
                            "description": "Premium service level"
                          },
                          {
                            "value": "Ultra",
                            "description": "Ultra service level"
                          },
                          {
                            "value": "StandardZRS",
                            "description": "Zone redundant storage service level. This will be deprecated soon."
                          },
                          {
                            "value": "Flexible",
                            "description": "Flexible service level"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "totalThroughputMibps": {
                      "type": "number",
                      "description": "Total throughput of pool in MiB/s",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "utilizedThroughputMibps": {
                      "type": "number",
                      "description": "Utilized throughput of pool in MiB/s",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "customThroughputMibps": {
                      "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
                      "type": "number",
                      "x-nullable": true,
                      "example": 128
                    },
                    "qosType": {
                      "title": "qosType",
                      "type": "string",
                      "description": "The qos type of the pool",
                      "enum": [
                        "Auto",
                        "Manual"
                      ],
                      "x-ms-enum": {
                        "name": "qosType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Auto",
                            "description": "qos type Auto"
                          },
                          {
                            "value": "Manual",
                            "description": "qos type Manual"
                          }
                        ]
                      },
                      "example": "Manual",
                      "default": "Auto"
                    },
                    "coolAccess": {
                      "type": "boolean",
                      "default": false,
                      "example": false,
                      "description": "If enabled (true) the pool can contain cool Access enabled volumes."
                    },
                    "encryptionType": {
                      "title": "encryptionType",
                      "type": "string",
                      "x-nullable": true,
                      "description": "Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "Single",
                        "Double"
                      ],
                      "x-ms-enum": {
                        "name": "encryptionType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Single",
                            "description": "EncryptionType Single, volumes will use single encryption at rest"
                          },
                          {
                            "value": "Double",
                            "description": "EncryptionType Double, volumes will use double encryption at rest"
                          }
                        ]
                      },
                      "example": "Single",
                      "default": "Single"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Capacity Pools"
        ],
        "operationId": "Pools_CreateOrUpdate",
        "summary": "Create or Update the specified capacity pool within the resource group",
        "description": "Create or Update a capacity pool",
        "parameters": [
          {
            "name": "body",
            "description": "Capacity pool object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Capacity pool resource",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Capacity pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "size",
                    "serviceLevel"
                  ],
                  "properties": {
                    "poolId": {
                      "title": "poolId",
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID v4 used to identify the Pool",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                    },
                    "size": {
                      "title": "size",
                      "type": "integer",
                      "format": "int64",
                      "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).",
                      "default": 4398046511104
                    },
                    "serviceLevel": {
                      "title": "serviceLevel",
                      "type": "string",
                      "description": "The service level of the file system",
                      "enum": [
                        "Standard",
                        "Premium",
                        "Ultra",
                        "StandardZRS",
                        "Flexible"
                      ],
                      "default": "Premium",
                      "x-ms-enum": {
                        "name": "ServiceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard service level"
                          },
                          {
                            "value": "Premium",
                            "description": "Premium service level"
                          },
                          {
                            "value": "Ultra",
                            "description": "Ultra service level"
                          },
                          {
                            "value": "StandardZRS",
                            "description": "Zone redundant storage service level. This will be deprecated soon."
                          },
                          {
                            "value": "Flexible",
                            "description": "Flexible service level"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "totalThroughputMibps": {
                      "type": "number",
                      "description": "Total throughput of pool in MiB/s",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "utilizedThroughputMibps": {
                      "type": "number",
                      "description": "Utilized throughput of pool in MiB/s",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "customThroughputMibps": {
                      "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
                      "type": "number",
                      "x-nullable": true,
                      "example": 128
                    },
                    "qosType": {
                      "title": "qosType",
                      "type": "string",
                      "description": "The qos type of the pool",
                      "enum": [
                        "Auto",
                        "Manual"
                      ],
                      "x-ms-enum": {
                        "name": "qosType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Auto",
                            "description": "qos type Auto"
                          },
                          {
                            "value": "Manual",
                            "description": "qos type Manual"
                          }
                        ]
                      },
                      "example": "Manual",
                      "default": "Auto"
                    },
                    "coolAccess": {
                      "type": "boolean",
                      "default": false,
                      "example": false,
                      "description": "If enabled (true) the pool can contain cool Access enabled volumes."
                    },
                    "encryptionType": {
                      "title": "encryptionType",
                      "type": "string",
                      "x-nullable": true,
                      "description": "Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "Single",
                        "Double"
                      ],
                      "x-ms-enum": {
                        "name": "encryptionType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Single",
                            "description": "EncryptionType Single, volumes will use single encryption at rest"
                          },
                          {
                            "value": "Double",
                            "description": "EncryptionType Double, volumes will use double encryption at rest"
                          }
                        ]
                      },
                      "example": "Single",
                      "default": "Single"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - pool updated",
            "schema": {
              "description": "Capacity pool resource",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Capacity pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "size",
                    "serviceLevel"
                  ],
                  "properties": {
                    "poolId": {
                      "title": "poolId",
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID v4 used to identify the Pool",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                    },
                    "size": {
                      "title": "size",
                      "type": "integer",
                      "format": "int64",
                      "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).",
                      "default": 4398046511104
                    },
                    "serviceLevel": {
                      "title": "serviceLevel",
                      "type": "string",
                      "description": "The service level of the file system",
                      "enum": [
                        "Standard",
                        "Premium",
                        "Ultra",
                        "StandardZRS",
                        "Flexible"
                      ],
                      "default": "Premium",
                      "x-ms-enum": {
                        "name": "ServiceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard service level"
                          },
                          {
                            "value": "Premium",
                            "description": "Premium service level"
                          },
                          {
                            "value": "Ultra",
                            "description": "Ultra service level"
                          },
                          {
                            "value": "StandardZRS",
                            "description": "Zone redundant storage service level. This will be deprecated soon."
                          },
                          {
                            "value": "Flexible",
                            "description": "Flexible service level"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "totalThroughputMibps": {
                      "type": "number",
                      "description": "Total throughput of pool in MiB/s",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "utilizedThroughputMibps": {
                      "type": "number",
                      "description": "Utilized throughput of pool in MiB/s",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "customThroughputMibps": {
                      "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
                      "type": "number",
                      "x-nullable": true,
                      "example": 128
                    },
                    "qosType": {
                      "title": "qosType",
                      "type": "string",
                      "description": "The qos type of the pool",
                      "enum": [
                        "Auto",
                        "Manual"
                      ],
                      "x-ms-enum": {
                        "name": "qosType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Auto",
                            "description": "qos type Auto"
                          },
                          {
                            "value": "Manual",
                            "description": "qos type Manual"
                          }
                        ]
                      },
                      "example": "Manual",
                      "default": "Auto"
                    },
                    "coolAccess": {
                      "type": "boolean",
                      "default": false,
                      "example": false,
                      "description": "If enabled (true) the pool can contain cool Access enabled volumes."
                    },
                    "encryptionType": {
                      "title": "encryptionType",
                      "type": "string",
                      "x-nullable": true,
                      "description": "Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "Single",
                        "Double"
                      ],
                      "x-ms-enum": {
                        "name": "encryptionType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Single",
                            "description": "EncryptionType Single, volumes will use single encryption at rest"
                          },
                          {
                            "value": "Double",
                            "description": "EncryptionType Double, volumes will use double encryption at rest"
                          }
                        ]
                      },
                      "example": "Single",
                      "default": "Single"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Pool created",
            "schema": {
              "description": "Capacity pool resource",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Capacity pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "size",
                    "serviceLevel"
                  ],
                  "properties": {
                    "poolId": {
                      "title": "poolId",
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID v4 used to identify the Pool",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                    },
                    "size": {
                      "title": "size",
                      "type": "integer",
                      "format": "int64",
                      "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).",
                      "default": 4398046511104
                    },
                    "serviceLevel": {
                      "title": "serviceLevel",
                      "type": "string",
                      "description": "The service level of the file system",
                      "enum": [
                        "Standard",
                        "Premium",
                        "Ultra",
                        "StandardZRS",
                        "Flexible"
                      ],
                      "default": "Premium",
                      "x-ms-enum": {
                        "name": "ServiceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard service level"
                          },
                          {
                            "value": "Premium",
                            "description": "Premium service level"
                          },
                          {
                            "value": "Ultra",
                            "description": "Ultra service level"
                          },
                          {
                            "value": "StandardZRS",
                            "description": "Zone redundant storage service level. This will be deprecated soon."
                          },
                          {
                            "value": "Flexible",
                            "description": "Flexible service level"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "totalThroughputMibps": {
                      "type": "number",
                      "description": "Total throughput of pool in MiB/s",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "utilizedThroughputMibps": {
                      "type": "number",
                      "description": "Utilized throughput of pool in MiB/s",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "customThroughputMibps": {
                      "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
                      "type": "number",
                      "x-nullable": true,
                      "example": 128
                    },
                    "qosType": {
                      "title": "qosType",
                      "type": "string",
                      "description": "The qos type of the pool",
                      "enum": [
                        "Auto",
                        "Manual"
                      ],
                      "x-ms-enum": {
                        "name": "qosType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Auto",
                            "description": "qos type Auto"
                          },
                          {
                            "value": "Manual",
                            "description": "qos type Manual"
                          }
                        ]
                      },
                      "example": "Manual",
                      "default": "Auto"
                    },
                    "coolAccess": {
                      "type": "boolean",
                      "default": false,
                      "example": false,
                      "description": "If enabled (true) the pool can contain cool Access enabled volumes."
                    },
                    "encryptionType": {
                      "title": "encryptionType",
                      "type": "string",
                      "x-nullable": true,
                      "description": "Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "Single",
                        "Double"
                      ],
                      "x-ms-enum": {
                        "name": "encryptionType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Single",
                            "description": "EncryptionType Single, volumes will use single encryption at rest"
                          },
                          {
                            "value": "Double",
                            "description": "EncryptionType Double, volumes will use double encryption at rest"
                          }
                        ]
                      },
                      "example": "Single",
                      "default": "Single"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Capacity Pools"
        ],
        "operationId": "Pools_Update",
        "summary": "Update a capacity pool",
        "description": "Patch the specified capacity pool",
        "parameters": [
          {
            "name": "body",
            "description": "Capacity pool object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Capacity pool patch resource",
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "location": {
                  "type": "string",
                  "description": "Resource location"
                },
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "tags": {
                  "description": "Resource tags",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Capacity pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "size": {
                      "title": "size",
                      "type": "integer",
                      "format": "int64",
                      "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).",
                      "default": 4398046511104
                    },
                    "qosType": {
                      "title": "qosType",
                      "type": "string",
                      "description": "The qos type of the pool",
                      "enum": [
                        "Auto",
                        "Manual"
                      ],
                      "x-ms-enum": {
                        "name": "qosType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Auto",
                            "description": "qos type Auto"
                          },
                          {
                            "value": "Manual",
                            "description": "qos type Manual"
                          }
                        ]
                      },
                      "example": "Manual",
                      "default": "Auto"
                    },
                    "coolAccess": {
                      "type": "boolean",
                      "example": false,
                      "description": "If enabled (true) the pool can contain cool Access enabled volumes."
                    },
                    "customThroughputMibps": {
                      "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
                      "type": "number",
                      "x-nullable": true,
                      "example": 128
                    }
                  }
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Capacity pool resource",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Capacity pool properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "size",
                    "serviceLevel"
                  ],
                  "properties": {
                    "poolId": {
                      "title": "poolId",
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID v4 used to identify the Pool",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                    },
                    "size": {
                      "title": "size",
                      "type": "integer",
                      "format": "int64",
                      "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).",
                      "default": 4398046511104
                    },
                    "serviceLevel": {
                      "title": "serviceLevel",
                      "type": "string",
                      "description": "The service level of the file system",
                      "enum": [
                        "Standard",
                        "Premium",
                        "Ultra",
                        "StandardZRS",
                        "Flexible"
                      ],
                      "default": "Premium",
                      "x-ms-enum": {
                        "name": "ServiceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard service level"
                          },
                          {
                            "value": "Premium",
                            "description": "Premium service level"
                          },
                          {
                            "value": "Ultra",
                            "description": "Ultra service level"
                          },
                          {
                            "value": "StandardZRS",
                            "description": "Zone redundant storage service level. This will be deprecated soon."
                          },
                          {
                            "value": "Flexible",
                            "description": "Flexible service level"
                          }
                        ]
                      }
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "totalThroughputMibps": {
                      "type": "number",
                      "description": "Total throughput of pool in MiB/s",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "utilizedThroughputMibps": {
                      "type": "number",
                      "description": "Utilized throughput of pool in MiB/s",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "customThroughputMibps": {
                      "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
                      "type": "number",
                      "x-nullable": true,
                      "example": 128
                    },
                    "qosType": {
                      "title": "qosType",
                      "type": "string",
                      "description": "The qos type of the pool",
                      "enum": [
                        "Auto",
                        "Manual"
                      ],
                      "x-ms-enum": {
                        "name": "qosType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Auto",
                            "description": "qos type Auto"
                          },
                          {
                            "value": "Manual",
                            "description": "qos type Manual"
                          }
                        ]
                      },
                      "example": "Manual",
                      "default": "Auto"
                    },
                    "coolAccess": {
                      "type": "boolean",
                      "default": false,
                      "example": false,
                      "description": "If enabled (true) the pool can contain cool Access enabled volumes."
                    },
                    "encryptionType": {
                      "title": "encryptionType",
                      "type": "string",
                      "x-nullable": true,
                      "description": "Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "Single",
                        "Double"
                      ],
                      "x-ms-enum": {
                        "name": "encryptionType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Single",
                            "description": "EncryptionType Single, volumes will use single encryption at rest"
                          },
                          {
                            "value": "Double",
                            "description": "EncryptionType Double, volumes will use double encryption at rest"
                          }
                        ]
                      },
                      "example": "Single",
                      "default": "Single"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted -- Update request accepted; operation will complete asynchronously"
          }
        }
      },
      "delete": {
        "tags": [
          "Capacity Pools"
        ],
        "operationId": "Pools_Delete",
        "summary": "Delete a capacity pool",
        "description": "Delete the specified capacity pool",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted -- Delete request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes": {
      "get": {
        "summary": "Describe all volumes",
        "description": "List all volumes within the capacity pool",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "tags": [
          "Volumes"
        ],
        "operationId": "Volumes_List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of volume resources",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of volumes",
                  "type": "array",
                  "items": {
                    "description": "Volume resource",
                    "type": "object",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "etag": {
                        "readOnly": true,
                        "type": "string",
                        "description": "A unique read-only string that changes whenever the resource is updated."
                      },
                      "zones": {
                        "type": "array",
                        "description": "Availability Zone",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "items": {
                          "type": "string",
                          "maxLength": 255,
                          "minLength": 1,
                          "example": "1"
                        }
                      },
                      "properties": {
                        "description": "Volume properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "required": [
                          "creationToken",
                          "usageThreshold",
                          "subnetId"
                        ],
                        "properties": {
                          "fileSystemId": {
                            "title": "FileSystem ID",
                            "type": "string",
                            "readOnly": true,
                            "description": "Unique FileSystem Identifier.",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                          },
                          "creationToken": {
                            "title": "Creation Token or File Path",
                            "type": "string",
                            "description": "A unique file path for the volume. Used when creating mount targets",
                            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                            "minLength": 1,
                            "maxLength": 80,
                            "example": "some-amazing-filepath",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "serviceLevel": {
                            "title": "serviceLevel",
                            "type": "string",
                            "description": "The service level of the file system",
                            "enum": [
                              "Standard",
                              "Premium",
                              "Ultra",
                              "StandardZRS",
                              "Flexible"
                            ],
                            "default": "Premium",
                            "x-ms-enum": {
                              "name": "ServiceLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Standard",
                                  "description": "Standard service level"
                                },
                                {
                                  "value": "Premium",
                                  "description": "Premium service level"
                                },
                                {
                                  "value": "Ultra",
                                  "description": "Ultra service level"
                                },
                                {
                                  "value": "StandardZRS",
                                  "description": "Zone redundant storage service level. This will be deprecated soon."
                                },
                                {
                                  "value": "Flexible",
                                  "description": "Flexible service level"
                                }
                              ]
                            }
                          },
                          "usageThreshold": {
                            "title": "usageThreshold",
                            "type": "integer",
                            "format": "int64",
                            "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                            "minimum": 53687091200,
                            "maximum": 2638827906662400,
                            "default": 107374182400,
                            "example": 107374182400
                          },
                          "exportPolicy": {
                            "title": "exportPolicy",
                            "description": "Set of export policy rules",
                            "properties": {
                              "rules": {
                                "title": "Export policy rule",
                                "description": "Export policy rule",
                                "type": "array",
                                "items": {
                                  "description": "Volume Export Policy Rule",
                                  "type": "object",
                                  "properties": {
                                    "ruleIndex": {
                                      "type": "integer",
                                      "description": "Order index",
                                      "format": "int32"
                                    },
                                    "unixReadOnly": {
                                      "type": "boolean",
                                      "description": "Read only access"
                                    },
                                    "unixReadWrite": {
                                      "type": "boolean",
                                      "description": "Read and write access"
                                    },
                                    "kerberos5ReadOnly": {
                                      "type": "boolean",
                                      "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                                      "example": false,
                                      "default": false
                                    },
                                    "kerberos5ReadWrite": {
                                      "type": "boolean",
                                      "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                                      "example": false,
                                      "default": false
                                    },
                                    "kerberos5iReadOnly": {
                                      "type": "boolean",
                                      "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                                      "example": false,
                                      "default": false
                                    },
                                    "kerberos5iReadWrite": {
                                      "type": "boolean",
                                      "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                                      "example": false,
                                      "default": false
                                    },
                                    "kerberos5pReadOnly": {
                                      "type": "boolean",
                                      "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                                      "example": false,
                                      "default": false
                                    },
                                    "kerberos5pReadWrite": {
                                      "type": "boolean",
                                      "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                                      "example": false,
                                      "default": false
                                    },
                                    "cifs": {
                                      "type": "boolean",
                                      "description": "Allows CIFS protocol"
                                    },
                                    "nfsv3": {
                                      "type": "boolean",
                                      "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                                    },
                                    "nfsv41": {
                                      "type": "boolean",
                                      "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                                    },
                                    "allowedClients": {
                                      "type": "string",
                                      "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                                    },
                                    "hasRootAccess": {
                                      "type": "boolean",
                                      "description": "Has root access to volume",
                                      "example": true,
                                      "default": true
                                    },
                                    "chownMode": {
                                      "type": "string",
                                      "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                                      "default": "Restricted",
                                      "enum": [
                                        "Restricted",
                                        "Unrestricted"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ChownMode",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "ruleIndex"
                                ]
                              }
                            }
                          },
                          "protocolTypes": {
                            "title": "protocolTypes",
                            "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "NFSv4.1"
                            ]
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Azure lifecycle management"
                          },
                          "snapshotId": {
                            "title": "Snapshot ID",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                                }
                              ]
                            },
                            "x-nullable": true,
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "Resource identifier used to identify the Snapshot.",
                            "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                          },
                          "deleteBaseSnapshot": {
                            "type": "boolean",
                            "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                          },
                          "backupId": {
                            "title": "Backup ID",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                                }
                              ]
                            },
                            "x-nullable": true,
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "Resource identifier used to identify the Backup.",
                            "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                          },
                          "baremetalTenantId": {
                            "title": "Baremetal Tenant ID",
                            "type": "string",
                            "readOnly": true,
                            "description": "Unique Baremetal Tenant Identifier.",
                            "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                          },
                          "subnetId": {
                            "type": "string",
                            "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                          },
                          "networkFeatures": {
                            "title": "Network features",
                            "description": "Network features available to the volume, or current state of update.",
                            "type": "string",
                            "enum": [
                              "Basic",
                              "Standard",
                              "Basic_Standard",
                              "Standard_Basic"
                            ],
                            "x-ms-enum": {
                              "name": "NetworkFeatures",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Basic",
                                  "description": "Basic network features."
                                },
                                {
                                  "value": "Standard",
                                  "description": "Standard network features."
                                },
                                {
                                  "value": "Basic_Standard",
                                  "description": "Updating from Basic to Standard network features."
                                },
                                {
                                  "value": "Standard_Basic",
                                  "description": "Updating from Standard to Basic network features."
                                }
                              ]
                            },
                            "example": "Standard",
                            "default": "Basic",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "effectiveNetworkFeatures": {
                            "title": "Network features",
                            "description": "Network features available to the volume, or current state of update.",
                            "type": "string",
                            "enum": [
                              "Basic",
                              "Standard",
                              "Basic_Standard",
                              "Standard_Basic"
                            ],
                            "x-ms-enum": {
                              "name": "NetworkFeatures",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Basic",
                                  "description": "Basic network features."
                                },
                                {
                                  "value": "Standard",
                                  "description": "Standard network features."
                                },
                                {
                                  "value": "Basic_Standard",
                                  "description": "Updating from Basic to Standard network features."
                                },
                                {
                                  "value": "Standard_Basic",
                                  "description": "Updating from Standard to Basic network features."
                                }
                              ]
                            },
                            "example": "Standard",
                            "default": "Basic",
                            "readOnly": true
                          },
                          "networkSiblingSetId": {
                            "title": "Network Sibling Set ID",
                            "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                            "type": "string",
                            "readOnly": true,
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "storageToNetworkProximity": {
                            "title": "Storage to Network Proximity",
                            "description": "Provides storage to network proximity information for the volume.",
                            "type": "string",
                            "enum": [
                              "Default",
                              "T1",
                              "T2",
                              "AcrossT2"
                            ],
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "VolumeStorageToNetworkProximity",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Default",
                                  "description": "Basic storage to network connectivity."
                                },
                                {
                                  "value": "T1",
                                  "description": "Standard T1 storage to network connectivity."
                                },
                                {
                                  "value": "T2",
                                  "description": "Standard T2 storage to network connectivity."
                                },
                                {
                                  "value": "AcrossT2",
                                  "description": "Standard AcrossT2 storage to network connectivity."
                                }
                              ]
                            },
                            "example": "T1"
                          },
                          "mountTargets": {
                            "title": "mountTargets",
                            "type": "array",
                            "readOnly": true,
                            "description": "List of mount targets",
                            "items": {
                              "description": "Mount target properties",
                              "type": "object",
                              "required": [
                                "fileSystemId"
                              ],
                              "properties": {
                                "mountTargetId": {
                                  "title": "mountTargetId",
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "UUID v4 used to identify the MountTarget",
                                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                  "maxLength": 36,
                                  "minLength": 36,
                                  "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                                },
                                "fileSystemId": {
                                  "title": "fileSystemId",
                                  "type": "string",
                                  "description": "UUID v4 used to identify the MountTarget",
                                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                  "maxLength": 36,
                                  "minLength": 36,
                                  "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                                },
                                "ipAddress": {
                                  "title": "ipAddress",
                                  "description": "The mount target's IPv4 address",
                                  "type": "string",
                                  "readOnly": true,
                                  "example": "1.2.3.4"
                                },
                                "smbServerFqdn": {
                                  "title": "smbServerFQDN",
                                  "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                                  "type": "string",
                                  "example": "fullyqualified.domainname.com"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "fileSystemId"
                            ]
                          },
                          "volumeType": {
                            "type": "string",
                            "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                            "example": "DataProtection",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "dataProtection": {
                            "title": "DataProtection",
                            "description": "DataProtection type volumes include an object containing details of the replication",
                            "properties": {
                              "backup": {
                                "title": "Backup",
                                "description": "Backup Properties",
                                "type": "object",
                                "properties": {
                                  "backupPolicyId": {
                                    "type": "string",
                                    "format": "arm-id",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                        }
                                      ]
                                    },
                                    "description": "Backup Policy Resource ID"
                                  },
                                  "policyEnforced": {
                                    "type": "boolean",
                                    "description": "Policy Enforced"
                                  },
                                  "backupVaultId": {
                                    "type": "string",
                                    "format": "arm-id",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                        }
                                      ]
                                    },
                                    "description": "Backup Vault Resource ID"
                                  }
                                }
                              },
                              "replication": {
                                "title": "Replication",
                                "description": "Replication properties",
                                "type": "object",
                                "properties": {
                                  "replicationId": {
                                    "type": "string",
                                    "description": "Id",
                                    "readOnly": true
                                  },
                                  "endpointType": {
                                    "type": "string",
                                    "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                                    "enum": [
                                      "src",
                                      "dst"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    },
                                    "readOnly": true
                                  },
                                  "replicationSchedule": {
                                    "type": "string",
                                    "description": "Schedule",
                                    "enum": [
                                      "_10minutely",
                                      "hourly",
                                      "daily"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ReplicationSchedule",
                                      "modelAsString": true
                                    }
                                  },
                                  "remoteVolumeResourceId": {
                                    "type": "string",
                                    "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                                  },
                                  "remotePath": {
                                    "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                                    "type": "object",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "required": [
                                      "externalHostName",
                                      "serverName",
                                      "volumeName"
                                    ],
                                    "properties": {
                                      "externalHostName": {
                                        "type": "string",
                                        "description": "The Path to a ONTAP Host"
                                      },
                                      "serverName": {
                                        "type": "string",
                                        "description": "The name of a server on the ONTAP Host"
                                      },
                                      "volumeName": {
                                        "type": "string",
                                        "description": "The name of a volume on the server"
                                      }
                                    }
                                  },
                                  "remoteVolumeRegion": {
                                    "type": "string",
                                    "description": "The remote region for the other end of the Volume Replication."
                                  },
                                  "destinationReplications": {
                                    "description": "A list of destination replications",
                                    "type": "array",
                                    "readOnly": true,
                                    "items": {
                                      "description": "Destination replication properties",
                                      "type": "object",
                                      "properties": {
                                        "resourceId": {
                                          "type": "string",
                                          "format": "arm-id",
                                          "x-ms-arm-id-details": {
                                            "allowedResources": [
                                              {
                                                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                              }
                                            ]
                                          },
                                          "description": "The resource ID of the remote volume"
                                        },
                                        "replicationType": {
                                          "type": "string",
                                          "description": "Indicates whether the replication is cross zone or cross region.",
                                          "enum": [
                                            "CrossRegionReplication",
                                            "CrossZoneReplication"
                                          ],
                                          "x-ms-enum": {
                                            "name": "ReplicationType",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "value": "CrossRegionReplication",
                                                "description": "Cross region replication"
                                              },
                                              {
                                                "value": "CrossZoneReplication",
                                                "description": "Cross zone replication"
                                              }
                                            ]
                                          }
                                        },
                                        "region": {
                                          "type": "string",
                                          "description": "The remote region for the destination volume."
                                        },
                                        "zone": {
                                          "type": "string",
                                          "description": "The remote zone for the destination volume."
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "resourceId"
                                    ]
                                  }
                                }
                              },
                              "snapshot": {
                                "title": "Snapshot",
                                "description": "Snapshot properties.",
                                "type": "object",
                                "properties": {
                                  "snapshotPolicyId": {
                                    "type": "string",
                                    "description": "Snapshot Policy ResourceId"
                                  }
                                }
                              },
                              "volumeRelocation": {
                                "title": "VolumeRelocation",
                                "description": "VolumeRelocation properties",
                                "type": "object",
                                "properties": {
                                  "relocationRequested": {
                                    "type": "boolean",
                                    "description": "Has relocation been requested for this volume"
                                  },
                                  "readyToBeFinalized": {
                                    "type": "boolean",
                                    "readOnly": true,
                                    "description": "Has relocation finished and is ready to be cleaned up"
                                  }
                                }
                              }
                            }
                          },
                          "acceptGrowCapacityPoolForShortTermCloneSplit": {
                            "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                            "type": "string",
                            "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "enum": [
                              "Accepted",
                              "Declined"
                            ],
                            "x-ms-enum": {
                              "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Accepted",
                                  "description": "Auto grow capacity pool for short term clone split is accepted."
                                },
                                {
                                  "value": "Declined",
                                  "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                                }
                              ]
                            },
                            "example": "Accepted"
                          },
                          "isRestoring": {
                            "type": "boolean",
                            "description": "Restoring",
                            "readOnly": true
                          },
                          "snapshotDirectoryVisible": {
                            "type": "boolean",
                            "default": true,
                            "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                          },
                          "kerberosEnabled": {
                            "type": "boolean",
                            "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "example": false,
                            "default": false
                          },
                          "securityStyle": {
                            "type": "string",
                            "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                            "default": "unix",
                            "enum": [
                              "ntfs",
                              "unix"
                            ],
                            "x-ms-enum": {
                              "name": "SecurityStyle",
                              "modelAsString": true
                            },
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "smbEncryption": {
                            "type": "boolean",
                            "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                            "example": false,
                            "default": false
                          },
                          "smbAccessBasedEnumeration": {
                            "title": "smbAccessBasedEnumeration",
                            "type": "string",
                            "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                            "enum": [
                              "Disabled",
                              "Enabled"
                            ],
                            "x-ms-enum": {
                              "name": "smbAccessBasedEnumeration",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Disabled",
                                  "description": "smbAccessBasedEnumeration share setting is disabled"
                                },
                                {
                                  "value": "Enabled",
                                  "description": "smbAccessBasedEnumeration share setting is enabled"
                                }
                              ]
                            },
                            "x-nullable": true,
                            "example": "Enabled"
                          },
                          "smbNonBrowsable": {
                            "title": "smbNonBrowsable",
                            "type": "string",
                            "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                            "enum": [
                              "Disabled",
                              "Enabled"
                            ],
                            "x-ms-enum": {
                              "name": "smbNonBrowsable",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Disabled",
                                  "description": "smbNonBrowsable share setting is disabled"
                                },
                                {
                                  "value": "Enabled",
                                  "description": "smbNonBrowsable share setting is enabled"
                                }
                              ]
                            },
                            "example": "Enabled"
                          },
                          "smbContinuouslyAvailable": {
                            "type": "boolean",
                            "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                            "example": false,
                            "default": false
                          },
                          "throughputMibps": {
                            "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                            "type": "number",
                            "x-nullable": true,
                            "example": 128.223
                          },
                          "actualThroughputMibps": {
                            "type": "number",
                            "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                            "example": 164.221,
                            "readOnly": true
                          },
                          "encryptionKeySource": {
                            "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                            "type": "string",
                            "enum": [
                              "Microsoft.NetApp",
                              "Microsoft.KeyVault"
                            ],
                            "x-ms-enum": {
                              "name": "EncryptionKeySource",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Microsoft.NetApp",
                                  "description": "Microsoft-managed key encryption"
                                },
                                {
                                  "value": "Microsoft.KeyVault",
                                  "description": "Customer-managed key encryption"
                                }
                              ]
                            },
                            "default": "Microsoft.NetApp"
                          },
                          "keyVaultPrivateEndpointResourceId": {
                            "type": "string",
                            "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                          },
                          "ldapEnabled": {
                            "type": "boolean",
                            "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                            "example": false,
                            "default": false,
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "coolAccess": {
                            "type": "boolean",
                            "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                            "example": false,
                            "default": false
                          },
                          "coolnessPeriod": {
                            "type": "integer",
                            "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                            "example": 7,
                            "minimum": 2,
                            "maximum": 183,
                            "format": "int32"
                          },
                          "coolAccessRetrievalPolicy": {
                            "type": "string",
                            "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                            "enum": [
                              "Default",
                              "OnRead",
                              "Never"
                            ],
                            "x-ms-enum": {
                              "name": "coolAccessRetrievalPolicy",
                              "modelAsString": true
                            }
                          },
                          "coolAccessTieringPolicy": {
                            "type": "string",
                            "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                            "enum": [
                              "Auto",
                              "SnapshotOnly"
                            ],
                            "x-ms-enum": {
                              "name": "coolAccessTieringPolicy",
                              "modelAsString": true
                            }
                          },
                          "unixPermissions": {
                            "type": "string",
                            "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                            "minLength": 4,
                            "maxLength": 4,
                            "x-nullable": true,
                            "example": "0770"
                          },
                          "cloneProgress": {
                            "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                            "type": "integer",
                            "format": "int32",
                            "example": 10,
                            "x-nullable": true,
                            "readOnly": true
                          },
                          "fileAccessLogs": {
                            "type": "string",
                            "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                            "readOnly": true,
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "fileAccessLogs",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "fileAccessLogs are enabled"
                                },
                                {
                                  "value": "Disabled",
                                  "description": "fileAccessLogs are not enabled"
                                }
                              ]
                            },
                            "example": "Disabled",
                            "default": "Disabled"
                          },
                          "avsDataStore": {
                            "title": "avsDataStore",
                            "type": "string",
                            "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "avsDataStore",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "avsDataStore is enabled"
                                },
                                {
                                  "value": "Disabled",
                                  "description": "avsDataStore is disabled"
                                }
                              ]
                            },
                            "example": "Enabled",
                            "default": "Disabled",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "dataStoreResourceId": {
                            "title": "dataStoreResourceId",
                            "description": "Data store resource unique identifier",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "isDefaultQuotaEnabled": {
                            "type": "boolean",
                            "description": "Specifies if default quota is enabled for the volume.",
                            "example": false,
                            "default": false
                          },
                          "defaultUserQuotaInKiBs": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                            "example": 4,
                            "default": 0
                          },
                          "defaultGroupQuotaInKiBs": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                            "example": 4,
                            "default": 0
                          },
                          "maximumNumberOfFiles": {
                            "type": "integer",
                            "format": "int64",
                            "readOnly": true,
                            "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                            "example": 100000000
                          },
                          "volumeGroupName": {
                            "type": "string",
                            "description": "Volume Group Name",
                            "readOnly": true
                          },
                          "capacityPoolResourceId": {
                            "type": "string",
                            "description": "Pool Resource Id used in case of creating a volume through volume group"
                          },
                          "proximityPlacementGroup": {
                            "type": "string",
                            "description": "Proximity placement group associated with the volume",
                            "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                          },
                          "t2Network": {
                            "type": "string",
                            "description": "T2 network information",
                            "example": "Test-T2-Alias",
                            "readOnly": true
                          },
                          "volumeSpecName": {
                            "type": "string",
                            "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                            "example": "Data"
                          },
                          "encrypted": {
                            "type": "boolean",
                            "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                            "readOnly": true
                          },
                          "placementRules": {
                            "title": "Volume placement rules",
                            "description": "Application specific placement rules for the particular volume",
                            "type": "array",
                            "items": {
                              "description": "Application specific parameters for the placement of volumes in the volume group",
                              "type": "object",
                              "required": [
                                "key",
                                "value"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                                  "example": "key1"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                                  "example": "value1"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "key"
                            ]
                          },
                          "enableSubvolumes": {
                            "type": "string",
                            "description": "Flag indicating whether subvolume operations are enabled on the volume",
                            "example": "Enabled",
                            "default": "Disabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "enableSubvolumes",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "subvolumes are enabled"
                                },
                                {
                                  "value": "Disabled",
                                  "description": "subvolumes are not enabled"
                                }
                              ]
                            }
                          },
                          "provisionedAvailabilityZone": {
                            "title": "Provisioned Availability Zone",
                            "type": "string",
                            "readOnly": true,
                            "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                            "example": "2",
                            "x-nullable": true
                          },
                          "isLargeVolume": {
                            "title": "Is Large Volume",
                            "type": "boolean",
                            "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                            "example": false,
                            "default": false,
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "originatingResourceId": {
                            "title": "Originating Resource Id",
                            "type": "string",
                            "description": "Id of the snapshot or backup that the volume is restored from.",
                            "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "inheritedSizeInBytes": {
                            "title": "inheritedSizeInBytes",
                            "type": "integer",
                            "format": "int64",
                            "description": "Space shared by short term clone volume with parent volume in bytes.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of results."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}": {
      "get": {
        "tags": [
          "Volumes"
        ],
        "operationId": "Volumes_Get",
        "summary": "Describe a volume",
        "description": "Get the details of the specified volume",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Volume resource",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "zones": {
                  "type": "array",
                  "description": "Availability Zone",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "items": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "1"
                  }
                },
                "properties": {
                  "description": "Volume properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "creationToken",
                    "usageThreshold",
                    "subnetId"
                  ],
                  "properties": {
                    "fileSystemId": {
                      "title": "FileSystem ID",
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique FileSystem Identifier.",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                    },
                    "creationToken": {
                      "title": "Creation Token or File Path",
                      "type": "string",
                      "description": "A unique file path for the volume. Used when creating mount targets",
                      "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                      "minLength": 1,
                      "maxLength": 80,
                      "example": "some-amazing-filepath",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "serviceLevel": {
                      "title": "serviceLevel",
                      "type": "string",
                      "description": "The service level of the file system",
                      "enum": [
                        "Standard",
                        "Premium",
                        "Ultra",
                        "StandardZRS",
                        "Flexible"
                      ],
                      "default": "Premium",
                      "x-ms-enum": {
                        "name": "ServiceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard service level"
                          },
                          {
                            "value": "Premium",
                            "description": "Premium service level"
                          },
                          {
                            "value": "Ultra",
                            "description": "Ultra service level"
                          },
                          {
                            "value": "StandardZRS",
                            "description": "Zone redundant storage service level. This will be deprecated soon."
                          },
                          {
                            "value": "Flexible",
                            "description": "Flexible service level"
                          }
                        ]
                      }
                    },
                    "usageThreshold": {
                      "title": "usageThreshold",
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                      "minimum": 53687091200,
                      "maximum": 2638827906662400,
                      "default": 107374182400,
                      "example": 107374182400
                    },
                    "exportPolicy": {
                      "title": "exportPolicy",
                      "description": "Set of export policy rules",
                      "properties": {
                        "rules": {
                          "title": "Export policy rule",
                          "description": "Export policy rule",
                          "type": "array",
                          "items": {
                            "description": "Volume Export Policy Rule",
                            "type": "object",
                            "properties": {
                              "ruleIndex": {
                                "type": "integer",
                                "description": "Order index",
                                "format": "int32"
                              },
                              "unixReadOnly": {
                                "type": "boolean",
                                "description": "Read only access"
                              },
                              "unixReadWrite": {
                                "type": "boolean",
                                "description": "Read and write access"
                              },
                              "kerberos5ReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5ReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "cifs": {
                                "type": "boolean",
                                "description": "Allows CIFS protocol"
                              },
                              "nfsv3": {
                                "type": "boolean",
                                "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                              },
                              "nfsv41": {
                                "type": "boolean",
                                "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                              },
                              "allowedClients": {
                                "type": "string",
                                "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                              },
                              "hasRootAccess": {
                                "type": "boolean",
                                "description": "Has root access to volume",
                                "example": true,
                                "default": true
                              },
                              "chownMode": {
                                "type": "string",
                                "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                                "default": "Restricted",
                                "enum": [
                                  "Restricted",
                                  "Unrestricted"
                                ],
                                "x-ms-enum": {
                                  "name": "ChownMode",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "ruleIndex"
                          ]
                        }
                      }
                    },
                    "protocolTypes": {
                      "title": "protocolTypes",
                      "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "NFSv4.1"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "snapshotId": {
                      "title": "Snapshot ID",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "Resource identifier used to identify the Snapshot.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                    },
                    "deleteBaseSnapshot": {
                      "type": "boolean",
                      "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                    },
                    "backupId": {
                      "title": "Backup ID",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "Resource identifier used to identify the Backup.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                    },
                    "baremetalTenantId": {
                      "title": "Baremetal Tenant ID",
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique Baremetal Tenant Identifier.",
                      "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                    },
                    "subnetId": {
                      "type": "string",
                      "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                    },
                    "networkFeatures": {
                      "title": "Network features",
                      "description": "Network features available to the volume, or current state of update.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Basic_Standard",
                        "Standard_Basic"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkFeatures",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic network features."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard network features."
                          },
                          {
                            "value": "Basic_Standard",
                            "description": "Updating from Basic to Standard network features."
                          },
                          {
                            "value": "Standard_Basic",
                            "description": "Updating from Standard to Basic network features."
                          }
                        ]
                      },
                      "example": "Standard",
                      "default": "Basic",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "effectiveNetworkFeatures": {
                      "title": "Network features",
                      "description": "Network features available to the volume, or current state of update.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Basic_Standard",
                        "Standard_Basic"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkFeatures",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic network features."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard network features."
                          },
                          {
                            "value": "Basic_Standard",
                            "description": "Updating from Basic to Standard network features."
                          },
                          {
                            "value": "Standard_Basic",
                            "description": "Updating from Standard to Basic network features."
                          }
                        ]
                      },
                      "example": "Standard",
                      "default": "Basic",
                      "readOnly": true
                    },
                    "networkSiblingSetId": {
                      "title": "Network Sibling Set ID",
                      "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "storageToNetworkProximity": {
                      "title": "Storage to Network Proximity",
                      "description": "Provides storage to network proximity information for the volume.",
                      "type": "string",
                      "enum": [
                        "Default",
                        "T1",
                        "T2",
                        "AcrossT2"
                      ],
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "VolumeStorageToNetworkProximity",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Default",
                            "description": "Basic storage to network connectivity."
                          },
                          {
                            "value": "T1",
                            "description": "Standard T1 storage to network connectivity."
                          },
                          {
                            "value": "T2",
                            "description": "Standard T2 storage to network connectivity."
                          },
                          {
                            "value": "AcrossT2",
                            "description": "Standard AcrossT2 storage to network connectivity."
                          }
                        ]
                      },
                      "example": "T1"
                    },
                    "mountTargets": {
                      "title": "mountTargets",
                      "type": "array",
                      "readOnly": true,
                      "description": "List of mount targets",
                      "items": {
                        "description": "Mount target properties",
                        "type": "object",
                        "required": [
                          "fileSystemId"
                        ],
                        "properties": {
                          "mountTargetId": {
                            "title": "mountTargetId",
                            "type": "string",
                            "readOnly": true,
                            "description": "UUID v4 used to identify the MountTarget",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "fileSystemId": {
                            "title": "fileSystemId",
                            "type": "string",
                            "description": "UUID v4 used to identify the MountTarget",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "ipAddress": {
                            "title": "ipAddress",
                            "description": "The mount target's IPv4 address",
                            "type": "string",
                            "readOnly": true,
                            "example": "1.2.3.4"
                          },
                          "smbServerFqdn": {
                            "title": "smbServerFQDN",
                            "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                            "type": "string",
                            "example": "fullyqualified.domainname.com"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "fileSystemId"
                      ]
                    },
                    "volumeType": {
                      "type": "string",
                      "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                      "example": "DataProtection",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dataProtection": {
                      "title": "DataProtection",
                      "description": "DataProtection type volumes include an object containing details of the replication",
                      "properties": {
                        "backup": {
                          "title": "Backup",
                          "description": "Backup Properties",
                          "type": "object",
                          "properties": {
                            "backupPolicyId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                  }
                                ]
                              },
                              "description": "Backup Policy Resource ID"
                            },
                            "policyEnforced": {
                              "type": "boolean",
                              "description": "Policy Enforced"
                            },
                            "backupVaultId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                  }
                                ]
                              },
                              "description": "Backup Vault Resource ID"
                            }
                          }
                        },
                        "replication": {
                          "title": "Replication",
                          "description": "Replication properties",
                          "type": "object",
                          "properties": {
                            "replicationId": {
                              "type": "string",
                              "description": "Id",
                              "readOnly": true
                            },
                            "endpointType": {
                              "type": "string",
                              "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                              "enum": [
                                "src",
                                "dst"
                              ],
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              },
                              "readOnly": true
                            },
                            "replicationSchedule": {
                              "type": "string",
                              "description": "Schedule",
                              "enum": [
                                "_10minutely",
                                "hourly",
                                "daily"
                              ],
                              "x-ms-enum": {
                                "name": "ReplicationSchedule",
                                "modelAsString": true
                              }
                            },
                            "remoteVolumeResourceId": {
                              "type": "string",
                              "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                            },
                            "remotePath": {
                              "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "required": [
                                "externalHostName",
                                "serverName",
                                "volumeName"
                              ],
                              "properties": {
                                "externalHostName": {
                                  "type": "string",
                                  "description": "The Path to a ONTAP Host"
                                },
                                "serverName": {
                                  "type": "string",
                                  "description": "The name of a server on the ONTAP Host"
                                },
                                "volumeName": {
                                  "type": "string",
                                  "description": "The name of a volume on the server"
                                }
                              }
                            },
                            "remoteVolumeRegion": {
                              "type": "string",
                              "description": "The remote region for the other end of the Volume Replication."
                            },
                            "destinationReplications": {
                              "description": "A list of destination replications",
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "description": "Destination replication properties",
                                "type": "object",
                                "properties": {
                                  "resourceId": {
                                    "type": "string",
                                    "format": "arm-id",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                        }
                                      ]
                                    },
                                    "description": "The resource ID of the remote volume"
                                  },
                                  "replicationType": {
                                    "type": "string",
                                    "description": "Indicates whether the replication is cross zone or cross region.",
                                    "enum": [
                                      "CrossRegionReplication",
                                      "CrossZoneReplication"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ReplicationType",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "CrossRegionReplication",
                                          "description": "Cross region replication"
                                        },
                                        {
                                          "value": "CrossZoneReplication",
                                          "description": "Cross zone replication"
                                        }
                                      ]
                                    }
                                  },
                                  "region": {
                                    "type": "string",
                                    "description": "The remote region for the destination volume."
                                  },
                                  "zone": {
                                    "type": "string",
                                    "description": "The remote zone for the destination volume."
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "resourceId"
                              ]
                            }
                          }
                        },
                        "snapshot": {
                          "title": "Snapshot",
                          "description": "Snapshot properties.",
                          "type": "object",
                          "properties": {
                            "snapshotPolicyId": {
                              "type": "string",
                              "description": "Snapshot Policy ResourceId"
                            }
                          }
                        },
                        "volumeRelocation": {
                          "title": "VolumeRelocation",
                          "description": "VolumeRelocation properties",
                          "type": "object",
                          "properties": {
                            "relocationRequested": {
                              "type": "boolean",
                              "description": "Has relocation been requested for this volume"
                            },
                            "readyToBeFinalized": {
                              "type": "boolean",
                              "readOnly": true,
                              "description": "Has relocation finished and is ready to be cleaned up"
                            }
                          }
                        }
                      }
                    },
                    "acceptGrowCapacityPoolForShortTermCloneSplit": {
                      "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                      "type": "string",
                      "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "Accepted",
                        "Declined"
                      ],
                      "x-ms-enum": {
                        "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Accepted",
                            "description": "Auto grow capacity pool for short term clone split is accepted."
                          },
                          {
                            "value": "Declined",
                            "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                          }
                        ]
                      },
                      "example": "Accepted"
                    },
                    "isRestoring": {
                      "type": "boolean",
                      "description": "Restoring",
                      "readOnly": true
                    },
                    "snapshotDirectoryVisible": {
                      "type": "boolean",
                      "default": true,
                      "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                    },
                    "kerberosEnabled": {
                      "type": "boolean",
                      "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "example": false,
                      "default": false
                    },
                    "securityStyle": {
                      "type": "string",
                      "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                      "default": "unix",
                      "enum": [
                        "ntfs",
                        "unix"
                      ],
                      "x-ms-enum": {
                        "name": "SecurityStyle",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "smbEncryption": {
                      "type": "boolean",
                      "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                      "example": false,
                      "default": false
                    },
                    "smbAccessBasedEnumeration": {
                      "title": "smbAccessBasedEnumeration",
                      "type": "string",
                      "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbAccessBasedEnumeration",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbAccessBasedEnumeration share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbAccessBasedEnumeration share setting is enabled"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "example": "Enabled"
                    },
                    "smbNonBrowsable": {
                      "title": "smbNonBrowsable",
                      "type": "string",
                      "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbNonBrowsable",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbNonBrowsable share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbNonBrowsable share setting is enabled"
                          }
                        ]
                      },
                      "example": "Enabled"
                    },
                    "smbContinuouslyAvailable": {
                      "type": "boolean",
                      "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                      "example": false,
                      "default": false
                    },
                    "throughputMibps": {
                      "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                      "type": "number",
                      "x-nullable": true,
                      "example": 128.223
                    },
                    "actualThroughputMibps": {
                      "type": "number",
                      "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "encryptionKeySource": {
                      "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                      "type": "string",
                      "enum": [
                        "Microsoft.NetApp",
                        "Microsoft.KeyVault"
                      ],
                      "x-ms-enum": {
                        "name": "EncryptionKeySource",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Microsoft.NetApp",
                            "description": "Microsoft-managed key encryption"
                          },
                          {
                            "value": "Microsoft.KeyVault",
                            "description": "Customer-managed key encryption"
                          }
                        ]
                      },
                      "default": "Microsoft.NetApp"
                    },
                    "keyVaultPrivateEndpointResourceId": {
                      "type": "string",
                      "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                    },
                    "ldapEnabled": {
                      "type": "boolean",
                      "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                      "example": false,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "coolAccess": {
                      "type": "boolean",
                      "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                      "example": false,
                      "default": false
                    },
                    "coolnessPeriod": {
                      "type": "integer",
                      "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                      "example": 7,
                      "minimum": 2,
                      "maximum": 183,
                      "format": "int32"
                    },
                    "coolAccessRetrievalPolicy": {
                      "type": "string",
                      "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                      "enum": [
                        "Default",
                        "OnRead",
                        "Never"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessRetrievalPolicy",
                        "modelAsString": true
                      }
                    },
                    "coolAccessTieringPolicy": {
                      "type": "string",
                      "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                      "enum": [
                        "Auto",
                        "SnapshotOnly"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessTieringPolicy",
                        "modelAsString": true
                      }
                    },
                    "unixPermissions": {
                      "type": "string",
                      "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                      "minLength": 4,
                      "maxLength": 4,
                      "x-nullable": true,
                      "example": "0770"
                    },
                    "cloneProgress": {
                      "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                      "type": "integer",
                      "format": "int32",
                      "example": 10,
                      "x-nullable": true,
                      "readOnly": true
                    },
                    "fileAccessLogs": {
                      "type": "string",
                      "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                      "readOnly": true,
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "fileAccessLogs",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "fileAccessLogs are enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "fileAccessLogs are not enabled"
                          }
                        ]
                      },
                      "example": "Disabled",
                      "default": "Disabled"
                    },
                    "avsDataStore": {
                      "title": "avsDataStore",
                      "type": "string",
                      "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "avsDataStore",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "avsDataStore is enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "avsDataStore is disabled"
                          }
                        ]
                      },
                      "example": "Enabled",
                      "default": "Disabled",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dataStoreResourceId": {
                      "title": "dataStoreResourceId",
                      "description": "Data store resource unique identifier",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "isDefaultQuotaEnabled": {
                      "type": "boolean",
                      "description": "Specifies if default quota is enabled for the volume.",
                      "example": false,
                      "default": false
                    },
                    "defaultUserQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                      "example": 4,
                      "default": 0
                    },
                    "defaultGroupQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                      "example": 4,
                      "default": 0
                    },
                    "maximumNumberOfFiles": {
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true,
                      "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                      "example": 100000000
                    },
                    "volumeGroupName": {
                      "type": "string",
                      "description": "Volume Group Name",
                      "readOnly": true
                    },
                    "capacityPoolResourceId": {
                      "type": "string",
                      "description": "Pool Resource Id used in case of creating a volume through volume group"
                    },
                    "proximityPlacementGroup": {
                      "type": "string",
                      "description": "Proximity placement group associated with the volume",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                    },
                    "t2Network": {
                      "type": "string",
                      "description": "T2 network information",
                      "example": "Test-T2-Alias",
                      "readOnly": true
                    },
                    "volumeSpecName": {
                      "type": "string",
                      "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                      "example": "Data"
                    },
                    "encrypted": {
                      "type": "boolean",
                      "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                      "readOnly": true
                    },
                    "placementRules": {
                      "title": "Volume placement rules",
                      "description": "Application specific placement rules for the particular volume",
                      "type": "array",
                      "items": {
                        "description": "Application specific parameters for the placement of volumes in the volume group",
                        "type": "object",
                        "required": [
                          "key",
                          "value"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                            "example": "key1"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                            "example": "value1"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "key"
                      ]
                    },
                    "enableSubvolumes": {
                      "type": "string",
                      "description": "Flag indicating whether subvolume operations are enabled on the volume",
                      "example": "Enabled",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "enableSubvolumes",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "subvolumes are enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "subvolumes are not enabled"
                          }
                        ]
                      }
                    },
                    "provisionedAvailabilityZone": {
                      "title": "Provisioned Availability Zone",
                      "type": "string",
                      "readOnly": true,
                      "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                      "example": "2",
                      "x-nullable": true
                    },
                    "isLargeVolume": {
                      "title": "Is Large Volume",
                      "type": "boolean",
                      "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                      "example": false,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "originatingResourceId": {
                      "title": "Originating Resource Id",
                      "type": "string",
                      "description": "Id of the snapshot or backup that the volume is restored from.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                      "readOnly": true,
                      "x-nullable": true
                    },
                    "inheritedSizeInBytes": {
                      "title": "inheritedSizeInBytes",
                      "type": "integer",
                      "format": "int64",
                      "description": "Space shared by short term clone volume with parent volume in bytes.",
                      "readOnly": true,
                      "x-nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Volumes"
        ],
        "operationId": "Volumes_CreateOrUpdate",
        "summary": "Create or Update a volume",
        "description": "Create or update the specified volume within the capacity pool",
        "parameters": [
          {
            "name": "body",
            "description": "Volume object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Volume resource",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "zones": {
                  "type": "array",
                  "description": "Availability Zone",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "items": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "1"
                  }
                },
                "properties": {
                  "description": "Volume properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "creationToken",
                    "usageThreshold",
                    "subnetId"
                  ],
                  "properties": {
                    "fileSystemId": {
                      "title": "FileSystem ID",
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique FileSystem Identifier.",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                    },
                    "creationToken": {
                      "title": "Creation Token or File Path",
                      "type": "string",
                      "description": "A unique file path for the volume. Used when creating mount targets",
                      "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                      "minLength": 1,
                      "maxLength": 80,
                      "example": "some-amazing-filepath",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "serviceLevel": {
                      "title": "serviceLevel",
                      "type": "string",
                      "description": "The service level of the file system",
                      "enum": [
                        "Standard",
                        "Premium",
                        "Ultra",
                        "StandardZRS",
                        "Flexible"
                      ],
                      "default": "Premium",
                      "x-ms-enum": {
                        "name": "ServiceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard service level"
                          },
                          {
                            "value": "Premium",
                            "description": "Premium service level"
                          },
                          {
                            "value": "Ultra",
                            "description": "Ultra service level"
                          },
                          {
                            "value": "StandardZRS",
                            "description": "Zone redundant storage service level. This will be deprecated soon."
                          },
                          {
                            "value": "Flexible",
                            "description": "Flexible service level"
                          }
                        ]
                      }
                    },
                    "usageThreshold": {
                      "title": "usageThreshold",
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                      "minimum": 53687091200,
                      "maximum": 2638827906662400,
                      "default": 107374182400,
                      "example": 107374182400
                    },
                    "exportPolicy": {
                      "title": "exportPolicy",
                      "description": "Set of export policy rules",
                      "properties": {
                        "rules": {
                          "title": "Export policy rule",
                          "description": "Export policy rule",
                          "type": "array",
                          "items": {
                            "description": "Volume Export Policy Rule",
                            "type": "object",
                            "properties": {
                              "ruleIndex": {
                                "type": "integer",
                                "description": "Order index",
                                "format": "int32"
                              },
                              "unixReadOnly": {
                                "type": "boolean",
                                "description": "Read only access"
                              },
                              "unixReadWrite": {
                                "type": "boolean",
                                "description": "Read and write access"
                              },
                              "kerberos5ReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5ReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "cifs": {
                                "type": "boolean",
                                "description": "Allows CIFS protocol"
                              },
                              "nfsv3": {
                                "type": "boolean",
                                "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                              },
                              "nfsv41": {
                                "type": "boolean",
                                "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                              },
                              "allowedClients": {
                                "type": "string",
                                "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                              },
                              "hasRootAccess": {
                                "type": "boolean",
                                "description": "Has root access to volume",
                                "example": true,
                                "default": true
                              },
                              "chownMode": {
                                "type": "string",
                                "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                                "default": "Restricted",
                                "enum": [
                                  "Restricted",
                                  "Unrestricted"
                                ],
                                "x-ms-enum": {
                                  "name": "ChownMode",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "ruleIndex"
                          ]
                        }
                      }
                    },
                    "protocolTypes": {
                      "title": "protocolTypes",
                      "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "NFSv4.1"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "snapshotId": {
                      "title": "Snapshot ID",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "Resource identifier used to identify the Snapshot.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                    },
                    "deleteBaseSnapshot": {
                      "type": "boolean",
                      "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                    },
                    "backupId": {
                      "title": "Backup ID",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "Resource identifier used to identify the Backup.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                    },
                    "baremetalTenantId": {
                      "title": "Baremetal Tenant ID",
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique Baremetal Tenant Identifier.",
                      "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                    },
                    "subnetId": {
                      "type": "string",
                      "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                    },
                    "networkFeatures": {
                      "title": "Network features",
                      "description": "Network features available to the volume, or current state of update.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Basic_Standard",
                        "Standard_Basic"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkFeatures",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic network features."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard network features."
                          },
                          {
                            "value": "Basic_Standard",
                            "description": "Updating from Basic to Standard network features."
                          },
                          {
                            "value": "Standard_Basic",
                            "description": "Updating from Standard to Basic network features."
                          }
                        ]
                      },
                      "example": "Standard",
                      "default": "Basic",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "effectiveNetworkFeatures": {
                      "title": "Network features",
                      "description": "Network features available to the volume, or current state of update.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Basic_Standard",
                        "Standard_Basic"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkFeatures",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic network features."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard network features."
                          },
                          {
                            "value": "Basic_Standard",
                            "description": "Updating from Basic to Standard network features."
                          },
                          {
                            "value": "Standard_Basic",
                            "description": "Updating from Standard to Basic network features."
                          }
                        ]
                      },
                      "example": "Standard",
                      "default": "Basic",
                      "readOnly": true
                    },
                    "networkSiblingSetId": {
                      "title": "Network Sibling Set ID",
                      "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "storageToNetworkProximity": {
                      "title": "Storage to Network Proximity",
                      "description": "Provides storage to network proximity information for the volume.",
                      "type": "string",
                      "enum": [
                        "Default",
                        "T1",
                        "T2",
                        "AcrossT2"
                      ],
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "VolumeStorageToNetworkProximity",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Default",
                            "description": "Basic storage to network connectivity."
                          },
                          {
                            "value": "T1",
                            "description": "Standard T1 storage to network connectivity."
                          },
                          {
                            "value": "T2",
                            "description": "Standard T2 storage to network connectivity."
                          },
                          {
                            "value": "AcrossT2",
                            "description": "Standard AcrossT2 storage to network connectivity."
                          }
                        ]
                      },
                      "example": "T1"
                    },
                    "mountTargets": {
                      "title": "mountTargets",
                      "type": "array",
                      "readOnly": true,
                      "description": "List of mount targets",
                      "items": {
                        "description": "Mount target properties",
                        "type": "object",
                        "required": [
                          "fileSystemId"
                        ],
                        "properties": {
                          "mountTargetId": {
                            "title": "mountTargetId",
                            "type": "string",
                            "readOnly": true,
                            "description": "UUID v4 used to identify the MountTarget",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "fileSystemId": {
                            "title": "fileSystemId",
                            "type": "string",
                            "description": "UUID v4 used to identify the MountTarget",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "ipAddress": {
                            "title": "ipAddress",
                            "description": "The mount target's IPv4 address",
                            "type": "string",
                            "readOnly": true,
                            "example": "1.2.3.4"
                          },
                          "smbServerFqdn": {
                            "title": "smbServerFQDN",
                            "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                            "type": "string",
                            "example": "fullyqualified.domainname.com"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "fileSystemId"
                      ]
                    },
                    "volumeType": {
                      "type": "string",
                      "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                      "example": "DataProtection",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dataProtection": {
                      "title": "DataProtection",
                      "description": "DataProtection type volumes include an object containing details of the replication",
                      "properties": {
                        "backup": {
                          "title": "Backup",
                          "description": "Backup Properties",
                          "type": "object",
                          "properties": {
                            "backupPolicyId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                  }
                                ]
                              },
                              "description": "Backup Policy Resource ID"
                            },
                            "policyEnforced": {
                              "type": "boolean",
                              "description": "Policy Enforced"
                            },
                            "backupVaultId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                  }
                                ]
                              },
                              "description": "Backup Vault Resource ID"
                            }
                          }
                        },
                        "replication": {
                          "title": "Replication",
                          "description": "Replication properties",
                          "type": "object",
                          "properties": {
                            "replicationId": {
                              "type": "string",
                              "description": "Id",
                              "readOnly": true
                            },
                            "endpointType": {
                              "type": "string",
                              "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                              "enum": [
                                "src",
                                "dst"
                              ],
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              },
                              "readOnly": true
                            },
                            "replicationSchedule": {
                              "type": "string",
                              "description": "Schedule",
                              "enum": [
                                "_10minutely",
                                "hourly",
                                "daily"
                              ],
                              "x-ms-enum": {
                                "name": "ReplicationSchedule",
                                "modelAsString": true
                              }
                            },
                            "remoteVolumeResourceId": {
                              "type": "string",
                              "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                            },
                            "remotePath": {
                              "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "required": [
                                "externalHostName",
                                "serverName",
                                "volumeName"
                              ],
                              "properties": {
                                "externalHostName": {
                                  "type": "string",
                                  "description": "The Path to a ONTAP Host"
                                },
                                "serverName": {
                                  "type": "string",
                                  "description": "The name of a server on the ONTAP Host"
                                },
                                "volumeName": {
                                  "type": "string",
                                  "description": "The name of a volume on the server"
                                }
                              }
                            },
                            "remoteVolumeRegion": {
                              "type": "string",
                              "description": "The remote region for the other end of the Volume Replication."
                            },
                            "destinationReplications": {
                              "description": "A list of destination replications",
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "description": "Destination replication properties",
                                "type": "object",
                                "properties": {
                                  "resourceId": {
                                    "type": "string",
                                    "format": "arm-id",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                        }
                                      ]
                                    },
                                    "description": "The resource ID of the remote volume"
                                  },
                                  "replicationType": {
                                    "type": "string",
                                    "description": "Indicates whether the replication is cross zone or cross region.",
                                    "enum": [
                                      "CrossRegionReplication",
                                      "CrossZoneReplication"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ReplicationType",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "CrossRegionReplication",
                                          "description": "Cross region replication"
                                        },
                                        {
                                          "value": "CrossZoneReplication",
                                          "description": "Cross zone replication"
                                        }
                                      ]
                                    }
                                  },
                                  "region": {
                                    "type": "string",
                                    "description": "The remote region for the destination volume."
                                  },
                                  "zone": {
                                    "type": "string",
                                    "description": "The remote zone for the destination volume."
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "resourceId"
                              ]
                            }
                          }
                        },
                        "snapshot": {
                          "title": "Snapshot",
                          "description": "Snapshot properties.",
                          "type": "object",
                          "properties": {
                            "snapshotPolicyId": {
                              "type": "string",
                              "description": "Snapshot Policy ResourceId"
                            }
                          }
                        },
                        "volumeRelocation": {
                          "title": "VolumeRelocation",
                          "description": "VolumeRelocation properties",
                          "type": "object",
                          "properties": {
                            "relocationRequested": {
                              "type": "boolean",
                              "description": "Has relocation been requested for this volume"
                            },
                            "readyToBeFinalized": {
                              "type": "boolean",
                              "readOnly": true,
                              "description": "Has relocation finished and is ready to be cleaned up"
                            }
                          }
                        }
                      }
                    },
                    "acceptGrowCapacityPoolForShortTermCloneSplit": {
                      "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                      "type": "string",
                      "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "Accepted",
                        "Declined"
                      ],
                      "x-ms-enum": {
                        "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Accepted",
                            "description": "Auto grow capacity pool for short term clone split is accepted."
                          },
                          {
                            "value": "Declined",
                            "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                          }
                        ]
                      },
                      "example": "Accepted"
                    },
                    "isRestoring": {
                      "type": "boolean",
                      "description": "Restoring",
                      "readOnly": true
                    },
                    "snapshotDirectoryVisible": {
                      "type": "boolean",
                      "default": true,
                      "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                    },
                    "kerberosEnabled": {
                      "type": "boolean",
                      "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "example": false,
                      "default": false
                    },
                    "securityStyle": {
                      "type": "string",
                      "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                      "default": "unix",
                      "enum": [
                        "ntfs",
                        "unix"
                      ],
                      "x-ms-enum": {
                        "name": "SecurityStyle",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "smbEncryption": {
                      "type": "boolean",
                      "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                      "example": false,
                      "default": false
                    },
                    "smbAccessBasedEnumeration": {
                      "title": "smbAccessBasedEnumeration",
                      "type": "string",
                      "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbAccessBasedEnumeration",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbAccessBasedEnumeration share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbAccessBasedEnumeration share setting is enabled"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "example": "Enabled"
                    },
                    "smbNonBrowsable": {
                      "title": "smbNonBrowsable",
                      "type": "string",
                      "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbNonBrowsable",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbNonBrowsable share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbNonBrowsable share setting is enabled"
                          }
                        ]
                      },
                      "example": "Enabled"
                    },
                    "smbContinuouslyAvailable": {
                      "type": "boolean",
                      "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                      "example": false,
                      "default": false
                    },
                    "throughputMibps": {
                      "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                      "type": "number",
                      "x-nullable": true,
                      "example": 128.223
                    },
                    "actualThroughputMibps": {
                      "type": "number",
                      "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "encryptionKeySource": {
                      "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                      "type": "string",
                      "enum": [
                        "Microsoft.NetApp",
                        "Microsoft.KeyVault"
                      ],
                      "x-ms-enum": {
                        "name": "EncryptionKeySource",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Microsoft.NetApp",
                            "description": "Microsoft-managed key encryption"
                          },
                          {
                            "value": "Microsoft.KeyVault",
                            "description": "Customer-managed key encryption"
                          }
                        ]
                      },
                      "default": "Microsoft.NetApp"
                    },
                    "keyVaultPrivateEndpointResourceId": {
                      "type": "string",
                      "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                    },
                    "ldapEnabled": {
                      "type": "boolean",
                      "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                      "example": false,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "coolAccess": {
                      "type": "boolean",
                      "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                      "example": false,
                      "default": false
                    },
                    "coolnessPeriod": {
                      "type": "integer",
                      "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                      "example": 7,
                      "minimum": 2,
                      "maximum": 183,
                      "format": "int32"
                    },
                    "coolAccessRetrievalPolicy": {
                      "type": "string",
                      "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                      "enum": [
                        "Default",
                        "OnRead",
                        "Never"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessRetrievalPolicy",
                        "modelAsString": true
                      }
                    },
                    "coolAccessTieringPolicy": {
                      "type": "string",
                      "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                      "enum": [
                        "Auto",
                        "SnapshotOnly"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessTieringPolicy",
                        "modelAsString": true
                      }
                    },
                    "unixPermissions": {
                      "type": "string",
                      "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                      "minLength": 4,
                      "maxLength": 4,
                      "x-nullable": true,
                      "example": "0770"
                    },
                    "cloneProgress": {
                      "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                      "type": "integer",
                      "format": "int32",
                      "example": 10,
                      "x-nullable": true,
                      "readOnly": true
                    },
                    "fileAccessLogs": {
                      "type": "string",
                      "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                      "readOnly": true,
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "fileAccessLogs",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "fileAccessLogs are enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "fileAccessLogs are not enabled"
                          }
                        ]
                      },
                      "example": "Disabled",
                      "default": "Disabled"
                    },
                    "avsDataStore": {
                      "title": "avsDataStore",
                      "type": "string",
                      "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "avsDataStore",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "avsDataStore is enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "avsDataStore is disabled"
                          }
                        ]
                      },
                      "example": "Enabled",
                      "default": "Disabled",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dataStoreResourceId": {
                      "title": "dataStoreResourceId",
                      "description": "Data store resource unique identifier",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "isDefaultQuotaEnabled": {
                      "type": "boolean",
                      "description": "Specifies if default quota is enabled for the volume.",
                      "example": false,
                      "default": false
                    },
                    "defaultUserQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                      "example": 4,
                      "default": 0
                    },
                    "defaultGroupQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                      "example": 4,
                      "default": 0
                    },
                    "maximumNumberOfFiles": {
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true,
                      "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                      "example": 100000000
                    },
                    "volumeGroupName": {
                      "type": "string",
                      "description": "Volume Group Name",
                      "readOnly": true
                    },
                    "capacityPoolResourceId": {
                      "type": "string",
                      "description": "Pool Resource Id used in case of creating a volume through volume group"
                    },
                    "proximityPlacementGroup": {
                      "type": "string",
                      "description": "Proximity placement group associated with the volume",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                    },
                    "t2Network": {
                      "type": "string",
                      "description": "T2 network information",
                      "example": "Test-T2-Alias",
                      "readOnly": true
                    },
                    "volumeSpecName": {
                      "type": "string",
                      "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                      "example": "Data"
                    },
                    "encrypted": {
                      "type": "boolean",
                      "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                      "readOnly": true
                    },
                    "placementRules": {
                      "title": "Volume placement rules",
                      "description": "Application specific placement rules for the particular volume",
                      "type": "array",
                      "items": {
                        "description": "Application specific parameters for the placement of volumes in the volume group",
                        "type": "object",
                        "required": [
                          "key",
                          "value"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                            "example": "key1"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                            "example": "value1"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "key"
                      ]
                    },
                    "enableSubvolumes": {
                      "type": "string",
                      "description": "Flag indicating whether subvolume operations are enabled on the volume",
                      "example": "Enabled",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "enableSubvolumes",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "subvolumes are enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "subvolumes are not enabled"
                          }
                        ]
                      }
                    },
                    "provisionedAvailabilityZone": {
                      "title": "Provisioned Availability Zone",
                      "type": "string",
                      "readOnly": true,
                      "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                      "example": "2",
                      "x-nullable": true
                    },
                    "isLargeVolume": {
                      "title": "Is Large Volume",
                      "type": "boolean",
                      "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                      "example": false,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "originatingResourceId": {
                      "title": "Originating Resource Id",
                      "type": "string",
                      "description": "Id of the snapshot or backup that the volume is restored from.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                      "readOnly": true,
                      "x-nullable": true
                    },
                    "inheritedSizeInBytes": {
                      "title": "inheritedSizeInBytes",
                      "type": "integer",
                      "format": "int64",
                      "description": "Space shared by short term clone volume with parent volume in bytes.",
                      "readOnly": true,
                      "x-nullable": true
                    }
                  }
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Ok - volume updated",
            "schema": {
              "description": "Volume resource",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "zones": {
                  "type": "array",
                  "description": "Availability Zone",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "items": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "1"
                  }
                },
                "properties": {
                  "description": "Volume properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "creationToken",
                    "usageThreshold",
                    "subnetId"
                  ],
                  "properties": {
                    "fileSystemId": {
                      "title": "FileSystem ID",
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique FileSystem Identifier.",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                    },
                    "creationToken": {
                      "title": "Creation Token or File Path",
                      "type": "string",
                      "description": "A unique file path for the volume. Used when creating mount targets",
                      "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                      "minLength": 1,
                      "maxLength": 80,
                      "example": "some-amazing-filepath",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "serviceLevel": {
                      "title": "serviceLevel",
                      "type": "string",
                      "description": "The service level of the file system",
                      "enum": [
                        "Standard",
                        "Premium",
                        "Ultra",
                        "StandardZRS",
                        "Flexible"
                      ],
                      "default": "Premium",
                      "x-ms-enum": {
                        "name": "ServiceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard service level"
                          },
                          {
                            "value": "Premium",
                            "description": "Premium service level"
                          },
                          {
                            "value": "Ultra",
                            "description": "Ultra service level"
                          },
                          {
                            "value": "StandardZRS",
                            "description": "Zone redundant storage service level. This will be deprecated soon."
                          },
                          {
                            "value": "Flexible",
                            "description": "Flexible service level"
                          }
                        ]
                      }
                    },
                    "usageThreshold": {
                      "title": "usageThreshold",
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                      "minimum": 53687091200,
                      "maximum": 2638827906662400,
                      "default": 107374182400,
                      "example": 107374182400
                    },
                    "exportPolicy": {
                      "title": "exportPolicy",
                      "description": "Set of export policy rules",
                      "properties": {
                        "rules": {
                          "title": "Export policy rule",
                          "description": "Export policy rule",
                          "type": "array",
                          "items": {
                            "description": "Volume Export Policy Rule",
                            "type": "object",
                            "properties": {
                              "ruleIndex": {
                                "type": "integer",
                                "description": "Order index",
                                "format": "int32"
                              },
                              "unixReadOnly": {
                                "type": "boolean",
                                "description": "Read only access"
                              },
                              "unixReadWrite": {
                                "type": "boolean",
                                "description": "Read and write access"
                              },
                              "kerberos5ReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5ReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "cifs": {
                                "type": "boolean",
                                "description": "Allows CIFS protocol"
                              },
                              "nfsv3": {
                                "type": "boolean",
                                "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                              },
                              "nfsv41": {
                                "type": "boolean",
                                "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                              },
                              "allowedClients": {
                                "type": "string",
                                "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                              },
                              "hasRootAccess": {
                                "type": "boolean",
                                "description": "Has root access to volume",
                                "example": true,
                                "default": true
                              },
                              "chownMode": {
                                "type": "string",
                                "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                                "default": "Restricted",
                                "enum": [
                                  "Restricted",
                                  "Unrestricted"
                                ],
                                "x-ms-enum": {
                                  "name": "ChownMode",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "ruleIndex"
                          ]
                        }
                      }
                    },
                    "protocolTypes": {
                      "title": "protocolTypes",
                      "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "NFSv4.1"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "snapshotId": {
                      "title": "Snapshot ID",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "Resource identifier used to identify the Snapshot.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                    },
                    "deleteBaseSnapshot": {
                      "type": "boolean",
                      "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                    },
                    "backupId": {
                      "title": "Backup ID",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "Resource identifier used to identify the Backup.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                    },
                    "baremetalTenantId": {
                      "title": "Baremetal Tenant ID",
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique Baremetal Tenant Identifier.",
                      "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                    },
                    "subnetId": {
                      "type": "string",
                      "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                    },
                    "networkFeatures": {
                      "title": "Network features",
                      "description": "Network features available to the volume, or current state of update.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Basic_Standard",
                        "Standard_Basic"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkFeatures",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic network features."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard network features."
                          },
                          {
                            "value": "Basic_Standard",
                            "description": "Updating from Basic to Standard network features."
                          },
                          {
                            "value": "Standard_Basic",
                            "description": "Updating from Standard to Basic network features."
                          }
                        ]
                      },
                      "example": "Standard",
                      "default": "Basic",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "effectiveNetworkFeatures": {
                      "title": "Network features",
                      "description": "Network features available to the volume, or current state of update.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Basic_Standard",
                        "Standard_Basic"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkFeatures",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic network features."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard network features."
                          },
                          {
                            "value": "Basic_Standard",
                            "description": "Updating from Basic to Standard network features."
                          },
                          {
                            "value": "Standard_Basic",
                            "description": "Updating from Standard to Basic network features."
                          }
                        ]
                      },
                      "example": "Standard",
                      "default": "Basic",
                      "readOnly": true
                    },
                    "networkSiblingSetId": {
                      "title": "Network Sibling Set ID",
                      "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "storageToNetworkProximity": {
                      "title": "Storage to Network Proximity",
                      "description": "Provides storage to network proximity information for the volume.",
                      "type": "string",
                      "enum": [
                        "Default",
                        "T1",
                        "T2",
                        "AcrossT2"
                      ],
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "VolumeStorageToNetworkProximity",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Default",
                            "description": "Basic storage to network connectivity."
                          },
                          {
                            "value": "T1",
                            "description": "Standard T1 storage to network connectivity."
                          },
                          {
                            "value": "T2",
                            "description": "Standard T2 storage to network connectivity."
                          },
                          {
                            "value": "AcrossT2",
                            "description": "Standard AcrossT2 storage to network connectivity."
                          }
                        ]
                      },
                      "example": "T1"
                    },
                    "mountTargets": {
                      "title": "mountTargets",
                      "type": "array",
                      "readOnly": true,
                      "description": "List of mount targets",
                      "items": {
                        "description": "Mount target properties",
                        "type": "object",
                        "required": [
                          "fileSystemId"
                        ],
                        "properties": {
                          "mountTargetId": {
                            "title": "mountTargetId",
                            "type": "string",
                            "readOnly": true,
                            "description": "UUID v4 used to identify the MountTarget",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "fileSystemId": {
                            "title": "fileSystemId",
                            "type": "string",
                            "description": "UUID v4 used to identify the MountTarget",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "ipAddress": {
                            "title": "ipAddress",
                            "description": "The mount target's IPv4 address",
                            "type": "string",
                            "readOnly": true,
                            "example": "1.2.3.4"
                          },
                          "smbServerFqdn": {
                            "title": "smbServerFQDN",
                            "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                            "type": "string",
                            "example": "fullyqualified.domainname.com"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "fileSystemId"
                      ]
                    },
                    "volumeType": {
                      "type": "string",
                      "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                      "example": "DataProtection",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dataProtection": {
                      "title": "DataProtection",
                      "description": "DataProtection type volumes include an object containing details of the replication",
                      "properties": {
                        "backup": {
                          "title": "Backup",
                          "description": "Backup Properties",
                          "type": "object",
                          "properties": {
                            "backupPolicyId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                  }
                                ]
                              },
                              "description": "Backup Policy Resource ID"
                            },
                            "policyEnforced": {
                              "type": "boolean",
                              "description": "Policy Enforced"
                            },
                            "backupVaultId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                  }
                                ]
                              },
                              "description": "Backup Vault Resource ID"
                            }
                          }
                        },
                        "replication": {
                          "title": "Replication",
                          "description": "Replication properties",
                          "type": "object",
                          "properties": {
                            "replicationId": {
                              "type": "string",
                              "description": "Id",
                              "readOnly": true
                            },
                            "endpointType": {
                              "type": "string",
                              "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                              "enum": [
                                "src",
                                "dst"
                              ],
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              },
                              "readOnly": true
                            },
                            "replicationSchedule": {
                              "type": "string",
                              "description": "Schedule",
                              "enum": [
                                "_10minutely",
                                "hourly",
                                "daily"
                              ],
                              "x-ms-enum": {
                                "name": "ReplicationSchedule",
                                "modelAsString": true
                              }
                            },
                            "remoteVolumeResourceId": {
                              "type": "string",
                              "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                            },
                            "remotePath": {
                              "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "required": [
                                "externalHostName",
                                "serverName",
                                "volumeName"
                              ],
                              "properties": {
                                "externalHostName": {
                                  "type": "string",
                                  "description": "The Path to a ONTAP Host"
                                },
                                "serverName": {
                                  "type": "string",
                                  "description": "The name of a server on the ONTAP Host"
                                },
                                "volumeName": {
                                  "type": "string",
                                  "description": "The name of a volume on the server"
                                }
                              }
                            },
                            "remoteVolumeRegion": {
                              "type": "string",
                              "description": "The remote region for the other end of the Volume Replication."
                            },
                            "destinationReplications": {
                              "description": "A list of destination replications",
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "description": "Destination replication properties",
                                "type": "object",
                                "properties": {
                                  "resourceId": {
                                    "type": "string",
                                    "format": "arm-id",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                        }
                                      ]
                                    },
                                    "description": "The resource ID of the remote volume"
                                  },
                                  "replicationType": {
                                    "type": "string",
                                    "description": "Indicates whether the replication is cross zone or cross region.",
                                    "enum": [
                                      "CrossRegionReplication",
                                      "CrossZoneReplication"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ReplicationType",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "CrossRegionReplication",
                                          "description": "Cross region replication"
                                        },
                                        {
                                          "value": "CrossZoneReplication",
                                          "description": "Cross zone replication"
                                        }
                                      ]
                                    }
                                  },
                                  "region": {
                                    "type": "string",
                                    "description": "The remote region for the destination volume."
                                  },
                                  "zone": {
                                    "type": "string",
                                    "description": "The remote zone for the destination volume."
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "resourceId"
                              ]
                            }
                          }
                        },
                        "snapshot": {
                          "title": "Snapshot",
                          "description": "Snapshot properties.",
                          "type": "object",
                          "properties": {
                            "snapshotPolicyId": {
                              "type": "string",
                              "description": "Snapshot Policy ResourceId"
                            }
                          }
                        },
                        "volumeRelocation": {
                          "title": "VolumeRelocation",
                          "description": "VolumeRelocation properties",
                          "type": "object",
                          "properties": {
                            "relocationRequested": {
                              "type": "boolean",
                              "description": "Has relocation been requested for this volume"
                            },
                            "readyToBeFinalized": {
                              "type": "boolean",
                              "readOnly": true,
                              "description": "Has relocation finished and is ready to be cleaned up"
                            }
                          }
                        }
                      }
                    },
                    "acceptGrowCapacityPoolForShortTermCloneSplit": {
                      "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                      "type": "string",
                      "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "Accepted",
                        "Declined"
                      ],
                      "x-ms-enum": {
                        "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Accepted",
                            "description": "Auto grow capacity pool for short term clone split is accepted."
                          },
                          {
                            "value": "Declined",
                            "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                          }
                        ]
                      },
                      "example": "Accepted"
                    },
                    "isRestoring": {
                      "type": "boolean",
                      "description": "Restoring",
                      "readOnly": true
                    },
                    "snapshotDirectoryVisible": {
                      "type": "boolean",
                      "default": true,
                      "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                    },
                    "kerberosEnabled": {
                      "type": "boolean",
                      "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "example": false,
                      "default": false
                    },
                    "securityStyle": {
                      "type": "string",
                      "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                      "default": "unix",
                      "enum": [
                        "ntfs",
                        "unix"
                      ],
                      "x-ms-enum": {
                        "name": "SecurityStyle",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "smbEncryption": {
                      "type": "boolean",
                      "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                      "example": false,
                      "default": false
                    },
                    "smbAccessBasedEnumeration": {
                      "title": "smbAccessBasedEnumeration",
                      "type": "string",
                      "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbAccessBasedEnumeration",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbAccessBasedEnumeration share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbAccessBasedEnumeration share setting is enabled"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "example": "Enabled"
                    },
                    "smbNonBrowsable": {
                      "title": "smbNonBrowsable",
                      "type": "string",
                      "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbNonBrowsable",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbNonBrowsable share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbNonBrowsable share setting is enabled"
                          }
                        ]
                      },
                      "example": "Enabled"
                    },
                    "smbContinuouslyAvailable": {
                      "type": "boolean",
                      "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                      "example": false,
                      "default": false
                    },
                    "throughputMibps": {
                      "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                      "type": "number",
                      "x-nullable": true,
                      "example": 128.223
                    },
                    "actualThroughputMibps": {
                      "type": "number",
                      "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "encryptionKeySource": {
                      "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                      "type": "string",
                      "enum": [
                        "Microsoft.NetApp",
                        "Microsoft.KeyVault"
                      ],
                      "x-ms-enum": {
                        "name": "EncryptionKeySource",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Microsoft.NetApp",
                            "description": "Microsoft-managed key encryption"
                          },
                          {
                            "value": "Microsoft.KeyVault",
                            "description": "Customer-managed key encryption"
                          }
                        ]
                      },
                      "default": "Microsoft.NetApp"
                    },
                    "keyVaultPrivateEndpointResourceId": {
                      "type": "string",
                      "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                    },
                    "ldapEnabled": {
                      "type": "boolean",
                      "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                      "example": false,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "coolAccess": {
                      "type": "boolean",
                      "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                      "example": false,
                      "default": false
                    },
                    "coolnessPeriod": {
                      "type": "integer",
                      "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                      "example": 7,
                      "minimum": 2,
                      "maximum": 183,
                      "format": "int32"
                    },
                    "coolAccessRetrievalPolicy": {
                      "type": "string",
                      "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                      "enum": [
                        "Default",
                        "OnRead",
                        "Never"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessRetrievalPolicy",
                        "modelAsString": true
                      }
                    },
                    "coolAccessTieringPolicy": {
                      "type": "string",
                      "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                      "enum": [
                        "Auto",
                        "SnapshotOnly"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessTieringPolicy",
                        "modelAsString": true
                      }
                    },
                    "unixPermissions": {
                      "type": "string",
                      "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                      "minLength": 4,
                      "maxLength": 4,
                      "x-nullable": true,
                      "example": "0770"
                    },
                    "cloneProgress": {
                      "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                      "type": "integer",
                      "format": "int32",
                      "example": 10,
                      "x-nullable": true,
                      "readOnly": true
                    },
                    "fileAccessLogs": {
                      "type": "string",
                      "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                      "readOnly": true,
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "fileAccessLogs",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "fileAccessLogs are enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "fileAccessLogs are not enabled"
                          }
                        ]
                      },
                      "example": "Disabled",
                      "default": "Disabled"
                    },
                    "avsDataStore": {
                      "title": "avsDataStore",
                      "type": "string",
                      "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "avsDataStore",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "avsDataStore is enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "avsDataStore is disabled"
                          }
                        ]
                      },
                      "example": "Enabled",
                      "default": "Disabled",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dataStoreResourceId": {
                      "title": "dataStoreResourceId",
                      "description": "Data store resource unique identifier",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "isDefaultQuotaEnabled": {
                      "type": "boolean",
                      "description": "Specifies if default quota is enabled for the volume.",
                      "example": false,
                      "default": false
                    },
                    "defaultUserQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                      "example": 4,
                      "default": 0
                    },
                    "defaultGroupQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                      "example": 4,
                      "default": 0
                    },
                    "maximumNumberOfFiles": {
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true,
                      "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                      "example": 100000000
                    },
                    "volumeGroupName": {
                      "type": "string",
                      "description": "Volume Group Name",
                      "readOnly": true
                    },
                    "capacityPoolResourceId": {
                      "type": "string",
                      "description": "Pool Resource Id used in case of creating a volume through volume group"
                    },
                    "proximityPlacementGroup": {
                      "type": "string",
                      "description": "Proximity placement group associated with the volume",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                    },
                    "t2Network": {
                      "type": "string",
                      "description": "T2 network information",
                      "example": "Test-T2-Alias",
                      "readOnly": true
                    },
                    "volumeSpecName": {
                      "type": "string",
                      "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                      "example": "Data"
                    },
                    "encrypted": {
                      "type": "boolean",
                      "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                      "readOnly": true
                    },
                    "placementRules": {
                      "title": "Volume placement rules",
                      "description": "Application specific placement rules for the particular volume",
                      "type": "array",
                      "items": {
                        "description": "Application specific parameters for the placement of volumes in the volume group",
                        "type": "object",
                        "required": [
                          "key",
                          "value"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                            "example": "key1"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                            "example": "value1"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "key"
                      ]
                    },
                    "enableSubvolumes": {
                      "type": "string",
                      "description": "Flag indicating whether subvolume operations are enabled on the volume",
                      "example": "Enabled",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "enableSubvolumes",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "subvolumes are enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "subvolumes are not enabled"
                          }
                        ]
                      }
                    },
                    "provisionedAvailabilityZone": {
                      "title": "Provisioned Availability Zone",
                      "type": "string",
                      "readOnly": true,
                      "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                      "example": "2",
                      "x-nullable": true
                    },
                    "isLargeVolume": {
                      "title": "Is Large Volume",
                      "type": "boolean",
                      "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                      "example": false,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "originatingResourceId": {
                      "title": "Originating Resource Id",
                      "type": "string",
                      "description": "Id of the snapshot or backup that the volume is restored from.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                      "readOnly": true,
                      "x-nullable": true
                    },
                    "inheritedSizeInBytes": {
                      "title": "inheritedSizeInBytes",
                      "type": "integer",
                      "format": "int64",
                      "description": "Space shared by short term clone volume with parent volume in bytes.",
                      "readOnly": true,
                      "x-nullable": true
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Volume created",
            "schema": {
              "description": "Volume resource",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "zones": {
                  "type": "array",
                  "description": "Availability Zone",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "items": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "1"
                  }
                },
                "properties": {
                  "description": "Volume properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "creationToken",
                    "usageThreshold",
                    "subnetId"
                  ],
                  "properties": {
                    "fileSystemId": {
                      "title": "FileSystem ID",
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique FileSystem Identifier.",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                    },
                    "creationToken": {
                      "title": "Creation Token or File Path",
                      "type": "string",
                      "description": "A unique file path for the volume. Used when creating mount targets",
                      "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                      "minLength": 1,
                      "maxLength": 80,
                      "example": "some-amazing-filepath",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "serviceLevel": {
                      "title": "serviceLevel",
                      "type": "string",
                      "description": "The service level of the file system",
                      "enum": [
                        "Standard",
                        "Premium",
                        "Ultra",
                        "StandardZRS",
                        "Flexible"
                      ],
                      "default": "Premium",
                      "x-ms-enum": {
                        "name": "ServiceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard service level"
                          },
                          {
                            "value": "Premium",
                            "description": "Premium service level"
                          },
                          {
                            "value": "Ultra",
                            "description": "Ultra service level"
                          },
                          {
                            "value": "StandardZRS",
                            "description": "Zone redundant storage service level. This will be deprecated soon."
                          },
                          {
                            "value": "Flexible",
                            "description": "Flexible service level"
                          }
                        ]
                      }
                    },
                    "usageThreshold": {
                      "title": "usageThreshold",
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                      "minimum": 53687091200,
                      "maximum": 2638827906662400,
                      "default": 107374182400,
                      "example": 107374182400
                    },
                    "exportPolicy": {
                      "title": "exportPolicy",
                      "description": "Set of export policy rules",
                      "properties": {
                        "rules": {
                          "title": "Export policy rule",
                          "description": "Export policy rule",
                          "type": "array",
                          "items": {
                            "description": "Volume Export Policy Rule",
                            "type": "object",
                            "properties": {
                              "ruleIndex": {
                                "type": "integer",
                                "description": "Order index",
                                "format": "int32"
                              },
                              "unixReadOnly": {
                                "type": "boolean",
                                "description": "Read only access"
                              },
                              "unixReadWrite": {
                                "type": "boolean",
                                "description": "Read and write access"
                              },
                              "kerberos5ReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5ReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "cifs": {
                                "type": "boolean",
                                "description": "Allows CIFS protocol"
                              },
                              "nfsv3": {
                                "type": "boolean",
                                "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                              },
                              "nfsv41": {
                                "type": "boolean",
                                "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                              },
                              "allowedClients": {
                                "type": "string",
                                "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                              },
                              "hasRootAccess": {
                                "type": "boolean",
                                "description": "Has root access to volume",
                                "example": true,
                                "default": true
                              },
                              "chownMode": {
                                "type": "string",
                                "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                                "default": "Restricted",
                                "enum": [
                                  "Restricted",
                                  "Unrestricted"
                                ],
                                "x-ms-enum": {
                                  "name": "ChownMode",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "ruleIndex"
                          ]
                        }
                      }
                    },
                    "protocolTypes": {
                      "title": "protocolTypes",
                      "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "NFSv4.1"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "snapshotId": {
                      "title": "Snapshot ID",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "Resource identifier used to identify the Snapshot.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                    },
                    "deleteBaseSnapshot": {
                      "type": "boolean",
                      "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                    },
                    "backupId": {
                      "title": "Backup ID",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "Resource identifier used to identify the Backup.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                    },
                    "baremetalTenantId": {
                      "title": "Baremetal Tenant ID",
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique Baremetal Tenant Identifier.",
                      "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                    },
                    "subnetId": {
                      "type": "string",
                      "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                    },
                    "networkFeatures": {
                      "title": "Network features",
                      "description": "Network features available to the volume, or current state of update.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Basic_Standard",
                        "Standard_Basic"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkFeatures",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic network features."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard network features."
                          },
                          {
                            "value": "Basic_Standard",
                            "description": "Updating from Basic to Standard network features."
                          },
                          {
                            "value": "Standard_Basic",
                            "description": "Updating from Standard to Basic network features."
                          }
                        ]
                      },
                      "example": "Standard",
                      "default": "Basic",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "effectiveNetworkFeatures": {
                      "title": "Network features",
                      "description": "Network features available to the volume, or current state of update.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Basic_Standard",
                        "Standard_Basic"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkFeatures",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic network features."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard network features."
                          },
                          {
                            "value": "Basic_Standard",
                            "description": "Updating from Basic to Standard network features."
                          },
                          {
                            "value": "Standard_Basic",
                            "description": "Updating from Standard to Basic network features."
                          }
                        ]
                      },
                      "example": "Standard",
                      "default": "Basic",
                      "readOnly": true
                    },
                    "networkSiblingSetId": {
                      "title": "Network Sibling Set ID",
                      "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "storageToNetworkProximity": {
                      "title": "Storage to Network Proximity",
                      "description": "Provides storage to network proximity information for the volume.",
                      "type": "string",
                      "enum": [
                        "Default",
                        "T1",
                        "T2",
                        "AcrossT2"
                      ],
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "VolumeStorageToNetworkProximity",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Default",
                            "description": "Basic storage to network connectivity."
                          },
                          {
                            "value": "T1",
                            "description": "Standard T1 storage to network connectivity."
                          },
                          {
                            "value": "T2",
                            "description": "Standard T2 storage to network connectivity."
                          },
                          {
                            "value": "AcrossT2",
                            "description": "Standard AcrossT2 storage to network connectivity."
                          }
                        ]
                      },
                      "example": "T1"
                    },
                    "mountTargets": {
                      "title": "mountTargets",
                      "type": "array",
                      "readOnly": true,
                      "description": "List of mount targets",
                      "items": {
                        "description": "Mount target properties",
                        "type": "object",
                        "required": [
                          "fileSystemId"
                        ],
                        "properties": {
                          "mountTargetId": {
                            "title": "mountTargetId",
                            "type": "string",
                            "readOnly": true,
                            "description": "UUID v4 used to identify the MountTarget",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "fileSystemId": {
                            "title": "fileSystemId",
                            "type": "string",
                            "description": "UUID v4 used to identify the MountTarget",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "ipAddress": {
                            "title": "ipAddress",
                            "description": "The mount target's IPv4 address",
                            "type": "string",
                            "readOnly": true,
                            "example": "1.2.3.4"
                          },
                          "smbServerFqdn": {
                            "title": "smbServerFQDN",
                            "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                            "type": "string",
                            "example": "fullyqualified.domainname.com"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "fileSystemId"
                      ]
                    },
                    "volumeType": {
                      "type": "string",
                      "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                      "example": "DataProtection",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dataProtection": {
                      "title": "DataProtection",
                      "description": "DataProtection type volumes include an object containing details of the replication",
                      "properties": {
                        "backup": {
                          "title": "Backup",
                          "description": "Backup Properties",
                          "type": "object",
                          "properties": {
                            "backupPolicyId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                  }
                                ]
                              },
                              "description": "Backup Policy Resource ID"
                            },
                            "policyEnforced": {
                              "type": "boolean",
                              "description": "Policy Enforced"
                            },
                            "backupVaultId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                  }
                                ]
                              },
                              "description": "Backup Vault Resource ID"
                            }
                          }
                        },
                        "replication": {
                          "title": "Replication",
                          "description": "Replication properties",
                          "type": "object",
                          "properties": {
                            "replicationId": {
                              "type": "string",
                              "description": "Id",
                              "readOnly": true
                            },
                            "endpointType": {
                              "type": "string",
                              "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                              "enum": [
                                "src",
                                "dst"
                              ],
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              },
                              "readOnly": true
                            },
                            "replicationSchedule": {
                              "type": "string",
                              "description": "Schedule",
                              "enum": [
                                "_10minutely",
                                "hourly",
                                "daily"
                              ],
                              "x-ms-enum": {
                                "name": "ReplicationSchedule",
                                "modelAsString": true
                              }
                            },
                            "remoteVolumeResourceId": {
                              "type": "string",
                              "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                            },
                            "remotePath": {
                              "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "required": [
                                "externalHostName",
                                "serverName",
                                "volumeName"
                              ],
                              "properties": {
                                "externalHostName": {
                                  "type": "string",
                                  "description": "The Path to a ONTAP Host"
                                },
                                "serverName": {
                                  "type": "string",
                                  "description": "The name of a server on the ONTAP Host"
                                },
                                "volumeName": {
                                  "type": "string",
                                  "description": "The name of a volume on the server"
                                }
                              }
                            },
                            "remoteVolumeRegion": {
                              "type": "string",
                              "description": "The remote region for the other end of the Volume Replication."
                            },
                            "destinationReplications": {
                              "description": "A list of destination replications",
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "description": "Destination replication properties",
                                "type": "object",
                                "properties": {
                                  "resourceId": {
                                    "type": "string",
                                    "format": "arm-id",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                        }
                                      ]
                                    },
                                    "description": "The resource ID of the remote volume"
                                  },
                                  "replicationType": {
                                    "type": "string",
                                    "description": "Indicates whether the replication is cross zone or cross region.",
                                    "enum": [
                                      "CrossRegionReplication",
                                      "CrossZoneReplication"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ReplicationType",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "CrossRegionReplication",
                                          "description": "Cross region replication"
                                        },
                                        {
                                          "value": "CrossZoneReplication",
                                          "description": "Cross zone replication"
                                        }
                                      ]
                                    }
                                  },
                                  "region": {
                                    "type": "string",
                                    "description": "The remote region for the destination volume."
                                  },
                                  "zone": {
                                    "type": "string",
                                    "description": "The remote zone for the destination volume."
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "resourceId"
                              ]
                            }
                          }
                        },
                        "snapshot": {
                          "title": "Snapshot",
                          "description": "Snapshot properties.",
                          "type": "object",
                          "properties": {
                            "snapshotPolicyId": {
                              "type": "string",
                              "description": "Snapshot Policy ResourceId"
                            }
                          }
                        },
                        "volumeRelocation": {
                          "title": "VolumeRelocation",
                          "description": "VolumeRelocation properties",
                          "type": "object",
                          "properties": {
                            "relocationRequested": {
                              "type": "boolean",
                              "description": "Has relocation been requested for this volume"
                            },
                            "readyToBeFinalized": {
                              "type": "boolean",
                              "readOnly": true,
                              "description": "Has relocation finished and is ready to be cleaned up"
                            }
                          }
                        }
                      }
                    },
                    "acceptGrowCapacityPoolForShortTermCloneSplit": {
                      "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                      "type": "string",
                      "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "Accepted",
                        "Declined"
                      ],
                      "x-ms-enum": {
                        "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Accepted",
                            "description": "Auto grow capacity pool for short term clone split is accepted."
                          },
                          {
                            "value": "Declined",
                            "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                          }
                        ]
                      },
                      "example": "Accepted"
                    },
                    "isRestoring": {
                      "type": "boolean",
                      "description": "Restoring",
                      "readOnly": true
                    },
                    "snapshotDirectoryVisible": {
                      "type": "boolean",
                      "default": true,
                      "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                    },
                    "kerberosEnabled": {
                      "type": "boolean",
                      "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "example": false,
                      "default": false
                    },
                    "securityStyle": {
                      "type": "string",
                      "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                      "default": "unix",
                      "enum": [
                        "ntfs",
                        "unix"
                      ],
                      "x-ms-enum": {
                        "name": "SecurityStyle",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "smbEncryption": {
                      "type": "boolean",
                      "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                      "example": false,
                      "default": false
                    },
                    "smbAccessBasedEnumeration": {
                      "title": "smbAccessBasedEnumeration",
                      "type": "string",
                      "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbAccessBasedEnumeration",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbAccessBasedEnumeration share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbAccessBasedEnumeration share setting is enabled"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "example": "Enabled"
                    },
                    "smbNonBrowsable": {
                      "title": "smbNonBrowsable",
                      "type": "string",
                      "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbNonBrowsable",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbNonBrowsable share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbNonBrowsable share setting is enabled"
                          }
                        ]
                      },
                      "example": "Enabled"
                    },
                    "smbContinuouslyAvailable": {
                      "type": "boolean",
                      "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                      "example": false,
                      "default": false
                    },
                    "throughputMibps": {
                      "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                      "type": "number",
                      "x-nullable": true,
                      "example": 128.223
                    },
                    "actualThroughputMibps": {
                      "type": "number",
                      "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "encryptionKeySource": {
                      "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                      "type": "string",
                      "enum": [
                        "Microsoft.NetApp",
                        "Microsoft.KeyVault"
                      ],
                      "x-ms-enum": {
                        "name": "EncryptionKeySource",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Microsoft.NetApp",
                            "description": "Microsoft-managed key encryption"
                          },
                          {
                            "value": "Microsoft.KeyVault",
                            "description": "Customer-managed key encryption"
                          }
                        ]
                      },
                      "default": "Microsoft.NetApp"
                    },
                    "keyVaultPrivateEndpointResourceId": {
                      "type": "string",
                      "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                    },
                    "ldapEnabled": {
                      "type": "boolean",
                      "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                      "example": false,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "coolAccess": {
                      "type": "boolean",
                      "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                      "example": false,
                      "default": false
                    },
                    "coolnessPeriod": {
                      "type": "integer",
                      "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                      "example": 7,
                      "minimum": 2,
                      "maximum": 183,
                      "format": "int32"
                    },
                    "coolAccessRetrievalPolicy": {
                      "type": "string",
                      "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                      "enum": [
                        "Default",
                        "OnRead",
                        "Never"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessRetrievalPolicy",
                        "modelAsString": true
                      }
                    },
                    "coolAccessTieringPolicy": {
                      "type": "string",
                      "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                      "enum": [
                        "Auto",
                        "SnapshotOnly"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessTieringPolicy",
                        "modelAsString": true
                      }
                    },
                    "unixPermissions": {
                      "type": "string",
                      "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                      "minLength": 4,
                      "maxLength": 4,
                      "x-nullable": true,
                      "example": "0770"
                    },
                    "cloneProgress": {
                      "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                      "type": "integer",
                      "format": "int32",
                      "example": 10,
                      "x-nullable": true,
                      "readOnly": true
                    },
                    "fileAccessLogs": {
                      "type": "string",
                      "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                      "readOnly": true,
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "fileAccessLogs",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "fileAccessLogs are enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "fileAccessLogs are not enabled"
                          }
                        ]
                      },
                      "example": "Disabled",
                      "default": "Disabled"
                    },
                    "avsDataStore": {
                      "title": "avsDataStore",
                      "type": "string",
                      "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "avsDataStore",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "avsDataStore is enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "avsDataStore is disabled"
                          }
                        ]
                      },
                      "example": "Enabled",
                      "default": "Disabled",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dataStoreResourceId": {
                      "title": "dataStoreResourceId",
                      "description": "Data store resource unique identifier",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "isDefaultQuotaEnabled": {
                      "type": "boolean",
                      "description": "Specifies if default quota is enabled for the volume.",
                      "example": false,
                      "default": false
                    },
                    "defaultUserQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                      "example": 4,
                      "default": 0
                    },
                    "defaultGroupQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                      "example": 4,
                      "default": 0
                    },
                    "maximumNumberOfFiles": {
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true,
                      "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                      "example": 100000000
                    },
                    "volumeGroupName": {
                      "type": "string",
                      "description": "Volume Group Name",
                      "readOnly": true
                    },
                    "capacityPoolResourceId": {
                      "type": "string",
                      "description": "Pool Resource Id used in case of creating a volume through volume group"
                    },
                    "proximityPlacementGroup": {
                      "type": "string",
                      "description": "Proximity placement group associated with the volume",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                    },
                    "t2Network": {
                      "type": "string",
                      "description": "T2 network information",
                      "example": "Test-T2-Alias",
                      "readOnly": true
                    },
                    "volumeSpecName": {
                      "type": "string",
                      "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                      "example": "Data"
                    },
                    "encrypted": {
                      "type": "boolean",
                      "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                      "readOnly": true
                    },
                    "placementRules": {
                      "title": "Volume placement rules",
                      "description": "Application specific placement rules for the particular volume",
                      "type": "array",
                      "items": {
                        "description": "Application specific parameters for the placement of volumes in the volume group",
                        "type": "object",
                        "required": [
                          "key",
                          "value"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                            "example": "key1"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                            "example": "value1"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "key"
                      ]
                    },
                    "enableSubvolumes": {
                      "type": "string",
                      "description": "Flag indicating whether subvolume operations are enabled on the volume",
                      "example": "Enabled",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "enableSubvolumes",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "subvolumes are enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "subvolumes are not enabled"
                          }
                        ]
                      }
                    },
                    "provisionedAvailabilityZone": {
                      "title": "Provisioned Availability Zone",
                      "type": "string",
                      "readOnly": true,
                      "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                      "example": "2",
                      "x-nullable": true
                    },
                    "isLargeVolume": {
                      "title": "Is Large Volume",
                      "type": "boolean",
                      "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                      "example": false,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "originatingResourceId": {
                      "title": "Originating Resource Id",
                      "type": "string",
                      "description": "Id of the snapshot or backup that the volume is restored from.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                      "readOnly": true,
                      "x-nullable": true
                    },
                    "inheritedSizeInBytes": {
                      "title": "inheritedSizeInBytes",
                      "type": "integer",
                      "format": "int64",
                      "description": "Space shared by short term clone volume with parent volume in bytes.",
                      "readOnly": true,
                      "x-nullable": true
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted -- Create request accepted; operation will complete asynchronously"
          }
        }
      },
      "patch": {
        "tags": [
          "Volumes"
        ],
        "operationId": "Volumes_Update",
        "summary": "Update a volume",
        "description": "Patch the specified volume",
        "parameters": [
          {
            "name": "body",
            "description": "Volume object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Volume patch resource",
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "location": {
                  "type": "string",
                  "description": "Resource location"
                },
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "tags": {
                  "description": "Resource tags",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Patchable volume properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "serviceLevel": {
                      "title": "serviceLevel",
                      "type": "string",
                      "description": "The service level of the file system",
                      "enum": [
                        "Standard",
                        "Premium",
                        "Ultra",
                        "StandardZRS",
                        "Flexible"
                      ],
                      "default": "Premium",
                      "x-ms-enum": {
                        "name": "ServiceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard service level"
                          },
                          {
                            "value": "Premium",
                            "description": "Premium service level"
                          },
                          {
                            "value": "Ultra",
                            "description": "Ultra service level"
                          },
                          {
                            "value": "StandardZRS",
                            "description": "Zone redundant storage service level. This will be deprecated soon."
                          },
                          {
                            "value": "Flexible",
                            "description": "Flexible service level"
                          }
                        ]
                      }
                    },
                    "usageThreshold": {
                      "title": "usageThreshold",
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                      "minimum": 53687091200,
                      "maximum": 2638827906662400,
                      "default": 107374182400,
                      "example": 107374182400
                    },
                    "exportPolicy": {
                      "title": "exportPolicy",
                      "description": "Set of export policy rules",
                      "properties": {
                        "rules": {
                          "title": "Export policy rule",
                          "description": "Export policy rule",
                          "type": "array",
                          "items": {
                            "description": "Volume Export Policy Rule",
                            "type": "object",
                            "properties": {
                              "ruleIndex": {
                                "type": "integer",
                                "description": "Order index",
                                "format": "int32"
                              },
                              "unixReadOnly": {
                                "type": "boolean",
                                "description": "Read only access"
                              },
                              "unixReadWrite": {
                                "type": "boolean",
                                "description": "Read and write access"
                              },
                              "kerberos5ReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5ReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "cifs": {
                                "type": "boolean",
                                "description": "Allows CIFS protocol"
                              },
                              "nfsv3": {
                                "type": "boolean",
                                "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                              },
                              "nfsv41": {
                                "type": "boolean",
                                "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                              },
                              "allowedClients": {
                                "type": "string",
                                "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                              },
                              "hasRootAccess": {
                                "type": "boolean",
                                "description": "Has root access to volume",
                                "example": true,
                                "default": true
                              },
                              "chownMode": {
                                "type": "string",
                                "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                                "default": "Restricted",
                                "enum": [
                                  "Restricted",
                                  "Unrestricted"
                                ],
                                "x-ms-enum": {
                                  "name": "ChownMode",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "ruleIndex"
                          ]
                        }
                      }
                    },
                    "protocolTypes": {
                      "title": "protocolTypes",
                      "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "NFSv4.1"
                      ]
                    },
                    "throughputMibps": {
                      "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                      "type": "number",
                      "example": 128.22
                    },
                    "dataProtection": {
                      "title": "DataProtection",
                      "description": "DataProtection type volumes include an object containing details of the replication",
                      "properties": {
                        "backup": {
                          "title": "Backup",
                          "description": "Backup Properties",
                          "type": "object",
                          "properties": {
                            "backupPolicyId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                  }
                                ]
                              },
                              "description": "Backup Policy Resource ID"
                            },
                            "policyEnforced": {
                              "type": "boolean",
                              "description": "Policy Enforced"
                            },
                            "backupVaultId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                  }
                                ]
                              },
                              "description": "Backup Vault Resource ID"
                            }
                          }
                        },
                        "snapshot": {
                          "title": "Snapshot",
                          "description": "Snapshot properties.",
                          "type": "object",
                          "properties": {
                            "snapshotPolicyId": {
                              "type": "string",
                              "description": "Snapshot Policy ResourceId"
                            }
                          }
                        }
                      }
                    },
                    "isDefaultQuotaEnabled": {
                      "type": "boolean",
                      "description": "Specifies if default quota is enabled for the volume.",
                      "example": false,
                      "default": false
                    },
                    "defaultUserQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                      "example": 4,
                      "default": 0
                    },
                    "defaultGroupQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                      "example": 4,
                      "default": 0
                    },
                    "unixPermissions": {
                      "type": "string",
                      "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                      "minLength": 4,
                      "maxLength": 4,
                      "x-nullable": true,
                      "example": "0770"
                    },
                    "coolAccess": {
                      "type": "boolean",
                      "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                      "example": false
                    },
                    "coolnessPeriod": {
                      "type": "integer",
                      "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                      "example": 7,
                      "minimum": 2,
                      "maximum": 183,
                      "format": "int32"
                    },
                    "coolAccessRetrievalPolicy": {
                      "type": "string",
                      "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                      "enum": [
                        "Default",
                        "OnRead",
                        "Never"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessRetrievalPolicy",
                        "modelAsString": true
                      }
                    },
                    "coolAccessTieringPolicy": {
                      "type": "string",
                      "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                      "enum": [
                        "Auto",
                        "SnapshotOnly"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessTieringPolicy",
                        "modelAsString": true
                      }
                    },
                    "snapshotDirectoryVisible": {
                      "type": "boolean",
                      "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots."
                    },
                    "smbAccessBasedEnumeration": {
                      "title": "smbAccessBasedEnumeration",
                      "type": "string",
                      "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbAccessBasedEnumeration",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbAccessBasedEnumeration share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbAccessBasedEnumeration share setting is enabled"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "example": "Enabled"
                    },
                    "smbNonBrowsable": {
                      "title": "smbNonBrowsable",
                      "type": "string",
                      "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbNonBrowsable",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbNonBrowsable share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbNonBrowsable share setting is enabled"
                          }
                        ]
                      },
                      "example": "Enabled"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Volume resource",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "zones": {
                  "type": "array",
                  "description": "Availability Zone",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "items": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "1"
                  }
                },
                "properties": {
                  "description": "Volume properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "creationToken",
                    "usageThreshold",
                    "subnetId"
                  ],
                  "properties": {
                    "fileSystemId": {
                      "title": "FileSystem ID",
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique FileSystem Identifier.",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                    },
                    "creationToken": {
                      "title": "Creation Token or File Path",
                      "type": "string",
                      "description": "A unique file path for the volume. Used when creating mount targets",
                      "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                      "minLength": 1,
                      "maxLength": 80,
                      "example": "some-amazing-filepath",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "serviceLevel": {
                      "title": "serviceLevel",
                      "type": "string",
                      "description": "The service level of the file system",
                      "enum": [
                        "Standard",
                        "Premium",
                        "Ultra",
                        "StandardZRS",
                        "Flexible"
                      ],
                      "default": "Premium",
                      "x-ms-enum": {
                        "name": "ServiceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard service level"
                          },
                          {
                            "value": "Premium",
                            "description": "Premium service level"
                          },
                          {
                            "value": "Ultra",
                            "description": "Ultra service level"
                          },
                          {
                            "value": "StandardZRS",
                            "description": "Zone redundant storage service level. This will be deprecated soon."
                          },
                          {
                            "value": "Flexible",
                            "description": "Flexible service level"
                          }
                        ]
                      }
                    },
                    "usageThreshold": {
                      "title": "usageThreshold",
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                      "minimum": 53687091200,
                      "maximum": 2638827906662400,
                      "default": 107374182400,
                      "example": 107374182400
                    },
                    "exportPolicy": {
                      "title": "exportPolicy",
                      "description": "Set of export policy rules",
                      "properties": {
                        "rules": {
                          "title": "Export policy rule",
                          "description": "Export policy rule",
                          "type": "array",
                          "items": {
                            "description": "Volume Export Policy Rule",
                            "type": "object",
                            "properties": {
                              "ruleIndex": {
                                "type": "integer",
                                "description": "Order index",
                                "format": "int32"
                              },
                              "unixReadOnly": {
                                "type": "boolean",
                                "description": "Read only access"
                              },
                              "unixReadWrite": {
                                "type": "boolean",
                                "description": "Read and write access"
                              },
                              "kerberos5ReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5ReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "cifs": {
                                "type": "boolean",
                                "description": "Allows CIFS protocol"
                              },
                              "nfsv3": {
                                "type": "boolean",
                                "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                              },
                              "nfsv41": {
                                "type": "boolean",
                                "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                              },
                              "allowedClients": {
                                "type": "string",
                                "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                              },
                              "hasRootAccess": {
                                "type": "boolean",
                                "description": "Has root access to volume",
                                "example": true,
                                "default": true
                              },
                              "chownMode": {
                                "type": "string",
                                "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                                "default": "Restricted",
                                "enum": [
                                  "Restricted",
                                  "Unrestricted"
                                ],
                                "x-ms-enum": {
                                  "name": "ChownMode",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "ruleIndex"
                          ]
                        }
                      }
                    },
                    "protocolTypes": {
                      "title": "protocolTypes",
                      "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "NFSv4.1"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "snapshotId": {
                      "title": "Snapshot ID",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "Resource identifier used to identify the Snapshot.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                    },
                    "deleteBaseSnapshot": {
                      "type": "boolean",
                      "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                    },
                    "backupId": {
                      "title": "Backup ID",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "Resource identifier used to identify the Backup.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                    },
                    "baremetalTenantId": {
                      "title": "Baremetal Tenant ID",
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique Baremetal Tenant Identifier.",
                      "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                    },
                    "subnetId": {
                      "type": "string",
                      "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                    },
                    "networkFeatures": {
                      "title": "Network features",
                      "description": "Network features available to the volume, or current state of update.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Basic_Standard",
                        "Standard_Basic"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkFeatures",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic network features."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard network features."
                          },
                          {
                            "value": "Basic_Standard",
                            "description": "Updating from Basic to Standard network features."
                          },
                          {
                            "value": "Standard_Basic",
                            "description": "Updating from Standard to Basic network features."
                          }
                        ]
                      },
                      "example": "Standard",
                      "default": "Basic",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "effectiveNetworkFeatures": {
                      "title": "Network features",
                      "description": "Network features available to the volume, or current state of update.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Basic_Standard",
                        "Standard_Basic"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkFeatures",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic network features."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard network features."
                          },
                          {
                            "value": "Basic_Standard",
                            "description": "Updating from Basic to Standard network features."
                          },
                          {
                            "value": "Standard_Basic",
                            "description": "Updating from Standard to Basic network features."
                          }
                        ]
                      },
                      "example": "Standard",
                      "default": "Basic",
                      "readOnly": true
                    },
                    "networkSiblingSetId": {
                      "title": "Network Sibling Set ID",
                      "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "storageToNetworkProximity": {
                      "title": "Storage to Network Proximity",
                      "description": "Provides storage to network proximity information for the volume.",
                      "type": "string",
                      "enum": [
                        "Default",
                        "T1",
                        "T2",
                        "AcrossT2"
                      ],
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "VolumeStorageToNetworkProximity",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Default",
                            "description": "Basic storage to network connectivity."
                          },
                          {
                            "value": "T1",
                            "description": "Standard T1 storage to network connectivity."
                          },
                          {
                            "value": "T2",
                            "description": "Standard T2 storage to network connectivity."
                          },
                          {
                            "value": "AcrossT2",
                            "description": "Standard AcrossT2 storage to network connectivity."
                          }
                        ]
                      },
                      "example": "T1"
                    },
                    "mountTargets": {
                      "title": "mountTargets",
                      "type": "array",
                      "readOnly": true,
                      "description": "List of mount targets",
                      "items": {
                        "description": "Mount target properties",
                        "type": "object",
                        "required": [
                          "fileSystemId"
                        ],
                        "properties": {
                          "mountTargetId": {
                            "title": "mountTargetId",
                            "type": "string",
                            "readOnly": true,
                            "description": "UUID v4 used to identify the MountTarget",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "fileSystemId": {
                            "title": "fileSystemId",
                            "type": "string",
                            "description": "UUID v4 used to identify the MountTarget",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "ipAddress": {
                            "title": "ipAddress",
                            "description": "The mount target's IPv4 address",
                            "type": "string",
                            "readOnly": true,
                            "example": "1.2.3.4"
                          },
                          "smbServerFqdn": {
                            "title": "smbServerFQDN",
                            "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                            "type": "string",
                            "example": "fullyqualified.domainname.com"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "fileSystemId"
                      ]
                    },
                    "volumeType": {
                      "type": "string",
                      "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                      "example": "DataProtection",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dataProtection": {
                      "title": "DataProtection",
                      "description": "DataProtection type volumes include an object containing details of the replication",
                      "properties": {
                        "backup": {
                          "title": "Backup",
                          "description": "Backup Properties",
                          "type": "object",
                          "properties": {
                            "backupPolicyId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                  }
                                ]
                              },
                              "description": "Backup Policy Resource ID"
                            },
                            "policyEnforced": {
                              "type": "boolean",
                              "description": "Policy Enforced"
                            },
                            "backupVaultId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                  }
                                ]
                              },
                              "description": "Backup Vault Resource ID"
                            }
                          }
                        },
                        "replication": {
                          "title": "Replication",
                          "description": "Replication properties",
                          "type": "object",
                          "properties": {
                            "replicationId": {
                              "type": "string",
                              "description": "Id",
                              "readOnly": true
                            },
                            "endpointType": {
                              "type": "string",
                              "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                              "enum": [
                                "src",
                                "dst"
                              ],
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              },
                              "readOnly": true
                            },
                            "replicationSchedule": {
                              "type": "string",
                              "description": "Schedule",
                              "enum": [
                                "_10minutely",
                                "hourly",
                                "daily"
                              ],
                              "x-ms-enum": {
                                "name": "ReplicationSchedule",
                                "modelAsString": true
                              }
                            },
                            "remoteVolumeResourceId": {
                              "type": "string",
                              "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                            },
                            "remotePath": {
                              "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "required": [
                                "externalHostName",
                                "serverName",
                                "volumeName"
                              ],
                              "properties": {
                                "externalHostName": {
                                  "type": "string",
                                  "description": "The Path to a ONTAP Host"
                                },
                                "serverName": {
                                  "type": "string",
                                  "description": "The name of a server on the ONTAP Host"
                                },
                                "volumeName": {
                                  "type": "string",
                                  "description": "The name of a volume on the server"
                                }
                              }
                            },
                            "remoteVolumeRegion": {
                              "type": "string",
                              "description": "The remote region for the other end of the Volume Replication."
                            },
                            "destinationReplications": {
                              "description": "A list of destination replications",
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "description": "Destination replication properties",
                                "type": "object",
                                "properties": {
                                  "resourceId": {
                                    "type": "string",
                                    "format": "arm-id",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                        }
                                      ]
                                    },
                                    "description": "The resource ID of the remote volume"
                                  },
                                  "replicationType": {
                                    "type": "string",
                                    "description": "Indicates whether the replication is cross zone or cross region.",
                                    "enum": [
                                      "CrossRegionReplication",
                                      "CrossZoneReplication"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ReplicationType",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "CrossRegionReplication",
                                          "description": "Cross region replication"
                                        },
                                        {
                                          "value": "CrossZoneReplication",
                                          "description": "Cross zone replication"
                                        }
                                      ]
                                    }
                                  },
                                  "region": {
                                    "type": "string",
                                    "description": "The remote region for the destination volume."
                                  },
                                  "zone": {
                                    "type": "string",
                                    "description": "The remote zone for the destination volume."
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "resourceId"
                              ]
                            }
                          }
                        },
                        "snapshot": {
                          "title": "Snapshot",
                          "description": "Snapshot properties.",
                          "type": "object",
                          "properties": {
                            "snapshotPolicyId": {
                              "type": "string",
                              "description": "Snapshot Policy ResourceId"
                            }
                          }
                        },
                        "volumeRelocation": {
                          "title": "VolumeRelocation",
                          "description": "VolumeRelocation properties",
                          "type": "object",
                          "properties": {
                            "relocationRequested": {
                              "type": "boolean",
                              "description": "Has relocation been requested for this volume"
                            },
                            "readyToBeFinalized": {
                              "type": "boolean",
                              "readOnly": true,
                              "description": "Has relocation finished and is ready to be cleaned up"
                            }
                          }
                        }
                      }
                    },
                    "acceptGrowCapacityPoolForShortTermCloneSplit": {
                      "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                      "type": "string",
                      "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "Accepted",
                        "Declined"
                      ],
                      "x-ms-enum": {
                        "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Accepted",
                            "description": "Auto grow capacity pool for short term clone split is accepted."
                          },
                          {
                            "value": "Declined",
                            "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                          }
                        ]
                      },
                      "example": "Accepted"
                    },
                    "isRestoring": {
                      "type": "boolean",
                      "description": "Restoring",
                      "readOnly": true
                    },
                    "snapshotDirectoryVisible": {
                      "type": "boolean",
                      "default": true,
                      "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                    },
                    "kerberosEnabled": {
                      "type": "boolean",
                      "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "example": false,
                      "default": false
                    },
                    "securityStyle": {
                      "type": "string",
                      "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                      "default": "unix",
                      "enum": [
                        "ntfs",
                        "unix"
                      ],
                      "x-ms-enum": {
                        "name": "SecurityStyle",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "smbEncryption": {
                      "type": "boolean",
                      "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                      "example": false,
                      "default": false
                    },
                    "smbAccessBasedEnumeration": {
                      "title": "smbAccessBasedEnumeration",
                      "type": "string",
                      "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbAccessBasedEnumeration",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbAccessBasedEnumeration share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbAccessBasedEnumeration share setting is enabled"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "example": "Enabled"
                    },
                    "smbNonBrowsable": {
                      "title": "smbNonBrowsable",
                      "type": "string",
                      "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbNonBrowsable",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbNonBrowsable share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbNonBrowsable share setting is enabled"
                          }
                        ]
                      },
                      "example": "Enabled"
                    },
                    "smbContinuouslyAvailable": {
                      "type": "boolean",
                      "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                      "example": false,
                      "default": false
                    },
                    "throughputMibps": {
                      "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                      "type": "number",
                      "x-nullable": true,
                      "example": 128.223
                    },
                    "actualThroughputMibps": {
                      "type": "number",
                      "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "encryptionKeySource": {
                      "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                      "type": "string",
                      "enum": [
                        "Microsoft.NetApp",
                        "Microsoft.KeyVault"
                      ],
                      "x-ms-enum": {
                        "name": "EncryptionKeySource",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Microsoft.NetApp",
                            "description": "Microsoft-managed key encryption"
                          },
                          {
                            "value": "Microsoft.KeyVault",
                            "description": "Customer-managed key encryption"
                          }
                        ]
                      },
                      "default": "Microsoft.NetApp"
                    },
                    "keyVaultPrivateEndpointResourceId": {
                      "type": "string",
                      "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                    },
                    "ldapEnabled": {
                      "type": "boolean",
                      "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                      "example": false,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "coolAccess": {
                      "type": "boolean",
                      "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                      "example": false,
                      "default": false
                    },
                    "coolnessPeriod": {
                      "type": "integer",
                      "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                      "example": 7,
                      "minimum": 2,
                      "maximum": 183,
                      "format": "int32"
                    },
                    "coolAccessRetrievalPolicy": {
                      "type": "string",
                      "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                      "enum": [
                        "Default",
                        "OnRead",
                        "Never"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessRetrievalPolicy",
                        "modelAsString": true
                      }
                    },
                    "coolAccessTieringPolicy": {
                      "type": "string",
                      "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                      "enum": [
                        "Auto",
                        "SnapshotOnly"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessTieringPolicy",
                        "modelAsString": true
                      }
                    },
                    "unixPermissions": {
                      "type": "string",
                      "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                      "minLength": 4,
                      "maxLength": 4,
                      "x-nullable": true,
                      "example": "0770"
                    },
                    "cloneProgress": {
                      "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                      "type": "integer",
                      "format": "int32",
                      "example": 10,
                      "x-nullable": true,
                      "readOnly": true
                    },
                    "fileAccessLogs": {
                      "type": "string",
                      "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                      "readOnly": true,
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "fileAccessLogs",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "fileAccessLogs are enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "fileAccessLogs are not enabled"
                          }
                        ]
                      },
                      "example": "Disabled",
                      "default": "Disabled"
                    },
                    "avsDataStore": {
                      "title": "avsDataStore",
                      "type": "string",
                      "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "avsDataStore",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "avsDataStore is enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "avsDataStore is disabled"
                          }
                        ]
                      },
                      "example": "Enabled",
                      "default": "Disabled",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dataStoreResourceId": {
                      "title": "dataStoreResourceId",
                      "description": "Data store resource unique identifier",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "isDefaultQuotaEnabled": {
                      "type": "boolean",
                      "description": "Specifies if default quota is enabled for the volume.",
                      "example": false,
                      "default": false
                    },
                    "defaultUserQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                      "example": 4,
                      "default": 0
                    },
                    "defaultGroupQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                      "example": 4,
                      "default": 0
                    },
                    "maximumNumberOfFiles": {
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true,
                      "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                      "example": 100000000
                    },
                    "volumeGroupName": {
                      "type": "string",
                      "description": "Volume Group Name",
                      "readOnly": true
                    },
                    "capacityPoolResourceId": {
                      "type": "string",
                      "description": "Pool Resource Id used in case of creating a volume through volume group"
                    },
                    "proximityPlacementGroup": {
                      "type": "string",
                      "description": "Proximity placement group associated with the volume",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                    },
                    "t2Network": {
                      "type": "string",
                      "description": "T2 network information",
                      "example": "Test-T2-Alias",
                      "readOnly": true
                    },
                    "volumeSpecName": {
                      "type": "string",
                      "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                      "example": "Data"
                    },
                    "encrypted": {
                      "type": "boolean",
                      "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                      "readOnly": true
                    },
                    "placementRules": {
                      "title": "Volume placement rules",
                      "description": "Application specific placement rules for the particular volume",
                      "type": "array",
                      "items": {
                        "description": "Application specific parameters for the placement of volumes in the volume group",
                        "type": "object",
                        "required": [
                          "key",
                          "value"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                            "example": "key1"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                            "example": "value1"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "key"
                      ]
                    },
                    "enableSubvolumes": {
                      "type": "string",
                      "description": "Flag indicating whether subvolume operations are enabled on the volume",
                      "example": "Enabled",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "enableSubvolumes",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "subvolumes are enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "subvolumes are not enabled"
                          }
                        ]
                      }
                    },
                    "provisionedAvailabilityZone": {
                      "title": "Provisioned Availability Zone",
                      "type": "string",
                      "readOnly": true,
                      "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                      "example": "2",
                      "x-nullable": true
                    },
                    "isLargeVolume": {
                      "title": "Is Large Volume",
                      "type": "boolean",
                      "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                      "example": false,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "originatingResourceId": {
                      "title": "Originating Resource Id",
                      "type": "string",
                      "description": "Id of the snapshot or backup that the volume is restored from.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                      "readOnly": true,
                      "x-nullable": true
                    },
                    "inheritedSizeInBytes": {
                      "title": "inheritedSizeInBytes",
                      "type": "integer",
                      "format": "int64",
                      "description": "Space shared by short term clone volume with parent volume in bytes.",
                      "readOnly": true,
                      "x-nullable": true
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously"
          }
        }
      },
      "delete": {
        "tags": [
          "Volumes"
        ],
        "operationId": "Volumes_Delete",
        "summary": "Delete a volume",
        "description": "Delete the specified volume",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "forceDelete",
            "type": "boolean",
            "description": "An option to force delete the volume. Will cleanup resources connected to the particular volume",
            "required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted -- Delete request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/populateAvailabilityZone": {
      "post": {
        "tags": [
          "Volumes"
        ],
        "summary": "Populate Availability Zone",
        "description": "This operation will populate availability zone information for a volume",
        "operationId": "Volumes_PopulateAvailabilityZone",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Volume resource",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "zones": {
                  "type": "array",
                  "description": "Availability Zone",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "items": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "1"
                  }
                },
                "properties": {
                  "description": "Volume properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "creationToken",
                    "usageThreshold",
                    "subnetId"
                  ],
                  "properties": {
                    "fileSystemId": {
                      "title": "FileSystem ID",
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique FileSystem Identifier.",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                    },
                    "creationToken": {
                      "title": "Creation Token or File Path",
                      "type": "string",
                      "description": "A unique file path for the volume. Used when creating mount targets",
                      "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                      "minLength": 1,
                      "maxLength": 80,
                      "example": "some-amazing-filepath",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "serviceLevel": {
                      "title": "serviceLevel",
                      "type": "string",
                      "description": "The service level of the file system",
                      "enum": [
                        "Standard",
                        "Premium",
                        "Ultra",
                        "StandardZRS",
                        "Flexible"
                      ],
                      "default": "Premium",
                      "x-ms-enum": {
                        "name": "ServiceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard service level"
                          },
                          {
                            "value": "Premium",
                            "description": "Premium service level"
                          },
                          {
                            "value": "Ultra",
                            "description": "Ultra service level"
                          },
                          {
                            "value": "StandardZRS",
                            "description": "Zone redundant storage service level. This will be deprecated soon."
                          },
                          {
                            "value": "Flexible",
                            "description": "Flexible service level"
                          }
                        ]
                      }
                    },
                    "usageThreshold": {
                      "title": "usageThreshold",
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                      "minimum": 53687091200,
                      "maximum": 2638827906662400,
                      "default": 107374182400,
                      "example": 107374182400
                    },
                    "exportPolicy": {
                      "title": "exportPolicy",
                      "description": "Set of export policy rules",
                      "properties": {
                        "rules": {
                          "title": "Export policy rule",
                          "description": "Export policy rule",
                          "type": "array",
                          "items": {
                            "description": "Volume Export Policy Rule",
                            "type": "object",
                            "properties": {
                              "ruleIndex": {
                                "type": "integer",
                                "description": "Order index",
                                "format": "int32"
                              },
                              "unixReadOnly": {
                                "type": "boolean",
                                "description": "Read only access"
                              },
                              "unixReadWrite": {
                                "type": "boolean",
                                "description": "Read and write access"
                              },
                              "kerberos5ReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5ReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "cifs": {
                                "type": "boolean",
                                "description": "Allows CIFS protocol"
                              },
                              "nfsv3": {
                                "type": "boolean",
                                "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                              },
                              "nfsv41": {
                                "type": "boolean",
                                "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                              },
                              "allowedClients": {
                                "type": "string",
                                "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                              },
                              "hasRootAccess": {
                                "type": "boolean",
                                "description": "Has root access to volume",
                                "example": true,
                                "default": true
                              },
                              "chownMode": {
                                "type": "string",
                                "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                                "default": "Restricted",
                                "enum": [
                                  "Restricted",
                                  "Unrestricted"
                                ],
                                "x-ms-enum": {
                                  "name": "ChownMode",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "ruleIndex"
                          ]
                        }
                      }
                    },
                    "protocolTypes": {
                      "title": "protocolTypes",
                      "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "NFSv4.1"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "snapshotId": {
                      "title": "Snapshot ID",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "Resource identifier used to identify the Snapshot.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                    },
                    "deleteBaseSnapshot": {
                      "type": "boolean",
                      "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                    },
                    "backupId": {
                      "title": "Backup ID",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "Resource identifier used to identify the Backup.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                    },
                    "baremetalTenantId": {
                      "title": "Baremetal Tenant ID",
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique Baremetal Tenant Identifier.",
                      "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                    },
                    "subnetId": {
                      "type": "string",
                      "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                    },
                    "networkFeatures": {
                      "title": "Network features",
                      "description": "Network features available to the volume, or current state of update.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Basic_Standard",
                        "Standard_Basic"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkFeatures",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic network features."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard network features."
                          },
                          {
                            "value": "Basic_Standard",
                            "description": "Updating from Basic to Standard network features."
                          },
                          {
                            "value": "Standard_Basic",
                            "description": "Updating from Standard to Basic network features."
                          }
                        ]
                      },
                      "example": "Standard",
                      "default": "Basic",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "effectiveNetworkFeatures": {
                      "title": "Network features",
                      "description": "Network features available to the volume, or current state of update.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Basic_Standard",
                        "Standard_Basic"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkFeatures",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic network features."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard network features."
                          },
                          {
                            "value": "Basic_Standard",
                            "description": "Updating from Basic to Standard network features."
                          },
                          {
                            "value": "Standard_Basic",
                            "description": "Updating from Standard to Basic network features."
                          }
                        ]
                      },
                      "example": "Standard",
                      "default": "Basic",
                      "readOnly": true
                    },
                    "networkSiblingSetId": {
                      "title": "Network Sibling Set ID",
                      "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "storageToNetworkProximity": {
                      "title": "Storage to Network Proximity",
                      "description": "Provides storage to network proximity information for the volume.",
                      "type": "string",
                      "enum": [
                        "Default",
                        "T1",
                        "T2",
                        "AcrossT2"
                      ],
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "VolumeStorageToNetworkProximity",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Default",
                            "description": "Basic storage to network connectivity."
                          },
                          {
                            "value": "T1",
                            "description": "Standard T1 storage to network connectivity."
                          },
                          {
                            "value": "T2",
                            "description": "Standard T2 storage to network connectivity."
                          },
                          {
                            "value": "AcrossT2",
                            "description": "Standard AcrossT2 storage to network connectivity."
                          }
                        ]
                      },
                      "example": "T1"
                    },
                    "mountTargets": {
                      "title": "mountTargets",
                      "type": "array",
                      "readOnly": true,
                      "description": "List of mount targets",
                      "items": {
                        "description": "Mount target properties",
                        "type": "object",
                        "required": [
                          "fileSystemId"
                        ],
                        "properties": {
                          "mountTargetId": {
                            "title": "mountTargetId",
                            "type": "string",
                            "readOnly": true,
                            "description": "UUID v4 used to identify the MountTarget",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "fileSystemId": {
                            "title": "fileSystemId",
                            "type": "string",
                            "description": "UUID v4 used to identify the MountTarget",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "ipAddress": {
                            "title": "ipAddress",
                            "description": "The mount target's IPv4 address",
                            "type": "string",
                            "readOnly": true,
                            "example": "1.2.3.4"
                          },
                          "smbServerFqdn": {
                            "title": "smbServerFQDN",
                            "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                            "type": "string",
                            "example": "fullyqualified.domainname.com"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "fileSystemId"
                      ]
                    },
                    "volumeType": {
                      "type": "string",
                      "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                      "example": "DataProtection",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dataProtection": {
                      "title": "DataProtection",
                      "description": "DataProtection type volumes include an object containing details of the replication",
                      "properties": {
                        "backup": {
                          "title": "Backup",
                          "description": "Backup Properties",
                          "type": "object",
                          "properties": {
                            "backupPolicyId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                  }
                                ]
                              },
                              "description": "Backup Policy Resource ID"
                            },
                            "policyEnforced": {
                              "type": "boolean",
                              "description": "Policy Enforced"
                            },
                            "backupVaultId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                  }
                                ]
                              },
                              "description": "Backup Vault Resource ID"
                            }
                          }
                        },
                        "replication": {
                          "title": "Replication",
                          "description": "Replication properties",
                          "type": "object",
                          "properties": {
                            "replicationId": {
                              "type": "string",
                              "description": "Id",
                              "readOnly": true
                            },
                            "endpointType": {
                              "type": "string",
                              "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                              "enum": [
                                "src",
                                "dst"
                              ],
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              },
                              "readOnly": true
                            },
                            "replicationSchedule": {
                              "type": "string",
                              "description": "Schedule",
                              "enum": [
                                "_10minutely",
                                "hourly",
                                "daily"
                              ],
                              "x-ms-enum": {
                                "name": "ReplicationSchedule",
                                "modelAsString": true
                              }
                            },
                            "remoteVolumeResourceId": {
                              "type": "string",
                              "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                            },
                            "remotePath": {
                              "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "required": [
                                "externalHostName",
                                "serverName",
                                "volumeName"
                              ],
                              "properties": {
                                "externalHostName": {
                                  "type": "string",
                                  "description": "The Path to a ONTAP Host"
                                },
                                "serverName": {
                                  "type": "string",
                                  "description": "The name of a server on the ONTAP Host"
                                },
                                "volumeName": {
                                  "type": "string",
                                  "description": "The name of a volume on the server"
                                }
                              }
                            },
                            "remoteVolumeRegion": {
                              "type": "string",
                              "description": "The remote region for the other end of the Volume Replication."
                            },
                            "destinationReplications": {
                              "description": "A list of destination replications",
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "description": "Destination replication properties",
                                "type": "object",
                                "properties": {
                                  "resourceId": {
                                    "type": "string",
                                    "format": "arm-id",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                        }
                                      ]
                                    },
                                    "description": "The resource ID of the remote volume"
                                  },
                                  "replicationType": {
                                    "type": "string",
                                    "description": "Indicates whether the replication is cross zone or cross region.",
                                    "enum": [
                                      "CrossRegionReplication",
                                      "CrossZoneReplication"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ReplicationType",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "CrossRegionReplication",
                                          "description": "Cross region replication"
                                        },
                                        {
                                          "value": "CrossZoneReplication",
                                          "description": "Cross zone replication"
                                        }
                                      ]
                                    }
                                  },
                                  "region": {
                                    "type": "string",
                                    "description": "The remote region for the destination volume."
                                  },
                                  "zone": {
                                    "type": "string",
                                    "description": "The remote zone for the destination volume."
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "resourceId"
                              ]
                            }
                          }
                        },
                        "snapshot": {
                          "title": "Snapshot",
                          "description": "Snapshot properties.",
                          "type": "object",
                          "properties": {
                            "snapshotPolicyId": {
                              "type": "string",
                              "description": "Snapshot Policy ResourceId"
                            }
                          }
                        },
                        "volumeRelocation": {
                          "title": "VolumeRelocation",
                          "description": "VolumeRelocation properties",
                          "type": "object",
                          "properties": {
                            "relocationRequested": {
                              "type": "boolean",
                              "description": "Has relocation been requested for this volume"
                            },
                            "readyToBeFinalized": {
                              "type": "boolean",
                              "readOnly": true,
                              "description": "Has relocation finished and is ready to be cleaned up"
                            }
                          }
                        }
                      }
                    },
                    "acceptGrowCapacityPoolForShortTermCloneSplit": {
                      "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                      "type": "string",
                      "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "Accepted",
                        "Declined"
                      ],
                      "x-ms-enum": {
                        "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Accepted",
                            "description": "Auto grow capacity pool for short term clone split is accepted."
                          },
                          {
                            "value": "Declined",
                            "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                          }
                        ]
                      },
                      "example": "Accepted"
                    },
                    "isRestoring": {
                      "type": "boolean",
                      "description": "Restoring",
                      "readOnly": true
                    },
                    "snapshotDirectoryVisible": {
                      "type": "boolean",
                      "default": true,
                      "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                    },
                    "kerberosEnabled": {
                      "type": "boolean",
                      "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "example": false,
                      "default": false
                    },
                    "securityStyle": {
                      "type": "string",
                      "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                      "default": "unix",
                      "enum": [
                        "ntfs",
                        "unix"
                      ],
                      "x-ms-enum": {
                        "name": "SecurityStyle",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "smbEncryption": {
                      "type": "boolean",
                      "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                      "example": false,
                      "default": false
                    },
                    "smbAccessBasedEnumeration": {
                      "title": "smbAccessBasedEnumeration",
                      "type": "string",
                      "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbAccessBasedEnumeration",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbAccessBasedEnumeration share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbAccessBasedEnumeration share setting is enabled"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "example": "Enabled"
                    },
                    "smbNonBrowsable": {
                      "title": "smbNonBrowsable",
                      "type": "string",
                      "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbNonBrowsable",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbNonBrowsable share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbNonBrowsable share setting is enabled"
                          }
                        ]
                      },
                      "example": "Enabled"
                    },
                    "smbContinuouslyAvailable": {
                      "type": "boolean",
                      "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                      "example": false,
                      "default": false
                    },
                    "throughputMibps": {
                      "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                      "type": "number",
                      "x-nullable": true,
                      "example": 128.223
                    },
                    "actualThroughputMibps": {
                      "type": "number",
                      "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "encryptionKeySource": {
                      "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                      "type": "string",
                      "enum": [
                        "Microsoft.NetApp",
                        "Microsoft.KeyVault"
                      ],
                      "x-ms-enum": {
                        "name": "EncryptionKeySource",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Microsoft.NetApp",
                            "description": "Microsoft-managed key encryption"
                          },
                          {
                            "value": "Microsoft.KeyVault",
                            "description": "Customer-managed key encryption"
                          }
                        ]
                      },
                      "default": "Microsoft.NetApp"
                    },
                    "keyVaultPrivateEndpointResourceId": {
                      "type": "string",
                      "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                    },
                    "ldapEnabled": {
                      "type": "boolean",
                      "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                      "example": false,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "coolAccess": {
                      "type": "boolean",
                      "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                      "example": false,
                      "default": false
                    },
                    "coolnessPeriod": {
                      "type": "integer",
                      "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                      "example": 7,
                      "minimum": 2,
                      "maximum": 183,
                      "format": "int32"
                    },
                    "coolAccessRetrievalPolicy": {
                      "type": "string",
                      "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                      "enum": [
                        "Default",
                        "OnRead",
                        "Never"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessRetrievalPolicy",
                        "modelAsString": true
                      }
                    },
                    "coolAccessTieringPolicy": {
                      "type": "string",
                      "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                      "enum": [
                        "Auto",
                        "SnapshotOnly"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessTieringPolicy",
                        "modelAsString": true
                      }
                    },
                    "unixPermissions": {
                      "type": "string",
                      "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                      "minLength": 4,
                      "maxLength": 4,
                      "x-nullable": true,
                      "example": "0770"
                    },
                    "cloneProgress": {
                      "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                      "type": "integer",
                      "format": "int32",
                      "example": 10,
                      "x-nullable": true,
                      "readOnly": true
                    },
                    "fileAccessLogs": {
                      "type": "string",
                      "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                      "readOnly": true,
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "fileAccessLogs",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "fileAccessLogs are enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "fileAccessLogs are not enabled"
                          }
                        ]
                      },
                      "example": "Disabled",
                      "default": "Disabled"
                    },
                    "avsDataStore": {
                      "title": "avsDataStore",
                      "type": "string",
                      "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "avsDataStore",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "avsDataStore is enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "avsDataStore is disabled"
                          }
                        ]
                      },
                      "example": "Enabled",
                      "default": "Disabled",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dataStoreResourceId": {
                      "title": "dataStoreResourceId",
                      "description": "Data store resource unique identifier",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "isDefaultQuotaEnabled": {
                      "type": "boolean",
                      "description": "Specifies if default quota is enabled for the volume.",
                      "example": false,
                      "default": false
                    },
                    "defaultUserQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                      "example": 4,
                      "default": 0
                    },
                    "defaultGroupQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                      "example": 4,
                      "default": 0
                    },
                    "maximumNumberOfFiles": {
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true,
                      "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                      "example": 100000000
                    },
                    "volumeGroupName": {
                      "type": "string",
                      "description": "Volume Group Name",
                      "readOnly": true
                    },
                    "capacityPoolResourceId": {
                      "type": "string",
                      "description": "Pool Resource Id used in case of creating a volume through volume group"
                    },
                    "proximityPlacementGroup": {
                      "type": "string",
                      "description": "Proximity placement group associated with the volume",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                    },
                    "t2Network": {
                      "type": "string",
                      "description": "T2 network information",
                      "example": "Test-T2-Alias",
                      "readOnly": true
                    },
                    "volumeSpecName": {
                      "type": "string",
                      "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                      "example": "Data"
                    },
                    "encrypted": {
                      "type": "boolean",
                      "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                      "readOnly": true
                    },
                    "placementRules": {
                      "title": "Volume placement rules",
                      "description": "Application specific placement rules for the particular volume",
                      "type": "array",
                      "items": {
                        "description": "Application specific parameters for the placement of volumes in the volume group",
                        "type": "object",
                        "required": [
                          "key",
                          "value"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                            "example": "key1"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                            "example": "value1"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "key"
                      ]
                    },
                    "enableSubvolumes": {
                      "type": "string",
                      "description": "Flag indicating whether subvolume operations are enabled on the volume",
                      "example": "Enabled",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "enableSubvolumes",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "subvolumes are enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "subvolumes are not enabled"
                          }
                        ]
                      }
                    },
                    "provisionedAvailabilityZone": {
                      "title": "Provisioned Availability Zone",
                      "type": "string",
                      "readOnly": true,
                      "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                      "example": "2",
                      "x-nullable": true
                    },
                    "isLargeVolume": {
                      "title": "Is Large Volume",
                      "type": "boolean",
                      "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                      "example": false,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "originatingResourceId": {
                      "title": "Originating Resource Id",
                      "type": "string",
                      "description": "Id of the snapshot or backup that the volume is restored from.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                      "readOnly": true,
                      "x-nullable": true
                    },
                    "inheritedSizeInBytes": {
                      "title": "inheritedSizeInBytes",
                      "type": "integer",
                      "format": "int64",
                      "description": "Space shared by short term clone volume with parent volume in bytes.",
                      "readOnly": true,
                      "x-nullable": true
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted -- populate availability zone accepted; operation will complete asynchronously",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/revert": {
      "post": {
        "tags": [
          "Volumes Revert"
        ],
        "summary": "Revert a volume to one of its snapshots",
        "description": "Revert a volume to the snapshot specified in the body",
        "operationId": "Volumes_Revert",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "Object for snapshot to revert supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "revert a volume to the snapshot",
              "type": "object",
              "properties": {
                "snapshotId": {
                  "type": "string",
                  "description": "Resource id of the snapshot",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                      }
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/resetCifsPassword": {
      "post": {
        "tags": [
          "Reset Cifs Password"
        ],
        "summary": "Reset cifs password",
        "description": "Reset cifs password from volume",
        "operationId": "Volumes_ResetCifsPassword",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted -- Update request accepted; operation will complete asynchronously",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/splitCloneFromParent": {
      "post": {
        "tags": [
          "Split clone volume"
        ],
        "summary": "Split clone from parent volume",
        "description": " Split operation to convert clone volume to an independent volume.",
        "operationId": "Volumes_SplitCloneFromParent",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed",
            "schema": {
              "description": "Volume resource",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "zones": {
                  "type": "array",
                  "description": "Availability Zone",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "items": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "1"
                  }
                },
                "properties": {
                  "description": "Volume properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "creationToken",
                    "usageThreshold",
                    "subnetId"
                  ],
                  "properties": {
                    "fileSystemId": {
                      "title": "FileSystem ID",
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique FileSystem Identifier.",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                    },
                    "creationToken": {
                      "title": "Creation Token or File Path",
                      "type": "string",
                      "description": "A unique file path for the volume. Used when creating mount targets",
                      "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                      "minLength": 1,
                      "maxLength": 80,
                      "example": "some-amazing-filepath",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "serviceLevel": {
                      "title": "serviceLevel",
                      "type": "string",
                      "description": "The service level of the file system",
                      "enum": [
                        "Standard",
                        "Premium",
                        "Ultra",
                        "StandardZRS",
                        "Flexible"
                      ],
                      "default": "Premium",
                      "x-ms-enum": {
                        "name": "ServiceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Standard",
                            "description": "Standard service level"
                          },
                          {
                            "value": "Premium",
                            "description": "Premium service level"
                          },
                          {
                            "value": "Ultra",
                            "description": "Ultra service level"
                          },
                          {
                            "value": "StandardZRS",
                            "description": "Zone redundant storage service level. This will be deprecated soon."
                          },
                          {
                            "value": "Flexible",
                            "description": "Flexible service level"
                          }
                        ]
                      }
                    },
                    "usageThreshold": {
                      "title": "usageThreshold",
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                      "minimum": 53687091200,
                      "maximum": 2638827906662400,
                      "default": 107374182400,
                      "example": 107374182400
                    },
                    "exportPolicy": {
                      "title": "exportPolicy",
                      "description": "Set of export policy rules",
                      "properties": {
                        "rules": {
                          "title": "Export policy rule",
                          "description": "Export policy rule",
                          "type": "array",
                          "items": {
                            "description": "Volume Export Policy Rule",
                            "type": "object",
                            "properties": {
                              "ruleIndex": {
                                "type": "integer",
                                "description": "Order index",
                                "format": "int32"
                              },
                              "unixReadOnly": {
                                "type": "boolean",
                                "description": "Read only access"
                              },
                              "unixReadWrite": {
                                "type": "boolean",
                                "description": "Read and write access"
                              },
                              "kerberos5ReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5ReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5iReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadOnly": {
                                "type": "boolean",
                                "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "kerberos5pReadWrite": {
                                "type": "boolean",
                                "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                                "example": false,
                                "default": false
                              },
                              "cifs": {
                                "type": "boolean",
                                "description": "Allows CIFS protocol"
                              },
                              "nfsv3": {
                                "type": "boolean",
                                "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                              },
                              "nfsv41": {
                                "type": "boolean",
                                "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                              },
                              "allowedClients": {
                                "type": "string",
                                "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                              },
                              "hasRootAccess": {
                                "type": "boolean",
                                "description": "Has root access to volume",
                                "example": true,
                                "default": true
                              },
                              "chownMode": {
                                "type": "string",
                                "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                                "default": "Restricted",
                                "enum": [
                                  "Restricted",
                                  "Unrestricted"
                                ],
                                "x-ms-enum": {
                                  "name": "ChownMode",
                                  "modelAsString": true
                                }
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "ruleIndex"
                          ]
                        }
                      }
                    },
                    "protocolTypes": {
                      "title": "protocolTypes",
                      "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "NFSv4.1"
                      ]
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "snapshotId": {
                      "title": "Snapshot ID",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "Resource identifier used to identify the Snapshot.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                    },
                    "deleteBaseSnapshot": {
                      "type": "boolean",
                      "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                    },
                    "backupId": {
                      "title": "Backup ID",
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "description": "Resource identifier used to identify the Backup.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                    },
                    "baremetalTenantId": {
                      "title": "Baremetal Tenant ID",
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique Baremetal Tenant Identifier.",
                      "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                    },
                    "subnetId": {
                      "type": "string",
                      "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                    },
                    "networkFeatures": {
                      "title": "Network features",
                      "description": "Network features available to the volume, or current state of update.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Basic_Standard",
                        "Standard_Basic"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkFeatures",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic network features."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard network features."
                          },
                          {
                            "value": "Basic_Standard",
                            "description": "Updating from Basic to Standard network features."
                          },
                          {
                            "value": "Standard_Basic",
                            "description": "Updating from Standard to Basic network features."
                          }
                        ]
                      },
                      "example": "Standard",
                      "default": "Basic",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "effectiveNetworkFeatures": {
                      "title": "Network features",
                      "description": "Network features available to the volume, or current state of update.",
                      "type": "string",
                      "enum": [
                        "Basic",
                        "Standard",
                        "Basic_Standard",
                        "Standard_Basic"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkFeatures",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Basic",
                            "description": "Basic network features."
                          },
                          {
                            "value": "Standard",
                            "description": "Standard network features."
                          },
                          {
                            "value": "Basic_Standard",
                            "description": "Updating from Basic to Standard network features."
                          },
                          {
                            "value": "Standard_Basic",
                            "description": "Updating from Standard to Basic network features."
                          }
                        ]
                      },
                      "example": "Standard",
                      "default": "Basic",
                      "readOnly": true
                    },
                    "networkSiblingSetId": {
                      "title": "Network Sibling Set ID",
                      "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                      "type": "string",
                      "readOnly": true,
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "storageToNetworkProximity": {
                      "title": "Storage to Network Proximity",
                      "description": "Provides storage to network proximity information for the volume.",
                      "type": "string",
                      "enum": [
                        "Default",
                        "T1",
                        "T2",
                        "AcrossT2"
                      ],
                      "readOnly": true,
                      "x-ms-enum": {
                        "name": "VolumeStorageToNetworkProximity",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Default",
                            "description": "Basic storage to network connectivity."
                          },
                          {
                            "value": "T1",
                            "description": "Standard T1 storage to network connectivity."
                          },
                          {
                            "value": "T2",
                            "description": "Standard T2 storage to network connectivity."
                          },
                          {
                            "value": "AcrossT2",
                            "description": "Standard AcrossT2 storage to network connectivity."
                          }
                        ]
                      },
                      "example": "T1"
                    },
                    "mountTargets": {
                      "title": "mountTargets",
                      "type": "array",
                      "readOnly": true,
                      "description": "List of mount targets",
                      "items": {
                        "description": "Mount target properties",
                        "type": "object",
                        "required": [
                          "fileSystemId"
                        ],
                        "properties": {
                          "mountTargetId": {
                            "title": "mountTargetId",
                            "type": "string",
                            "readOnly": true,
                            "description": "UUID v4 used to identify the MountTarget",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "fileSystemId": {
                            "title": "fileSystemId",
                            "type": "string",
                            "description": "UUID v4 used to identify the MountTarget",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "ipAddress": {
                            "title": "ipAddress",
                            "description": "The mount target's IPv4 address",
                            "type": "string",
                            "readOnly": true,
                            "example": "1.2.3.4"
                          },
                          "smbServerFqdn": {
                            "title": "smbServerFQDN",
                            "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                            "type": "string",
                            "example": "fullyqualified.domainname.com"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "fileSystemId"
                      ]
                    },
                    "volumeType": {
                      "type": "string",
                      "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                      "example": "DataProtection",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dataProtection": {
                      "title": "DataProtection",
                      "description": "DataProtection type volumes include an object containing details of the replication",
                      "properties": {
                        "backup": {
                          "title": "Backup",
                          "description": "Backup Properties",
                          "type": "object",
                          "properties": {
                            "backupPolicyId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                  }
                                ]
                              },
                              "description": "Backup Policy Resource ID"
                            },
                            "policyEnforced": {
                              "type": "boolean",
                              "description": "Policy Enforced"
                            },
                            "backupVaultId": {
                              "type": "string",
                              "format": "arm-id",
                              "x-ms-arm-id-details": {
                                "allowedResources": [
                                  {
                                    "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                  }
                                ]
                              },
                              "description": "Backup Vault Resource ID"
                            }
                          }
                        },
                        "replication": {
                          "title": "Replication",
                          "description": "Replication properties",
                          "type": "object",
                          "properties": {
                            "replicationId": {
                              "type": "string",
                              "description": "Id",
                              "readOnly": true
                            },
                            "endpointType": {
                              "type": "string",
                              "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                              "enum": [
                                "src",
                                "dst"
                              ],
                              "x-ms-enum": {
                                "name": "EndpointType",
                                "modelAsString": true
                              },
                              "readOnly": true
                            },
                            "replicationSchedule": {
                              "type": "string",
                              "description": "Schedule",
                              "enum": [
                                "_10minutely",
                                "hourly",
                                "daily"
                              ],
                              "x-ms-enum": {
                                "name": "ReplicationSchedule",
                                "modelAsString": true
                              }
                            },
                            "remoteVolumeResourceId": {
                              "type": "string",
                              "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                            },
                            "remotePath": {
                              "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "required": [
                                "externalHostName",
                                "serverName",
                                "volumeName"
                              ],
                              "properties": {
                                "externalHostName": {
                                  "type": "string",
                                  "description": "The Path to a ONTAP Host"
                                },
                                "serverName": {
                                  "type": "string",
                                  "description": "The name of a server on the ONTAP Host"
                                },
                                "volumeName": {
                                  "type": "string",
                                  "description": "The name of a volume on the server"
                                }
                              }
                            },
                            "remoteVolumeRegion": {
                              "type": "string",
                              "description": "The remote region for the other end of the Volume Replication."
                            },
                            "destinationReplications": {
                              "description": "A list of destination replications",
                              "type": "array",
                              "readOnly": true,
                              "items": {
                                "description": "Destination replication properties",
                                "type": "object",
                                "properties": {
                                  "resourceId": {
                                    "type": "string",
                                    "format": "arm-id",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                        }
                                      ]
                                    },
                                    "description": "The resource ID of the remote volume"
                                  },
                                  "replicationType": {
                                    "type": "string",
                                    "description": "Indicates whether the replication is cross zone or cross region.",
                                    "enum": [
                                      "CrossRegionReplication",
                                      "CrossZoneReplication"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ReplicationType",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "CrossRegionReplication",
                                          "description": "Cross region replication"
                                        },
                                        {
                                          "value": "CrossZoneReplication",
                                          "description": "Cross zone replication"
                                        }
                                      ]
                                    }
                                  },
                                  "region": {
                                    "type": "string",
                                    "description": "The remote region for the destination volume."
                                  },
                                  "zone": {
                                    "type": "string",
                                    "description": "The remote zone for the destination volume."
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "resourceId"
                              ]
                            }
                          }
                        },
                        "snapshot": {
                          "title": "Snapshot",
                          "description": "Snapshot properties.",
                          "type": "object",
                          "properties": {
                            "snapshotPolicyId": {
                              "type": "string",
                              "description": "Snapshot Policy ResourceId"
                            }
                          }
                        },
                        "volumeRelocation": {
                          "title": "VolumeRelocation",
                          "description": "VolumeRelocation properties",
                          "type": "object",
                          "properties": {
                            "relocationRequested": {
                              "type": "boolean",
                              "description": "Has relocation been requested for this volume"
                            },
                            "readyToBeFinalized": {
                              "type": "boolean",
                              "readOnly": true,
                              "description": "Has relocation finished and is ready to be cleaned up"
                            }
                          }
                        }
                      }
                    },
                    "acceptGrowCapacityPoolForShortTermCloneSplit": {
                      "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                      "type": "string",
                      "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "Accepted",
                        "Declined"
                      ],
                      "x-ms-enum": {
                        "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Accepted",
                            "description": "Auto grow capacity pool for short term clone split is accepted."
                          },
                          {
                            "value": "Declined",
                            "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                          }
                        ]
                      },
                      "example": "Accepted"
                    },
                    "isRestoring": {
                      "type": "boolean",
                      "description": "Restoring",
                      "readOnly": true
                    },
                    "snapshotDirectoryVisible": {
                      "type": "boolean",
                      "default": true,
                      "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                    },
                    "kerberosEnabled": {
                      "type": "boolean",
                      "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "example": false,
                      "default": false
                    },
                    "securityStyle": {
                      "type": "string",
                      "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                      "default": "unix",
                      "enum": [
                        "ntfs",
                        "unix"
                      ],
                      "x-ms-enum": {
                        "name": "SecurityStyle",
                        "modelAsString": true
                      },
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "smbEncryption": {
                      "type": "boolean",
                      "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                      "example": false,
                      "default": false
                    },
                    "smbAccessBasedEnumeration": {
                      "title": "smbAccessBasedEnumeration",
                      "type": "string",
                      "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbAccessBasedEnumeration",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbAccessBasedEnumeration share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbAccessBasedEnumeration share setting is enabled"
                          }
                        ]
                      },
                      "x-nullable": true,
                      "example": "Enabled"
                    },
                    "smbNonBrowsable": {
                      "title": "smbNonBrowsable",
                      "type": "string",
                      "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "x-ms-enum": {
                        "name": "smbNonBrowsable",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Disabled",
                            "description": "smbNonBrowsable share setting is disabled"
                          },
                          {
                            "value": "Enabled",
                            "description": "smbNonBrowsable share setting is enabled"
                          }
                        ]
                      },
                      "example": "Enabled"
                    },
                    "smbContinuouslyAvailable": {
                      "type": "boolean",
                      "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                      "example": false,
                      "default": false
                    },
                    "throughputMibps": {
                      "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                      "type": "number",
                      "x-nullable": true,
                      "example": 128.223
                    },
                    "actualThroughputMibps": {
                      "type": "number",
                      "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                      "example": 164.221,
                      "readOnly": true
                    },
                    "encryptionKeySource": {
                      "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                      "type": "string",
                      "enum": [
                        "Microsoft.NetApp",
                        "Microsoft.KeyVault"
                      ],
                      "x-ms-enum": {
                        "name": "EncryptionKeySource",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Microsoft.NetApp",
                            "description": "Microsoft-managed key encryption"
                          },
                          {
                            "value": "Microsoft.KeyVault",
                            "description": "Customer-managed key encryption"
                          }
                        ]
                      },
                      "default": "Microsoft.NetApp"
                    },
                    "keyVaultPrivateEndpointResourceId": {
                      "type": "string",
                      "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                    },
                    "ldapEnabled": {
                      "type": "boolean",
                      "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                      "example": false,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "coolAccess": {
                      "type": "boolean",
                      "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                      "example": false,
                      "default": false
                    },
                    "coolnessPeriod": {
                      "type": "integer",
                      "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                      "example": 7,
                      "minimum": 2,
                      "maximum": 183,
                      "format": "int32"
                    },
                    "coolAccessRetrievalPolicy": {
                      "type": "string",
                      "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                      "enum": [
                        "Default",
                        "OnRead",
                        "Never"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessRetrievalPolicy",
                        "modelAsString": true
                      }
                    },
                    "coolAccessTieringPolicy": {
                      "type": "string",
                      "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                      "enum": [
                        "Auto",
                        "SnapshotOnly"
                      ],
                      "x-ms-enum": {
                        "name": "coolAccessTieringPolicy",
                        "modelAsString": true
                      }
                    },
                    "unixPermissions": {
                      "type": "string",
                      "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                      "minLength": 4,
                      "maxLength": 4,
                      "x-nullable": true,
                      "example": "0770"
                    },
                    "cloneProgress": {
                      "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                      "type": "integer",
                      "format": "int32",
                      "example": 10,
                      "x-nullable": true,
                      "readOnly": true
                    },
                    "fileAccessLogs": {
                      "type": "string",
                      "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                      "readOnly": true,
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "fileAccessLogs",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "fileAccessLogs are enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "fileAccessLogs are not enabled"
                          }
                        ]
                      },
                      "example": "Disabled",
                      "default": "Disabled"
                    },
                    "avsDataStore": {
                      "title": "avsDataStore",
                      "type": "string",
                      "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "avsDataStore",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "avsDataStore is enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "avsDataStore is disabled"
                          }
                        ]
                      },
                      "example": "Enabled",
                      "default": "Disabled",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "dataStoreResourceId": {
                      "title": "dataStoreResourceId",
                      "description": "Data store resource unique identifier",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "isDefaultQuotaEnabled": {
                      "type": "boolean",
                      "description": "Specifies if default quota is enabled for the volume.",
                      "example": false,
                      "default": false
                    },
                    "defaultUserQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                      "example": 4,
                      "default": 0
                    },
                    "defaultGroupQuotaInKiBs": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                      "example": 4,
                      "default": 0
                    },
                    "maximumNumberOfFiles": {
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true,
                      "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                      "example": 100000000
                    },
                    "volumeGroupName": {
                      "type": "string",
                      "description": "Volume Group Name",
                      "readOnly": true
                    },
                    "capacityPoolResourceId": {
                      "type": "string",
                      "description": "Pool Resource Id used in case of creating a volume through volume group"
                    },
                    "proximityPlacementGroup": {
                      "type": "string",
                      "description": "Proximity placement group associated with the volume",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                    },
                    "t2Network": {
                      "type": "string",
                      "description": "T2 network information",
                      "example": "Test-T2-Alias",
                      "readOnly": true
                    },
                    "volumeSpecName": {
                      "type": "string",
                      "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                      "example": "Data"
                    },
                    "encrypted": {
                      "type": "boolean",
                      "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                      "readOnly": true
                    },
                    "placementRules": {
                      "title": "Volume placement rules",
                      "description": "Application specific placement rules for the particular volume",
                      "type": "array",
                      "items": {
                        "description": "Application specific parameters for the placement of volumes in the volume group",
                        "type": "object",
                        "required": [
                          "key",
                          "value"
                        ],
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                            "example": "key1"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                            "example": "value1"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "key"
                      ]
                    },
                    "enableSubvolumes": {
                      "type": "string",
                      "description": "Flag indicating whether subvolume operations are enabled on the volume",
                      "example": "Enabled",
                      "default": "Disabled",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "enableSubvolumes",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "subvolumes are enabled"
                          },
                          {
                            "value": "Disabled",
                            "description": "subvolumes are not enabled"
                          }
                        ]
                      }
                    },
                    "provisionedAvailabilityZone": {
                      "title": "Provisioned Availability Zone",
                      "type": "string",
                      "readOnly": true,
                      "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                      "example": "2",
                      "x-nullable": true
                    },
                    "isLargeVolume": {
                      "title": "Is Large Volume",
                      "type": "boolean",
                      "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                      "example": false,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "originatingResourceId": {
                      "title": "Originating Resource Id",
                      "type": "string",
                      "description": "Id of the snapshot or backup that the volume is restored from.",
                      "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                      "readOnly": true,
                      "x-nullable": true
                    },
                    "inheritedSizeInBytes": {
                      "title": "inheritedSizeInBytes",
                      "type": "integer",
                      "format": "int64",
                      "description": "Space shared by short term clone volume with parent volume in bytes.",
                      "readOnly": true,
                      "x-nullable": true
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Operation Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/breakFileLocks": {
      "post": {
        "tags": [
          "File Locks"
        ],
        "summary": "Break file locks",
        "description": "Break all the file locks on a volume",
        "operationId": "Volumes_BreakFileLocks",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "Optional body to provide the ability to clear file locks with selected options",
            "in": "body",
            "required": false,
            "schema": {
              "description": "Break file locks request",
              "type": "object",
              "properties": {
                "clientIp": {
                  "type": "string",
                  "description": "To clear file locks on a volume for a particular client",
                  "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                  "example": "101.102.103.104"
                },
                "confirmRunningDisruptiveOperation": {
                  "type": "boolean",
                  "description": "Break File locks could be a disruptive operation for application as locks on the volume will be broken, if want to process, set to true.",
                  "default": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/getGroupIdListForLdapUser": {
      "post": {
        "tags": [
          "Group Id List for LDAP User"
        ],
        "summary": " Get Group Id List for LDAP User",
        "description": "Returns the list of group Ids for a specific LDAP User",
        "operationId": "Volumes_ListGetGroupIdListForLdapUser",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "Returns group Id list for a specific LDAP user",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Get group Id list for LDAP User request",
              "type": "object",
              "required": [
                "username"
              ],
              "properties": {
                "username": {
                  "type": "string",
                  "description": "username is required to fetch the group to which user is part of",
                  "maxLength": 255,
                  "minLength": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Group Id list for Ldap user",
              "type": "object",
              "properties": {
                "groupIdsForLdapUser": {
                  "description": "Group Id list",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "123",
                    "224"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/breakReplication": {
      "post": {
        "tags": [
          "Volumes Replication"
        ],
        "summary": "Break volume replication",
        "description": "Break the replication connection on the destination volume",
        "operationId": "Volumes_BreakReplication",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "Optional body to force break the replication.",
            "in": "body",
            "required": false,
            "schema": {
              "description": "Break replication request",
              "type": "object",
              "properties": {
                "forceBreakReplication": {
                  "type": "boolean",
                  "description": "If replication is in status transferring and you want to force break the replication, set to true"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/reestablishReplication": {
      "post": {
        "tags": [
          "Volumes Replication"
        ],
        "summary": "Re-establish volume replication",
        "description": "Re-establish a previously deleted replication between 2 volumes that have a common ad-hoc or policy-based snapshots",
        "operationId": "Volumes_ReestablishReplication",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "body for the id of the source volume.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Re-establish request object supplied in the body of the operation.",
              "type": "object",
              "properties": {
                "sourceVolumeId": {
                  "type": "string",
                  "description": "Resource id of the source volume for the replication"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/replicationStatus": {
      "get": {
        "tags": [
          "Volumes Replication"
        ],
        "summary": "Get volume replication status",
        "description": "Get the status of the replication",
        "operationId": "Volumes_ReplicationStatus",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Replication status",
              "type": "object",
              "properties": {
                "healthy": {
                  "type": "boolean",
                  "description": "Replication health check"
                },
                "relationshipStatus": {
                  "type": "string",
                  "description": "Status of the mirror relationship",
                  "enum": [
                    "Idle",
                    "Transferring"
                  ],
                  "x-ms-enum": {
                    "name": "RelationshipStatus",
                    "modelAsString": true
                  }
                },
                "mirrorState": {
                  "type": "string",
                  "description": "The status of the replication",
                  "enum": [
                    "Uninitialized",
                    "Mirrored",
                    "Broken"
                  ],
                  "x-ms-enum": {
                    "name": "MirrorState",
                    "modelAsString": true
                  }
                },
                "totalProgress": {
                  "type": "string",
                  "description": "The progress of the replication"
                },
                "errorMessage": {
                  "type": "string",
                  "description": "Displays error message if the replication is in an error state"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/listReplications": {
      "post": {
        "tags": [
          "Volumes Replication"
        ],
        "summary": "List replications for volume",
        "description": "List all replications for a specified volume",
        "operationId": "Volumes_ListReplications",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List Replications",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A list of replications",
                  "type": "array",
                  "items": {
                    "description": "Replication properties",
                    "type": "object",
                    "required": [
                      "remoteVolumeResourceId"
                    ],
                    "properties": {
                      "replicationId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "UUID v4 used to identify the replication.",
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "5ee41ce4-8f44-4ecd-ad89-8c1e573fe3b8"
                      },
                      "endpointType": {
                        "type": "string",
                        "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                        "enum": [
                          "src",
                          "dst"
                        ],
                        "x-ms-enum": {
                          "name": "EndpointType",
                          "modelAsString": true
                        }
                      },
                      "replicationSchedule": {
                        "type": "string",
                        "description": "Schedule",
                        "enum": [
                          "_10minutely",
                          "hourly",
                          "daily"
                        ],
                        "x-ms-enum": {
                          "name": "ReplicationSchedule",
                          "modelAsString": true
                        }
                      },
                      "remoteVolumeResourceId": {
                        "type": "string",
                        "description": "The resource ID of the remote volume."
                      },
                      "remoteVolumeRegion": {
                        "type": "string",
                        "description": "The remote region for the other end of the Volume Replication."
                      }
                    }
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/resyncReplication": {
      "post": {
        "tags": [
          "Volumes Replication"
        ],
        "summary": "Resync volume replication",
        "description": "Resync the connection on the destination volume. If the operation is ran on the source volume it will reverse-resync the connection and sync from destination to source.",
        "operationId": "Volumes_ResyncReplication",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/deleteReplication": {
      "post": {
        "tags": [
          "Volumes Replication"
        ],
        "summary": "Delete volume replication",
        "description": "Delete the replication connection on the destination volume, and send release to the source replication",
        "operationId": "Volumes_DeleteReplication",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/authorizeReplication": {
      "post": {
        "tags": [
          "Volumes Replication"
        ],
        "summary": "Authorize source volume replication",
        "description": "Authorize the replication connection on the source volume",
        "operationId": "Volumes_AuthorizeReplication",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "Authorize request object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Authorize request",
              "type": "object",
              "properties": {
                "remoteVolumeResourceId": {
                  "type": "string",
                  "description": "Resource id of the remote volume"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/reinitializeReplication": {
      "post": {
        "tags": [
          "Volumes Replication"
        ],
        "summary": "ReInitialize volume replication",
        "description": "Re-Initializes the replication connection on the destination volume",
        "operationId": "Volumes_ReInitializeReplication",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/peerExternalCluster": {
      "post": {
        "summary": "Start Cluster peering",
        "description": "Starts peering the external cluster for this migration volume",
        "tags": [
          "Volumes OnPrem Migration"
        ],
        "operationId": "Volumes_PeerExternalCluster",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "Cluster peer request object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Source Cluster properties for a cluster peer request",
              "type": "object",
              "required": [
                "peerIpAddresses"
              ],
              "properties": {
                "peerIpAddresses": {
                  "type": "array",
                  "minItems": 1,
                  "description": "A list of IC-LIF IPs that can be used to connect to the On-prem cluster",
                  "example": [
                    "0.0.0.1",
                    "0.0.0.2",
                    "0.0.0.3",
                    "0.0.0.4",
                    "0.0.0.5",
                    "0.0.0.6"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Information about cluster peering process",
              "type": "object",
              "properties": {
                "peerAcceptCommand": {
                  "description": "A command that needs to be run on the external ONTAP to accept cluster peering.  Will only be present if <code>clusterPeeringStatus</code> is <code>pending</code>",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/authorizeExternalReplication": {
      "post": {
        "summary": "Start migration process",
        "description": "Starts SVM peering and returns a command to be run on the external ONTAP to accept it.  Once the SVM have been peered a SnapMirror will be created",
        "tags": [
          "Volumes OnPrem Migration"
        ],
        "operationId": "Volumes_AuthorizeExternalReplication",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Information about svm peering process",
              "type": "object",
              "properties": {
                "svmPeeringCommand": {
                  "description": "A command that needs to be run on the external ONTAP to accept svm peering.  Will only be present if <code>svmPeeringStatus</code> is <code>pending</code>",
                  "type": "string"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/finalizeExternalReplication": {
      "post": {
        "summary": "Finalize migration process",
        "description": "Finalizes the migration of an external volume by releasing the replication and breaking the external cluster peering if no other migration is active.",
        "tags": [
          "Volumes OnPrem Migration Finalize"
        ],
        "operationId": "Volumes_FinalizeExternalReplication",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/performReplicationTransfer": {
      "post": {
        "tags": [
          "Volumes OnPrem Migration"
        ],
        "summary": "Perform a replication transfer",
        "description": "Performs an adhoc replication transfer on a volume with volumeType Migration",
        "operationId": "Volumes_PerformReplicationTransfer",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/poolChange": {
      "post": {
        "tags": [
          "Pool Change"
        ],
        "summary": "Change pool for volume",
        "description": "Moves volume to another pool",
        "operationId": "Volumes_PoolChange",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "Move volume to the pool supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Pool change request",
              "type": "object",
              "required": [
                "newPoolResourceId"
              ],
              "properties": {
                "newPoolResourceId": {
                  "type": "string",
                  "description": "Resource id of the pool to move volume to"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/relocate": {
      "post": {
        "tags": [
          "Volumes Relocation"
        ],
        "summary": "Relocate volume",
        "description": "Relocates volume to a new stamp",
        "operationId": "Volumes_Relocate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "Relocate volume request",
            "in": "body",
            "required": false,
            "schema": {
              "description": "Relocate volume request",
              "type": "object",
              "properties": {
                "creationToken": {
                  "type": "string",
                  "description": "New creation token for the volume that controls the mount point name"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/finalizeRelocation": {
      "post": {
        "tags": [
          "Volumes Relocation"
        ],
        "summary": "Finalize volume relocation",
        "description": "Finalizes the relocation of the volume and cleans up the old volume.",
        "operationId": "Volumes_FinalizeRelocation",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/revertRelocation": {
      "post": {
        "tags": [
          "Volumes Relocation"
        ],
        "summary": "Revert volume relocation",
        "description": "Reverts the volume relocation process, cleans up the new volume and starts using the former-existing volume.",
        "operationId": "Volumes_RevertRelocation",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots": {
      "get": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_List",
        "summary": "Describe all snapshots",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "description": "List all snapshots associated with the volume",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of Snapshots",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A list of Snapshots",
                  "type": "array",
                  "items": {
                    "description": "Snapshot of a Volume",
                    "type": "object",
                    "required": [
                      "location"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "description": "Resource location",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Snapshot Properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "snapshotId": {
                            "title": "snapshotId",
                            "type": "string",
                            "readOnly": true,
                            "description": "UUID v4 used to identify the Snapshot",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "created": {
                            "title": "name",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "description": "The creation date of the snapshot",
                            "example": "2017-08-15 13:23:33"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Azure lifecycle management"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}": {
      "get": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_Get",
        "summary": "Describe a snapshot",
        "description": "Get details of the specified snapshot",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "snapshotName",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Snapshot of a Volume",
              "type": "object",
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Snapshot Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "snapshotId": {
                      "title": "snapshotId",
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID v4 used to identify the Snapshot",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "created": {
                      "title": "name",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The creation date of the snapshot",
                      "example": "2017-08-15 13:23:33"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_Create",
        "summary": "Create a snapshot",
        "description": "Create the specified snapshot within the given volume",
        "parameters": [
          {
            "name": "body",
            "description": "Snapshot object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Snapshot of a Volume",
              "type": "object",
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Snapshot Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "snapshotId": {
                      "title": "snapshotId",
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID v4 used to identify the Snapshot",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "created": {
                      "title": "name",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The creation date of the snapshot",
                      "example": "2017-08-15 13:23:33"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "snapshotName",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "201": {
            "description": "Snapshot created",
            "schema": {
              "description": "Snapshot of a Volume",
              "type": "object",
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Snapshot Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "snapshotId": {
                      "title": "snapshotId",
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID v4 used to identify the Snapshot",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "created": {
                      "title": "name",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The creation date of the snapshot",
                      "example": "2017-08-15 13:23:33"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted -- Create request accepted; operation will complete asynchronously"
          }
        }
      },
      "patch": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_Update",
        "summary": "Update a snapshot",
        "description": "Patch a snapshot",
        "parameters": [
          {
            "name": "body",
            "description": "Snapshot object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Snapshot patch",
              "type": "object",
              "properties": {}
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "snapshotName",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Snapshot of a Volume",
              "type": "object",
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Snapshot Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "snapshotId": {
                      "title": "snapshotId",
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID v4 used to identify the Snapshot",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "created": {
                      "title": "name",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The creation date of the snapshot",
                      "example": "2017-08-15 13:23:33"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted -- Update request accepted; operation will complete asynchronously"
          }
        }
      },
      "delete": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_Delete",
        "summary": "Delete a snapshot",
        "description": "Delete snapshot",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "snapshotName",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted -- Delete request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/snapshots/{snapshotName}/restoreFiles": {
      "post": {
        "tags": [
          "Snapshots"
        ],
        "operationId": "Snapshots_RestoreFiles",
        "summary": "Create a new Snapshot Restore Files request",
        "description": "Restore the specified files from the specified snapshot to the active filesystem",
        "parameters": [
          {
            "name": "body",
            "description": "Restore payload supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Restore payload for Single File Snapshot Restore",
              "type": "object",
              "x-ms-azure-resource": true,
              "required": [
                "filePaths"
              ],
              "properties": {
                "filePaths": {
                  "description": "List of files to be restored",
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 10,
                  "items": {
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1
                  },
                  "example": [
                    "/dir1/customer1.db",
                    "/dir1/customer2.db"
                  ]
                },
                "destinationPath": {
                  "description": "Destination folder where the files will be restored",
                  "type": "string",
                  "example": "/AVSdataStore"
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "snapshotName",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - terminal state"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies": {
      "get": {
        "operationId": "SnapshotPolicies_List",
        "description": "List snapshot policy",
        "tags": [
          "Snapshot Policy"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of Snapshot Policies",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A list of snapshot policies",
                  "type": "array",
                  "items": {
                    "description": "Snapshot policy information",
                    "type": "object",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "etag": {
                        "readOnly": true,
                        "type": "string",
                        "description": "A unique read-only string that changes whenever the resource is updated."
                      },
                      "properties": {
                        "description": "Snapshot policy Properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "hourlySchedule": {
                            "title": "hourlySchedule",
                            "description": "Schedule for hourly snapshots",
                            "type": "object",
                            "properties": {
                              "snapshotsToKeep": {
                                "type": "integer",
                                "description": "Hourly snapshot count to keep",
                                "format": "int32"
                              },
                              "minute": {
                                "type": "integer",
                                "description": "Indicates which minute snapshot should be taken",
                                "example": 30,
                                "format": "int32"
                              },
                              "usedBytes": {
                                "type": "integer",
                                "description": "Resource size in bytes, current storage usage for the volume in bytes",
                                "format": "int64"
                              }
                            }
                          },
                          "dailySchedule": {
                            "title": "dailySchedule",
                            "description": "Schedule for daily snapshots",
                            "type": "object",
                            "properties": {
                              "snapshotsToKeep": {
                                "type": "integer",
                                "description": "Daily snapshot count to keep",
                                "format": "int32"
                              },
                              "hour": {
                                "type": "integer",
                                "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                                "example": 11,
                                "format": "int32"
                              },
                              "minute": {
                                "type": "integer",
                                "description": "Indicates which minute snapshot should be taken",
                                "example": 30,
                                "format": "int32"
                              },
                              "usedBytes": {
                                "type": "integer",
                                "description": "Resource size in bytes, current storage usage for the volume in bytes",
                                "format": "int64"
                              }
                            }
                          },
                          "weeklySchedule": {
                            "title": "weeklySchedule",
                            "description": "Schedule for weekly snapshots",
                            "type": "object",
                            "properties": {
                              "snapshotsToKeep": {
                                "type": "integer",
                                "description": "Weekly snapshot count to keep",
                                "format": "int32"
                              },
                              "day": {
                                "type": "string",
                                "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
                                "example": "Sunday,Monday"
                              },
                              "hour": {
                                "type": "integer",
                                "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                                "example": 11,
                                "format": "int32"
                              },
                              "minute": {
                                "type": "integer",
                                "description": "Indicates which minute snapshot should be taken",
                                "example": 30,
                                "format": "int32"
                              },
                              "usedBytes": {
                                "type": "integer",
                                "description": "Resource size in bytes, current storage usage for the volume in bytes",
                                "format": "int64"
                              }
                            }
                          },
                          "monthlySchedule": {
                            "title": "monthlySchedule",
                            "description": "Schedule for monthly snapshots",
                            "type": "object",
                            "properties": {
                              "snapshotsToKeep": {
                                "type": "integer",
                                "description": "Monthly snapshot count to keep",
                                "format": "int32"
                              },
                              "daysOfMonth": {
                                "type": "string",
                                "description": "Indicates which days of the month snapshot should be taken. A comma delimited string.",
                                "example": "1,11,21"
                              },
                              "hour": {
                                "type": "integer",
                                "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                                "example": 11,
                                "format": "int32"
                              },
                              "minute": {
                                "type": "integer",
                                "description": "Indicates which minute snapshot should be taken",
                                "example": 30,
                                "format": "int32"
                              },
                              "usedBytes": {
                                "type": "integer",
                                "description": "Resource size in bytes, current storage usage for the volume in bytes",
                                "format": "int64"
                              }
                            }
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "The property to decide policy is enabled or not"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Azure lifecycle management"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}": {
      "get": {
        "operationId": "SnapshotPolicies_Get",
        "description": "Get a snapshot Policy",
        "tags": [
          "Snapshot Policy"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "snapshotPolicyName",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot policy",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Snapshot policy information",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Snapshot policy Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "hourlySchedule": {
                      "title": "hourlySchedule",
                      "description": "Schedule for hourly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Hourly snapshot count to keep",
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "dailySchedule": {
                      "title": "dailySchedule",
                      "description": "Schedule for daily snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Daily snapshot count to keep",
                          "format": "int32"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "weeklySchedule": {
                      "title": "weeklySchedule",
                      "description": "Schedule for weekly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Weekly snapshot count to keep",
                          "format": "int32"
                        },
                        "day": {
                          "type": "string",
                          "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
                          "example": "Sunday,Monday"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "monthlySchedule": {
                      "title": "monthlySchedule",
                      "description": "Schedule for monthly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Monthly snapshot count to keep",
                          "format": "int32"
                        },
                        "daysOfMonth": {
                          "type": "string",
                          "description": "Indicates which days of the month snapshot should be taken. A comma delimited string.",
                          "example": "1,11,21"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "The property to decide policy is enabled or not"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "SnapshotPolicies_Create",
        "description": "Create a snapshot policy",
        "tags": [
          "Snapshot Policy"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "Snapshot policy object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Snapshot policy information",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Snapshot policy Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "hourlySchedule": {
                      "title": "hourlySchedule",
                      "description": "Schedule for hourly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Hourly snapshot count to keep",
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "dailySchedule": {
                      "title": "dailySchedule",
                      "description": "Schedule for daily snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Daily snapshot count to keep",
                          "format": "int32"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "weeklySchedule": {
                      "title": "weeklySchedule",
                      "description": "Schedule for weekly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Weekly snapshot count to keep",
                          "format": "int32"
                        },
                        "day": {
                          "type": "string",
                          "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
                          "example": "Sunday,Monday"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "monthlySchedule": {
                      "title": "monthlySchedule",
                      "description": "Schedule for monthly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Monthly snapshot count to keep",
                          "format": "int32"
                        },
                        "daysOfMonth": {
                          "type": "string",
                          "description": "Indicates which days of the month snapshot should be taken. A comma delimited string.",
                          "example": "1,11,21"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "The property to decide policy is enabled or not"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "snapshotPolicyName",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot policy",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - snapshot Policy updated",
            "schema": {
              "description": "Snapshot policy information",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Snapshot policy Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "hourlySchedule": {
                      "title": "hourlySchedule",
                      "description": "Schedule for hourly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Hourly snapshot count to keep",
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "dailySchedule": {
                      "title": "dailySchedule",
                      "description": "Schedule for daily snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Daily snapshot count to keep",
                          "format": "int32"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "weeklySchedule": {
                      "title": "weeklySchedule",
                      "description": "Schedule for weekly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Weekly snapshot count to keep",
                          "format": "int32"
                        },
                        "day": {
                          "type": "string",
                          "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
                          "example": "Sunday,Monday"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "monthlySchedule": {
                      "title": "monthlySchedule",
                      "description": "Schedule for monthly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Monthly snapshot count to keep",
                          "format": "int32"
                        },
                        "daysOfMonth": {
                          "type": "string",
                          "description": "Indicates which days of the month snapshot should be taken. A comma delimited string.",
                          "example": "1,11,21"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "The property to decide policy is enabled or not"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Snapshot Policy created",
            "schema": {
              "description": "Snapshot policy information",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Snapshot policy Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "hourlySchedule": {
                      "title": "hourlySchedule",
                      "description": "Schedule for hourly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Hourly snapshot count to keep",
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "dailySchedule": {
                      "title": "dailySchedule",
                      "description": "Schedule for daily snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Daily snapshot count to keep",
                          "format": "int32"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "weeklySchedule": {
                      "title": "weeklySchedule",
                      "description": "Schedule for weekly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Weekly snapshot count to keep",
                          "format": "int32"
                        },
                        "day": {
                          "type": "string",
                          "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
                          "example": "Sunday,Monday"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "monthlySchedule": {
                      "title": "monthlySchedule",
                      "description": "Schedule for monthly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Monthly snapshot count to keep",
                          "format": "int32"
                        },
                        "daysOfMonth": {
                          "type": "string",
                          "description": "Indicates which days of the month snapshot should be taken. A comma delimited string.",
                          "example": "1,11,21"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "The property to decide policy is enabled or not"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Snapshot Policy"
        ],
        "operationId": "SnapshotPolicies_Update",
        "description": "Patch a snapshot policy",
        "parameters": [
          {
            "name": "body",
            "description": "Snapshot policy object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Snapshot policy Details for create and update",
              "type": "object",
              "properties": {
                "location": {
                  "type": "string",
                  "description": "Resource location"
                },
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "tags": {
                  "description": "Resource tags",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Snapshot Policy properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "hourlySchedule": {
                      "title": "hourlySchedule",
                      "description": "Schedule for hourly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Hourly snapshot count to keep",
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "dailySchedule": {
                      "title": "dailySchedule",
                      "description": "Schedule for daily snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Daily snapshot count to keep",
                          "format": "int32"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "weeklySchedule": {
                      "title": "weeklySchedule",
                      "description": "Schedule for weekly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Weekly snapshot count to keep",
                          "format": "int32"
                        },
                        "day": {
                          "type": "string",
                          "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
                          "example": "Sunday,Monday"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "monthlySchedule": {
                      "title": "monthlySchedule",
                      "description": "Schedule for monthly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Monthly snapshot count to keep",
                          "format": "int32"
                        },
                        "daysOfMonth": {
                          "type": "string",
                          "description": "Indicates which days of the month snapshot should be taken. A comma delimited string.",
                          "example": "1,11,21"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "The property to decide policy is enabled or not"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "snapshotPolicyName",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot policy",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Snapshot policy information",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Snapshot policy Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "hourlySchedule": {
                      "title": "hourlySchedule",
                      "description": "Schedule for hourly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Hourly snapshot count to keep",
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "dailySchedule": {
                      "title": "dailySchedule",
                      "description": "Schedule for daily snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Daily snapshot count to keep",
                          "format": "int32"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "weeklySchedule": {
                      "title": "weeklySchedule",
                      "description": "Schedule for weekly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Weekly snapshot count to keep",
                          "format": "int32"
                        },
                        "day": {
                          "type": "string",
                          "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
                          "example": "Sunday,Monday"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "monthlySchedule": {
                      "title": "monthlySchedule",
                      "description": "Schedule for monthly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Monthly snapshot count to keep",
                          "format": "int32"
                        },
                        "daysOfMonth": {
                          "type": "string",
                          "description": "Indicates which days of the month snapshot should be taken. A comma delimited string.",
                          "example": "1,11,21"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "The property to decide policy is enabled or not"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously",
            "schema": {
              "description": "Snapshot policy information",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Snapshot policy Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "hourlySchedule": {
                      "title": "hourlySchedule",
                      "description": "Schedule for hourly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Hourly snapshot count to keep",
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "dailySchedule": {
                      "title": "dailySchedule",
                      "description": "Schedule for daily snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Daily snapshot count to keep",
                          "format": "int32"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "weeklySchedule": {
                      "title": "weeklySchedule",
                      "description": "Schedule for weekly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Weekly snapshot count to keep",
                          "format": "int32"
                        },
                        "day": {
                          "type": "string",
                          "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
                          "example": "Sunday,Monday"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "monthlySchedule": {
                      "title": "monthlySchedule",
                      "description": "Schedule for monthly snapshots",
                      "type": "object",
                      "properties": {
                        "snapshotsToKeep": {
                          "type": "integer",
                          "description": "Monthly snapshot count to keep",
                          "format": "int32"
                        },
                        "daysOfMonth": {
                          "type": "string",
                          "description": "Indicates which days of the month snapshot should be taken. A comma delimited string.",
                          "example": "1,11,21"
                        },
                        "hour": {
                          "type": "integer",
                          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                          "example": 11,
                          "format": "int32"
                        },
                        "minute": {
                          "type": "integer",
                          "description": "Indicates which minute snapshot should be taken",
                          "example": 30,
                          "format": "int32"
                        },
                        "usedBytes": {
                          "type": "integer",
                          "description": "Resource size in bytes, current storage usage for the volume in bytes",
                          "format": "int64"
                        }
                      }
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "The property to decide policy is enabled or not"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "SnapshotPolicies_Delete",
        "description": "Delete snapshot policy",
        "tags": [
          "Snapshot Policy"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "snapshotPolicyName",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot policy",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/snapshotPolicies/{snapshotPolicyName}/volumes": {
      "get": {
        "tags": [
          "Snapshot Policy List Volumes"
        ],
        "summary": "Get volumes for snapshot policy",
        "description": "Get volumes associated with snapshot policy",
        "operationId": "SnapshotPolicies_ListVolumes",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "snapshotPolicyName",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot policy",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Volumes associated with snapshot policy",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of volumes",
                  "type": "array",
                  "items": {
                    "description": "Volume resource",
                    "type": "object",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "etag": {
                        "readOnly": true,
                        "type": "string",
                        "description": "A unique read-only string that changes whenever the resource is updated."
                      },
                      "zones": {
                        "type": "array",
                        "description": "Availability Zone",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "items": {
                          "type": "string",
                          "maxLength": 255,
                          "minLength": 1,
                          "example": "1"
                        }
                      },
                      "properties": {
                        "description": "Volume properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "required": [
                          "creationToken",
                          "usageThreshold",
                          "subnetId"
                        ],
                        "properties": {
                          "fileSystemId": {
                            "title": "FileSystem ID",
                            "type": "string",
                            "readOnly": true,
                            "description": "Unique FileSystem Identifier.",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                          },
                          "creationToken": {
                            "title": "Creation Token or File Path",
                            "type": "string",
                            "description": "A unique file path for the volume. Used when creating mount targets",
                            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                            "minLength": 1,
                            "maxLength": 80,
                            "example": "some-amazing-filepath",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "serviceLevel": {
                            "title": "serviceLevel",
                            "type": "string",
                            "description": "The service level of the file system",
                            "enum": [
                              "Standard",
                              "Premium",
                              "Ultra",
                              "StandardZRS",
                              "Flexible"
                            ],
                            "default": "Premium",
                            "x-ms-enum": {
                              "name": "ServiceLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Standard",
                                  "description": "Standard service level"
                                },
                                {
                                  "value": "Premium",
                                  "description": "Premium service level"
                                },
                                {
                                  "value": "Ultra",
                                  "description": "Ultra service level"
                                },
                                {
                                  "value": "StandardZRS",
                                  "description": "Zone redundant storage service level. This will be deprecated soon."
                                },
                                {
                                  "value": "Flexible",
                                  "description": "Flexible service level"
                                }
                              ]
                            }
                          },
                          "usageThreshold": {
                            "title": "usageThreshold",
                            "type": "integer",
                            "format": "int64",
                            "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                            "minimum": 53687091200,
                            "maximum": 2638827906662400,
                            "default": 107374182400,
                            "example": 107374182400
                          },
                          "exportPolicy": {
                            "title": "exportPolicy",
                            "description": "Set of export policy rules",
                            "properties": {
                              "rules": {
                                "title": "Export policy rule",
                                "description": "Export policy rule",
                                "type": "array",
                                "items": {
                                  "description": "Volume Export Policy Rule",
                                  "type": "object",
                                  "properties": {
                                    "ruleIndex": {
                                      "type": "integer",
                                      "description": "Order index",
                                      "format": "int32"
                                    },
                                    "unixReadOnly": {
                                      "type": "boolean",
                                      "description": "Read only access"
                                    },
                                    "unixReadWrite": {
                                      "type": "boolean",
                                      "description": "Read and write access"
                                    },
                                    "kerberos5ReadOnly": {
                                      "type": "boolean",
                                      "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                                      "example": false,
                                      "default": false
                                    },
                                    "kerberos5ReadWrite": {
                                      "type": "boolean",
                                      "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                                      "example": false,
                                      "default": false
                                    },
                                    "kerberos5iReadOnly": {
                                      "type": "boolean",
                                      "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                                      "example": false,
                                      "default": false
                                    },
                                    "kerberos5iReadWrite": {
                                      "type": "boolean",
                                      "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                                      "example": false,
                                      "default": false
                                    },
                                    "kerberos5pReadOnly": {
                                      "type": "boolean",
                                      "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                                      "example": false,
                                      "default": false
                                    },
                                    "kerberos5pReadWrite": {
                                      "type": "boolean",
                                      "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                                      "example": false,
                                      "default": false
                                    },
                                    "cifs": {
                                      "type": "boolean",
                                      "description": "Allows CIFS protocol"
                                    },
                                    "nfsv3": {
                                      "type": "boolean",
                                      "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                                    },
                                    "nfsv41": {
                                      "type": "boolean",
                                      "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                                    },
                                    "allowedClients": {
                                      "type": "string",
                                      "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                                    },
                                    "hasRootAccess": {
                                      "type": "boolean",
                                      "description": "Has root access to volume",
                                      "example": true,
                                      "default": true
                                    },
                                    "chownMode": {
                                      "type": "string",
                                      "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                                      "default": "Restricted",
                                      "enum": [
                                        "Restricted",
                                        "Unrestricted"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ChownMode",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "ruleIndex"
                                ]
                              }
                            }
                          },
                          "protocolTypes": {
                            "title": "protocolTypes",
                            "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "NFSv4.1"
                            ]
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Azure lifecycle management"
                          },
                          "snapshotId": {
                            "title": "Snapshot ID",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                                }
                              ]
                            },
                            "x-nullable": true,
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "Resource identifier used to identify the Snapshot.",
                            "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                          },
                          "deleteBaseSnapshot": {
                            "type": "boolean",
                            "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                          },
                          "backupId": {
                            "title": "Backup ID",
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                                }
                              ]
                            },
                            "x-nullable": true,
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "description": "Resource identifier used to identify the Backup.",
                            "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                          },
                          "baremetalTenantId": {
                            "title": "Baremetal Tenant ID",
                            "type": "string",
                            "readOnly": true,
                            "description": "Unique Baremetal Tenant Identifier.",
                            "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                          },
                          "subnetId": {
                            "type": "string",
                            "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                          },
                          "networkFeatures": {
                            "title": "Network features",
                            "description": "Network features available to the volume, or current state of update.",
                            "type": "string",
                            "enum": [
                              "Basic",
                              "Standard",
                              "Basic_Standard",
                              "Standard_Basic"
                            ],
                            "x-ms-enum": {
                              "name": "NetworkFeatures",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Basic",
                                  "description": "Basic network features."
                                },
                                {
                                  "value": "Standard",
                                  "description": "Standard network features."
                                },
                                {
                                  "value": "Basic_Standard",
                                  "description": "Updating from Basic to Standard network features."
                                },
                                {
                                  "value": "Standard_Basic",
                                  "description": "Updating from Standard to Basic network features."
                                }
                              ]
                            },
                            "example": "Standard",
                            "default": "Basic",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "effectiveNetworkFeatures": {
                            "title": "Network features",
                            "description": "Network features available to the volume, or current state of update.",
                            "type": "string",
                            "enum": [
                              "Basic",
                              "Standard",
                              "Basic_Standard",
                              "Standard_Basic"
                            ],
                            "x-ms-enum": {
                              "name": "NetworkFeatures",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Basic",
                                  "description": "Basic network features."
                                },
                                {
                                  "value": "Standard",
                                  "description": "Standard network features."
                                },
                                {
                                  "value": "Basic_Standard",
                                  "description": "Updating from Basic to Standard network features."
                                },
                                {
                                  "value": "Standard_Basic",
                                  "description": "Updating from Standard to Basic network features."
                                }
                              ]
                            },
                            "example": "Standard",
                            "default": "Basic",
                            "readOnly": true
                          },
                          "networkSiblingSetId": {
                            "title": "Network Sibling Set ID",
                            "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                            "type": "string",
                            "readOnly": true,
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "storageToNetworkProximity": {
                            "title": "Storage to Network Proximity",
                            "description": "Provides storage to network proximity information for the volume.",
                            "type": "string",
                            "enum": [
                              "Default",
                              "T1",
                              "T2",
                              "AcrossT2"
                            ],
                            "readOnly": true,
                            "x-ms-enum": {
                              "name": "VolumeStorageToNetworkProximity",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Default",
                                  "description": "Basic storage to network connectivity."
                                },
                                {
                                  "value": "T1",
                                  "description": "Standard T1 storage to network connectivity."
                                },
                                {
                                  "value": "T2",
                                  "description": "Standard T2 storage to network connectivity."
                                },
                                {
                                  "value": "AcrossT2",
                                  "description": "Standard AcrossT2 storage to network connectivity."
                                }
                              ]
                            },
                            "example": "T1"
                          },
                          "mountTargets": {
                            "title": "mountTargets",
                            "type": "array",
                            "readOnly": true,
                            "description": "List of mount targets",
                            "items": {
                              "description": "Mount target properties",
                              "type": "object",
                              "required": [
                                "fileSystemId"
                              ],
                              "properties": {
                                "mountTargetId": {
                                  "title": "mountTargetId",
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "UUID v4 used to identify the MountTarget",
                                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                  "maxLength": 36,
                                  "minLength": 36,
                                  "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                                },
                                "fileSystemId": {
                                  "title": "fileSystemId",
                                  "type": "string",
                                  "description": "UUID v4 used to identify the MountTarget",
                                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                  "maxLength": 36,
                                  "minLength": 36,
                                  "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                                },
                                "ipAddress": {
                                  "title": "ipAddress",
                                  "description": "The mount target's IPv4 address",
                                  "type": "string",
                                  "readOnly": true,
                                  "example": "1.2.3.4"
                                },
                                "smbServerFqdn": {
                                  "title": "smbServerFQDN",
                                  "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                                  "type": "string",
                                  "example": "fullyqualified.domainname.com"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "fileSystemId"
                            ]
                          },
                          "volumeType": {
                            "type": "string",
                            "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                            "example": "DataProtection",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "dataProtection": {
                            "title": "DataProtection",
                            "description": "DataProtection type volumes include an object containing details of the replication",
                            "properties": {
                              "backup": {
                                "title": "Backup",
                                "description": "Backup Properties",
                                "type": "object",
                                "properties": {
                                  "backupPolicyId": {
                                    "type": "string",
                                    "format": "arm-id",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                        }
                                      ]
                                    },
                                    "description": "Backup Policy Resource ID"
                                  },
                                  "policyEnforced": {
                                    "type": "boolean",
                                    "description": "Policy Enforced"
                                  },
                                  "backupVaultId": {
                                    "type": "string",
                                    "format": "arm-id",
                                    "x-ms-arm-id-details": {
                                      "allowedResources": [
                                        {
                                          "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                        }
                                      ]
                                    },
                                    "description": "Backup Vault Resource ID"
                                  }
                                }
                              },
                              "replication": {
                                "title": "Replication",
                                "description": "Replication properties",
                                "type": "object",
                                "properties": {
                                  "replicationId": {
                                    "type": "string",
                                    "description": "Id",
                                    "readOnly": true
                                  },
                                  "endpointType": {
                                    "type": "string",
                                    "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                                    "enum": [
                                      "src",
                                      "dst"
                                    ],
                                    "x-ms-enum": {
                                      "name": "EndpointType",
                                      "modelAsString": true
                                    },
                                    "readOnly": true
                                  },
                                  "replicationSchedule": {
                                    "type": "string",
                                    "description": "Schedule",
                                    "enum": [
                                      "_10minutely",
                                      "hourly",
                                      "daily"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ReplicationSchedule",
                                      "modelAsString": true
                                    }
                                  },
                                  "remoteVolumeResourceId": {
                                    "type": "string",
                                    "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                                  },
                                  "remotePath": {
                                    "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                                    "type": "object",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "required": [
                                      "externalHostName",
                                      "serverName",
                                      "volumeName"
                                    ],
                                    "properties": {
                                      "externalHostName": {
                                        "type": "string",
                                        "description": "The Path to a ONTAP Host"
                                      },
                                      "serverName": {
                                        "type": "string",
                                        "description": "The name of a server on the ONTAP Host"
                                      },
                                      "volumeName": {
                                        "type": "string",
                                        "description": "The name of a volume on the server"
                                      }
                                    }
                                  },
                                  "remoteVolumeRegion": {
                                    "type": "string",
                                    "description": "The remote region for the other end of the Volume Replication."
                                  },
                                  "destinationReplications": {
                                    "description": "A list of destination replications",
                                    "type": "array",
                                    "readOnly": true,
                                    "items": {
                                      "description": "Destination replication properties",
                                      "type": "object",
                                      "properties": {
                                        "resourceId": {
                                          "type": "string",
                                          "format": "arm-id",
                                          "x-ms-arm-id-details": {
                                            "allowedResources": [
                                              {
                                                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                              }
                                            ]
                                          },
                                          "description": "The resource ID of the remote volume"
                                        },
                                        "replicationType": {
                                          "type": "string",
                                          "description": "Indicates whether the replication is cross zone or cross region.",
                                          "enum": [
                                            "CrossRegionReplication",
                                            "CrossZoneReplication"
                                          ],
                                          "x-ms-enum": {
                                            "name": "ReplicationType",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "value": "CrossRegionReplication",
                                                "description": "Cross region replication"
                                              },
                                              {
                                                "value": "CrossZoneReplication",
                                                "description": "Cross zone replication"
                                              }
                                            ]
                                          }
                                        },
                                        "region": {
                                          "type": "string",
                                          "description": "The remote region for the destination volume."
                                        },
                                        "zone": {
                                          "type": "string",
                                          "description": "The remote zone for the destination volume."
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "resourceId"
                                    ]
                                  }
                                }
                              },
                              "snapshot": {
                                "title": "Snapshot",
                                "description": "Snapshot properties.",
                                "type": "object",
                                "properties": {
                                  "snapshotPolicyId": {
                                    "type": "string",
                                    "description": "Snapshot Policy ResourceId"
                                  }
                                }
                              },
                              "volumeRelocation": {
                                "title": "VolumeRelocation",
                                "description": "VolumeRelocation properties",
                                "type": "object",
                                "properties": {
                                  "relocationRequested": {
                                    "type": "boolean",
                                    "description": "Has relocation been requested for this volume"
                                  },
                                  "readyToBeFinalized": {
                                    "type": "boolean",
                                    "readOnly": true,
                                    "description": "Has relocation finished and is ready to be cleaned up"
                                  }
                                }
                              }
                            }
                          },
                          "acceptGrowCapacityPoolForShortTermCloneSplit": {
                            "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                            "type": "string",
                            "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "enum": [
                              "Accepted",
                              "Declined"
                            ],
                            "x-ms-enum": {
                              "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Accepted",
                                  "description": "Auto grow capacity pool for short term clone split is accepted."
                                },
                                {
                                  "value": "Declined",
                                  "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                                }
                              ]
                            },
                            "example": "Accepted"
                          },
                          "isRestoring": {
                            "type": "boolean",
                            "description": "Restoring",
                            "readOnly": true
                          },
                          "snapshotDirectoryVisible": {
                            "type": "boolean",
                            "default": true,
                            "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                          },
                          "kerberosEnabled": {
                            "type": "boolean",
                            "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "example": false,
                            "default": false
                          },
                          "securityStyle": {
                            "type": "string",
                            "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                            "default": "unix",
                            "enum": [
                              "ntfs",
                              "unix"
                            ],
                            "x-ms-enum": {
                              "name": "SecurityStyle",
                              "modelAsString": true
                            },
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "smbEncryption": {
                            "type": "boolean",
                            "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                            "example": false,
                            "default": false
                          },
                          "smbAccessBasedEnumeration": {
                            "title": "smbAccessBasedEnumeration",
                            "type": "string",
                            "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                            "enum": [
                              "Disabled",
                              "Enabled"
                            ],
                            "x-ms-enum": {
                              "name": "smbAccessBasedEnumeration",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Disabled",
                                  "description": "smbAccessBasedEnumeration share setting is disabled"
                                },
                                {
                                  "value": "Enabled",
                                  "description": "smbAccessBasedEnumeration share setting is enabled"
                                }
                              ]
                            },
                            "x-nullable": true,
                            "example": "Enabled"
                          },
                          "smbNonBrowsable": {
                            "title": "smbNonBrowsable",
                            "type": "string",
                            "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                            "enum": [
                              "Disabled",
                              "Enabled"
                            ],
                            "x-ms-enum": {
                              "name": "smbNonBrowsable",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Disabled",
                                  "description": "smbNonBrowsable share setting is disabled"
                                },
                                {
                                  "value": "Enabled",
                                  "description": "smbNonBrowsable share setting is enabled"
                                }
                              ]
                            },
                            "example": "Enabled"
                          },
                          "smbContinuouslyAvailable": {
                            "type": "boolean",
                            "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                            "example": false,
                            "default": false
                          },
                          "throughputMibps": {
                            "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                            "type": "number",
                            "x-nullable": true,
                            "example": 128.223
                          },
                          "actualThroughputMibps": {
                            "type": "number",
                            "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                            "example": 164.221,
                            "readOnly": true
                          },
                          "encryptionKeySource": {
                            "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                            "type": "string",
                            "enum": [
                              "Microsoft.NetApp",
                              "Microsoft.KeyVault"
                            ],
                            "x-ms-enum": {
                              "name": "EncryptionKeySource",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Microsoft.NetApp",
                                  "description": "Microsoft-managed key encryption"
                                },
                                {
                                  "value": "Microsoft.KeyVault",
                                  "description": "Customer-managed key encryption"
                                }
                              ]
                            },
                            "default": "Microsoft.NetApp"
                          },
                          "keyVaultPrivateEndpointResourceId": {
                            "type": "string",
                            "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                          },
                          "ldapEnabled": {
                            "type": "boolean",
                            "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                            "example": false,
                            "default": false,
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "coolAccess": {
                            "type": "boolean",
                            "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                            "example": false,
                            "default": false
                          },
                          "coolnessPeriod": {
                            "type": "integer",
                            "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                            "example": 7,
                            "minimum": 2,
                            "maximum": 183,
                            "format": "int32"
                          },
                          "coolAccessRetrievalPolicy": {
                            "type": "string",
                            "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                            "enum": [
                              "Default",
                              "OnRead",
                              "Never"
                            ],
                            "x-ms-enum": {
                              "name": "coolAccessRetrievalPolicy",
                              "modelAsString": true
                            }
                          },
                          "coolAccessTieringPolicy": {
                            "type": "string",
                            "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                            "enum": [
                              "Auto",
                              "SnapshotOnly"
                            ],
                            "x-ms-enum": {
                              "name": "coolAccessTieringPolicy",
                              "modelAsString": true
                            }
                          },
                          "unixPermissions": {
                            "type": "string",
                            "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                            "minLength": 4,
                            "maxLength": 4,
                            "x-nullable": true,
                            "example": "0770"
                          },
                          "cloneProgress": {
                            "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                            "type": "integer",
                            "format": "int32",
                            "example": 10,
                            "x-nullable": true,
                            "readOnly": true
                          },
                          "fileAccessLogs": {
                            "type": "string",
                            "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                            "readOnly": true,
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "fileAccessLogs",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "fileAccessLogs are enabled"
                                },
                                {
                                  "value": "Disabled",
                                  "description": "fileAccessLogs are not enabled"
                                }
                              ]
                            },
                            "example": "Disabled",
                            "default": "Disabled"
                          },
                          "avsDataStore": {
                            "title": "avsDataStore",
                            "type": "string",
                            "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "avsDataStore",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "avsDataStore is enabled"
                                },
                                {
                                  "value": "Disabled",
                                  "description": "avsDataStore is disabled"
                                }
                              ]
                            },
                            "example": "Enabled",
                            "default": "Disabled",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "dataStoreResourceId": {
                            "title": "dataStoreResourceId",
                            "description": "Data store resource unique identifier",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "isDefaultQuotaEnabled": {
                            "type": "boolean",
                            "description": "Specifies if default quota is enabled for the volume.",
                            "example": false,
                            "default": false
                          },
                          "defaultUserQuotaInKiBs": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                            "example": 4,
                            "default": 0
                          },
                          "defaultGroupQuotaInKiBs": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                            "example": 4,
                            "default": 0
                          },
                          "maximumNumberOfFiles": {
                            "type": "integer",
                            "format": "int64",
                            "readOnly": true,
                            "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                            "example": 100000000
                          },
                          "volumeGroupName": {
                            "type": "string",
                            "description": "Volume Group Name",
                            "readOnly": true
                          },
                          "capacityPoolResourceId": {
                            "type": "string",
                            "description": "Pool Resource Id used in case of creating a volume through volume group"
                          },
                          "proximityPlacementGroup": {
                            "type": "string",
                            "description": "Proximity placement group associated with the volume",
                            "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                          },
                          "t2Network": {
                            "type": "string",
                            "description": "T2 network information",
                            "example": "Test-T2-Alias",
                            "readOnly": true
                          },
                          "volumeSpecName": {
                            "type": "string",
                            "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                            "example": "Data"
                          },
                          "encrypted": {
                            "type": "boolean",
                            "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                            "readOnly": true
                          },
                          "placementRules": {
                            "title": "Volume placement rules",
                            "description": "Application specific placement rules for the particular volume",
                            "type": "array",
                            "items": {
                              "description": "Application specific parameters for the placement of volumes in the volume group",
                              "type": "object",
                              "required": [
                                "key",
                                "value"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                                  "example": "key1"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                                  "example": "value1"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "key"
                            ]
                          },
                          "enableSubvolumes": {
                            "type": "string",
                            "description": "Flag indicating whether subvolume operations are enabled on the volume",
                            "example": "Enabled",
                            "default": "Disabled",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "enableSubvolumes",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "subvolumes are enabled"
                                },
                                {
                                  "value": "Disabled",
                                  "description": "subvolumes are not enabled"
                                }
                              ]
                            }
                          },
                          "provisionedAvailabilityZone": {
                            "title": "Provisioned Availability Zone",
                            "type": "string",
                            "readOnly": true,
                            "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                            "example": "2",
                            "x-nullable": true
                          },
                          "isLargeVolume": {
                            "title": "Is Large Volume",
                            "type": "boolean",
                            "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                            "example": false,
                            "default": false,
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "originatingResourceId": {
                            "title": "Originating Resource Id",
                            "type": "string",
                            "description": "Id of the snapshot or backup that the volume is restored from.",
                            "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "inheritedSizeInBytes": {
                            "title": "inheritedSizeInBytes",
                            "type": "integer",
                            "format": "int64",
                            "description": "Space shared by short term clone volume with parent volume in bytes.",
                            "readOnly": true,
                            "x-nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies": {
      "get": {
        "tags": [
          "Backup Policy"
        ],
        "summary": "List backup policies",
        "description": "List backup policies for Netapp Account",
        "operationId": "BackupPolicies_List",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of Backup Policies",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A list of backup policies",
                  "type": "array",
                  "items": {
                    "description": "Backup policy information",
                    "type": "object",
                    "required": [
                      "location",
                      "properties"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "etag": {
                        "readOnly": true,
                        "type": "string",
                        "description": "A unique read-only string that changes whenever the resource is updated."
                      },
                      "properties": {
                        "description": "Backup policy Properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "backupPolicyId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Backup Policy GUID ID"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Azure lifecycle management"
                          },
                          "dailyBackupsToKeep": {
                            "type": "integer",
                            "description": "Daily backups count to keep",
                            "format": "int32"
                          },
                          "weeklyBackupsToKeep": {
                            "type": "integer",
                            "description": "Weekly backups count to keep",
                            "format": "int32"
                          },
                          "monthlyBackupsToKeep": {
                            "type": "integer",
                            "description": "Monthly backups count to keep",
                            "format": "int32"
                          },
                          "volumesAssigned": {
                            "type": "integer",
                            "readOnly": true,
                            "description": "Volumes using current backup policy",
                            "format": "int32"
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "The property to decide policy is enabled or not"
                          },
                          "volumeBackups": {
                            "description": "A list of volumes assigned to this policy",
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Volume details using the backup policy",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "volumeName": {
                                  "type": "string",
                                  "description": "Volume name"
                                },
                                "volumeResourceId": {
                                  "type": "string",
                                  "description": "ResourceId used to identify the Volume",
                                  "format": "arm-id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                      }
                                    ]
                                  }
                                },
                                "backupsCount": {
                                  "type": "integer",
                                  "description": "Total count of backups for volume",
                                  "format": "int32"
                                },
                                "policyEnabled": {
                                  "type": "boolean",
                                  "description": "Policy enabled"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "volumeName"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupPolicies/{backupPolicyName}": {
      "get": {
        "tags": [
          "Backup Policy"
        ],
        "summary": "Get a backup Policy",
        "description": "Get a particular backup Policy",
        "operationId": "BackupPolicies_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Backup policy Name which uniquely identify backup policy.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Backup policy information",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Backup policy Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "backupPolicyId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Backup Policy GUID ID"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "dailyBackupsToKeep": {
                      "type": "integer",
                      "description": "Daily backups count to keep",
                      "format": "int32"
                    },
                    "weeklyBackupsToKeep": {
                      "type": "integer",
                      "description": "Weekly backups count to keep",
                      "format": "int32"
                    },
                    "monthlyBackupsToKeep": {
                      "type": "integer",
                      "description": "Monthly backups count to keep",
                      "format": "int32"
                    },
                    "volumesAssigned": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "Volumes using current backup policy",
                      "format": "int32"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "The property to decide policy is enabled or not"
                    },
                    "volumeBackups": {
                      "description": "A list of volumes assigned to this policy",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Volume details using the backup policy",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "volumeName": {
                            "type": "string",
                            "description": "Volume name"
                          },
                          "volumeResourceId": {
                            "type": "string",
                            "description": "ResourceId used to identify the Volume",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                }
                              ]
                            }
                          },
                          "backupsCount": {
                            "type": "integer",
                            "description": "Total count of backups for volume",
                            "format": "int32"
                          },
                          "policyEnabled": {
                            "type": "boolean",
                            "description": "Policy enabled"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "volumeName"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Backup Policy"
        ],
        "summary": "Create a backup policy",
        "description": "Create a backup policy for Netapp Account",
        "operationId": "BackupPolicies_Create",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Backup policy Name which uniquely identify backup policy.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "Backup policy object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Backup policy information",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Backup policy Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "backupPolicyId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Backup Policy GUID ID"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "dailyBackupsToKeep": {
                      "type": "integer",
                      "description": "Daily backups count to keep",
                      "format": "int32"
                    },
                    "weeklyBackupsToKeep": {
                      "type": "integer",
                      "description": "Weekly backups count to keep",
                      "format": "int32"
                    },
                    "monthlyBackupsToKeep": {
                      "type": "integer",
                      "description": "Monthly backups count to keep",
                      "format": "int32"
                    },
                    "volumesAssigned": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "Volumes using current backup policy",
                      "format": "int32"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "The property to decide policy is enabled or not"
                    },
                    "volumeBackups": {
                      "description": "A list of volumes assigned to this policy",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Volume details using the backup policy",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "volumeName": {
                            "type": "string",
                            "description": "Volume name"
                          },
                          "volumeResourceId": {
                            "type": "string",
                            "description": "ResourceId used to identify the Volume",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                }
                              ]
                            }
                          },
                          "backupsCount": {
                            "type": "integer",
                            "description": "Total count of backups for volume",
                            "format": "int32"
                          },
                          "policyEnabled": {
                            "type": "boolean",
                            "description": "Policy enabled"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "volumeName"
                      ]
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Backup Policy created",
            "schema": {
              "description": "Backup policy information",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Backup policy Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "backupPolicyId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Backup Policy GUID ID"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "dailyBackupsToKeep": {
                      "type": "integer",
                      "description": "Daily backups count to keep",
                      "format": "int32"
                    },
                    "weeklyBackupsToKeep": {
                      "type": "integer",
                      "description": "Weekly backups count to keep",
                      "format": "int32"
                    },
                    "monthlyBackupsToKeep": {
                      "type": "integer",
                      "description": "Monthly backups count to keep",
                      "format": "int32"
                    },
                    "volumesAssigned": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "Volumes using current backup policy",
                      "format": "int32"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "The property to decide policy is enabled or not"
                    },
                    "volumeBackups": {
                      "description": "A list of volumes assigned to this policy",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Volume details using the backup policy",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "volumeName": {
                            "type": "string",
                            "description": "Volume name"
                          },
                          "volumeResourceId": {
                            "type": "string",
                            "description": "ResourceId used to identify the Volume",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                }
                              ]
                            }
                          },
                          "backupsCount": {
                            "type": "integer",
                            "description": "Total count of backups for volume",
                            "format": "int32"
                          },
                          "policyEnabled": {
                            "type": "boolean",
                            "description": "Policy enabled"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "volumeName"
                      ]
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Backup created",
            "schema": {
              "description": "Backup policy information",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Backup policy Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "backupPolicyId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Backup Policy GUID ID"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "dailyBackupsToKeep": {
                      "type": "integer",
                      "description": "Daily backups count to keep",
                      "format": "int32"
                    },
                    "weeklyBackupsToKeep": {
                      "type": "integer",
                      "description": "Weekly backups count to keep",
                      "format": "int32"
                    },
                    "monthlyBackupsToKeep": {
                      "type": "integer",
                      "description": "Monthly backups count to keep",
                      "format": "int32"
                    },
                    "volumesAssigned": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "Volumes using current backup policy",
                      "format": "int32"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "The property to decide policy is enabled or not"
                    },
                    "volumeBackups": {
                      "description": "A list of volumes assigned to this policy",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Volume details using the backup policy",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "volumeName": {
                            "type": "string",
                            "description": "Volume name"
                          },
                          "volumeResourceId": {
                            "type": "string",
                            "description": "ResourceId used to identify the Volume",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                }
                              ]
                            }
                          },
                          "backupsCount": {
                            "type": "integer",
                            "description": "Total count of backups for volume",
                            "format": "int32"
                          },
                          "policyEnabled": {
                            "type": "boolean",
                            "description": "Policy enabled"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "volumeName"
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted -- Create request accepted; operation will complete asynchronously"
          }
        }
      },
      "patch": {
        "tags": [
          "Backup Policy"
        ],
        "summary": "Patch a backup policy",
        "description": "Patch a backup policy for Netapp Account",
        "operationId": "BackupPolicies_Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Backup policy Name which uniquely identify backup policy.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "Backup policy object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Backup policy Details for create and update",
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "tags": {
                  "description": "Resource tags",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Backup policy Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "backupPolicyId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Backup Policy GUID ID"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "dailyBackupsToKeep": {
                      "type": "integer",
                      "description": "Daily backups count to keep",
                      "format": "int32"
                    },
                    "weeklyBackupsToKeep": {
                      "type": "integer",
                      "description": "Weekly backups count to keep",
                      "format": "int32"
                    },
                    "monthlyBackupsToKeep": {
                      "type": "integer",
                      "description": "Monthly backups count to keep",
                      "format": "int32"
                    },
                    "volumesAssigned": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "Volumes using current backup policy",
                      "format": "int32"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "The property to decide policy is enabled or not"
                    },
                    "volumeBackups": {
                      "description": "A list of volumes assigned to this policy",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Volume details using the backup policy",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "volumeName": {
                            "type": "string",
                            "description": "Volume name"
                          },
                          "volumeResourceId": {
                            "type": "string",
                            "description": "ResourceId used to identify the Volume",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                }
                              ]
                            }
                          },
                          "backupsCount": {
                            "type": "integer",
                            "description": "Total count of backups for volume",
                            "format": "int32"
                          },
                          "policyEnabled": {
                            "type": "boolean",
                            "description": "Policy enabled"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "volumeName"
                      ]
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Backup policy information",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Backup policy Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "backupPolicyId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Backup Policy GUID ID"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "dailyBackupsToKeep": {
                      "type": "integer",
                      "description": "Daily backups count to keep",
                      "format": "int32"
                    },
                    "weeklyBackupsToKeep": {
                      "type": "integer",
                      "description": "Weekly backups count to keep",
                      "format": "int32"
                    },
                    "monthlyBackupsToKeep": {
                      "type": "integer",
                      "description": "Monthly backups count to keep",
                      "format": "int32"
                    },
                    "volumesAssigned": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "Volumes using current backup policy",
                      "format": "int32"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "The property to decide policy is enabled or not"
                    },
                    "volumeBackups": {
                      "description": "A list of volumes assigned to this policy",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Volume details using the backup policy",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "volumeName": {
                            "type": "string",
                            "description": "Volume name"
                          },
                          "volumeResourceId": {
                            "type": "string",
                            "description": "ResourceId used to identify the Volume",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                }
                              ]
                            }
                          },
                          "backupsCount": {
                            "type": "integer",
                            "description": "Total count of backups for volume",
                            "format": "int32"
                          },
                          "policyEnabled": {
                            "type": "boolean",
                            "description": "Policy enabled"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "volumeName"
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously",
            "schema": {
              "description": "Backup policy information",
              "type": "object",
              "required": [
                "location",
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "etag": {
                  "readOnly": true,
                  "type": "string",
                  "description": "A unique read-only string that changes whenever the resource is updated."
                },
                "properties": {
                  "description": "Backup policy Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "backupPolicyId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Backup Policy GUID ID"
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "dailyBackupsToKeep": {
                      "type": "integer",
                      "description": "Daily backups count to keep",
                      "format": "int32"
                    },
                    "weeklyBackupsToKeep": {
                      "type": "integer",
                      "description": "Weekly backups count to keep",
                      "format": "int32"
                    },
                    "monthlyBackupsToKeep": {
                      "type": "integer",
                      "description": "Monthly backups count to keep",
                      "format": "int32"
                    },
                    "volumesAssigned": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "Volumes using current backup policy",
                      "format": "int32"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "The property to decide policy is enabled or not"
                    },
                    "volumeBackups": {
                      "description": "A list of volumes assigned to this policy",
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Volume details using the backup policy",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "volumeName": {
                            "type": "string",
                            "description": "Volume name"
                          },
                          "volumeResourceId": {
                            "type": "string",
                            "description": "ResourceId used to identify the Volume",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                }
                              ]
                            }
                          },
                          "backupsCount": {
                            "type": "integer",
                            "description": "Total count of backups for volume",
                            "format": "int32"
                          },
                          "policyEnabled": {
                            "type": "boolean",
                            "description": "Policy enabled"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "volumeName"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Backup Policy"
        ],
        "summary": "Delete a backup policy",
        "description": "Delete backup policy",
        "operationId": "BackupPolicies_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupPolicyName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Backup policy Name which uniquely identify backup policy.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/volumeQuotaRules": {
      "get": {
        "tags": [
          "VolumeQuotaRules"
        ],
        "operationId": "VolumeQuotaRules_ListByVolume",
        "summary": "Get all quota rules for a volume",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "description": "List all quota rules associated with the volume",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of Volume Quota Rules",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A list of Volume Quota Rules",
                  "type": "array",
                  "items": {
                    "description": "Quota Rule of a Volume",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Volume Quota Rule Properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
                            "enum": [
                              "Accepted",
                              "Creating",
                              "Patching",
                              "Deleting",
                              "Moving",
                              "Failed",
                              "Succeeded"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": false
                            }
                          },
                          "quotaSizeInKiBs": {
                            "type": "integer",
                            "description": "Size of quota",
                            "format": "int64",
                            "example": "100006"
                          },
                          "quotaType": {
                            "title": "quotaType",
                            "type": "string",
                            "description": "Type of quota",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "enum": [
                              "DefaultUserQuota",
                              "DefaultGroupQuota",
                              "IndividualUserQuota",
                              "IndividualGroupQuota"
                            ],
                            "x-ms-enum": {
                              "name": "type",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "DefaultUserQuota",
                                  "description": "Default user quota"
                                },
                                {
                                  "value": "DefaultGroupQuota",
                                  "description": "Default group quota"
                                },
                                {
                                  "value": "IndividualUserQuota",
                                  "description": "Individual user quota"
                                },
                                {
                                  "value": "IndividualGroupQuota",
                                  "description": "Individual group quota"
                                }
                              ]
                            },
                            "example": "DefaultUserQuota"
                          },
                          "quotaTarget": {
                            "type": "string",
                            "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/volumeQuotaRules/{volumeQuotaRuleName}": {
      "get": {
        "tags": [
          "VolumeQuotaRules"
        ],
        "operationId": "VolumeQuotaRules_Get",
        "summary": "Describe a quota rule",
        "description": "Get details of the specified quota rule",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeQuotaRuleName",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The name of volume quota rule",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Quota Rule of a Volume",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Volume Quota Rule Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
                      "enum": [
                        "Accepted",
                        "Creating",
                        "Patching",
                        "Deleting",
                        "Moving",
                        "Failed",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": false
                      }
                    },
                    "quotaSizeInKiBs": {
                      "type": "integer",
                      "description": "Size of quota",
                      "format": "int64",
                      "example": "100006"
                    },
                    "quotaType": {
                      "title": "quotaType",
                      "type": "string",
                      "description": "Type of quota",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "DefaultUserQuota",
                        "DefaultGroupQuota",
                        "IndividualUserQuota",
                        "IndividualGroupQuota"
                      ],
                      "x-ms-enum": {
                        "name": "type",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "DefaultUserQuota",
                            "description": "Default user quota"
                          },
                          {
                            "value": "DefaultGroupQuota",
                            "description": "Default group quota"
                          },
                          {
                            "value": "IndividualUserQuota",
                            "description": "Individual user quota"
                          },
                          {
                            "value": "IndividualGroupQuota",
                            "description": "Individual group quota"
                          }
                        ]
                      },
                      "example": "DefaultUserQuota"
                    },
                    "quotaTarget": {
                      "type": "string",
                      "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "VolumeQuotaRules"
        ],
        "operationId": "VolumeQuotaRules_Create",
        "summary": "Create a quota rule",
        "description": "Create the specified quota rule within the given volume",
        "parameters": [
          {
            "name": "body",
            "description": "Quota rule object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Quota Rule of a Volume",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Volume Quota Rule Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
                      "enum": [
                        "Accepted",
                        "Creating",
                        "Patching",
                        "Deleting",
                        "Moving",
                        "Failed",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": false
                      }
                    },
                    "quotaSizeInKiBs": {
                      "type": "integer",
                      "description": "Size of quota",
                      "format": "int64",
                      "example": "100006"
                    },
                    "quotaType": {
                      "title": "quotaType",
                      "type": "string",
                      "description": "Type of quota",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "DefaultUserQuota",
                        "DefaultGroupQuota",
                        "IndividualUserQuota",
                        "IndividualGroupQuota"
                      ],
                      "x-ms-enum": {
                        "name": "type",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "DefaultUserQuota",
                            "description": "Default user quota"
                          },
                          {
                            "value": "DefaultGroupQuota",
                            "description": "Default group quota"
                          },
                          {
                            "value": "IndividualUserQuota",
                            "description": "Individual user quota"
                          },
                          {
                            "value": "IndividualGroupQuota",
                            "description": "Individual group quota"
                          }
                        ]
                      },
                      "example": "DefaultUserQuota"
                    },
                    "quotaTarget": {
                      "type": "string",
                      "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeQuotaRuleName",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The name of volume quota rule",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - VolumeQuotaRule updated",
            "schema": {
              "description": "Quota Rule of a Volume",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Volume Quota Rule Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
                      "enum": [
                        "Accepted",
                        "Creating",
                        "Patching",
                        "Deleting",
                        "Moving",
                        "Failed",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": false
                      }
                    },
                    "quotaSizeInKiBs": {
                      "type": "integer",
                      "description": "Size of quota",
                      "format": "int64",
                      "example": "100006"
                    },
                    "quotaType": {
                      "title": "quotaType",
                      "type": "string",
                      "description": "Type of quota",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "DefaultUserQuota",
                        "DefaultGroupQuota",
                        "IndividualUserQuota",
                        "IndividualGroupQuota"
                      ],
                      "x-ms-enum": {
                        "name": "type",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "DefaultUserQuota",
                            "description": "Default user quota"
                          },
                          {
                            "value": "DefaultGroupQuota",
                            "description": "Default group quota"
                          },
                          {
                            "value": "IndividualUserQuota",
                            "description": "Individual user quota"
                          },
                          {
                            "value": "IndividualGroupQuota",
                            "description": "Individual group quota"
                          }
                        ]
                      },
                      "example": "DefaultUserQuota"
                    },
                    "quotaTarget": {
                      "type": "string",
                      "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Quota rule Created",
            "schema": {
              "description": "Quota Rule of a Volume",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Volume Quota Rule Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
                      "enum": [
                        "Accepted",
                        "Creating",
                        "Patching",
                        "Deleting",
                        "Moving",
                        "Failed",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": false
                      }
                    },
                    "quotaSizeInKiBs": {
                      "type": "integer",
                      "description": "Size of quota",
                      "format": "int64",
                      "example": "100006"
                    },
                    "quotaType": {
                      "title": "quotaType",
                      "type": "string",
                      "description": "Type of quota",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "DefaultUserQuota",
                        "DefaultGroupQuota",
                        "IndividualUserQuota",
                        "IndividualGroupQuota"
                      ],
                      "x-ms-enum": {
                        "name": "type",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "DefaultUserQuota",
                            "description": "Default user quota"
                          },
                          {
                            "value": "DefaultGroupQuota",
                            "description": "Default group quota"
                          },
                          {
                            "value": "IndividualUserQuota",
                            "description": "Individual user quota"
                          },
                          {
                            "value": "IndividualGroupQuota",
                            "description": "Individual group quota"
                          }
                        ]
                      },
                      "example": "DefaultUserQuota"
                    },
                    "quotaTarget": {
                      "type": "string",
                      "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "VolumeQuotaRules"
        ],
        "operationId": "VolumeQuotaRules_Update",
        "summary": "Update a quota rule",
        "description": "Patch a quota rule",
        "parameters": [
          {
            "name": "body",
            "description": "Quota rule object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Patchable Quota Rule of a Volume",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Resource tags",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "Volume Quota Rule Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
                      "enum": [
                        "Accepted",
                        "Creating",
                        "Patching",
                        "Deleting",
                        "Moving",
                        "Failed",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": false
                      }
                    },
                    "quotaSizeInKiBs": {
                      "type": "integer",
                      "description": "Size of quota",
                      "format": "int64",
                      "example": "100006"
                    },
                    "quotaType": {
                      "title": "quotaType",
                      "type": "string",
                      "description": "Type of quota",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "DefaultUserQuota",
                        "DefaultGroupQuota",
                        "IndividualUserQuota",
                        "IndividualGroupQuota"
                      ],
                      "x-ms-enum": {
                        "name": "type",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "DefaultUserQuota",
                            "description": "Default user quota"
                          },
                          {
                            "value": "DefaultGroupQuota",
                            "description": "Default group quota"
                          },
                          {
                            "value": "IndividualUserQuota",
                            "description": "Individual user quota"
                          },
                          {
                            "value": "IndividualGroupQuota",
                            "description": "Individual group quota"
                          }
                        ]
                      },
                      "example": "DefaultUserQuota"
                    },
                    "quotaTarget": {
                      "type": "string",
                      "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeQuotaRuleName",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The name of volume quota rule",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Quota Rule of a Volume",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Volume Quota Rule Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
                      "enum": [
                        "Accepted",
                        "Creating",
                        "Patching",
                        "Deleting",
                        "Moving",
                        "Failed",
                        "Succeeded"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": false
                      }
                    },
                    "quotaSizeInKiBs": {
                      "type": "integer",
                      "description": "Size of quota",
                      "format": "int64",
                      "example": "100006"
                    },
                    "quotaType": {
                      "title": "quotaType",
                      "type": "string",
                      "description": "Type of quota",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "enum": [
                        "DefaultUserQuota",
                        "DefaultGroupQuota",
                        "IndividualUserQuota",
                        "IndividualGroupQuota"
                      ],
                      "x-ms-enum": {
                        "name": "type",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "DefaultUserQuota",
                            "description": "Default user quota"
                          },
                          {
                            "value": "DefaultGroupQuota",
                            "description": "Default group quota"
                          },
                          {
                            "value": "IndividualUserQuota",
                            "description": "Individual user quota"
                          },
                          {
                            "value": "IndividualGroupQuota",
                            "description": "Individual group quota"
                          }
                        ]
                      },
                      "example": "DefaultUserQuota"
                    },
                    "quotaTarget": {
                      "type": "string",
                      "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted -- Update request accepted; operation will complete asynchronously"
          }
        }
      },
      "delete": {
        "tags": [
          "VolumeQuotaRules"
        ],
        "operationId": "VolumeQuotaRules_Delete",
        "summary": "Delete a quota rule",
        "description": "Delete quota rule",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeQuotaRuleName",
            "type": "string",
            "in": "path",
            "required": true,
            "description": "The name of volume quota rule",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted -- Delete request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups": {
      "get": {
        "summary": "Describe all volume groups",
        "description": "List all volume groups for given account",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "tags": [
          "Volume Groups"
        ],
        "operationId": "VolumeGroups_ListByNetAppAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of volume group resources",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of volume Groups",
                  "type": "array",
                  "items": {
                    "description": "Volume group resource",
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "Resource location",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Resource Id"
                      },
                      "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Resource name"
                      },
                      "type": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Resource type"
                      },
                      "properties": {
                        "description": "Volume group properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "type": "string",
                            "description": "Azure lifecycle management",
                            "example": "Available",
                            "readOnly": true
                          },
                          "groupMetaData": {
                            "title": "groupMetaData",
                            "description": "Volume group details",
                            "type": "object",
                            "properties": {
                              "groupDescription": {
                                "type": "string",
                                "description": "Group Description",
                                "example": "group description"
                              },
                              "applicationType": {
                                "type": "string",
                                "description": "Application Type",
                                "enum": [
                                  "SAP-HANA",
                                  "ORACLE"
                                ],
                                "x-ms-enum": {
                                  "name": "ApplicationType",
                                  "modelAsString": true
                                },
                                "example": "SAP-HANA"
                              },
                              "applicationIdentifier": {
                                "type": "string",
                                "description": "Application specific identifier",
                                "example": "SH1"
                              },
                              "globalPlacementRules": {
                                "title": "Global volume placement rules",
                                "description": "Application specific placement rules for the volume group",
                                "type": "array",
                                "items": {
                                  "description": "Application specific parameters for the placement of volumes in the volume group",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "value"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                                      "example": "key1"
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                                      "example": "value1"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "key"
                                ]
                              },
                              "volumesCount": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Number of volumes in volume group",
                                "example": 5,
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/volumeGroups/{volumeGroupName}": {
      "get": {
        "summary": "Describe a Volume Group",
        "description": "Get details of the specified volume group",
        "tags": [
          "Volume Groups"
        ],
        "operationId": "VolumeGroups_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeGroupName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volumeGroup",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Volume group resource for create",
              "type": "object",
              "properties": {
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "properties": {
                  "description": "Volume group properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Azure lifecycle management",
                      "example": "Available",
                      "readOnly": true
                    },
                    "groupMetaData": {
                      "title": "groupMetaData",
                      "description": "Volume group details",
                      "type": "object",
                      "properties": {
                        "groupDescription": {
                          "type": "string",
                          "description": "Group Description",
                          "example": "group description"
                        },
                        "applicationType": {
                          "type": "string",
                          "description": "Application Type",
                          "enum": [
                            "SAP-HANA",
                            "ORACLE"
                          ],
                          "x-ms-enum": {
                            "name": "ApplicationType",
                            "modelAsString": true
                          },
                          "example": "SAP-HANA"
                        },
                        "applicationIdentifier": {
                          "type": "string",
                          "description": "Application specific identifier",
                          "example": "SH1"
                        },
                        "globalPlacementRules": {
                          "title": "Global volume placement rules",
                          "description": "Application specific placement rules for the volume group",
                          "type": "array",
                          "items": {
                            "description": "Application specific parameters for the placement of volumes in the volume group",
                            "type": "object",
                            "required": [
                              "key",
                              "value"
                            ],
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                                "example": "key1"
                              },
                              "value": {
                                "type": "string",
                                "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                                "example": "value1"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "key"
                          ]
                        },
                        "volumesCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Number of volumes in volume group",
                          "example": 5,
                          "readOnly": true
                        }
                      }
                    },
                    "volumes": {
                      "description": "List of volumes from group",
                      "type": "array",
                      "items": {
                        "description": "Volume resource",
                        "type": "object",
                        "x-ms-azure-resource": true,
                        "required": [
                          "properties"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Resource Id"
                          },
                          "name": {
                            "type": "string",
                            "description": "Resource name"
                          },
                          "type": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Resource type"
                          },
                          "tags": {
                            "description": "Resource tags",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "zones": {
                            "type": "array",
                            "description": "Availability Zone",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1,
                              "example": "1"
                            }
                          },
                          "properties": {
                            "description": "Volume properties",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "required": [
                              "creationToken",
                              "usageThreshold",
                              "subnetId"
                            ],
                            "properties": {
                              "fileSystemId": {
                                "title": "FileSystem ID",
                                "type": "string",
                                "readOnly": true,
                                "description": "Unique FileSystem Identifier.",
                                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                              },
                              "creationToken": {
                                "title": "Creation Token or File Path",
                                "type": "string",
                                "description": "A unique file path for the volume. Used when creating mount targets",
                                "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                                "minLength": 1,
                                "maxLength": 80,
                                "example": "some-amazing-filepath",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "serviceLevel": {
                                "title": "serviceLevel",
                                "type": "string",
                                "description": "The service level of the file system",
                                "enum": [
                                  "Standard",
                                  "Premium",
                                  "Ultra",
                                  "StandardZRS",
                                  "Flexible"
                                ],
                                "default": "Premium",
                                "x-ms-enum": {
                                  "name": "ServiceLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Standard",
                                      "description": "Standard service level"
                                    },
                                    {
                                      "value": "Premium",
                                      "description": "Premium service level"
                                    },
                                    {
                                      "value": "Ultra",
                                      "description": "Ultra service level"
                                    },
                                    {
                                      "value": "StandardZRS",
                                      "description": "Zone redundant storage service level. This will be deprecated soon."
                                    },
                                    {
                                      "value": "Flexible",
                                      "description": "Flexible service level"
                                    }
                                  ]
                                }
                              },
                              "usageThreshold": {
                                "title": "usageThreshold",
                                "type": "integer",
                                "format": "int64",
                                "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                                "minimum": 53687091200,
                                "maximum": 2638827906662400,
                                "default": 107374182400,
                                "example": 107374182400
                              },
                              "exportPolicy": {
                                "title": "exportPolicy",
                                "description": "Set of export policy rules",
                                "properties": {
                                  "rules": {
                                    "title": "Export policy rule",
                                    "description": "Export policy rule",
                                    "type": "array",
                                    "items": {
                                      "description": "Volume Export Policy Rule",
                                      "type": "object",
                                      "properties": {
                                        "ruleIndex": {
                                          "type": "integer",
                                          "description": "Order index",
                                          "format": "int32"
                                        },
                                        "unixReadOnly": {
                                          "type": "boolean",
                                          "description": "Read only access"
                                        },
                                        "unixReadWrite": {
                                          "type": "boolean",
                                          "description": "Read and write access"
                                        },
                                        "kerberos5ReadOnly": {
                                          "type": "boolean",
                                          "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "kerberos5ReadWrite": {
                                          "type": "boolean",
                                          "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "kerberos5iReadOnly": {
                                          "type": "boolean",
                                          "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "kerberos5iReadWrite": {
                                          "type": "boolean",
                                          "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "kerberos5pReadOnly": {
                                          "type": "boolean",
                                          "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "kerberos5pReadWrite": {
                                          "type": "boolean",
                                          "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "cifs": {
                                          "type": "boolean",
                                          "description": "Allows CIFS protocol"
                                        },
                                        "nfsv3": {
                                          "type": "boolean",
                                          "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                                        },
                                        "nfsv41": {
                                          "type": "boolean",
                                          "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                                        },
                                        "allowedClients": {
                                          "type": "string",
                                          "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                                        },
                                        "hasRootAccess": {
                                          "type": "boolean",
                                          "description": "Has root access to volume",
                                          "example": true,
                                          "default": true
                                        },
                                        "chownMode": {
                                          "type": "string",
                                          "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                                          "default": "Restricted",
                                          "enum": [
                                            "Restricted",
                                            "Unrestricted"
                                          ],
                                          "x-ms-enum": {
                                            "name": "ChownMode",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "ruleIndex"
                                    ]
                                  }
                                }
                              },
                              "protocolTypes": {
                                "title": "protocolTypes",
                                "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "NFSv4.1"
                                ]
                              },
                              "provisioningState": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Azure lifecycle management"
                              },
                              "snapshotId": {
                                "title": "Snapshot ID",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                                    }
                                  ]
                                },
                                "x-nullable": true,
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "description": "Resource identifier used to identify the Snapshot.",
                                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                              },
                              "deleteBaseSnapshot": {
                                "type": "boolean",
                                "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                              },
                              "backupId": {
                                "title": "Backup ID",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                                    }
                                  ]
                                },
                                "x-nullable": true,
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "description": "Resource identifier used to identify the Backup.",
                                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                              },
                              "baremetalTenantId": {
                                "title": "Baremetal Tenant ID",
                                "type": "string",
                                "readOnly": true,
                                "description": "Unique Baremetal Tenant Identifier.",
                                "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                              },
                              "subnetId": {
                                "type": "string",
                                "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                              },
                              "networkFeatures": {
                                "title": "Network features",
                                "description": "Network features available to the volume, or current state of update.",
                                "type": "string",
                                "enum": [
                                  "Basic",
                                  "Standard",
                                  "Basic_Standard",
                                  "Standard_Basic"
                                ],
                                "x-ms-enum": {
                                  "name": "NetworkFeatures",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Basic",
                                      "description": "Basic network features."
                                    },
                                    {
                                      "value": "Standard",
                                      "description": "Standard network features."
                                    },
                                    {
                                      "value": "Basic_Standard",
                                      "description": "Updating from Basic to Standard network features."
                                    },
                                    {
                                      "value": "Standard_Basic",
                                      "description": "Updating from Standard to Basic network features."
                                    }
                                  ]
                                },
                                "example": "Standard",
                                "default": "Basic",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "effectiveNetworkFeatures": {
                                "title": "Network features",
                                "description": "Network features available to the volume, or current state of update.",
                                "type": "string",
                                "enum": [
                                  "Basic",
                                  "Standard",
                                  "Basic_Standard",
                                  "Standard_Basic"
                                ],
                                "x-ms-enum": {
                                  "name": "NetworkFeatures",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Basic",
                                      "description": "Basic network features."
                                    },
                                    {
                                      "value": "Standard",
                                      "description": "Standard network features."
                                    },
                                    {
                                      "value": "Basic_Standard",
                                      "description": "Updating from Basic to Standard network features."
                                    },
                                    {
                                      "value": "Standard_Basic",
                                      "description": "Updating from Standard to Basic network features."
                                    }
                                  ]
                                },
                                "example": "Standard",
                                "default": "Basic",
                                "readOnly": true
                              },
                              "networkSiblingSetId": {
                                "title": "Network Sibling Set ID",
                                "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                                "type": "string",
                                "readOnly": true,
                                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                              },
                              "storageToNetworkProximity": {
                                "title": "Storage to Network Proximity",
                                "description": "Provides storage to network proximity information for the volume.",
                                "type": "string",
                                "enum": [
                                  "Default",
                                  "T1",
                                  "T2",
                                  "AcrossT2"
                                ],
                                "readOnly": true,
                                "x-ms-enum": {
                                  "name": "VolumeStorageToNetworkProximity",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Default",
                                      "description": "Basic storage to network connectivity."
                                    },
                                    {
                                      "value": "T1",
                                      "description": "Standard T1 storage to network connectivity."
                                    },
                                    {
                                      "value": "T2",
                                      "description": "Standard T2 storage to network connectivity."
                                    },
                                    {
                                      "value": "AcrossT2",
                                      "description": "Standard AcrossT2 storage to network connectivity."
                                    }
                                  ]
                                },
                                "example": "T1"
                              },
                              "mountTargets": {
                                "title": "mountTargets",
                                "type": "array",
                                "readOnly": true,
                                "description": "List of mount targets",
                                "items": {
                                  "description": "Mount target properties",
                                  "type": "object",
                                  "required": [
                                    "fileSystemId"
                                  ],
                                  "properties": {
                                    "mountTargetId": {
                                      "title": "mountTargetId",
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "UUID v4 used to identify the MountTarget",
                                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                                    },
                                    "fileSystemId": {
                                      "title": "fileSystemId",
                                      "type": "string",
                                      "description": "UUID v4 used to identify the MountTarget",
                                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                                    },
                                    "ipAddress": {
                                      "title": "ipAddress",
                                      "description": "The mount target's IPv4 address",
                                      "type": "string",
                                      "readOnly": true,
                                      "example": "1.2.3.4"
                                    },
                                    "smbServerFqdn": {
                                      "title": "smbServerFQDN",
                                      "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                                      "type": "string",
                                      "example": "fullyqualified.domainname.com"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "fileSystemId"
                                ]
                              },
                              "volumeType": {
                                "type": "string",
                                "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                                "example": "DataProtection",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "dataProtection": {
                                "title": "DataProtection",
                                "description": "DataProtection type volumes include an object containing details of the replication",
                                "properties": {
                                  "backup": {
                                    "title": "Backup",
                                    "description": "Backup Properties",
                                    "type": "object",
                                    "properties": {
                                      "backupPolicyId": {
                                        "type": "string",
                                        "format": "arm-id",
                                        "x-ms-arm-id-details": {
                                          "allowedResources": [
                                            {
                                              "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                            }
                                          ]
                                        },
                                        "description": "Backup Policy Resource ID"
                                      },
                                      "policyEnforced": {
                                        "type": "boolean",
                                        "description": "Policy Enforced"
                                      },
                                      "backupVaultId": {
                                        "type": "string",
                                        "format": "arm-id",
                                        "x-ms-arm-id-details": {
                                          "allowedResources": [
                                            {
                                              "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                            }
                                          ]
                                        },
                                        "description": "Backup Vault Resource ID"
                                      }
                                    }
                                  },
                                  "replication": {
                                    "title": "Replication",
                                    "description": "Replication properties",
                                    "type": "object",
                                    "properties": {
                                      "replicationId": {
                                        "type": "string",
                                        "description": "Id",
                                        "readOnly": true
                                      },
                                      "endpointType": {
                                        "type": "string",
                                        "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                                        "enum": [
                                          "src",
                                          "dst"
                                        ],
                                        "x-ms-enum": {
                                          "name": "EndpointType",
                                          "modelAsString": true
                                        },
                                        "readOnly": true
                                      },
                                      "replicationSchedule": {
                                        "type": "string",
                                        "description": "Schedule",
                                        "enum": [
                                          "_10minutely",
                                          "hourly",
                                          "daily"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ReplicationSchedule",
                                          "modelAsString": true
                                        }
                                      },
                                      "remoteVolumeResourceId": {
                                        "type": "string",
                                        "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                                      },
                                      "remotePath": {
                                        "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                                        "type": "object",
                                        "x-ms-mutability": [
                                          "read",
                                          "create"
                                        ],
                                        "required": [
                                          "externalHostName",
                                          "serverName",
                                          "volumeName"
                                        ],
                                        "properties": {
                                          "externalHostName": {
                                            "type": "string",
                                            "description": "The Path to a ONTAP Host"
                                          },
                                          "serverName": {
                                            "type": "string",
                                            "description": "The name of a server on the ONTAP Host"
                                          },
                                          "volumeName": {
                                            "type": "string",
                                            "description": "The name of a volume on the server"
                                          }
                                        }
                                      },
                                      "remoteVolumeRegion": {
                                        "type": "string",
                                        "description": "The remote region for the other end of the Volume Replication."
                                      },
                                      "destinationReplications": {
                                        "description": "A list of destination replications",
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                          "description": "Destination replication properties",
                                          "type": "object",
                                          "properties": {
                                            "resourceId": {
                                              "type": "string",
                                              "format": "arm-id",
                                              "x-ms-arm-id-details": {
                                                "allowedResources": [
                                                  {
                                                    "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                                  }
                                                ]
                                              },
                                              "description": "The resource ID of the remote volume"
                                            },
                                            "replicationType": {
                                              "type": "string",
                                              "description": "Indicates whether the replication is cross zone or cross region.",
                                              "enum": [
                                                "CrossRegionReplication",
                                                "CrossZoneReplication"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ReplicationType",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "CrossRegionReplication",
                                                    "description": "Cross region replication"
                                                  },
                                                  {
                                                    "value": "CrossZoneReplication",
                                                    "description": "Cross zone replication"
                                                  }
                                                ]
                                              }
                                            },
                                            "region": {
                                              "type": "string",
                                              "description": "The remote region for the destination volume."
                                            },
                                            "zone": {
                                              "type": "string",
                                              "description": "The remote zone for the destination volume."
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "resourceId"
                                        ]
                                      }
                                    }
                                  },
                                  "snapshot": {
                                    "title": "Snapshot",
                                    "description": "Snapshot properties.",
                                    "type": "object",
                                    "properties": {
                                      "snapshotPolicyId": {
                                        "type": "string",
                                        "description": "Snapshot Policy ResourceId"
                                      }
                                    }
                                  },
                                  "volumeRelocation": {
                                    "title": "VolumeRelocation",
                                    "description": "VolumeRelocation properties",
                                    "type": "object",
                                    "properties": {
                                      "relocationRequested": {
                                        "type": "boolean",
                                        "description": "Has relocation been requested for this volume"
                                      },
                                      "readyToBeFinalized": {
                                        "type": "boolean",
                                        "readOnly": true,
                                        "description": "Has relocation finished and is ready to be cleaned up"
                                      }
                                    }
                                  }
                                }
                              },
                              "acceptGrowCapacityPoolForShortTermCloneSplit": {
                                "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                                "type": "string",
                                "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "enum": [
                                  "Accepted",
                                  "Declined"
                                ],
                                "x-ms-enum": {
                                  "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Accepted",
                                      "description": "Auto grow capacity pool for short term clone split is accepted."
                                    },
                                    {
                                      "value": "Declined",
                                      "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                                    }
                                  ]
                                },
                                "example": "Accepted"
                              },
                              "isRestoring": {
                                "type": "boolean",
                                "description": "Restoring",
                                "readOnly": true
                              },
                              "snapshotDirectoryVisible": {
                                "type": "boolean",
                                "default": true,
                                "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                              },
                              "kerberosEnabled": {
                                "type": "boolean",
                                "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "example": false,
                                "default": false
                              },
                              "securityStyle": {
                                "type": "string",
                                "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                                "default": "unix",
                                "enum": [
                                  "ntfs",
                                  "unix"
                                ],
                                "x-ms-enum": {
                                  "name": "SecurityStyle",
                                  "modelAsString": true
                                },
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "smbEncryption": {
                                "type": "boolean",
                                "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                                "example": false,
                                "default": false
                              },
                              "smbAccessBasedEnumeration": {
                                "title": "smbAccessBasedEnumeration",
                                "type": "string",
                                "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "smbAccessBasedEnumeration",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Disabled",
                                      "description": "smbAccessBasedEnumeration share setting is disabled"
                                    },
                                    {
                                      "value": "Enabled",
                                      "description": "smbAccessBasedEnumeration share setting is enabled"
                                    }
                                  ]
                                },
                                "x-nullable": true,
                                "example": "Enabled"
                              },
                              "smbNonBrowsable": {
                                "title": "smbNonBrowsable",
                                "type": "string",
                                "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "smbNonBrowsable",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Disabled",
                                      "description": "smbNonBrowsable share setting is disabled"
                                    },
                                    {
                                      "value": "Enabled",
                                      "description": "smbNonBrowsable share setting is enabled"
                                    }
                                  ]
                                },
                                "example": "Enabled"
                              },
                              "smbContinuouslyAvailable": {
                                "type": "boolean",
                                "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                                "example": false,
                                "default": false
                              },
                              "throughputMibps": {
                                "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                                "type": "number",
                                "x-nullable": true,
                                "example": 128.223
                              },
                              "actualThroughputMibps": {
                                "type": "number",
                                "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                                "example": 164.221,
                                "readOnly": true
                              },
                              "encryptionKeySource": {
                                "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                                "type": "string",
                                "enum": [
                                  "Microsoft.NetApp",
                                  "Microsoft.KeyVault"
                                ],
                                "x-ms-enum": {
                                  "name": "EncryptionKeySource",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Microsoft.NetApp",
                                      "description": "Microsoft-managed key encryption"
                                    },
                                    {
                                      "value": "Microsoft.KeyVault",
                                      "description": "Customer-managed key encryption"
                                    }
                                  ]
                                },
                                "default": "Microsoft.NetApp"
                              },
                              "keyVaultPrivateEndpointResourceId": {
                                "type": "string",
                                "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                              },
                              "ldapEnabled": {
                                "type": "boolean",
                                "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                                "example": false,
                                "default": false,
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "coolAccess": {
                                "type": "boolean",
                                "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                                "example": false,
                                "default": false
                              },
                              "coolnessPeriod": {
                                "type": "integer",
                                "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                                "example": 7,
                                "minimum": 2,
                                "maximum": 183,
                                "format": "int32"
                              },
                              "coolAccessRetrievalPolicy": {
                                "type": "string",
                                "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                                "enum": [
                                  "Default",
                                  "OnRead",
                                  "Never"
                                ],
                                "x-ms-enum": {
                                  "name": "coolAccessRetrievalPolicy",
                                  "modelAsString": true
                                }
                              },
                              "coolAccessTieringPolicy": {
                                "type": "string",
                                "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                                "enum": [
                                  "Auto",
                                  "SnapshotOnly"
                                ],
                                "x-ms-enum": {
                                  "name": "coolAccessTieringPolicy",
                                  "modelAsString": true
                                }
                              },
                              "unixPermissions": {
                                "type": "string",
                                "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                                "minLength": 4,
                                "maxLength": 4,
                                "x-nullable": true,
                                "example": "0770"
                              },
                              "cloneProgress": {
                                "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                                "type": "integer",
                                "format": "int32",
                                "example": 10,
                                "x-nullable": true,
                                "readOnly": true
                              },
                              "fileAccessLogs": {
                                "type": "string",
                                "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                                "readOnly": true,
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "fileAccessLogs",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "fileAccessLogs are enabled"
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "fileAccessLogs are not enabled"
                                    }
                                  ]
                                },
                                "example": "Disabled",
                                "default": "Disabled"
                              },
                              "avsDataStore": {
                                "title": "avsDataStore",
                                "type": "string",
                                "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "avsDataStore",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "avsDataStore is enabled"
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "avsDataStore is disabled"
                                    }
                                  ]
                                },
                                "example": "Enabled",
                                "default": "Disabled",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "dataStoreResourceId": {
                                "title": "dataStoreResourceId",
                                "description": "Data store resource unique identifier",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "isDefaultQuotaEnabled": {
                                "type": "boolean",
                                "description": "Specifies if default quota is enabled for the volume.",
                                "example": false,
                                "default": false
                              },
                              "defaultUserQuotaInKiBs": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                                "example": 4,
                                "default": 0
                              },
                              "defaultGroupQuotaInKiBs": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                                "example": 4,
                                "default": 0
                              },
                              "maximumNumberOfFiles": {
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true,
                                "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                                "example": 100000000
                              },
                              "volumeGroupName": {
                                "type": "string",
                                "description": "Volume Group Name",
                                "readOnly": true
                              },
                              "capacityPoolResourceId": {
                                "type": "string",
                                "description": "Pool Resource Id used in case of creating a volume through volume group"
                              },
                              "proximityPlacementGroup": {
                                "type": "string",
                                "description": "Proximity placement group associated with the volume",
                                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                              },
                              "t2Network": {
                                "type": "string",
                                "description": "T2 network information",
                                "example": "Test-T2-Alias",
                                "readOnly": true
                              },
                              "volumeSpecName": {
                                "type": "string",
                                "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                                "example": "Data"
                              },
                              "encrypted": {
                                "type": "boolean",
                                "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                                "readOnly": true
                              },
                              "placementRules": {
                                "title": "Volume placement rules",
                                "description": "Application specific placement rules for the particular volume",
                                "type": "array",
                                "items": {
                                  "description": "Application specific parameters for the placement of volumes in the volume group",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "value"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                                      "example": "key1"
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                                      "example": "value1"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "key"
                                ]
                              },
                              "enableSubvolumes": {
                                "type": "string",
                                "description": "Flag indicating whether subvolume operations are enabled on the volume",
                                "example": "Enabled",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "enableSubvolumes",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "subvolumes are enabled"
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "subvolumes are not enabled"
                                    }
                                  ]
                                }
                              },
                              "provisionedAvailabilityZone": {
                                "title": "Provisioned Availability Zone",
                                "type": "string",
                                "readOnly": true,
                                "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                                "example": "2",
                                "x-nullable": true
                              },
                              "isLargeVolume": {
                                "title": "Is Large Volume",
                                "type": "boolean",
                                "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                                "example": false,
                                "default": false,
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "originatingResourceId": {
                                "title": "Originating Resource Id",
                                "type": "string",
                                "description": "Id of the snapshot or backup that the volume is restored from.",
                                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                                "readOnly": true,
                                "x-nullable": true
                              },
                              "inheritedSizeInBytes": {
                                "title": "inheritedSizeInBytes",
                                "type": "integer",
                                "format": "int64",
                                "description": "Space shared by short term clone volume with parent volume in bytes.",
                                "readOnly": true,
                                "x-nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Volume Groups"
        ],
        "operationId": "VolumeGroups_Create",
        "summary": "Create the specified volume group and volumes. Creating volume group will create all the volumes specified in request body implicitly. Once volumes are created using volume group, those will be treated as regular volumes thereafter.",
        "description": "Create a volume group along with specified volumes",
        "parameters": [
          {
            "name": "body",
            "description": "Volume Group object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Volume group resource for create",
              "type": "object",
              "properties": {
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "properties": {
                  "description": "Volume group properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Azure lifecycle management",
                      "example": "Available",
                      "readOnly": true
                    },
                    "groupMetaData": {
                      "title": "groupMetaData",
                      "description": "Volume group details",
                      "type": "object",
                      "properties": {
                        "groupDescription": {
                          "type": "string",
                          "description": "Group Description",
                          "example": "group description"
                        },
                        "applicationType": {
                          "type": "string",
                          "description": "Application Type",
                          "enum": [
                            "SAP-HANA",
                            "ORACLE"
                          ],
                          "x-ms-enum": {
                            "name": "ApplicationType",
                            "modelAsString": true
                          },
                          "example": "SAP-HANA"
                        },
                        "applicationIdentifier": {
                          "type": "string",
                          "description": "Application specific identifier",
                          "example": "SH1"
                        },
                        "globalPlacementRules": {
                          "title": "Global volume placement rules",
                          "description": "Application specific placement rules for the volume group",
                          "type": "array",
                          "items": {
                            "description": "Application specific parameters for the placement of volumes in the volume group",
                            "type": "object",
                            "required": [
                              "key",
                              "value"
                            ],
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                                "example": "key1"
                              },
                              "value": {
                                "type": "string",
                                "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                                "example": "value1"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "key"
                          ]
                        },
                        "volumesCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Number of volumes in volume group",
                          "example": 5,
                          "readOnly": true
                        }
                      }
                    },
                    "volumes": {
                      "description": "List of volumes from group",
                      "type": "array",
                      "items": {
                        "description": "Volume resource",
                        "type": "object",
                        "x-ms-azure-resource": true,
                        "required": [
                          "properties"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Resource Id"
                          },
                          "name": {
                            "type": "string",
                            "description": "Resource name"
                          },
                          "type": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Resource type"
                          },
                          "tags": {
                            "description": "Resource tags",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "zones": {
                            "type": "array",
                            "description": "Availability Zone",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1,
                              "example": "1"
                            }
                          },
                          "properties": {
                            "description": "Volume properties",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "required": [
                              "creationToken",
                              "usageThreshold",
                              "subnetId"
                            ],
                            "properties": {
                              "fileSystemId": {
                                "title": "FileSystem ID",
                                "type": "string",
                                "readOnly": true,
                                "description": "Unique FileSystem Identifier.",
                                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                              },
                              "creationToken": {
                                "title": "Creation Token or File Path",
                                "type": "string",
                                "description": "A unique file path for the volume. Used when creating mount targets",
                                "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                                "minLength": 1,
                                "maxLength": 80,
                                "example": "some-amazing-filepath",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "serviceLevel": {
                                "title": "serviceLevel",
                                "type": "string",
                                "description": "The service level of the file system",
                                "enum": [
                                  "Standard",
                                  "Premium",
                                  "Ultra",
                                  "StandardZRS",
                                  "Flexible"
                                ],
                                "default": "Premium",
                                "x-ms-enum": {
                                  "name": "ServiceLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Standard",
                                      "description": "Standard service level"
                                    },
                                    {
                                      "value": "Premium",
                                      "description": "Premium service level"
                                    },
                                    {
                                      "value": "Ultra",
                                      "description": "Ultra service level"
                                    },
                                    {
                                      "value": "StandardZRS",
                                      "description": "Zone redundant storage service level. This will be deprecated soon."
                                    },
                                    {
                                      "value": "Flexible",
                                      "description": "Flexible service level"
                                    }
                                  ]
                                }
                              },
                              "usageThreshold": {
                                "title": "usageThreshold",
                                "type": "integer",
                                "format": "int64",
                                "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                                "minimum": 53687091200,
                                "maximum": 2638827906662400,
                                "default": 107374182400,
                                "example": 107374182400
                              },
                              "exportPolicy": {
                                "title": "exportPolicy",
                                "description": "Set of export policy rules",
                                "properties": {
                                  "rules": {
                                    "title": "Export policy rule",
                                    "description": "Export policy rule",
                                    "type": "array",
                                    "items": {
                                      "description": "Volume Export Policy Rule",
                                      "type": "object",
                                      "properties": {
                                        "ruleIndex": {
                                          "type": "integer",
                                          "description": "Order index",
                                          "format": "int32"
                                        },
                                        "unixReadOnly": {
                                          "type": "boolean",
                                          "description": "Read only access"
                                        },
                                        "unixReadWrite": {
                                          "type": "boolean",
                                          "description": "Read and write access"
                                        },
                                        "kerberos5ReadOnly": {
                                          "type": "boolean",
                                          "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "kerberos5ReadWrite": {
                                          "type": "boolean",
                                          "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "kerberos5iReadOnly": {
                                          "type": "boolean",
                                          "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "kerberos5iReadWrite": {
                                          "type": "boolean",
                                          "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "kerberos5pReadOnly": {
                                          "type": "boolean",
                                          "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "kerberos5pReadWrite": {
                                          "type": "boolean",
                                          "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "cifs": {
                                          "type": "boolean",
                                          "description": "Allows CIFS protocol"
                                        },
                                        "nfsv3": {
                                          "type": "boolean",
                                          "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                                        },
                                        "nfsv41": {
                                          "type": "boolean",
                                          "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                                        },
                                        "allowedClients": {
                                          "type": "string",
                                          "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                                        },
                                        "hasRootAccess": {
                                          "type": "boolean",
                                          "description": "Has root access to volume",
                                          "example": true,
                                          "default": true
                                        },
                                        "chownMode": {
                                          "type": "string",
                                          "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                                          "default": "Restricted",
                                          "enum": [
                                            "Restricted",
                                            "Unrestricted"
                                          ],
                                          "x-ms-enum": {
                                            "name": "ChownMode",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "ruleIndex"
                                    ]
                                  }
                                }
                              },
                              "protocolTypes": {
                                "title": "protocolTypes",
                                "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "NFSv4.1"
                                ]
                              },
                              "provisioningState": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Azure lifecycle management"
                              },
                              "snapshotId": {
                                "title": "Snapshot ID",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                                    }
                                  ]
                                },
                                "x-nullable": true,
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "description": "Resource identifier used to identify the Snapshot.",
                                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                              },
                              "deleteBaseSnapshot": {
                                "type": "boolean",
                                "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                              },
                              "backupId": {
                                "title": "Backup ID",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                                    }
                                  ]
                                },
                                "x-nullable": true,
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "description": "Resource identifier used to identify the Backup.",
                                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                              },
                              "baremetalTenantId": {
                                "title": "Baremetal Tenant ID",
                                "type": "string",
                                "readOnly": true,
                                "description": "Unique Baremetal Tenant Identifier.",
                                "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                              },
                              "subnetId": {
                                "type": "string",
                                "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                              },
                              "networkFeatures": {
                                "title": "Network features",
                                "description": "Network features available to the volume, or current state of update.",
                                "type": "string",
                                "enum": [
                                  "Basic",
                                  "Standard",
                                  "Basic_Standard",
                                  "Standard_Basic"
                                ],
                                "x-ms-enum": {
                                  "name": "NetworkFeatures",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Basic",
                                      "description": "Basic network features."
                                    },
                                    {
                                      "value": "Standard",
                                      "description": "Standard network features."
                                    },
                                    {
                                      "value": "Basic_Standard",
                                      "description": "Updating from Basic to Standard network features."
                                    },
                                    {
                                      "value": "Standard_Basic",
                                      "description": "Updating from Standard to Basic network features."
                                    }
                                  ]
                                },
                                "example": "Standard",
                                "default": "Basic",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "effectiveNetworkFeatures": {
                                "title": "Network features",
                                "description": "Network features available to the volume, or current state of update.",
                                "type": "string",
                                "enum": [
                                  "Basic",
                                  "Standard",
                                  "Basic_Standard",
                                  "Standard_Basic"
                                ],
                                "x-ms-enum": {
                                  "name": "NetworkFeatures",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Basic",
                                      "description": "Basic network features."
                                    },
                                    {
                                      "value": "Standard",
                                      "description": "Standard network features."
                                    },
                                    {
                                      "value": "Basic_Standard",
                                      "description": "Updating from Basic to Standard network features."
                                    },
                                    {
                                      "value": "Standard_Basic",
                                      "description": "Updating from Standard to Basic network features."
                                    }
                                  ]
                                },
                                "example": "Standard",
                                "default": "Basic",
                                "readOnly": true
                              },
                              "networkSiblingSetId": {
                                "title": "Network Sibling Set ID",
                                "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                                "type": "string",
                                "readOnly": true,
                                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                              },
                              "storageToNetworkProximity": {
                                "title": "Storage to Network Proximity",
                                "description": "Provides storage to network proximity information for the volume.",
                                "type": "string",
                                "enum": [
                                  "Default",
                                  "T1",
                                  "T2",
                                  "AcrossT2"
                                ],
                                "readOnly": true,
                                "x-ms-enum": {
                                  "name": "VolumeStorageToNetworkProximity",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Default",
                                      "description": "Basic storage to network connectivity."
                                    },
                                    {
                                      "value": "T1",
                                      "description": "Standard T1 storage to network connectivity."
                                    },
                                    {
                                      "value": "T2",
                                      "description": "Standard T2 storage to network connectivity."
                                    },
                                    {
                                      "value": "AcrossT2",
                                      "description": "Standard AcrossT2 storage to network connectivity."
                                    }
                                  ]
                                },
                                "example": "T1"
                              },
                              "mountTargets": {
                                "title": "mountTargets",
                                "type": "array",
                                "readOnly": true,
                                "description": "List of mount targets",
                                "items": {
                                  "description": "Mount target properties",
                                  "type": "object",
                                  "required": [
                                    "fileSystemId"
                                  ],
                                  "properties": {
                                    "mountTargetId": {
                                      "title": "mountTargetId",
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "UUID v4 used to identify the MountTarget",
                                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                                    },
                                    "fileSystemId": {
                                      "title": "fileSystemId",
                                      "type": "string",
                                      "description": "UUID v4 used to identify the MountTarget",
                                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                                    },
                                    "ipAddress": {
                                      "title": "ipAddress",
                                      "description": "The mount target's IPv4 address",
                                      "type": "string",
                                      "readOnly": true,
                                      "example": "1.2.3.4"
                                    },
                                    "smbServerFqdn": {
                                      "title": "smbServerFQDN",
                                      "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                                      "type": "string",
                                      "example": "fullyqualified.domainname.com"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "fileSystemId"
                                ]
                              },
                              "volumeType": {
                                "type": "string",
                                "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                                "example": "DataProtection",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "dataProtection": {
                                "title": "DataProtection",
                                "description": "DataProtection type volumes include an object containing details of the replication",
                                "properties": {
                                  "backup": {
                                    "title": "Backup",
                                    "description": "Backup Properties",
                                    "type": "object",
                                    "properties": {
                                      "backupPolicyId": {
                                        "type": "string",
                                        "format": "arm-id",
                                        "x-ms-arm-id-details": {
                                          "allowedResources": [
                                            {
                                              "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                            }
                                          ]
                                        },
                                        "description": "Backup Policy Resource ID"
                                      },
                                      "policyEnforced": {
                                        "type": "boolean",
                                        "description": "Policy Enforced"
                                      },
                                      "backupVaultId": {
                                        "type": "string",
                                        "format": "arm-id",
                                        "x-ms-arm-id-details": {
                                          "allowedResources": [
                                            {
                                              "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                            }
                                          ]
                                        },
                                        "description": "Backup Vault Resource ID"
                                      }
                                    }
                                  },
                                  "replication": {
                                    "title": "Replication",
                                    "description": "Replication properties",
                                    "type": "object",
                                    "properties": {
                                      "replicationId": {
                                        "type": "string",
                                        "description": "Id",
                                        "readOnly": true
                                      },
                                      "endpointType": {
                                        "type": "string",
                                        "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                                        "enum": [
                                          "src",
                                          "dst"
                                        ],
                                        "x-ms-enum": {
                                          "name": "EndpointType",
                                          "modelAsString": true
                                        },
                                        "readOnly": true
                                      },
                                      "replicationSchedule": {
                                        "type": "string",
                                        "description": "Schedule",
                                        "enum": [
                                          "_10minutely",
                                          "hourly",
                                          "daily"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ReplicationSchedule",
                                          "modelAsString": true
                                        }
                                      },
                                      "remoteVolumeResourceId": {
                                        "type": "string",
                                        "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                                      },
                                      "remotePath": {
                                        "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                                        "type": "object",
                                        "x-ms-mutability": [
                                          "read",
                                          "create"
                                        ],
                                        "required": [
                                          "externalHostName",
                                          "serverName",
                                          "volumeName"
                                        ],
                                        "properties": {
                                          "externalHostName": {
                                            "type": "string",
                                            "description": "The Path to a ONTAP Host"
                                          },
                                          "serverName": {
                                            "type": "string",
                                            "description": "The name of a server on the ONTAP Host"
                                          },
                                          "volumeName": {
                                            "type": "string",
                                            "description": "The name of a volume on the server"
                                          }
                                        }
                                      },
                                      "remoteVolumeRegion": {
                                        "type": "string",
                                        "description": "The remote region for the other end of the Volume Replication."
                                      },
                                      "destinationReplications": {
                                        "description": "A list of destination replications",
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                          "description": "Destination replication properties",
                                          "type": "object",
                                          "properties": {
                                            "resourceId": {
                                              "type": "string",
                                              "format": "arm-id",
                                              "x-ms-arm-id-details": {
                                                "allowedResources": [
                                                  {
                                                    "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                                  }
                                                ]
                                              },
                                              "description": "The resource ID of the remote volume"
                                            },
                                            "replicationType": {
                                              "type": "string",
                                              "description": "Indicates whether the replication is cross zone or cross region.",
                                              "enum": [
                                                "CrossRegionReplication",
                                                "CrossZoneReplication"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ReplicationType",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "CrossRegionReplication",
                                                    "description": "Cross region replication"
                                                  },
                                                  {
                                                    "value": "CrossZoneReplication",
                                                    "description": "Cross zone replication"
                                                  }
                                                ]
                                              }
                                            },
                                            "region": {
                                              "type": "string",
                                              "description": "The remote region for the destination volume."
                                            },
                                            "zone": {
                                              "type": "string",
                                              "description": "The remote zone for the destination volume."
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "resourceId"
                                        ]
                                      }
                                    }
                                  },
                                  "snapshot": {
                                    "title": "Snapshot",
                                    "description": "Snapshot properties.",
                                    "type": "object",
                                    "properties": {
                                      "snapshotPolicyId": {
                                        "type": "string",
                                        "description": "Snapshot Policy ResourceId"
                                      }
                                    }
                                  },
                                  "volumeRelocation": {
                                    "title": "VolumeRelocation",
                                    "description": "VolumeRelocation properties",
                                    "type": "object",
                                    "properties": {
                                      "relocationRequested": {
                                        "type": "boolean",
                                        "description": "Has relocation been requested for this volume"
                                      },
                                      "readyToBeFinalized": {
                                        "type": "boolean",
                                        "readOnly": true,
                                        "description": "Has relocation finished and is ready to be cleaned up"
                                      }
                                    }
                                  }
                                }
                              },
                              "acceptGrowCapacityPoolForShortTermCloneSplit": {
                                "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                                "type": "string",
                                "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "enum": [
                                  "Accepted",
                                  "Declined"
                                ],
                                "x-ms-enum": {
                                  "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Accepted",
                                      "description": "Auto grow capacity pool for short term clone split is accepted."
                                    },
                                    {
                                      "value": "Declined",
                                      "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                                    }
                                  ]
                                },
                                "example": "Accepted"
                              },
                              "isRestoring": {
                                "type": "boolean",
                                "description": "Restoring",
                                "readOnly": true
                              },
                              "snapshotDirectoryVisible": {
                                "type": "boolean",
                                "default": true,
                                "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                              },
                              "kerberosEnabled": {
                                "type": "boolean",
                                "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "example": false,
                                "default": false
                              },
                              "securityStyle": {
                                "type": "string",
                                "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                                "default": "unix",
                                "enum": [
                                  "ntfs",
                                  "unix"
                                ],
                                "x-ms-enum": {
                                  "name": "SecurityStyle",
                                  "modelAsString": true
                                },
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "smbEncryption": {
                                "type": "boolean",
                                "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                                "example": false,
                                "default": false
                              },
                              "smbAccessBasedEnumeration": {
                                "title": "smbAccessBasedEnumeration",
                                "type": "string",
                                "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "smbAccessBasedEnumeration",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Disabled",
                                      "description": "smbAccessBasedEnumeration share setting is disabled"
                                    },
                                    {
                                      "value": "Enabled",
                                      "description": "smbAccessBasedEnumeration share setting is enabled"
                                    }
                                  ]
                                },
                                "x-nullable": true,
                                "example": "Enabled"
                              },
                              "smbNonBrowsable": {
                                "title": "smbNonBrowsable",
                                "type": "string",
                                "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "smbNonBrowsable",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Disabled",
                                      "description": "smbNonBrowsable share setting is disabled"
                                    },
                                    {
                                      "value": "Enabled",
                                      "description": "smbNonBrowsable share setting is enabled"
                                    }
                                  ]
                                },
                                "example": "Enabled"
                              },
                              "smbContinuouslyAvailable": {
                                "type": "boolean",
                                "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                                "example": false,
                                "default": false
                              },
                              "throughputMibps": {
                                "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                                "type": "number",
                                "x-nullable": true,
                                "example": 128.223
                              },
                              "actualThroughputMibps": {
                                "type": "number",
                                "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                                "example": 164.221,
                                "readOnly": true
                              },
                              "encryptionKeySource": {
                                "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                                "type": "string",
                                "enum": [
                                  "Microsoft.NetApp",
                                  "Microsoft.KeyVault"
                                ],
                                "x-ms-enum": {
                                  "name": "EncryptionKeySource",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Microsoft.NetApp",
                                      "description": "Microsoft-managed key encryption"
                                    },
                                    {
                                      "value": "Microsoft.KeyVault",
                                      "description": "Customer-managed key encryption"
                                    }
                                  ]
                                },
                                "default": "Microsoft.NetApp"
                              },
                              "keyVaultPrivateEndpointResourceId": {
                                "type": "string",
                                "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                              },
                              "ldapEnabled": {
                                "type": "boolean",
                                "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                                "example": false,
                                "default": false,
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "coolAccess": {
                                "type": "boolean",
                                "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                                "example": false,
                                "default": false
                              },
                              "coolnessPeriod": {
                                "type": "integer",
                                "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                                "example": 7,
                                "minimum": 2,
                                "maximum": 183,
                                "format": "int32"
                              },
                              "coolAccessRetrievalPolicy": {
                                "type": "string",
                                "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                                "enum": [
                                  "Default",
                                  "OnRead",
                                  "Never"
                                ],
                                "x-ms-enum": {
                                  "name": "coolAccessRetrievalPolicy",
                                  "modelAsString": true
                                }
                              },
                              "coolAccessTieringPolicy": {
                                "type": "string",
                                "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                                "enum": [
                                  "Auto",
                                  "SnapshotOnly"
                                ],
                                "x-ms-enum": {
                                  "name": "coolAccessTieringPolicy",
                                  "modelAsString": true
                                }
                              },
                              "unixPermissions": {
                                "type": "string",
                                "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                                "minLength": 4,
                                "maxLength": 4,
                                "x-nullable": true,
                                "example": "0770"
                              },
                              "cloneProgress": {
                                "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                                "type": "integer",
                                "format": "int32",
                                "example": 10,
                                "x-nullable": true,
                                "readOnly": true
                              },
                              "fileAccessLogs": {
                                "type": "string",
                                "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                                "readOnly": true,
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "fileAccessLogs",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "fileAccessLogs are enabled"
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "fileAccessLogs are not enabled"
                                    }
                                  ]
                                },
                                "example": "Disabled",
                                "default": "Disabled"
                              },
                              "avsDataStore": {
                                "title": "avsDataStore",
                                "type": "string",
                                "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "avsDataStore",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "avsDataStore is enabled"
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "avsDataStore is disabled"
                                    }
                                  ]
                                },
                                "example": "Enabled",
                                "default": "Disabled",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "dataStoreResourceId": {
                                "title": "dataStoreResourceId",
                                "description": "Data store resource unique identifier",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "isDefaultQuotaEnabled": {
                                "type": "boolean",
                                "description": "Specifies if default quota is enabled for the volume.",
                                "example": false,
                                "default": false
                              },
                              "defaultUserQuotaInKiBs": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                                "example": 4,
                                "default": 0
                              },
                              "defaultGroupQuotaInKiBs": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                                "example": 4,
                                "default": 0
                              },
                              "maximumNumberOfFiles": {
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true,
                                "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                                "example": 100000000
                              },
                              "volumeGroupName": {
                                "type": "string",
                                "description": "Volume Group Name",
                                "readOnly": true
                              },
                              "capacityPoolResourceId": {
                                "type": "string",
                                "description": "Pool Resource Id used in case of creating a volume through volume group"
                              },
                              "proximityPlacementGroup": {
                                "type": "string",
                                "description": "Proximity placement group associated with the volume",
                                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                              },
                              "t2Network": {
                                "type": "string",
                                "description": "T2 network information",
                                "example": "Test-T2-Alias",
                                "readOnly": true
                              },
                              "volumeSpecName": {
                                "type": "string",
                                "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                                "example": "Data"
                              },
                              "encrypted": {
                                "type": "boolean",
                                "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                                "readOnly": true
                              },
                              "placementRules": {
                                "title": "Volume placement rules",
                                "description": "Application specific placement rules for the particular volume",
                                "type": "array",
                                "items": {
                                  "description": "Application specific parameters for the placement of volumes in the volume group",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "value"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                                      "example": "key1"
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                                      "example": "value1"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "key"
                                ]
                              },
                              "enableSubvolumes": {
                                "type": "string",
                                "description": "Flag indicating whether subvolume operations are enabled on the volume",
                                "example": "Enabled",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "enableSubvolumes",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "subvolumes are enabled"
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "subvolumes are not enabled"
                                    }
                                  ]
                                }
                              },
                              "provisionedAvailabilityZone": {
                                "title": "Provisioned Availability Zone",
                                "type": "string",
                                "readOnly": true,
                                "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                                "example": "2",
                                "x-nullable": true
                              },
                              "isLargeVolume": {
                                "title": "Is Large Volume",
                                "type": "boolean",
                                "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                                "example": false,
                                "default": false,
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "originatingResourceId": {
                                "title": "Originating Resource Id",
                                "type": "string",
                                "description": "Id of the snapshot or backup that the volume is restored from.",
                                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                                "readOnly": true,
                                "x-nullable": true
                              },
                              "inheritedSizeInBytes": {
                                "title": "inheritedSizeInBytes",
                                "type": "integer",
                                "format": "int64",
                                "description": "Space shared by short term clone volume with parent volume in bytes.",
                                "readOnly": true,
                                "x-nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeGroupName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volumeGroup",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "201": {
            "description": "Volume group created",
            "schema": {
              "description": "Volume group resource for create",
              "type": "object",
              "properties": {
                "location": {
                  "type": "string",
                  "description": "Resource location",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "properties": {
                  "description": "Volume group properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "description": "Azure lifecycle management",
                      "example": "Available",
                      "readOnly": true
                    },
                    "groupMetaData": {
                      "title": "groupMetaData",
                      "description": "Volume group details",
                      "type": "object",
                      "properties": {
                        "groupDescription": {
                          "type": "string",
                          "description": "Group Description",
                          "example": "group description"
                        },
                        "applicationType": {
                          "type": "string",
                          "description": "Application Type",
                          "enum": [
                            "SAP-HANA",
                            "ORACLE"
                          ],
                          "x-ms-enum": {
                            "name": "ApplicationType",
                            "modelAsString": true
                          },
                          "example": "SAP-HANA"
                        },
                        "applicationIdentifier": {
                          "type": "string",
                          "description": "Application specific identifier",
                          "example": "SH1"
                        },
                        "globalPlacementRules": {
                          "title": "Global volume placement rules",
                          "description": "Application specific placement rules for the volume group",
                          "type": "array",
                          "items": {
                            "description": "Application specific parameters for the placement of volumes in the volume group",
                            "type": "object",
                            "required": [
                              "key",
                              "value"
                            ],
                            "properties": {
                              "key": {
                                "type": "string",
                                "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                                "example": "key1"
                              },
                              "value": {
                                "type": "string",
                                "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                                "example": "value1"
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "key"
                          ]
                        },
                        "volumesCount": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Number of volumes in volume group",
                          "example": 5,
                          "readOnly": true
                        }
                      }
                    },
                    "volumes": {
                      "description": "List of volumes from group",
                      "type": "array",
                      "items": {
                        "description": "Volume resource",
                        "type": "object",
                        "x-ms-azure-resource": true,
                        "required": [
                          "properties"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Resource Id"
                          },
                          "name": {
                            "type": "string",
                            "description": "Resource name"
                          },
                          "type": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Resource type"
                          },
                          "tags": {
                            "description": "Resource tags",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "zones": {
                            "type": "array",
                            "description": "Availability Zone",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "items": {
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1,
                              "example": "1"
                            }
                          },
                          "properties": {
                            "description": "Volume properties",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "required": [
                              "creationToken",
                              "usageThreshold",
                              "subnetId"
                            ],
                            "properties": {
                              "fileSystemId": {
                                "title": "FileSystem ID",
                                "type": "string",
                                "readOnly": true,
                                "description": "Unique FileSystem Identifier.",
                                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                              },
                              "creationToken": {
                                "title": "Creation Token or File Path",
                                "type": "string",
                                "description": "A unique file path for the volume. Used when creating mount targets",
                                "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                                "minLength": 1,
                                "maxLength": 80,
                                "example": "some-amazing-filepath",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "serviceLevel": {
                                "title": "serviceLevel",
                                "type": "string",
                                "description": "The service level of the file system",
                                "enum": [
                                  "Standard",
                                  "Premium",
                                  "Ultra",
                                  "StandardZRS",
                                  "Flexible"
                                ],
                                "default": "Premium",
                                "x-ms-enum": {
                                  "name": "ServiceLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Standard",
                                      "description": "Standard service level"
                                    },
                                    {
                                      "value": "Premium",
                                      "description": "Premium service level"
                                    },
                                    {
                                      "value": "Ultra",
                                      "description": "Ultra service level"
                                    },
                                    {
                                      "value": "StandardZRS",
                                      "description": "Zone redundant storage service level. This will be deprecated soon."
                                    },
                                    {
                                      "value": "Flexible",
                                      "description": "Flexible service level"
                                    }
                                  ]
                                }
                              },
                              "usageThreshold": {
                                "title": "usageThreshold",
                                "type": "integer",
                                "format": "int64",
                                "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                                "minimum": 53687091200,
                                "maximum": 2638827906662400,
                                "default": 107374182400,
                                "example": 107374182400
                              },
                              "exportPolicy": {
                                "title": "exportPolicy",
                                "description": "Set of export policy rules",
                                "properties": {
                                  "rules": {
                                    "title": "Export policy rule",
                                    "description": "Export policy rule",
                                    "type": "array",
                                    "items": {
                                      "description": "Volume Export Policy Rule",
                                      "type": "object",
                                      "properties": {
                                        "ruleIndex": {
                                          "type": "integer",
                                          "description": "Order index",
                                          "format": "int32"
                                        },
                                        "unixReadOnly": {
                                          "type": "boolean",
                                          "description": "Read only access"
                                        },
                                        "unixReadWrite": {
                                          "type": "boolean",
                                          "description": "Read and write access"
                                        },
                                        "kerberos5ReadOnly": {
                                          "type": "boolean",
                                          "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "kerberos5ReadWrite": {
                                          "type": "boolean",
                                          "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "kerberos5iReadOnly": {
                                          "type": "boolean",
                                          "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "kerberos5iReadWrite": {
                                          "type": "boolean",
                                          "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "kerberos5pReadOnly": {
                                          "type": "boolean",
                                          "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "kerberos5pReadWrite": {
                                          "type": "boolean",
                                          "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                                          "example": false,
                                          "default": false
                                        },
                                        "cifs": {
                                          "type": "boolean",
                                          "description": "Allows CIFS protocol"
                                        },
                                        "nfsv3": {
                                          "type": "boolean",
                                          "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                                        },
                                        "nfsv41": {
                                          "type": "boolean",
                                          "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                                        },
                                        "allowedClients": {
                                          "type": "string",
                                          "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                                        },
                                        "hasRootAccess": {
                                          "type": "boolean",
                                          "description": "Has root access to volume",
                                          "example": true,
                                          "default": true
                                        },
                                        "chownMode": {
                                          "type": "string",
                                          "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                                          "default": "Restricted",
                                          "enum": [
                                            "Restricted",
                                            "Unrestricted"
                                          ],
                                          "x-ms-enum": {
                                            "name": "ChownMode",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "ruleIndex"
                                    ]
                                  }
                                }
                              },
                              "protocolTypes": {
                                "title": "protocolTypes",
                                "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "NFSv4.1"
                                ]
                              },
                              "provisioningState": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Azure lifecycle management"
                              },
                              "snapshotId": {
                                "title": "Snapshot ID",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                                    }
                                  ]
                                },
                                "x-nullable": true,
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "description": "Resource identifier used to identify the Snapshot.",
                                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                              },
                              "deleteBaseSnapshot": {
                                "type": "boolean",
                                "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                              },
                              "backupId": {
                                "title": "Backup ID",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                                    }
                                  ]
                                },
                                "x-nullable": true,
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "description": "Resource identifier used to identify the Backup.",
                                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                              },
                              "baremetalTenantId": {
                                "title": "Baremetal Tenant ID",
                                "type": "string",
                                "readOnly": true,
                                "description": "Unique Baremetal Tenant Identifier.",
                                "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                              },
                              "subnetId": {
                                "type": "string",
                                "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                              },
                              "networkFeatures": {
                                "title": "Network features",
                                "description": "Network features available to the volume, or current state of update.",
                                "type": "string",
                                "enum": [
                                  "Basic",
                                  "Standard",
                                  "Basic_Standard",
                                  "Standard_Basic"
                                ],
                                "x-ms-enum": {
                                  "name": "NetworkFeatures",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Basic",
                                      "description": "Basic network features."
                                    },
                                    {
                                      "value": "Standard",
                                      "description": "Standard network features."
                                    },
                                    {
                                      "value": "Basic_Standard",
                                      "description": "Updating from Basic to Standard network features."
                                    },
                                    {
                                      "value": "Standard_Basic",
                                      "description": "Updating from Standard to Basic network features."
                                    }
                                  ]
                                },
                                "example": "Standard",
                                "default": "Basic",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "effectiveNetworkFeatures": {
                                "title": "Network features",
                                "description": "Network features available to the volume, or current state of update.",
                                "type": "string",
                                "enum": [
                                  "Basic",
                                  "Standard",
                                  "Basic_Standard",
                                  "Standard_Basic"
                                ],
                                "x-ms-enum": {
                                  "name": "NetworkFeatures",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Basic",
                                      "description": "Basic network features."
                                    },
                                    {
                                      "value": "Standard",
                                      "description": "Standard network features."
                                    },
                                    {
                                      "value": "Basic_Standard",
                                      "description": "Updating from Basic to Standard network features."
                                    },
                                    {
                                      "value": "Standard_Basic",
                                      "description": "Updating from Standard to Basic network features."
                                    }
                                  ]
                                },
                                "example": "Standard",
                                "default": "Basic",
                                "readOnly": true
                              },
                              "networkSiblingSetId": {
                                "title": "Network Sibling Set ID",
                                "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                                "type": "string",
                                "readOnly": true,
                                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                              },
                              "storageToNetworkProximity": {
                                "title": "Storage to Network Proximity",
                                "description": "Provides storage to network proximity information for the volume.",
                                "type": "string",
                                "enum": [
                                  "Default",
                                  "T1",
                                  "T2",
                                  "AcrossT2"
                                ],
                                "readOnly": true,
                                "x-ms-enum": {
                                  "name": "VolumeStorageToNetworkProximity",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Default",
                                      "description": "Basic storage to network connectivity."
                                    },
                                    {
                                      "value": "T1",
                                      "description": "Standard T1 storage to network connectivity."
                                    },
                                    {
                                      "value": "T2",
                                      "description": "Standard T2 storage to network connectivity."
                                    },
                                    {
                                      "value": "AcrossT2",
                                      "description": "Standard AcrossT2 storage to network connectivity."
                                    }
                                  ]
                                },
                                "example": "T1"
                              },
                              "mountTargets": {
                                "title": "mountTargets",
                                "type": "array",
                                "readOnly": true,
                                "description": "List of mount targets",
                                "items": {
                                  "description": "Mount target properties",
                                  "type": "object",
                                  "required": [
                                    "fileSystemId"
                                  ],
                                  "properties": {
                                    "mountTargetId": {
                                      "title": "mountTargetId",
                                      "type": "string",
                                      "readOnly": true,
                                      "description": "UUID v4 used to identify the MountTarget",
                                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                                    },
                                    "fileSystemId": {
                                      "title": "fileSystemId",
                                      "type": "string",
                                      "description": "UUID v4 used to identify the MountTarget",
                                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                                    },
                                    "ipAddress": {
                                      "title": "ipAddress",
                                      "description": "The mount target's IPv4 address",
                                      "type": "string",
                                      "readOnly": true,
                                      "example": "1.2.3.4"
                                    },
                                    "smbServerFqdn": {
                                      "title": "smbServerFQDN",
                                      "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                                      "type": "string",
                                      "example": "fullyqualified.domainname.com"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "fileSystemId"
                                ]
                              },
                              "volumeType": {
                                "type": "string",
                                "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                                "example": "DataProtection",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "dataProtection": {
                                "title": "DataProtection",
                                "description": "DataProtection type volumes include an object containing details of the replication",
                                "properties": {
                                  "backup": {
                                    "title": "Backup",
                                    "description": "Backup Properties",
                                    "type": "object",
                                    "properties": {
                                      "backupPolicyId": {
                                        "type": "string",
                                        "format": "arm-id",
                                        "x-ms-arm-id-details": {
                                          "allowedResources": [
                                            {
                                              "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                            }
                                          ]
                                        },
                                        "description": "Backup Policy Resource ID"
                                      },
                                      "policyEnforced": {
                                        "type": "boolean",
                                        "description": "Policy Enforced"
                                      },
                                      "backupVaultId": {
                                        "type": "string",
                                        "format": "arm-id",
                                        "x-ms-arm-id-details": {
                                          "allowedResources": [
                                            {
                                              "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                            }
                                          ]
                                        },
                                        "description": "Backup Vault Resource ID"
                                      }
                                    }
                                  },
                                  "replication": {
                                    "title": "Replication",
                                    "description": "Replication properties",
                                    "type": "object",
                                    "properties": {
                                      "replicationId": {
                                        "type": "string",
                                        "description": "Id",
                                        "readOnly": true
                                      },
                                      "endpointType": {
                                        "type": "string",
                                        "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                                        "enum": [
                                          "src",
                                          "dst"
                                        ],
                                        "x-ms-enum": {
                                          "name": "EndpointType",
                                          "modelAsString": true
                                        },
                                        "readOnly": true
                                      },
                                      "replicationSchedule": {
                                        "type": "string",
                                        "description": "Schedule",
                                        "enum": [
                                          "_10minutely",
                                          "hourly",
                                          "daily"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ReplicationSchedule",
                                          "modelAsString": true
                                        }
                                      },
                                      "remoteVolumeResourceId": {
                                        "type": "string",
                                        "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                                      },
                                      "remotePath": {
                                        "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                                        "type": "object",
                                        "x-ms-mutability": [
                                          "read",
                                          "create"
                                        ],
                                        "required": [
                                          "externalHostName",
                                          "serverName",
                                          "volumeName"
                                        ],
                                        "properties": {
                                          "externalHostName": {
                                            "type": "string",
                                            "description": "The Path to a ONTAP Host"
                                          },
                                          "serverName": {
                                            "type": "string",
                                            "description": "The name of a server on the ONTAP Host"
                                          },
                                          "volumeName": {
                                            "type": "string",
                                            "description": "The name of a volume on the server"
                                          }
                                        }
                                      },
                                      "remoteVolumeRegion": {
                                        "type": "string",
                                        "description": "The remote region for the other end of the Volume Replication."
                                      },
                                      "destinationReplications": {
                                        "description": "A list of destination replications",
                                        "type": "array",
                                        "readOnly": true,
                                        "items": {
                                          "description": "Destination replication properties",
                                          "type": "object",
                                          "properties": {
                                            "resourceId": {
                                              "type": "string",
                                              "format": "arm-id",
                                              "x-ms-arm-id-details": {
                                                "allowedResources": [
                                                  {
                                                    "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                                  }
                                                ]
                                              },
                                              "description": "The resource ID of the remote volume"
                                            },
                                            "replicationType": {
                                              "type": "string",
                                              "description": "Indicates whether the replication is cross zone or cross region.",
                                              "enum": [
                                                "CrossRegionReplication",
                                                "CrossZoneReplication"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ReplicationType",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "CrossRegionReplication",
                                                    "description": "Cross region replication"
                                                  },
                                                  {
                                                    "value": "CrossZoneReplication",
                                                    "description": "Cross zone replication"
                                                  }
                                                ]
                                              }
                                            },
                                            "region": {
                                              "type": "string",
                                              "description": "The remote region for the destination volume."
                                            },
                                            "zone": {
                                              "type": "string",
                                              "description": "The remote zone for the destination volume."
                                            }
                                          }
                                        },
                                        "x-ms-identifiers": [
                                          "resourceId"
                                        ]
                                      }
                                    }
                                  },
                                  "snapshot": {
                                    "title": "Snapshot",
                                    "description": "Snapshot properties.",
                                    "type": "object",
                                    "properties": {
                                      "snapshotPolicyId": {
                                        "type": "string",
                                        "description": "Snapshot Policy ResourceId"
                                      }
                                    }
                                  },
                                  "volumeRelocation": {
                                    "title": "VolumeRelocation",
                                    "description": "VolumeRelocation properties",
                                    "type": "object",
                                    "properties": {
                                      "relocationRequested": {
                                        "type": "boolean",
                                        "description": "Has relocation been requested for this volume"
                                      },
                                      "readyToBeFinalized": {
                                        "type": "boolean",
                                        "readOnly": true,
                                        "description": "Has relocation finished and is ready to be cleaned up"
                                      }
                                    }
                                  }
                                }
                              },
                              "acceptGrowCapacityPoolForShortTermCloneSplit": {
                                "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                                "type": "string",
                                "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "enum": [
                                  "Accepted",
                                  "Declined"
                                ],
                                "x-ms-enum": {
                                  "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Accepted",
                                      "description": "Auto grow capacity pool for short term clone split is accepted."
                                    },
                                    {
                                      "value": "Declined",
                                      "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                                    }
                                  ]
                                },
                                "example": "Accepted"
                              },
                              "isRestoring": {
                                "type": "boolean",
                                "description": "Restoring",
                                "readOnly": true
                              },
                              "snapshotDirectoryVisible": {
                                "type": "boolean",
                                "default": true,
                                "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                              },
                              "kerberosEnabled": {
                                "type": "boolean",
                                "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "example": false,
                                "default": false
                              },
                              "securityStyle": {
                                "type": "string",
                                "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                                "default": "unix",
                                "enum": [
                                  "ntfs",
                                  "unix"
                                ],
                                "x-ms-enum": {
                                  "name": "SecurityStyle",
                                  "modelAsString": true
                                },
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "smbEncryption": {
                                "type": "boolean",
                                "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                                "example": false,
                                "default": false
                              },
                              "smbAccessBasedEnumeration": {
                                "title": "smbAccessBasedEnumeration",
                                "type": "string",
                                "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "smbAccessBasedEnumeration",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Disabled",
                                      "description": "smbAccessBasedEnumeration share setting is disabled"
                                    },
                                    {
                                      "value": "Enabled",
                                      "description": "smbAccessBasedEnumeration share setting is enabled"
                                    }
                                  ]
                                },
                                "x-nullable": true,
                                "example": "Enabled"
                              },
                              "smbNonBrowsable": {
                                "title": "smbNonBrowsable",
                                "type": "string",
                                "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "smbNonBrowsable",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Disabled",
                                      "description": "smbNonBrowsable share setting is disabled"
                                    },
                                    {
                                      "value": "Enabled",
                                      "description": "smbNonBrowsable share setting is enabled"
                                    }
                                  ]
                                },
                                "example": "Enabled"
                              },
                              "smbContinuouslyAvailable": {
                                "type": "boolean",
                                "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                                "example": false,
                                "default": false
                              },
                              "throughputMibps": {
                                "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                                "type": "number",
                                "x-nullable": true,
                                "example": 128.223
                              },
                              "actualThroughputMibps": {
                                "type": "number",
                                "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                                "example": 164.221,
                                "readOnly": true
                              },
                              "encryptionKeySource": {
                                "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                                "type": "string",
                                "enum": [
                                  "Microsoft.NetApp",
                                  "Microsoft.KeyVault"
                                ],
                                "x-ms-enum": {
                                  "name": "EncryptionKeySource",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Microsoft.NetApp",
                                      "description": "Microsoft-managed key encryption"
                                    },
                                    {
                                      "value": "Microsoft.KeyVault",
                                      "description": "Customer-managed key encryption"
                                    }
                                  ]
                                },
                                "default": "Microsoft.NetApp"
                              },
                              "keyVaultPrivateEndpointResourceId": {
                                "type": "string",
                                "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                              },
                              "ldapEnabled": {
                                "type": "boolean",
                                "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                                "example": false,
                                "default": false,
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "coolAccess": {
                                "type": "boolean",
                                "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                                "example": false,
                                "default": false
                              },
                              "coolnessPeriod": {
                                "type": "integer",
                                "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                                "example": 7,
                                "minimum": 2,
                                "maximum": 183,
                                "format": "int32"
                              },
                              "coolAccessRetrievalPolicy": {
                                "type": "string",
                                "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                                "enum": [
                                  "Default",
                                  "OnRead",
                                  "Never"
                                ],
                                "x-ms-enum": {
                                  "name": "coolAccessRetrievalPolicy",
                                  "modelAsString": true
                                }
                              },
                              "coolAccessTieringPolicy": {
                                "type": "string",
                                "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                                "enum": [
                                  "Auto",
                                  "SnapshotOnly"
                                ],
                                "x-ms-enum": {
                                  "name": "coolAccessTieringPolicy",
                                  "modelAsString": true
                                }
                              },
                              "unixPermissions": {
                                "type": "string",
                                "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                                "minLength": 4,
                                "maxLength": 4,
                                "x-nullable": true,
                                "example": "0770"
                              },
                              "cloneProgress": {
                                "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                                "type": "integer",
                                "format": "int32",
                                "example": 10,
                                "x-nullable": true,
                                "readOnly": true
                              },
                              "fileAccessLogs": {
                                "type": "string",
                                "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                                "readOnly": true,
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "fileAccessLogs",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "fileAccessLogs are enabled"
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "fileAccessLogs are not enabled"
                                    }
                                  ]
                                },
                                "example": "Disabled",
                                "default": "Disabled"
                              },
                              "avsDataStore": {
                                "title": "avsDataStore",
                                "type": "string",
                                "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "avsDataStore",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "avsDataStore is enabled"
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "avsDataStore is disabled"
                                    }
                                  ]
                                },
                                "example": "Enabled",
                                "default": "Disabled",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "dataStoreResourceId": {
                                "title": "dataStoreResourceId",
                                "description": "Data store resource unique identifier",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "isDefaultQuotaEnabled": {
                                "type": "boolean",
                                "description": "Specifies if default quota is enabled for the volume.",
                                "example": false,
                                "default": false
                              },
                              "defaultUserQuotaInKiBs": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                                "example": 4,
                                "default": 0
                              },
                              "defaultGroupQuotaInKiBs": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                                "example": 4,
                                "default": 0
                              },
                              "maximumNumberOfFiles": {
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true,
                                "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                                "example": 100000000
                              },
                              "volumeGroupName": {
                                "type": "string",
                                "description": "Volume Group Name",
                                "readOnly": true
                              },
                              "capacityPoolResourceId": {
                                "type": "string",
                                "description": "Pool Resource Id used in case of creating a volume through volume group"
                              },
                              "proximityPlacementGroup": {
                                "type": "string",
                                "description": "Proximity placement group associated with the volume",
                                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                              },
                              "t2Network": {
                                "type": "string",
                                "description": "T2 network information",
                                "example": "Test-T2-Alias",
                                "readOnly": true
                              },
                              "volumeSpecName": {
                                "type": "string",
                                "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                                "example": "Data"
                              },
                              "encrypted": {
                                "type": "boolean",
                                "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                                "readOnly": true
                              },
                              "placementRules": {
                                "title": "Volume placement rules",
                                "description": "Application specific placement rules for the particular volume",
                                "type": "array",
                                "items": {
                                  "description": "Application specific parameters for the placement of volumes in the volume group",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "value"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": "string",
                                      "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                                      "example": "key1"
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                                      "example": "value1"
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "key"
                                ]
                              },
                              "enableSubvolumes": {
                                "type": "string",
                                "description": "Flag indicating whether subvolume operations are enabled on the volume",
                                "example": "Enabled",
                                "default": "Disabled",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "enableSubvolumes",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "subvolumes are enabled"
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "subvolumes are not enabled"
                                    }
                                  ]
                                }
                              },
                              "provisionedAvailabilityZone": {
                                "title": "Provisioned Availability Zone",
                                "type": "string",
                                "readOnly": true,
                                "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                                "example": "2",
                                "x-nullable": true
                              },
                              "isLargeVolume": {
                                "title": "Is Large Volume",
                                "type": "boolean",
                                "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                                "example": false,
                                "default": false,
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ]
                              },
                              "originatingResourceId": {
                                "title": "Originating Resource Id",
                                "type": "string",
                                "description": "Id of the snapshot or backup that the volume is restored from.",
                                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                                "readOnly": true,
                                "x-nullable": true
                              },
                              "inheritedSizeInBytes": {
                                "title": "inheritedSizeInBytes",
                                "type": "integer",
                                "format": "int64",
                                "description": "Space shared by short term clone volume with parent volume in bytes.",
                                "readOnly": true,
                                "x-nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Volume Groups"
        ],
        "operationId": "VolumeGroups_Delete",
        "summary": "Delete a volume group",
        "description": "Delete the specified volume group only if there are no volumes under volume group.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeGroupName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volumeGroup",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted -- Delete request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes": {
      "get": {
        "tags": [
          "Subvolumes"
        ],
        "operationId": "Subvolumes_ListByVolume",
        "summary": "List of all the subvolumes",
        "description": "Returns a list of the subvolumes in the volume",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of Subvolumes",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A list of Subvolumes",
                  "type": "array",
                  "items": {
                    "description": "Subvolume Information properties",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Subvolume Properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "path": {
                            "title": "path",
                            "type": "string",
                            "description": "Path to the subvolume",
                            "example": "/subvolume1"
                          },
                          "size": {
                            "title": "size",
                            "type": "integer",
                            "x-nullable": true,
                            "format": "int64",
                            "description": "Truncate subvolume to the provided size in bytes",
                            "example": 5
                          },
                          "parentPath": {
                            "title": "name",
                            "x-nullable": true,
                            "type": "string",
                            "description": "parent path to the subvolume",
                            "example": "/parentPath"
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "Azure lifecycle management",
                            "readOnly": true,
                            "example": "Available"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of results."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes/{subvolumeName}": {
      "get": {
        "tags": [
          "Subvolumes"
        ],
        "summary": "Get the path associated with the subvolumeName",
        "description": "Returns the path associated with the subvolumeName provided",
        "operationId": "Subvolumes_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subvolumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subvolume.",
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Subvolume Information properties",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Subvolume Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "path": {
                      "title": "path",
                      "type": "string",
                      "description": "Path to the subvolume",
                      "example": "/subvolume1"
                    },
                    "size": {
                      "title": "size",
                      "type": "integer",
                      "x-nullable": true,
                      "format": "int64",
                      "description": "Truncate subvolume to the provided size in bytes",
                      "example": 5
                    },
                    "parentPath": {
                      "title": "name",
                      "x-nullable": true,
                      "type": "string",
                      "description": "parent path to the subvolume",
                      "example": "/parentPath"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "example": "Available"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Subvolumes"
        ],
        "summary": "Create or clone a new subvolume",
        "description": "Creates a subvolume in the path or clones the subvolume mentioned in the parentPath",
        "operationId": "Subvolumes_Create",
        "parameters": [
          {
            "name": "body",
            "description": "Subvolume object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Subvolume Information properties",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Subvolume Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "path": {
                      "title": "path",
                      "type": "string",
                      "description": "Path to the subvolume",
                      "example": "/subvolume1"
                    },
                    "size": {
                      "title": "size",
                      "type": "integer",
                      "x-nullable": true,
                      "format": "int64",
                      "description": "Truncate subvolume to the provided size in bytes",
                      "example": 5
                    },
                    "parentPath": {
                      "title": "name",
                      "x-nullable": true,
                      "type": "string",
                      "description": "parent path to the subvolume",
                      "example": "/parentPath"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "example": "Available"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subvolumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subvolume.",
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK - updated",
            "schema": {
              "description": "Subvolume Information properties",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Subvolume Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "path": {
                      "title": "path",
                      "type": "string",
                      "description": "Path to the subvolume",
                      "example": "/subvolume1"
                    },
                    "size": {
                      "title": "size",
                      "type": "integer",
                      "x-nullable": true,
                      "format": "int64",
                      "description": "Truncate subvolume to the provided size in bytes",
                      "example": 5
                    },
                    "parentPath": {
                      "title": "name",
                      "x-nullable": true,
                      "type": "string",
                      "description": "parent path to the subvolume",
                      "example": "/parentPath"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "example": "Available"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Subvolume created",
            "schema": {
              "description": "Subvolume Information properties",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Subvolume Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "path": {
                      "title": "path",
                      "type": "string",
                      "description": "Path to the subvolume",
                      "example": "/subvolume1"
                    },
                    "size": {
                      "title": "size",
                      "type": "integer",
                      "x-nullable": true,
                      "format": "int64",
                      "description": "Truncate subvolume to the provided size in bytes",
                      "example": 5
                    },
                    "parentPath": {
                      "title": "name",
                      "x-nullable": true,
                      "type": "string",
                      "description": "parent path to the subvolume",
                      "example": "/parentPath"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "example": "Available"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted -- Create request accepted; operation will complete asynchronously"
          }
        }
      },
      "patch": {
        "tags": [
          "Subvolumes"
        ],
        "operationId": "Subvolumes_Update",
        "summary": "Update a subvolume",
        "description": "Patch a subvolume",
        "parameters": [
          {
            "name": "body",
            "description": "Subvolume object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Subvolume Patch Request properties",
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "properties": {
                  "description": "Subvolume Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "size": {
                      "title": "size",
                      "type": "integer",
                      "x-nullable": true,
                      "format": "int64",
                      "description": "Truncate subvolume to the provided size in bytes",
                      "example": 5
                    },
                    "path": {
                      "title": "path",
                      "type": "string",
                      "description": "path to the subvolume",
                      "example": "/pathToSubvolume"
                    }
                  }
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subvolumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subvolume.",
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "description": "Subvolume Information properties",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Subvolume Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "path": {
                      "title": "path",
                      "type": "string",
                      "description": "Path to the subvolume",
                      "example": "/subvolume1"
                    },
                    "size": {
                      "title": "size",
                      "type": "integer",
                      "x-nullable": true,
                      "format": "int64",
                      "description": "Truncate subvolume to the provided size in bytes",
                      "example": 5
                    },
                    "parentPath": {
                      "title": "name",
                      "x-nullable": true,
                      "type": "string",
                      "description": "parent path to the subvolume",
                      "example": "/parentPath"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Azure lifecycle management",
                      "readOnly": true,
                      "example": "Available"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "Accepted -- Update request accepted; operation will complete asynchronously"
          }
        }
      },
      "delete": {
        "tags": [
          "Subvolumes"
        ],
        "operationId": "Subvolumes_Delete",
        "summary": "Delete a subvolume",
        "description": "Delete subvolume",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subvolumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subvolume.",
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted -- Delete request accepted; operation will complete asynchronously"
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/subvolumes/{subvolumeName}/getMetadata": {
      "post": {
        "tags": [
          "Subvolumes"
        ],
        "operationId": "Subvolumes_GetMetadata",
        "summary": "Describe a subvolume",
        "description": "Get details of the specified subvolume",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "subvolumeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the subvolume.",
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the post subvolume and action is to get metadata of the subvolume.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource Id"
                },
                "name": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource name"
                },
                "type": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Resource type"
                },
                "properties": {
                  "description": "It represents the minimal properties of the subvolume.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "path": {
                      "title": "path",
                      "type": "string",
                      "description": "Path to the subvolume",
                      "example": "/subvolume1"
                    },
                    "parentPath": {
                      "title": "parentpath",
                      "type": "string",
                      "description": "Path to the parent subvolume",
                      "example": "/parentPath"
                    },
                    "size": {
                      "title": "size",
                      "type": "integer",
                      "format": "int64",
                      "description": "Size of subvolume",
                      "example": 5
                    },
                    "bytesUsed": {
                      "title": "bytesUsed",
                      "type": "integer",
                      "format": "int64",
                      "description": "Bytes used",
                      "example": 5
                    },
                    "permissions": {
                      "title": "permissions",
                      "type": "string",
                      "description": "Permissions of the subvolume",
                      "example": "777"
                    },
                    "creationTimeStamp": {
                      "title": "creationTimeStamp",
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation time and date",
                      "example": "2017-08-15T13:23:33Z"
                    },
                    "accessedTimeStamp": {
                      "title": "accessedTimeStamp",
                      "type": "string",
                      "format": "date-time",
                      "description": "Most recent access time and date",
                      "example": "2017-08-15T13:23:33Z"
                    },
                    "modifiedTimeStamp": {
                      "title": "modifiedTimeStamp",
                      "type": "string",
                      "format": "date-time",
                      "description": "Most recent modification time and date",
                      "example": "2017-08-15T13:23:33Z"
                    },
                    "changedTimeStamp": {
                      "title": "changedTimeStamp",
                      "type": "string",
                      "format": "date-time",
                      "description": "Most recent change time and date",
                      "example": "2017-08-15T13:23:33Z"
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Azure lifecycle management",
                      "example": "Available"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/latestBackupStatus/current": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "Get the latest backup status of a volume",
        "description": "Get the latest status of the backup for a volume",
        "operationId": "Backups_GetLatestStatus",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Backup status",
              "type": "object",
              "properties": {
                "healthy": {
                  "type": "boolean",
                  "readOnly": true,
                  "description": "Backup health status"
                },
                "relationshipStatus": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Status of the backup mirror relationship",
                  "enum": [
                    "Idle",
                    "Transferring",
                    "Failed",
                    "Unknown"
                  ],
                  "x-ms-enum": {
                    "name": "RelationshipStatus",
                    "modelAsString": true
                  }
                },
                "mirrorState": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The status of the backup",
                  "enum": [
                    "Uninitialized",
                    "Mirrored",
                    "Broken"
                  ],
                  "x-ms-enum": {
                    "name": "MirrorState",
                    "modelAsString": true
                  }
                },
                "unhealthyReason": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Reason for the unhealthy backup relationship"
                },
                "errorMessage": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Displays error message if the backup is in an error state"
                },
                "lastTransferSize": {
                  "type": "integer",
                  "format": "int64",
                  "readOnly": true,
                  "description": "Displays the last transfer size"
                },
                "lastTransferType": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Displays the last transfer type"
                },
                "totalTransferBytes": {
                  "type": "integer",
                  "format": "int64",
                  "readOnly": true,
                  "description": "Displays the total bytes transferred"
                },
                "transferProgressBytes": {
                  "type": "integer",
                  "format": "int64",
                  "readOnly": true,
                  "description": "Displays the total number of bytes transferred for the ongoing operation"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/latestRestoreStatus/current": {
      "get": {
        "tags": [
          "Restore"
        ],
        "summary": "Get the latest restore status of a volume",
        "description": "Get the latest status of the restore for a volume",
        "operationId": "Backups_GetVolumeLatestRestoreStatus",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Restore status",
              "type": "object",
              "properties": {
                "healthy": {
                  "type": "boolean",
                  "readOnly": true,
                  "description": "Restore health status"
                },
                "relationshipStatus": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Status of the restore SnapMirror relationship",
                  "enum": [
                    "Idle",
                    "Transferring",
                    "Failed",
                    "Unknown"
                  ],
                  "x-ms-enum": {
                    "name": "RelationshipStatus",
                    "modelAsString": true
                  }
                },
                "mirrorState": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The status of the restore",
                  "enum": [
                    "Uninitialized",
                    "Mirrored",
                    "Broken"
                  ],
                  "x-ms-enum": {
                    "name": "MirrorState",
                    "modelAsString": true
                  }
                },
                "unhealthyReason": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Reason for the unhealthy restore relationship"
                },
                "errorMessage": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Displays error message if the restore is in an error state"
                },
                "totalTransferBytes": {
                  "type": "integer",
                  "format": "int64",
                  "readOnly": true,
                  "description": "Displays the total bytes transferred"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}/backups": {
      "get": {
        "tags": [
          "Backups"
        ],
        "summary": "List Backups",
        "description": "List all backups Under a Backup Vault",
        "operationId": "Backups_ListByVault",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "type": "string",
            "description": "The name of the Backup Vault",
            "x-ms-parameter-location": "method"
          },
          {
            "in": "query",
            "name": "$filter",
            "type": "string",
            "description": "An option to specify the VolumeResourceId. If present, then only returns the backups under the specified volume",
            "required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of Backups",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A list of Backups",
                  "type": "array",
                  "items": {
                    "description": "Backup under a Backup Vault",
                    "type": "object",
                    "required": [
                      "properties"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Backup Properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "required": [
                          "volumeResourceId"
                        ],
                        "properties": {
                          "backupId": {
                            "title": "backupId",
                            "type": "string",
                            "readOnly": true,
                            "description": "UUID v4 used to identify the Backup",
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                          },
                          "creationDate": {
                            "title": "creationDate",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "description": "The creation date of the backup",
                            "example": "2017-08-15 13:23:33"
                          },
                          "snapshotCreationDate": {
                            "title": "snapshotCreationDate",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "description": "The snapshot creation date of the backup",
                            "example": "2018-11-29T20:32:50.459Z",
                            "x-nullable": true
                          },
                          "completionDate": {
                            "title": "completionDate",
                            "type": "string",
                            "format": "date-time",
                            "description": "The completion date of the backup",
                            "example": "2018-11-29T20:32:50.459Z",
                            "readOnly": true,
                            "x-nullable": true
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Azure lifecycle management"
                          },
                          "size": {
                            "type": "integer",
                            "readOnly": true,
                            "description": "Size of backup in bytes",
                            "format": "int64"
                          },
                          "label": {
                            "type": "string",
                            "description": "Label for backup"
                          },
                          "backupType": {
                            "title": "backupType",
                            "type": "string",
                            "readOnly": true,
                            "description": "Type of backup Manual or Scheduled",
                            "enum": [
                              "Manual",
                              "Scheduled"
                            ],
                            "x-ms-enum": {
                              "name": "backupType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Manual",
                                  "description": "Manual backup"
                                },
                                {
                                  "value": "Scheduled",
                                  "description": "Scheduled backup"
                                }
                              ]
                            },
                            "example": "Manual"
                          },
                          "failureReason": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Failure reason"
                          },
                          "volumeResourceId": {
                            "type": "string",
                            "description": "ResourceId used to identify the Volume",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                }
                              ]
                            }
                          },
                          "useExistingSnapshot": {
                            "type": "boolean",
                            "description": "Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups",
                            "example": true,
                            "default": false,
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "snapshotName": {
                            "type": "string",
                            "description": "The name of the snapshot",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ]
                          },
                          "backupPolicyResourceId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "ResourceId used to identify the backup policy",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                }
                              ]
                            }
                          },
                          "isLargeVolume": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Specifies if the backup is for a large volume.",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of results."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}/backups/{backupName}": {
      "get": {
        "summary": "Describe the Backup under Backup Vault",
        "description": "Get the specified Backup under Backup Vault.",
        "tags": [
          "Backups"
        ],
        "operationId": "Backups_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "type": "string",
            "description": "The name of the Backup Vault",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupName",
            "type": "string",
            "in": "path",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$",
            "required": true,
            "description": "The name of the backup",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Backup under a Backup Vault",
              "type": "object",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Backup Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "volumeResourceId"
                  ],
                  "properties": {
                    "backupId": {
                      "title": "backupId",
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID v4 used to identify the Backup",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "creationDate": {
                      "title": "creationDate",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The creation date of the backup",
                      "example": "2017-08-15 13:23:33"
                    },
                    "snapshotCreationDate": {
                      "title": "snapshotCreationDate",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The snapshot creation date of the backup",
                      "example": "2018-11-29T20:32:50.459Z",
                      "x-nullable": true
                    },
                    "completionDate": {
                      "title": "completionDate",
                      "type": "string",
                      "format": "date-time",
                      "description": "The completion date of the backup",
                      "example": "2018-11-29T20:32:50.459Z",
                      "readOnly": true,
                      "x-nullable": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "size": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "Size of backup in bytes",
                      "format": "int64"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for backup"
                    },
                    "backupType": {
                      "title": "backupType",
                      "type": "string",
                      "readOnly": true,
                      "description": "Type of backup Manual or Scheduled",
                      "enum": [
                        "Manual",
                        "Scheduled"
                      ],
                      "x-ms-enum": {
                        "name": "backupType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Manual",
                            "description": "Manual backup"
                          },
                          {
                            "value": "Scheduled",
                            "description": "Scheduled backup"
                          }
                        ]
                      },
                      "example": "Manual"
                    },
                    "failureReason": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Failure reason"
                    },
                    "volumeResourceId": {
                      "type": "string",
                      "description": "ResourceId used to identify the Volume",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                          }
                        ]
                      }
                    },
                    "useExistingSnapshot": {
                      "type": "boolean",
                      "description": "Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups",
                      "example": true,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "snapshotName": {
                      "type": "string",
                      "description": "The name of the snapshot",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "backupPolicyResourceId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "ResourceId used to identify the backup policy",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                          }
                        ]
                      }
                    },
                    "isLargeVolume": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Specifies if the backup is for a large volume.",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Backups"
        ],
        "summary": "Create a backup",
        "description": "Create a backup under the Backup Vault",
        "operationId": "Backups_Create",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "type": "string",
            "description": "The name of the Backup Vault",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupName",
            "type": "string",
            "in": "path",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$",
            "required": true,
            "description": "The name of the backup",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "Backup object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Backup under a Backup Vault",
              "type": "object",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Backup Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "volumeResourceId"
                  ],
                  "properties": {
                    "backupId": {
                      "title": "backupId",
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID v4 used to identify the Backup",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "creationDate": {
                      "title": "creationDate",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The creation date of the backup",
                      "example": "2017-08-15 13:23:33"
                    },
                    "snapshotCreationDate": {
                      "title": "snapshotCreationDate",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The snapshot creation date of the backup",
                      "example": "2018-11-29T20:32:50.459Z",
                      "x-nullable": true
                    },
                    "completionDate": {
                      "title": "completionDate",
                      "type": "string",
                      "format": "date-time",
                      "description": "The completion date of the backup",
                      "example": "2018-11-29T20:32:50.459Z",
                      "readOnly": true,
                      "x-nullable": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "size": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "Size of backup in bytes",
                      "format": "int64"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for backup"
                    },
                    "backupType": {
                      "title": "backupType",
                      "type": "string",
                      "readOnly": true,
                      "description": "Type of backup Manual or Scheduled",
                      "enum": [
                        "Manual",
                        "Scheduled"
                      ],
                      "x-ms-enum": {
                        "name": "backupType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Manual",
                            "description": "Manual backup"
                          },
                          {
                            "value": "Scheduled",
                            "description": "Scheduled backup"
                          }
                        ]
                      },
                      "example": "Manual"
                    },
                    "failureReason": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Failure reason"
                    },
                    "volumeResourceId": {
                      "type": "string",
                      "description": "ResourceId used to identify the Volume",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                          }
                        ]
                      }
                    },
                    "useExistingSnapshot": {
                      "type": "boolean",
                      "description": "Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups",
                      "example": true,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "snapshotName": {
                      "type": "string",
                      "description": "The name of the snapshot",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "backupPolicyResourceId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "ResourceId used to identify the backup policy",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                          }
                        ]
                      }
                    },
                    "isLargeVolume": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Specifies if the backup is for a large volume.",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - backup created updated",
            "schema": {
              "description": "Backup under a Backup Vault",
              "type": "object",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Backup Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "volumeResourceId"
                  ],
                  "properties": {
                    "backupId": {
                      "title": "backupId",
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID v4 used to identify the Backup",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "creationDate": {
                      "title": "creationDate",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The creation date of the backup",
                      "example": "2017-08-15 13:23:33"
                    },
                    "snapshotCreationDate": {
                      "title": "snapshotCreationDate",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The snapshot creation date of the backup",
                      "example": "2018-11-29T20:32:50.459Z",
                      "x-nullable": true
                    },
                    "completionDate": {
                      "title": "completionDate",
                      "type": "string",
                      "format": "date-time",
                      "description": "The completion date of the backup",
                      "example": "2018-11-29T20:32:50.459Z",
                      "readOnly": true,
                      "x-nullable": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "size": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "Size of backup in bytes",
                      "format": "int64"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for backup"
                    },
                    "backupType": {
                      "title": "backupType",
                      "type": "string",
                      "readOnly": true,
                      "description": "Type of backup Manual or Scheduled",
                      "enum": [
                        "Manual",
                        "Scheduled"
                      ],
                      "x-ms-enum": {
                        "name": "backupType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Manual",
                            "description": "Manual backup"
                          },
                          {
                            "value": "Scheduled",
                            "description": "Scheduled backup"
                          }
                        ]
                      },
                      "example": "Manual"
                    },
                    "failureReason": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Failure reason"
                    },
                    "volumeResourceId": {
                      "type": "string",
                      "description": "ResourceId used to identify the Volume",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                          }
                        ]
                      }
                    },
                    "useExistingSnapshot": {
                      "type": "boolean",
                      "description": "Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups",
                      "example": true,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "snapshotName": {
                      "type": "string",
                      "description": "The name of the snapshot",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "backupPolicyResourceId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "ResourceId used to identify the backup policy",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                          }
                        ]
                      }
                    },
                    "isLargeVolume": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Specifies if the backup is for a large volume.",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Backup created",
            "schema": {
              "description": "Backup under a Backup Vault",
              "type": "object",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Backup Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "volumeResourceId"
                  ],
                  "properties": {
                    "backupId": {
                      "title": "backupId",
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID v4 used to identify the Backup",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "creationDate": {
                      "title": "creationDate",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The creation date of the backup",
                      "example": "2017-08-15 13:23:33"
                    },
                    "snapshotCreationDate": {
                      "title": "snapshotCreationDate",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The snapshot creation date of the backup",
                      "example": "2018-11-29T20:32:50.459Z",
                      "x-nullable": true
                    },
                    "completionDate": {
                      "title": "completionDate",
                      "type": "string",
                      "format": "date-time",
                      "description": "The completion date of the backup",
                      "example": "2018-11-29T20:32:50.459Z",
                      "readOnly": true,
                      "x-nullable": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "size": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "Size of backup in bytes",
                      "format": "int64"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for backup"
                    },
                    "backupType": {
                      "title": "backupType",
                      "type": "string",
                      "readOnly": true,
                      "description": "Type of backup Manual or Scheduled",
                      "enum": [
                        "Manual",
                        "Scheduled"
                      ],
                      "x-ms-enum": {
                        "name": "backupType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Manual",
                            "description": "Manual backup"
                          },
                          {
                            "value": "Scheduled",
                            "description": "Scheduled backup"
                          }
                        ]
                      },
                      "example": "Manual"
                    },
                    "failureReason": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Failure reason"
                    },
                    "volumeResourceId": {
                      "type": "string",
                      "description": "ResourceId used to identify the Volume",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                          }
                        ]
                      }
                    },
                    "useExistingSnapshot": {
                      "type": "boolean",
                      "description": "Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups",
                      "example": true,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "snapshotName": {
                      "type": "string",
                      "description": "The name of the snapshot",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "backupPolicyResourceId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "ResourceId used to identify the backup policy",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                          }
                        ]
                      }
                    },
                    "isLargeVolume": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Specifies if the backup is for a large volume.",
                      "example": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Backups"
        ],
        "summary": "Patch a backup",
        "description": "Patch a Backup under the Backup Vault",
        "operationId": "Backups_Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "type": "string",
            "description": "The name of the Backup Vault",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupName",
            "type": "string",
            "in": "path",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$",
            "required": true,
            "description": "The name of the backup",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "Backup object supplied in the body of the operation.",
            "in": "body",
            "schema": {
              "description": "Backup patch",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Backup Patch Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "label": {
                      "type": "string",
                      "description": "Label for backup"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Backup under a Backup Vault",
              "type": "object",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Backup Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "volumeResourceId"
                  ],
                  "properties": {
                    "backupId": {
                      "title": "backupId",
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID v4 used to identify the Backup",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "creationDate": {
                      "title": "creationDate",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The creation date of the backup",
                      "example": "2017-08-15 13:23:33"
                    },
                    "snapshotCreationDate": {
                      "title": "snapshotCreationDate",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The snapshot creation date of the backup",
                      "example": "2018-11-29T20:32:50.459Z",
                      "x-nullable": true
                    },
                    "completionDate": {
                      "title": "completionDate",
                      "type": "string",
                      "format": "date-time",
                      "description": "The completion date of the backup",
                      "example": "2018-11-29T20:32:50.459Z",
                      "readOnly": true,
                      "x-nullable": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "size": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "Size of backup in bytes",
                      "format": "int64"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for backup"
                    },
                    "backupType": {
                      "title": "backupType",
                      "type": "string",
                      "readOnly": true,
                      "description": "Type of backup Manual or Scheduled",
                      "enum": [
                        "Manual",
                        "Scheduled"
                      ],
                      "x-ms-enum": {
                        "name": "backupType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Manual",
                            "description": "Manual backup"
                          },
                          {
                            "value": "Scheduled",
                            "description": "Scheduled backup"
                          }
                        ]
                      },
                      "example": "Manual"
                    },
                    "failureReason": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Failure reason"
                    },
                    "volumeResourceId": {
                      "type": "string",
                      "description": "ResourceId used to identify the Volume",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                          }
                        ]
                      }
                    },
                    "useExistingSnapshot": {
                      "type": "boolean",
                      "description": "Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups",
                      "example": true,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "snapshotName": {
                      "type": "string",
                      "description": "The name of the snapshot",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "backupPolicyResourceId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "ResourceId used to identify the backup policy",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                          }
                        ]
                      }
                    },
                    "isLargeVolume": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Specifies if the backup is for a large volume.",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously",
            "schema": {
              "description": "Backup under a Backup Vault",
              "type": "object",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Backup Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "volumeResourceId"
                  ],
                  "properties": {
                    "backupId": {
                      "title": "backupId",
                      "type": "string",
                      "readOnly": true,
                      "description": "UUID v4 used to identify the Backup",
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                    },
                    "creationDate": {
                      "title": "creationDate",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The creation date of the backup",
                      "example": "2017-08-15 13:23:33"
                    },
                    "snapshotCreationDate": {
                      "title": "snapshotCreationDate",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The snapshot creation date of the backup",
                      "example": "2018-11-29T20:32:50.459Z",
                      "x-nullable": true
                    },
                    "completionDate": {
                      "title": "completionDate",
                      "type": "string",
                      "format": "date-time",
                      "description": "The completion date of the backup",
                      "example": "2018-11-29T20:32:50.459Z",
                      "readOnly": true,
                      "x-nullable": true
                    },
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    },
                    "size": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "Size of backup in bytes",
                      "format": "int64"
                    },
                    "label": {
                      "type": "string",
                      "description": "Label for backup"
                    },
                    "backupType": {
                      "title": "backupType",
                      "type": "string",
                      "readOnly": true,
                      "description": "Type of backup Manual or Scheduled",
                      "enum": [
                        "Manual",
                        "Scheduled"
                      ],
                      "x-ms-enum": {
                        "name": "backupType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Manual",
                            "description": "Manual backup"
                          },
                          {
                            "value": "Scheduled",
                            "description": "Scheduled backup"
                          }
                        ]
                      },
                      "example": "Manual"
                    },
                    "failureReason": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Failure reason"
                    },
                    "volumeResourceId": {
                      "type": "string",
                      "description": "ResourceId used to identify the Volume",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                          }
                        ]
                      }
                    },
                    "useExistingSnapshot": {
                      "type": "boolean",
                      "description": "Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups",
                      "example": true,
                      "default": false,
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "snapshotName": {
                      "type": "string",
                      "description": "The name of the snapshot",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ]
                    },
                    "backupPolicyResourceId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "ResourceId used to identify the backup policy",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                          }
                        ]
                      }
                    },
                    "isLargeVolume": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Specifies if the backup is for a large volume.",
                      "example": false
                    }
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Backups"
        ],
        "summary": "Delete backup",
        "description": "Delete a Backup under the Backup Vault",
        "operationId": "Backups_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "type": "string",
            "description": "The name of the Backup Vault",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupName",
            "type": "string",
            "in": "path",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$",
            "required": true,
            "description": "The name of the backup",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted -- Create or update request accepted; operation will complete asynchronously",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupVaults": {
      "get": {
        "summary": "Describe all Backup Vaults",
        "description": "List and describe all Backup Vaults in the NetApp account.",
        "tags": [
          "Backup Vaults"
        ],
        "operationId": "BackupVaults_ListByNetAppAccount",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of Backup Vaults",
              "type": "object",
              "properties": {
                "value": {
                  "description": "A list of Backup Vaults",
                  "type": "array",
                  "items": {
                    "description": "Backup Vault information",
                    "type": "object",
                    "x-ms-azure-resource": true,
                    "required": [
                      "location"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Backup Vault Properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Azure lifecycle management"
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of results."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}": {
      "get": {
        "summary": "Describe the Backup Vault",
        "description": "Get the Backup Vault",
        "tags": [
          "Backup Vaults"
        ],
        "operationId": "BackupVaults_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "type": "string",
            "description": "The name of the Backup Vault",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Backup Vault information",
              "type": "object",
              "x-ms-azure-resource": true,
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Backup Vault Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Backup Vaults"
        ],
        "summary": "Create or Update a Backup Vault",
        "description": "Create or update the specified Backup Vault in the NetApp account",
        "operationId": "BackupVaults_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "type": "string",
            "description": "The name of the Backup Vault",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "BackupVault object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Backup Vault information",
              "type": "object",
              "x-ms-azure-resource": true,
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Backup Vault Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - backupVault updated",
            "schema": {
              "description": "Backup Vault information",
              "type": "object",
              "x-ms-azure-resource": true,
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Backup Vault Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "backupVault created",
            "schema": {
              "description": "Backup Vault information",
              "type": "object",
              "x-ms-azure-resource": true,
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Backup Vault Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update NetApp Backup Vault",
        "description": "Patch the specified NetApp Backup Vault",
        "tags": [
          "Backup Vaults"
        ],
        "operationId": "BackupVaults_Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "type": "string",
            "description": "The name of the Backup Vault",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "description": "Backup Vault object supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Backup Vault information",
              "type": "object",
              "x-ms-azure-resource": true,
              "properties": {
                "tags": {
                  "description": "Resource tags",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Backup Vault updated.",
            "schema": {
              "description": "Backup Vault information",
              "type": "object",
              "x-ms-azure-resource": true,
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Backup Vault Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "description": "Backup Vault information",
              "type": "object",
              "x-ms-azure-resource": true,
              "required": [
                "location"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Backup Vault Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Azure lifecycle management"
                    }
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete NetApp Backup Vault",
        "description": "Delete the specified Backup Vault",
        "tags": [
          "Backup Vaults"
        ],
        "operationId": "BackupVaults_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "type": "string",
            "description": "The name of the Backup Vault",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted -- Delete request accepted; operation will complete asynchronously",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "NoContent -- Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/backupVaults/{backupVaultName}/backups/{backupName}/restoreFiles": {
      "post": {
        "tags": [
          "Backups"
        ],
        "operationId": "BackupsUnderBackupVault_RestoreFiles",
        "summary": "Create a new Backup Restore Files request",
        "description": "Restore the specified files from the specified backup to the active filesystem",
        "parameters": [
          {
            "name": "body",
            "description": "Restore payload supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Restore payload for Single File Backup Restore",
              "type": "object",
              "required": [
                "fileList",
                "destinationVolumeId"
              ],
              "properties": {
                "fileList": {
                  "description": "List of files to be restored",
                  "type": "array",
                  "minItems": 1,
                  "maxItems": 8,
                  "items": {
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1
                  },
                  "example": [
                    "/dir1/customer1.db",
                    "/dir1/customer2.db"
                  ]
                },
                "restoreFilePath": {
                  "description": "Destination folder where the files will be restored. The path name should start with a forward slash. If it is omitted from request then restore is done at the root folder of the destination volume by default",
                  "type": "string",
                  "pattern": "^\\/.*$",
                  "example": "/AVSdataStore"
                },
                "destinationVolumeId": {
                  "description": "Resource Id of the destination volume on which the files need to be restored",
                  "type": "string",
                  "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1"
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupVaultName",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "type": "string",
            "description": "The name of the Backup Vault",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupName",
            "type": "string",
            "in": "path",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$",
            "required": true,
            "description": "The name of the backup",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}/migrateBackups": {
      "post": {
        "tags": [
          "Backups"
        ],
        "operationId": "BackupsUnderVolume_MigrateBackups",
        "summary": "Create a new migrate request for backups under volume",
        "description": "Migrate the backups under volume to backup vault",
        "parameters": [
          {
            "name": "body",
            "description": "Migrate backups under volume payload supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Migrate Backups Request",
              "type": "object",
              "x-ms-azure-resource": true,
              "required": [
                "backupVaultId"
              ],
              "properties": {
                "backupVaultId": {
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                      }
                    ]
                  },
                  "description": "The ResourceId of the Backup Vault",
                  "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1"
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "poolName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the capacity pool",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "volumeName",
            "type": "string",
            "in": "path",
            "required": true,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
            "minLength": 1,
            "maxLength": 64,
            "description": "The name of the volume",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/migrateBackups": {
      "post": {
        "tags": [
          "Backups"
        ],
        "operationId": "BackupsUnderAccount_MigrateBackups",
        "summary": "Create a new migrate request for backups under account",
        "description": "Migrate the backups under a NetApp account to backup vault",
        "parameters": [
          {
            "name": "body",
            "description": "Migrate backups under an account payload supplied in the body of the operation.",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Migrate Backups Request",
              "type": "object",
              "x-ms-azure-resource": true,
              "required": [
                "backupVaultId"
              ],
              "properties": {
                "backupVaultId": {
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                      }
                    ]
                  },
                  "description": "The ResourceId of the Backup Vault",
                  "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1"
                }
              }
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
            "in": "path",
            "required": true,
            "description": "The name of the NetApp account",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "OperationListResult": {
      "description": "Result of the request to list Cloud Volume operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "Microsoft.NetApp REST API operation definition.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Operation name: {provider}/{resource}/{operation}",
                "type": "string"
              },
              "display": {
                "description": "Display metadata associated with the operation.",
                "properties": {
                  "provider": {
                    "description": "Service provider: Microsoft NetApp.",
                    "type": "string"
                  },
                  "resource": {
                    "description": "Resource on which the operation is performed etc.",
                    "type": "string"
                  },
                  "operation": {
                    "description": "Type of operation: get, read, delete, etc.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Operation description.",
                    "type": "string"
                  }
                }
              },
              "origin": {
                "type": "string",
                "description": "The origin of operations."
              },
              "properties": {
                "description": "Properties of operation, include metric specifications.",
                "x-ms-client-flatten": true,
                "properties": {
                  "serviceSpecification": {
                    "description": "One property of operation, include metric specifications.",
                    "properties": {
                      "metricSpecifications": {
                        "description": "Metric specifications of operation.",
                        "type": "array",
                        "items": {
                          "description": "Metric specification of operation.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of metric specification."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Display name of metric specification."
                            },
                            "displayDescription": {
                              "type": "string",
                              "description": "Display description of metric specification."
                            },
                            "unit": {
                              "type": "string",
                              "description": "Unit could be Bytes or Count."
                            },
                            "supportedAggregationTypes": {
                              "description": "Support metric aggregation type.",
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "enum": [
                                  "Average"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "MetricAggregationType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "supportedTimeGrainTypes": {
                              "type": "array",
                              "description": "The supported time grain types for the metrics.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "internalMetricName": {
                              "type": "string",
                              "description": "The internal metric name."
                            },
                            "enableRegionalMdmAccount": {
                              "description": "Whether or not the service is using regional MDM accounts.",
                              "type": "boolean"
                            },
                            "sourceMdmAccount": {
                              "type": "string",
                              "description": "The source MDM account."
                            },
                            "sourceMdmNamespace": {
                              "type": "string",
                              "description": "The source MDM namespace."
                            },
                            "dimensions": {
                              "description": "Dimensions of blobs, including blob type and access tier.",
                              "type": "array",
                              "items": {
                                "description": "Dimension of blobs, possibly be blob type or access tier.",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Display name of dimension."
                                  },
                                  "displayName": {
                                    "type": "string",
                                    "description": "Display name of dimension."
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "aggregationType": {
                              "type": "string",
                              "description": "Aggregation type could be Average."
                            },
                            "fillGapWithZero": {
                              "type": "boolean",
                              "description": "The property to decide fill gap with zero or not."
                            },
                            "category": {
                              "type": "string",
                              "description": "The category this metric specification belong to, could be Capacity."
                            },
                            "resourceIdDimensionNameOverride": {
                              "type": "string",
                              "description": "Account Resource Id."
                            },
                            "isInternal": {
                              "description": "Whether the metric is internal.",
                              "type": "boolean"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "logSpecifications": {
                        "description": "Log specification of operation.",
                        "type": "array",
                        "items": {
                          "description": "Log Definition of a single resource metric.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of log specification.",
                              "type": "string"
                            },
                            "displayName": {
                              "description": "Display name of log specification.",
                              "type": "string"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of Storage operations supported by the Storage resource provider."
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "Operation": {
      "description": "Microsoft.NetApp REST API operation definition.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "Display metadata associated with the operation.",
          "properties": {
            "provider": {
              "description": "Service provider: Microsoft NetApp.",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed etc.",
              "type": "string"
            },
            "operation": {
              "description": "Type of operation: get, read, delete, etc.",
              "type": "string"
            },
            "description": {
              "description": "Operation description.",
              "type": "string"
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The origin of operations."
        },
        "properties": {
          "description": "Properties of operation, include metric specifications.",
          "x-ms-client-flatten": true,
          "properties": {
            "serviceSpecification": {
              "description": "One property of operation, include metric specifications.",
              "properties": {
                "metricSpecifications": {
                  "description": "Metric specifications of operation.",
                  "type": "array",
                  "items": {
                    "description": "Metric specification of operation.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of metric specification."
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Display name of metric specification."
                      },
                      "displayDescription": {
                        "type": "string",
                        "description": "Display description of metric specification."
                      },
                      "unit": {
                        "type": "string",
                        "description": "Unit could be Bytes or Count."
                      },
                      "supportedAggregationTypes": {
                        "description": "Support metric aggregation type.",
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "enum": [
                            "Average"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "MetricAggregationType",
                            "modelAsString": true
                          }
                        }
                      },
                      "supportedTimeGrainTypes": {
                        "type": "array",
                        "description": "The supported time grain types for the metrics.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "internalMetricName": {
                        "type": "string",
                        "description": "The internal metric name."
                      },
                      "enableRegionalMdmAccount": {
                        "description": "Whether or not the service is using regional MDM accounts.",
                        "type": "boolean"
                      },
                      "sourceMdmAccount": {
                        "type": "string",
                        "description": "The source MDM account."
                      },
                      "sourceMdmNamespace": {
                        "type": "string",
                        "description": "The source MDM namespace."
                      },
                      "dimensions": {
                        "description": "Dimensions of blobs, including blob type and access tier.",
                        "type": "array",
                        "items": {
                          "description": "Dimension of blobs, possibly be blob type or access tier.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Display name of dimension."
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Display name of dimension."
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "aggregationType": {
                        "type": "string",
                        "description": "Aggregation type could be Average."
                      },
                      "fillGapWithZero": {
                        "type": "boolean",
                        "description": "The property to decide fill gap with zero or not."
                      },
                      "category": {
                        "type": "string",
                        "description": "The category this metric specification belong to, could be Capacity."
                      },
                      "resourceIdDimensionNameOverride": {
                        "type": "string",
                        "description": "Account Resource Id."
                      },
                      "isInternal": {
                        "description": "Whether the metric is internal.",
                        "type": "boolean"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "logSpecifications": {
                  "description": "Log specification of operation.",
                  "type": "array",
                  "items": {
                    "description": "Log Definition of a single resource metric.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of log specification.",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "Display name of log specification.",
                        "type": "string"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "OperationProperties": {
      "description": "Properties of operation, include metric specifications.",
      "properties": {
        "serviceSpecification": {
          "description": "One property of operation, include metric specifications.",
          "properties": {
            "metricSpecifications": {
              "description": "Metric specifications of operation.",
              "type": "array",
              "items": {
                "description": "Metric specification of operation.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of metric specification."
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Display name of metric specification."
                  },
                  "displayDescription": {
                    "type": "string",
                    "description": "Display description of metric specification."
                  },
                  "unit": {
                    "type": "string",
                    "description": "Unit could be Bytes or Count."
                  },
                  "supportedAggregationTypes": {
                    "description": "Support metric aggregation type.",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "enum": [
                        "Average"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MetricAggregationType",
                        "modelAsString": true
                      }
                    }
                  },
                  "supportedTimeGrainTypes": {
                    "type": "array",
                    "description": "The supported time grain types for the metrics.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "internalMetricName": {
                    "type": "string",
                    "description": "The internal metric name."
                  },
                  "enableRegionalMdmAccount": {
                    "description": "Whether or not the service is using regional MDM accounts.",
                    "type": "boolean"
                  },
                  "sourceMdmAccount": {
                    "type": "string",
                    "description": "The source MDM account."
                  },
                  "sourceMdmNamespace": {
                    "type": "string",
                    "description": "The source MDM namespace."
                  },
                  "dimensions": {
                    "description": "Dimensions of blobs, including blob type and access tier.",
                    "type": "array",
                    "items": {
                      "description": "Dimension of blobs, possibly be blob type or access tier.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Display name of dimension."
                        },
                        "displayName": {
                          "type": "string",
                          "description": "Display name of dimension."
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "aggregationType": {
                    "type": "string",
                    "description": "Aggregation type could be Average."
                  },
                  "fillGapWithZero": {
                    "type": "boolean",
                    "description": "The property to decide fill gap with zero or not."
                  },
                  "category": {
                    "type": "string",
                    "description": "The category this metric specification belong to, could be Capacity."
                  },
                  "resourceIdDimensionNameOverride": {
                    "type": "string",
                    "description": "Account Resource Id."
                  },
                  "isInternal": {
                    "description": "Whether the metric is internal.",
                    "type": "boolean"
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "logSpecifications": {
              "description": "Log specification of operation.",
              "type": "array",
              "items": {
                "description": "Log Definition of a single resource metric.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of log specification.",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "Display name of log specification.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            }
          }
        }
      }
    },
    "ServiceSpecification": {
      "description": "One property of operation, include metric specifications.",
      "properties": {
        "metricSpecifications": {
          "description": "Metric specifications of operation.",
          "type": "array",
          "items": {
            "description": "Metric specification of operation.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of metric specification."
              },
              "displayName": {
                "type": "string",
                "description": "Display name of metric specification."
              },
              "displayDescription": {
                "type": "string",
                "description": "Display description of metric specification."
              },
              "unit": {
                "type": "string",
                "description": "Unit could be Bytes or Count."
              },
              "supportedAggregationTypes": {
                "description": "Support metric aggregation type.",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "enum": [
                    "Average"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "MetricAggregationType",
                    "modelAsString": true
                  }
                }
              },
              "supportedTimeGrainTypes": {
                "type": "array",
                "description": "The supported time grain types for the metrics.",
                "items": {
                  "type": "string"
                }
              },
              "internalMetricName": {
                "type": "string",
                "description": "The internal metric name."
              },
              "enableRegionalMdmAccount": {
                "description": "Whether or not the service is using regional MDM accounts.",
                "type": "boolean"
              },
              "sourceMdmAccount": {
                "type": "string",
                "description": "The source MDM account."
              },
              "sourceMdmNamespace": {
                "type": "string",
                "description": "The source MDM namespace."
              },
              "dimensions": {
                "description": "Dimensions of blobs, including blob type and access tier.",
                "type": "array",
                "items": {
                  "description": "Dimension of blobs, possibly be blob type or access tier.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Display name of dimension."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Display name of dimension."
                    }
                  }
                },
                "x-ms-identifiers": [
                  "name"
                ]
              },
              "aggregationType": {
                "type": "string",
                "description": "Aggregation type could be Average."
              },
              "fillGapWithZero": {
                "type": "boolean",
                "description": "The property to decide fill gap with zero or not."
              },
              "category": {
                "type": "string",
                "description": "The category this metric specification belong to, could be Capacity."
              },
              "resourceIdDimensionNameOverride": {
                "type": "string",
                "description": "Account Resource Id."
              },
              "isInternal": {
                "description": "Whether the metric is internal.",
                "type": "boolean"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "logSpecifications": {
          "description": "Log specification of operation.",
          "type": "array",
          "items": {
            "description": "Log Definition of a single resource metric.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of log specification.",
                "type": "string"
              },
              "displayName": {
                "description": "Display name of log specification.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "MetricSpecification": {
      "description": "Metric specification of operation.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of metric specification."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of metric specification."
        },
        "displayDescription": {
          "type": "string",
          "description": "Display description of metric specification."
        },
        "unit": {
          "type": "string",
          "description": "Unit could be Bytes or Count."
        },
        "supportedAggregationTypes": {
          "description": "Support metric aggregation type.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "enum": [
              "Average"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "MetricAggregationType",
              "modelAsString": true
            }
          }
        },
        "supportedTimeGrainTypes": {
          "type": "array",
          "description": "The supported time grain types for the metrics.",
          "items": {
            "type": "string"
          }
        },
        "internalMetricName": {
          "type": "string",
          "description": "The internal metric name."
        },
        "enableRegionalMdmAccount": {
          "description": "Whether or not the service is using regional MDM accounts.",
          "type": "boolean"
        },
        "sourceMdmAccount": {
          "type": "string",
          "description": "The source MDM account."
        },
        "sourceMdmNamespace": {
          "type": "string",
          "description": "The source MDM namespace."
        },
        "dimensions": {
          "description": "Dimensions of blobs, including blob type and access tier.",
          "type": "array",
          "items": {
            "description": "Dimension of blobs, possibly be blob type or access tier.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Display name of dimension."
              },
              "displayName": {
                "type": "string",
                "description": "Display name of dimension."
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "aggregationType": {
          "type": "string",
          "description": "Aggregation type could be Average."
        },
        "fillGapWithZero": {
          "type": "boolean",
          "description": "The property to decide fill gap with zero or not."
        },
        "category": {
          "type": "string",
          "description": "The category this metric specification belong to, could be Capacity."
        },
        "resourceIdDimensionNameOverride": {
          "type": "string",
          "description": "Account Resource Id."
        },
        "isInternal": {
          "description": "Whether the metric is internal.",
          "type": "boolean"
        }
      }
    },
    "LogSpecification": {
      "description": "Log Definition of a single resource metric.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of log specification.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of log specification.",
          "type": "string"
        }
      }
    },
    "Dimension": {
      "description": "Dimension of blobs, possibly be blob type or access tier.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Display name of dimension."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of dimension."
        }
      }
    },
    "CheckAvailabilityResponse": {
      "description": "Information regarding availability of a resource.",
      "type": "object",
      "properties": {
        "isAvailable": {
          "description": "<code>true</code> indicates name is valid and available. <code>false</code> indicates the name is invalid, unavailable, or both.",
          "type": "boolean"
        },
        "reason": {
          "description": "<code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InAvailabilityReasonType",
            "modelAsString": true
          }
        },
        "message": {
          "description": "If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that resource name is already in use, and direct them to select a different name.",
          "type": "string"
        }
      }
    },
    "regionInfosList": {
      "description": "List of regionInfo resources",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of regionInfo resources",
          "type": "array",
          "items": {
            "description": "Information regarding regionInfo Item.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Provides region specific information.",
                "type": "object",
                "properties": {
                  "storageToNetworkProximity": {
                    "title": "Storage to Network Proximity",
                    "description": "Provides storage to network proximity information in the region.",
                    "type": "string",
                    "enum": [
                      "Default",
                      "T1",
                      "T2",
                      "AcrossT2",
                      "T1AndT2",
                      "T1AndAcrossT2",
                      "T2AndAcrossT2",
                      "T1AndT2AndAcrossT2"
                    ],
                    "x-ms-enum": {
                      "name": "RegionStorageToNetworkProximity",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Default",
                          "description": "Basic network connectivity."
                        },
                        {
                          "value": "T1",
                          "description": "Standard T1 network connectivity."
                        },
                        {
                          "value": "T2",
                          "description": "Standard T2 network connectivity."
                        },
                        {
                          "value": "AcrossT2",
                          "description": "Standard AcrossT2 network connectivity."
                        },
                        {
                          "value": "T1AndT2",
                          "description": "Standard T1 and T2 network connectivity."
                        },
                        {
                          "value": "T1AndAcrossT2",
                          "description": "Standard T1 and AcrossT2 network connectivity."
                        },
                        {
                          "value": "T2AndAcrossT2",
                          "description": "Standard T2 and AcrossT2 network connectivity."
                        },
                        {
                          "value": "T1AndT2AndAcrossT2",
                          "description": "Standard T1, T2 and AcrossT2 network connectivity."
                        }
                      ]
                    },
                    "example": "T2"
                  },
                  "availabilityZoneMappings": {
                    "title": "Logical availability zone mappings.",
                    "description": "Provides logical availability zone mappings for the subscription for a region.",
                    "type": "array",
                    "x-ms-identifiers": [
                      "availabilityZone"
                    ],
                    "items": {
                      "type": "object",
                      "properties": {
                        "availabilityZone": {
                          "description": "Logical availability zone.",
                          "type": "string",
                          "example": "1"
                        },
                        "isAvailable": {
                          "description": "Available availability zone",
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                },
                "x-ms-client-flatten": true
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      }
    },
    "regionInfoResource": {
      "description": "Information regarding regionInfo Item.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Provides region specific information.",
          "type": "object",
          "properties": {
            "storageToNetworkProximity": {
              "title": "Storage to Network Proximity",
              "description": "Provides storage to network proximity information in the region.",
              "type": "string",
              "enum": [
                "Default",
                "T1",
                "T2",
                "AcrossT2",
                "T1AndT2",
                "T1AndAcrossT2",
                "T2AndAcrossT2",
                "T1AndT2AndAcrossT2"
              ],
              "x-ms-enum": {
                "name": "RegionStorageToNetworkProximity",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Default",
                    "description": "Basic network connectivity."
                  },
                  {
                    "value": "T1",
                    "description": "Standard T1 network connectivity."
                  },
                  {
                    "value": "T2",
                    "description": "Standard T2 network connectivity."
                  },
                  {
                    "value": "AcrossT2",
                    "description": "Standard AcrossT2 network connectivity."
                  },
                  {
                    "value": "T1AndT2",
                    "description": "Standard T1 and T2 network connectivity."
                  },
                  {
                    "value": "T1AndAcrossT2",
                    "description": "Standard T1 and AcrossT2 network connectivity."
                  },
                  {
                    "value": "T2AndAcrossT2",
                    "description": "Standard T2 and AcrossT2 network connectivity."
                  },
                  {
                    "value": "T1AndT2AndAcrossT2",
                    "description": "Standard T1, T2 and AcrossT2 network connectivity."
                  }
                ]
              },
              "example": "T2"
            },
            "availabilityZoneMappings": {
              "title": "Logical availability zone mappings.",
              "description": "Provides logical availability zone mappings for the subscription for a region.",
              "type": "array",
              "x-ms-identifiers": [
                "availabilityZone"
              ],
              "items": {
                "type": "object",
                "properties": {
                  "availabilityZone": {
                    "description": "Logical availability zone.",
                    "type": "string",
                    "example": "1"
                  },
                  "isAvailable": {
                    "description": "Available availability zone",
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "regionInfo": {
      "description": "Provides region specific information.",
      "type": "object",
      "properties": {
        "storageToNetworkProximity": {
          "title": "Storage to Network Proximity",
          "description": "Provides storage to network proximity information in the region.",
          "type": "string",
          "enum": [
            "Default",
            "T1",
            "T2",
            "AcrossT2",
            "T1AndT2",
            "T1AndAcrossT2",
            "T2AndAcrossT2",
            "T1AndT2AndAcrossT2"
          ],
          "x-ms-enum": {
            "name": "RegionStorageToNetworkProximity",
            "modelAsString": true,
            "values": [
              {
                "value": "Default",
                "description": "Basic network connectivity."
              },
              {
                "value": "T1",
                "description": "Standard T1 network connectivity."
              },
              {
                "value": "T2",
                "description": "Standard T2 network connectivity."
              },
              {
                "value": "AcrossT2",
                "description": "Standard AcrossT2 network connectivity."
              },
              {
                "value": "T1AndT2",
                "description": "Standard T1 and T2 network connectivity."
              },
              {
                "value": "T1AndAcrossT2",
                "description": "Standard T1 and AcrossT2 network connectivity."
              },
              {
                "value": "T2AndAcrossT2",
                "description": "Standard T2 and AcrossT2 network connectivity."
              },
              {
                "value": "T1AndT2AndAcrossT2",
                "description": "Standard T1, T2 and AcrossT2 network connectivity."
              }
            ]
          },
          "example": "T2"
        },
        "availabilityZoneMappings": {
          "title": "Logical availability zone mappings.",
          "description": "Provides logical availability zone mappings for the subscription for a region.",
          "type": "array",
          "x-ms-identifiers": [
            "availabilityZone"
          ],
          "items": {
            "type": "object",
            "properties": {
              "availabilityZone": {
                "description": "Logical availability zone.",
                "type": "string",
                "example": "1"
              },
              "isAvailable": {
                "description": "Available availability zone",
                "type": "boolean",
                "example": true
              }
            }
          }
        }
      }
    },
    "ResourceNameAvailabilityRequest": {
      "description": "Resource name availability request content.",
      "required": [
        "name",
        "type",
        "resourceGroup"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name to verify.",
          "type": "string"
        },
        "type": {
          "description": "Resource type used for verification.",
          "enum": [
            "Microsoft.NetApp/netAppAccounts",
            "Microsoft.NetApp/netAppAccounts/capacityPools",
            "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
            "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CheckNameResourceTypes",
            "modelAsString": true
          }
        },
        "resourceGroup": {
          "description": "Resource group name.",
          "type": "string"
        }
      }
    },
    "FilePathAvailabilityRequest": {
      "description": "File path availability request content - availability is based on the name and the subnetId.",
      "required": [
        "name",
        "subnetId"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "File path to verify.",
          "type": "string"
        },
        "subnetId": {
          "type": "string",
          "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
        },
        "availabilityZone": {
          "title": "Logical availability zone",
          "type": "string",
          "example": "1",
          "x-nullable": true,
          "description": "The Azure Resource logical availability zone which is used within zone mapping lookup for the subscription and region. The lookup will retrieve the physical zone where volume is placed."
        }
      }
    },
    "QuotaAvailabilityRequest": {
      "description": "Quota availability request content.",
      "required": [
        "name",
        "type",
        "resourceGroup"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the resource to verify.",
          "type": "string"
        },
        "type": {
          "description": "Resource type used for verification.",
          "enum": [
            "Microsoft.NetApp/netAppAccounts",
            "Microsoft.NetApp/netAppAccounts/capacityPools",
            "Microsoft.NetApp/netAppAccounts/capacityPools/volumes",
            "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CheckQuotaNameResourceTypes",
            "modelAsString": true
          }
        },
        "resourceGroup": {
          "description": "Resource group name.",
          "type": "string"
        }
      }
    },
    "SubscriptionQuotaItemList": {
      "description": "List of Subscription Quota Items",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of SubscriptionQuotaItems",
          "type": "array",
          "items": {
            "description": "Information regarding Subscription Quota Item.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "SubscriptionQuotaItem properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "current": {
                    "description": "The current quota value.",
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "default": {
                    "description": "The default quota value.",
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      }
    },
    "SubscriptionQuotaItem": {
      "description": "Information regarding Subscription Quota Item.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "SubscriptionQuotaItem properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "current": {
              "description": "The current quota value.",
              "readOnly": true,
              "type": "integer",
              "format": "int32"
            },
            "default": {
              "description": "The default quota value.",
              "readOnly": true,
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "SubscriptionQuotaItemProperties": {
      "description": "SubscriptionQuotaItem Properties",
      "type": "object",
      "properties": {
        "current": {
          "description": "The current quota value.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "default": {
          "description": "The default quota value.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UsagesListResult": {
      "description": "Usages result",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of usages",
          "type": "array",
          "items": {
            "description": "Usages entity model",
            "type": "object",
            "properties": {
              "id": {
                "description": "The id of the usage.",
                "readOnly": true,
                "type": "string"
              },
              "name": {
                "description": "The name of the usage.",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "value": {
                    "description": "The name of the usage.",
                    "type": "string"
                  },
                  "localizedValue": {
                    "description": "The localized name of the usage.",
                    "type": "string"
                  }
                }
              },
              "properties": {
                "description": "Usage properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "currentValue": {
                    "description": "The current usage value for the subscription.",
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "limit": {
                    "description": "The limit of the usage.",
                    "readOnly": true,
                    "type": "integer",
                    "format": "int32"
                  },
                  "unit": {
                    "description": "The unit of the usage.",
                    "readOnly": true,
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      }
    },
    "UsageResult": {
      "description": "Usages entity model",
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the usage.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "The name of the usage.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "value": {
              "description": "The name of the usage.",
              "type": "string"
            },
            "localizedValue": {
              "description": "The localized name of the usage.",
              "type": "string"
            }
          }
        },
        "properties": {
          "description": "Usage properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "currentValue": {
              "description": "The current usage value for the subscription.",
              "readOnly": true,
              "type": "integer",
              "format": "int32"
            },
            "limit": {
              "description": "The limit of the usage.",
              "readOnly": true,
              "type": "integer",
              "format": "int32"
            },
            "unit": {
              "description": "The unit of the usage.",
              "readOnly": true,
              "type": "string"
            }
          }
        }
      }
    },
    "usageProperties": {
      "description": "Usage properties",
      "type": "object",
      "properties": {
        "currentValue": {
          "description": "The current usage value for the subscription.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "description": "The limit of the usage.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "unit": {
          "description": "The unit of the usage.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "usageName": {
      "description": "The name of the usage.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "value": {
          "description": "The name of the usage.",
          "type": "string"
        },
        "localizedValue": {
          "description": "The localized name of the usage.",
          "type": "string"
        }
      }
    },
    "netAppAccountList": {
      "description": "List of NetApp account resources",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Multiple NetApp accounts",
          "items": {
            "description": "NetApp account resource",
            "type": "object",
            "required": [
              "location"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "etag": {
                "readOnly": true,
                "type": "string",
                "description": "A unique read-only string that changes whenever the resource is updated."
              },
              "properties": {
                "description": "NetApp Account properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Azure lifecycle management"
                  },
                  "activeDirectories": {
                    "description": "Active Directories",
                    "type": "array",
                    "items": {
                      "description": "Active Directory",
                      "type": "object",
                      "properties": {
                        "activeDirectoryId": {
                          "type": "string",
                          "x-nullable": true,
                          "description": "Id of the Active Directory"
                        },
                        "username": {
                          "type": "string",
                          "description": "A domain user account with permission to create machine accounts"
                        },
                        "password": {
                          "type": "string",
                          "x-ms-secret": true,
                          "maxLength": 64,
                          "description": "Plain text password of Active Directory domain administrator, value is masked in the response"
                        },
                        "domain": {
                          "type": "string",
                          "description": "Name of the Active Directory domain"
                        },
                        "dns": {
                          "type": "string",
                          "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
                          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
                          "example": "101.102.103.104,101.102.103.105"
                        },
                        "status": {
                          "type": "string",
                          "description": "Status of the Active Directory",
                          "readOnly": true,
                          "enum": [
                            "Created",
                            "Updating",
                            "InUse",
                            "Deleted",
                            "Error"
                          ],
                          "x-ms-enum": {
                            "name": "ActiveDirectoryStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Created",
                                "description": "Active Directory created but not in use"
                              },
                              {
                                "value": "InUse",
                                "description": "Active Directory in use by SMB Volume"
                              },
                              {
                                "value": "Deleted",
                                "description": "Active Directory Deleted"
                              },
                              {
                                "value": "Error",
                                "description": "Error with the Active Directory"
                              },
                              {
                                "value": "Updating",
                                "description": "Active Directory Updating"
                              }
                            ]
                          }
                        },
                        "statusDetails": {
                          "type": "string",
                          "description": "Any details in regards to the Status of the Active Directory",
                          "readOnly": true
                        },
                        "smbServerName": {
                          "type": "string",
                          "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
                        },
                        "organizationalUnit": {
                          "type": "string",
                          "default": "CN=Computers",
                          "description": "The Organizational Unit (OU) within the Windows Active Directory"
                        },
                        "site": {
                          "type": "string",
                          "description": "The Active Directory site the service will limit Domain Controller discovery to"
                        },
                        "backupOperators": {
                          "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "maxLength": 255,
                            "minLength": 1
                          },
                          "example": [
                            "user1",
                            "user2"
                          ]
                        },
                        "administrators": {
                          "description": "Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "maxLength": 255,
                            "minLength": 1
                          },
                          "example": [
                            "user1",
                            "user2"
                          ]
                        },
                        "kdcIP": {
                          "type": "string",
                          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                          "description": "kdc server IP address for the active directory machine. This optional parameter is used only while creating kerberos volume.",
                          "example": "101.102.103.104"
                        },
                        "adName": {
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
                          "example": "ADServerName"
                        },
                        "serverRootCACertificate": {
                          "type": "string",
                          "maxLength": 10240,
                          "minLength": 1,
                          "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
                          "x-ms-secret": true,
                          "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                        },
                        "aesEncryption": {
                          "type": "boolean",
                          "description": "If enabled, AES encryption will be enabled for SMB communication."
                        },
                        "ldapSigning": {
                          "type": "boolean",
                          "description": "Specifies whether or not the LDAP traffic needs to be signed."
                        },
                        "securityOperators": {
                          "type": "array",
                          "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
                          "items": {
                            "type": "string",
                            "maxLength": 255,
                            "minLength": 1
                          },
                          "example": [
                            "user1",
                            "user2"
                          ]
                        },
                        "ldapOverTLS": {
                          "type": "boolean",
                          "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
                        },
                        "allowLocalNfsUsersWithLdap": {
                          "type": "boolean",
                          "description": " If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
                        },
                        "encryptDCConnections": {
                          "type": "boolean",
                          "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
                        },
                        "ldapSearchScope": {
                          "description": "LDAP Search scope options",
                          "type": "object",
                          "properties": {
                            "userDN": {
                              "type": "string",
                              "description": "This specifies the user DN, which overrides the base DN for user lookups.",
                              "maxLength": 255,
                              "example": "OU=fin,OU=hr,dc=domain,dc=com"
                            },
                            "groupDN": {
                              "type": "string",
                              "description": "This specifies the group DN, which overrides the base DN for group lookups.",
                              "maxLength": 255,
                              "example": "OU=fin,OU=hr,dc=domain,dc=com"
                            },
                            "groupMembershipFilter": {
                              "type": "string",
                              "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
                              "maxLength": 255,
                              "example": "cn=*99"
                            }
                          }
                        },
                        "preferredServersForLdapClient": {
                          "type": "string",
                          "maxLength": 32,
                          "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
                          "description": "Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.",
                          "example": "101.102.103.104, 101.102.103.105"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "activeDirectoryId"
                    ]
                  },
                  "encryption": {
                    "description": "Encryption settings",
                    "type": "object",
                    "properties": {
                      "keySource": {
                        "type": "string",
                        "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
                        "enum": [
                          "Microsoft.NetApp",
                          "Microsoft.KeyVault"
                        ],
                        "x-ms-enum": {
                          "name": "KeySource",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Microsoft.NetApp",
                              "description": "Microsoft-managed key encryption"
                            },
                            {
                              "value": "Microsoft.KeyVault",
                              "description": "Customer-managed key encryption"
                            }
                          ]
                        },
                        "default": "Microsoft.NetApp"
                      },
                      "keyVaultProperties": {
                        "description": "Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                        "type": "object",
                        "required": [
                          "keyVaultUri",
                          "keyName"
                        ],
                        "properties": {
                          "keyVaultId": {
                            "type": "string",
                            "description": "UUID v4 used to identify the Azure Key Vault configuration",
                            "readOnly": true,
                            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                          },
                          "keyVaultUri": {
                            "type": "string",
                            "format": "uri",
                            "description": "The Uri of KeyVault."
                          },
                          "keyName": {
                            "type": "string",
                            "description": "The name of KeyVault key."
                          },
                          "keyVaultResourceId": {
                            "type": "string",
                            "description": "The resource ID of KeyVault.",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.KeyVault/vaults"
                                }
                              ]
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the KeyVault connection.",
                            "readOnly": true,
                            "enum": [
                              "Created",
                              "Updating",
                              "InUse",
                              "Deleted",
                              "Error"
                            ],
                            "x-ms-enum": {
                              "name": "KeyVaultStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Created",
                                  "description": "KeyVault connection created but not in use"
                                },
                                {
                                  "value": "InUse",
                                  "description": "KeyVault connection in use by SMB Volume"
                                },
                                {
                                  "value": "Deleted",
                                  "description": "KeyVault connection Deleted"
                                },
                                {
                                  "value": "Error",
                                  "description": "Error with the KeyVault connection"
                                },
                                {
                                  "value": "Updating",
                                  "description": "KeyVault connection Updating"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
                            "readOnly": true
                          },
                          "userAssignedIdentity": {
                            "type": "string",
                            "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
                          },
                          "federatedClientId": {
                            "type": "string",
                            "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults.",
                            "example": "87654321-1234-1234-1234-876543214321"
                          }
                        }
                      }
                    }
                  },
                  "disableShowmount": {
                    "type": "boolean",
                    "readOnly": true,
                    "x-nullable": true,
                    "description": "Shows the status of disableShowmount for all volumes under the subscription, null equals false"
                  },
                  "nfsV4IDDomain": {
                    "type": "string",
                    "description": "Domain for NFSv4 user ID mapping. This property will be set for all NetApp accounts in the subscription and region and only affect non ldap NFSv4 volumes.",
                    "maxLength": 255,
                    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$",
                    "x-nullable": true,
                    "example": "defaultv4iddomain.com"
                  },
                  "multiAdStatus": {
                    "title": "multiAdStatus",
                    "type": "string",
                    "readOnly": true,
                    "description": "MultiAD Status for the account",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "x-ms-enum": {
                      "name": "multiAdStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Disabled",
                          "description": "Account is MultiAD disabled, Means its a SharedAD or SingleAD account."
                        },
                        {
                          "value": "Enabled",
                          "description": "Account is MultiAD enabled"
                        }
                      ]
                    },
                    "example": "Enabled"
                  }
                }
              },
              "identity": {
                "description": "The identity used for the resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "x-nullable": true,
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      }
    },
    "netAppAccount": {
      "description": "NetApp account resource",
      "type": "object",
      "required": [
        "location"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "properties": {
          "description": "NetApp Account properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Azure lifecycle management"
            },
            "activeDirectories": {
              "description": "Active Directories",
              "type": "array",
              "items": {
                "description": "Active Directory",
                "type": "object",
                "properties": {
                  "activeDirectoryId": {
                    "type": "string",
                    "x-nullable": true,
                    "description": "Id of the Active Directory"
                  },
                  "username": {
                    "type": "string",
                    "description": "A domain user account with permission to create machine accounts"
                  },
                  "password": {
                    "type": "string",
                    "x-ms-secret": true,
                    "maxLength": 64,
                    "description": "Plain text password of Active Directory domain administrator, value is masked in the response"
                  },
                  "domain": {
                    "type": "string",
                    "description": "Name of the Active Directory domain"
                  },
                  "dns": {
                    "type": "string",
                    "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
                    "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
                    "example": "101.102.103.104,101.102.103.105"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the Active Directory",
                    "readOnly": true,
                    "enum": [
                      "Created",
                      "Updating",
                      "InUse",
                      "Deleted",
                      "Error"
                    ],
                    "x-ms-enum": {
                      "name": "ActiveDirectoryStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Created",
                          "description": "Active Directory created but not in use"
                        },
                        {
                          "value": "InUse",
                          "description": "Active Directory in use by SMB Volume"
                        },
                        {
                          "value": "Deleted",
                          "description": "Active Directory Deleted"
                        },
                        {
                          "value": "Error",
                          "description": "Error with the Active Directory"
                        },
                        {
                          "value": "Updating",
                          "description": "Active Directory Updating"
                        }
                      ]
                    }
                  },
                  "statusDetails": {
                    "type": "string",
                    "description": "Any details in regards to the Status of the Active Directory",
                    "readOnly": true
                  },
                  "smbServerName": {
                    "type": "string",
                    "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
                  },
                  "organizationalUnit": {
                    "type": "string",
                    "default": "CN=Computers",
                    "description": "The Organizational Unit (OU) within the Windows Active Directory"
                  },
                  "site": {
                    "type": "string",
                    "description": "The Active Directory site the service will limit Domain Controller discovery to"
                  },
                  "backupOperators": {
                    "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "maxLength": 255,
                      "minLength": 1
                    },
                    "example": [
                      "user1",
                      "user2"
                    ]
                  },
                  "administrators": {
                    "description": "Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "maxLength": 255,
                      "minLength": 1
                    },
                    "example": [
                      "user1",
                      "user2"
                    ]
                  },
                  "kdcIP": {
                    "type": "string",
                    "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                    "description": "kdc server IP address for the active directory machine. This optional parameter is used only while creating kerberos volume.",
                    "example": "101.102.103.104"
                  },
                  "adName": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
                    "example": "ADServerName"
                  },
                  "serverRootCACertificate": {
                    "type": "string",
                    "maxLength": 10240,
                    "minLength": 1,
                    "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
                    "x-ms-secret": true,
                    "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                  },
                  "aesEncryption": {
                    "type": "boolean",
                    "description": "If enabled, AES encryption will be enabled for SMB communication."
                  },
                  "ldapSigning": {
                    "type": "boolean",
                    "description": "Specifies whether or not the LDAP traffic needs to be signed."
                  },
                  "securityOperators": {
                    "type": "array",
                    "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
                    "items": {
                      "type": "string",
                      "maxLength": 255,
                      "minLength": 1
                    },
                    "example": [
                      "user1",
                      "user2"
                    ]
                  },
                  "ldapOverTLS": {
                    "type": "boolean",
                    "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
                  },
                  "allowLocalNfsUsersWithLdap": {
                    "type": "boolean",
                    "description": " If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
                  },
                  "encryptDCConnections": {
                    "type": "boolean",
                    "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
                  },
                  "ldapSearchScope": {
                    "description": "LDAP Search scope options",
                    "type": "object",
                    "properties": {
                      "userDN": {
                        "type": "string",
                        "description": "This specifies the user DN, which overrides the base DN for user lookups.",
                        "maxLength": 255,
                        "example": "OU=fin,OU=hr,dc=domain,dc=com"
                      },
                      "groupDN": {
                        "type": "string",
                        "description": "This specifies the group DN, which overrides the base DN for group lookups.",
                        "maxLength": 255,
                        "example": "OU=fin,OU=hr,dc=domain,dc=com"
                      },
                      "groupMembershipFilter": {
                        "type": "string",
                        "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
                        "maxLength": 255,
                        "example": "cn=*99"
                      }
                    }
                  },
                  "preferredServersForLdapClient": {
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
                    "description": "Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.",
                    "example": "101.102.103.104, 101.102.103.105"
                  }
                }
              },
              "x-ms-identifiers": [
                "activeDirectoryId"
              ]
            },
            "encryption": {
              "description": "Encryption settings",
              "type": "object",
              "properties": {
                "keySource": {
                  "type": "string",
                  "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
                  "enum": [
                    "Microsoft.NetApp",
                    "Microsoft.KeyVault"
                  ],
                  "x-ms-enum": {
                    "name": "KeySource",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Microsoft.NetApp",
                        "description": "Microsoft-managed key encryption"
                      },
                      {
                        "value": "Microsoft.KeyVault",
                        "description": "Customer-managed key encryption"
                      }
                    ]
                  },
                  "default": "Microsoft.NetApp"
                },
                "keyVaultProperties": {
                  "description": "Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                  "type": "object",
                  "required": [
                    "keyVaultUri",
                    "keyName"
                  ],
                  "properties": {
                    "keyVaultId": {
                      "type": "string",
                      "description": "UUID v4 used to identify the Azure Key Vault configuration",
                      "readOnly": true,
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The Uri of KeyVault."
                    },
                    "keyName": {
                      "type": "string",
                      "description": "The name of KeyVault key."
                    },
                    "keyVaultResourceId": {
                      "type": "string",
                      "description": "The resource ID of KeyVault.",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.KeyVault/vaults"
                          }
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the KeyVault connection.",
                      "readOnly": true,
                      "enum": [
                        "Created",
                        "Updating",
                        "InUse",
                        "Deleted",
                        "Error"
                      ],
                      "x-ms-enum": {
                        "name": "KeyVaultStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Created",
                            "description": "KeyVault connection created but not in use"
                          },
                          {
                            "value": "InUse",
                            "description": "KeyVault connection in use by SMB Volume"
                          },
                          {
                            "value": "Deleted",
                            "description": "KeyVault connection Deleted"
                          },
                          {
                            "value": "Error",
                            "description": "Error with the KeyVault connection"
                          },
                          {
                            "value": "Updating",
                            "description": "KeyVault connection Updating"
                          }
                        ]
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
                      "readOnly": true
                    },
                    "userAssignedIdentity": {
                      "type": "string",
                      "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
                    },
                    "federatedClientId": {
                      "type": "string",
                      "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults.",
                      "example": "87654321-1234-1234-1234-876543214321"
                    }
                  }
                }
              }
            },
            "disableShowmount": {
              "type": "boolean",
              "readOnly": true,
              "x-nullable": true,
              "description": "Shows the status of disableShowmount for all volumes under the subscription, null equals false"
            },
            "nfsV4IDDomain": {
              "type": "string",
              "description": "Domain for NFSv4 user ID mapping. This property will be set for all NetApp accounts in the subscription and region and only affect non ldap NFSv4 volumes.",
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$",
              "x-nullable": true,
              "example": "defaultv4iddomain.com"
            },
            "multiAdStatus": {
              "title": "multiAdStatus",
              "type": "string",
              "readOnly": true,
              "description": "MultiAD Status for the account",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "multiAdStatus",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Disabled",
                    "description": "Account is MultiAD disabled, Means its a SharedAD or SingleAD account."
                  },
                  {
                    "value": "Enabled",
                    "description": "Account is MultiAD enabled"
                  }
                ]
              },
              "example": "Enabled"
            }
          }
        },
        "identity": {
          "description": "The identity used for the resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "netAppAccountPatch": {
      "description": "NetApp account patch resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "NetApp Account properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Azure lifecycle management"
            },
            "activeDirectories": {
              "description": "Active Directories",
              "type": "array",
              "items": {
                "description": "Active Directory",
                "type": "object",
                "properties": {
                  "activeDirectoryId": {
                    "type": "string",
                    "x-nullable": true,
                    "description": "Id of the Active Directory"
                  },
                  "username": {
                    "type": "string",
                    "description": "A domain user account with permission to create machine accounts"
                  },
                  "password": {
                    "type": "string",
                    "x-ms-secret": true,
                    "maxLength": 64,
                    "description": "Plain text password of Active Directory domain administrator, value is masked in the response"
                  },
                  "domain": {
                    "type": "string",
                    "description": "Name of the Active Directory domain"
                  },
                  "dns": {
                    "type": "string",
                    "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
                    "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
                    "example": "101.102.103.104,101.102.103.105"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the Active Directory",
                    "readOnly": true,
                    "enum": [
                      "Created",
                      "Updating",
                      "InUse",
                      "Deleted",
                      "Error"
                    ],
                    "x-ms-enum": {
                      "name": "ActiveDirectoryStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Created",
                          "description": "Active Directory created but not in use"
                        },
                        {
                          "value": "InUse",
                          "description": "Active Directory in use by SMB Volume"
                        },
                        {
                          "value": "Deleted",
                          "description": "Active Directory Deleted"
                        },
                        {
                          "value": "Error",
                          "description": "Error with the Active Directory"
                        },
                        {
                          "value": "Updating",
                          "description": "Active Directory Updating"
                        }
                      ]
                    }
                  },
                  "statusDetails": {
                    "type": "string",
                    "description": "Any details in regards to the Status of the Active Directory",
                    "readOnly": true
                  },
                  "smbServerName": {
                    "type": "string",
                    "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
                  },
                  "organizationalUnit": {
                    "type": "string",
                    "default": "CN=Computers",
                    "description": "The Organizational Unit (OU) within the Windows Active Directory"
                  },
                  "site": {
                    "type": "string",
                    "description": "The Active Directory site the service will limit Domain Controller discovery to"
                  },
                  "backupOperators": {
                    "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "maxLength": 255,
                      "minLength": 1
                    },
                    "example": [
                      "user1",
                      "user2"
                    ]
                  },
                  "administrators": {
                    "description": "Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "maxLength": 255,
                      "minLength": 1
                    },
                    "example": [
                      "user1",
                      "user2"
                    ]
                  },
                  "kdcIP": {
                    "type": "string",
                    "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                    "description": "kdc server IP address for the active directory machine. This optional parameter is used only while creating kerberos volume.",
                    "example": "101.102.103.104"
                  },
                  "adName": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
                    "example": "ADServerName"
                  },
                  "serverRootCACertificate": {
                    "type": "string",
                    "maxLength": 10240,
                    "minLength": 1,
                    "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
                    "x-ms-secret": true,
                    "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
                  },
                  "aesEncryption": {
                    "type": "boolean",
                    "description": "If enabled, AES encryption will be enabled for SMB communication."
                  },
                  "ldapSigning": {
                    "type": "boolean",
                    "description": "Specifies whether or not the LDAP traffic needs to be signed."
                  },
                  "securityOperators": {
                    "type": "array",
                    "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
                    "items": {
                      "type": "string",
                      "maxLength": 255,
                      "minLength": 1
                    },
                    "example": [
                      "user1",
                      "user2"
                    ]
                  },
                  "ldapOverTLS": {
                    "type": "boolean",
                    "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
                  },
                  "allowLocalNfsUsersWithLdap": {
                    "type": "boolean",
                    "description": " If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
                  },
                  "encryptDCConnections": {
                    "type": "boolean",
                    "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
                  },
                  "ldapSearchScope": {
                    "description": "LDAP Search scope options",
                    "type": "object",
                    "properties": {
                      "userDN": {
                        "type": "string",
                        "description": "This specifies the user DN, which overrides the base DN for user lookups.",
                        "maxLength": 255,
                        "example": "OU=fin,OU=hr,dc=domain,dc=com"
                      },
                      "groupDN": {
                        "type": "string",
                        "description": "This specifies the group DN, which overrides the base DN for group lookups.",
                        "maxLength": 255,
                        "example": "OU=fin,OU=hr,dc=domain,dc=com"
                      },
                      "groupMembershipFilter": {
                        "type": "string",
                        "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
                        "maxLength": 255,
                        "example": "cn=*99"
                      }
                    }
                  },
                  "preferredServersForLdapClient": {
                    "type": "string",
                    "maxLength": 32,
                    "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
                    "description": "Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.",
                    "example": "101.102.103.104, 101.102.103.105"
                  }
                }
              },
              "x-ms-identifiers": [
                "activeDirectoryId"
              ]
            },
            "encryption": {
              "description": "Encryption settings",
              "type": "object",
              "properties": {
                "keySource": {
                  "type": "string",
                  "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
                  "enum": [
                    "Microsoft.NetApp",
                    "Microsoft.KeyVault"
                  ],
                  "x-ms-enum": {
                    "name": "KeySource",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Microsoft.NetApp",
                        "description": "Microsoft-managed key encryption"
                      },
                      {
                        "value": "Microsoft.KeyVault",
                        "description": "Customer-managed key encryption"
                      }
                    ]
                  },
                  "default": "Microsoft.NetApp"
                },
                "keyVaultProperties": {
                  "description": "Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                  "type": "object",
                  "required": [
                    "keyVaultUri",
                    "keyName"
                  ],
                  "properties": {
                    "keyVaultId": {
                      "type": "string",
                      "description": "UUID v4 used to identify the Azure Key Vault configuration",
                      "readOnly": true,
                      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                    },
                    "keyVaultUri": {
                      "type": "string",
                      "format": "uri",
                      "description": "The Uri of KeyVault."
                    },
                    "keyName": {
                      "type": "string",
                      "description": "The name of KeyVault key."
                    },
                    "keyVaultResourceId": {
                      "type": "string",
                      "description": "The resource ID of KeyVault.",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.KeyVault/vaults"
                          }
                        ]
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the KeyVault connection.",
                      "readOnly": true,
                      "enum": [
                        "Created",
                        "Updating",
                        "InUse",
                        "Deleted",
                        "Error"
                      ],
                      "x-ms-enum": {
                        "name": "KeyVaultStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Created",
                            "description": "KeyVault connection created but not in use"
                          },
                          {
                            "value": "InUse",
                            "description": "KeyVault connection in use by SMB Volume"
                          },
                          {
                            "value": "Deleted",
                            "description": "KeyVault connection Deleted"
                          },
                          {
                            "value": "Error",
                            "description": "Error with the KeyVault connection"
                          },
                          {
                            "value": "Updating",
                            "description": "KeyVault connection Updating"
                          }
                        ]
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
                      "readOnly": true
                    },
                    "userAssignedIdentity": {
                      "type": "string",
                      "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
                    },
                    "federatedClientId": {
                      "type": "string",
                      "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults.",
                      "example": "87654321-1234-1234-1234-876543214321"
                    }
                  }
                }
              }
            },
            "disableShowmount": {
              "type": "boolean",
              "readOnly": true,
              "x-nullable": true,
              "description": "Shows the status of disableShowmount for all volumes under the subscription, null equals false"
            },
            "nfsV4IDDomain": {
              "type": "string",
              "description": "Domain for NFSv4 user ID mapping. This property will be set for all NetApp accounts in the subscription and region and only affect non ldap NFSv4 volumes.",
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$",
              "x-nullable": true,
              "example": "defaultv4iddomain.com"
            },
            "multiAdStatus": {
              "title": "multiAdStatus",
              "type": "string",
              "readOnly": true,
              "description": "MultiAD Status for the account",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "multiAdStatus",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Disabled",
                    "description": "Account is MultiAD disabled, Means its a SharedAD or SingleAD account."
                  },
                  {
                    "value": "Enabled",
                    "description": "Account is MultiAD enabled"
                  }
                ]
              },
              "example": "Enabled"
            }
          }
        },
        "identity": {
          "description": "The identity used for the resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "x-nullable": true,
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      }
    },
    "accountProperties": {
      "description": "NetApp account properties",
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        },
        "activeDirectories": {
          "description": "Active Directories",
          "type": "array",
          "items": {
            "description": "Active Directory",
            "type": "object",
            "properties": {
              "activeDirectoryId": {
                "type": "string",
                "x-nullable": true,
                "description": "Id of the Active Directory"
              },
              "username": {
                "type": "string",
                "description": "A domain user account with permission to create machine accounts"
              },
              "password": {
                "type": "string",
                "x-ms-secret": true,
                "maxLength": 64,
                "description": "Plain text password of Active Directory domain administrator, value is masked in the response"
              },
              "domain": {
                "type": "string",
                "description": "Name of the Active Directory domain"
              },
              "dns": {
                "type": "string",
                "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
                "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
                "example": "101.102.103.104,101.102.103.105"
              },
              "status": {
                "type": "string",
                "description": "Status of the Active Directory",
                "readOnly": true,
                "enum": [
                  "Created",
                  "Updating",
                  "InUse",
                  "Deleted",
                  "Error"
                ],
                "x-ms-enum": {
                  "name": "ActiveDirectoryStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Created",
                      "description": "Active Directory created but not in use"
                    },
                    {
                      "value": "InUse",
                      "description": "Active Directory in use by SMB Volume"
                    },
                    {
                      "value": "Deleted",
                      "description": "Active Directory Deleted"
                    },
                    {
                      "value": "Error",
                      "description": "Error with the Active Directory"
                    },
                    {
                      "value": "Updating",
                      "description": "Active Directory Updating"
                    }
                  ]
                }
              },
              "statusDetails": {
                "type": "string",
                "description": "Any details in regards to the Status of the Active Directory",
                "readOnly": true
              },
              "smbServerName": {
                "type": "string",
                "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
              },
              "organizationalUnit": {
                "type": "string",
                "default": "CN=Computers",
                "description": "The Organizational Unit (OU) within the Windows Active Directory"
              },
              "site": {
                "type": "string",
                "description": "The Active Directory site the service will limit Domain Controller discovery to"
              },
              "backupOperators": {
                "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
                "type": "array",
                "items": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                },
                "example": [
                  "user1",
                  "user2"
                ]
              },
              "administrators": {
                "description": "Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier",
                "type": "array",
                "items": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                },
                "example": [
                  "user1",
                  "user2"
                ]
              },
              "kdcIP": {
                "type": "string",
                "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                "description": "kdc server IP address for the active directory machine. This optional parameter is used only while creating kerberos volume.",
                "example": "101.102.103.104"
              },
              "adName": {
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
                "example": "ADServerName"
              },
              "serverRootCACertificate": {
                "type": "string",
                "maxLength": 10240,
                "minLength": 1,
                "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
                "x-ms-secret": true,
                "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              },
              "aesEncryption": {
                "type": "boolean",
                "description": "If enabled, AES encryption will be enabled for SMB communication."
              },
              "ldapSigning": {
                "type": "boolean",
                "description": "Specifies whether or not the LDAP traffic needs to be signed."
              },
              "securityOperators": {
                "type": "array",
                "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
                "items": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                },
                "example": [
                  "user1",
                  "user2"
                ]
              },
              "ldapOverTLS": {
                "type": "boolean",
                "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
              },
              "allowLocalNfsUsersWithLdap": {
                "type": "boolean",
                "description": " If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
              },
              "encryptDCConnections": {
                "type": "boolean",
                "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
              },
              "ldapSearchScope": {
                "description": "LDAP Search scope options",
                "type": "object",
                "properties": {
                  "userDN": {
                    "type": "string",
                    "description": "This specifies the user DN, which overrides the base DN for user lookups.",
                    "maxLength": 255,
                    "example": "OU=fin,OU=hr,dc=domain,dc=com"
                  },
                  "groupDN": {
                    "type": "string",
                    "description": "This specifies the group DN, which overrides the base DN for group lookups.",
                    "maxLength": 255,
                    "example": "OU=fin,OU=hr,dc=domain,dc=com"
                  },
                  "groupMembershipFilter": {
                    "type": "string",
                    "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
                    "maxLength": 255,
                    "example": "cn=*99"
                  }
                }
              },
              "preferredServersForLdapClient": {
                "type": "string",
                "maxLength": 32,
                "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
                "description": "Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.",
                "example": "101.102.103.104, 101.102.103.105"
              }
            }
          },
          "x-ms-identifiers": [
            "activeDirectoryId"
          ]
        },
        "encryption": {
          "description": "Encryption settings",
          "type": "object",
          "properties": {
            "keySource": {
              "type": "string",
              "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
              "enum": [
                "Microsoft.NetApp",
                "Microsoft.KeyVault"
              ],
              "x-ms-enum": {
                "name": "KeySource",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Microsoft.NetApp",
                    "description": "Microsoft-managed key encryption"
                  },
                  {
                    "value": "Microsoft.KeyVault",
                    "description": "Customer-managed key encryption"
                  }
                ]
              },
              "default": "Microsoft.NetApp"
            },
            "keyVaultProperties": {
              "description": "Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.",
              "type": "object",
              "required": [
                "keyVaultUri",
                "keyName"
              ],
              "properties": {
                "keyVaultId": {
                  "type": "string",
                  "description": "UUID v4 used to identify the Azure Key Vault configuration",
                  "readOnly": true,
                  "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                },
                "keyVaultUri": {
                  "type": "string",
                  "format": "uri",
                  "description": "The Uri of KeyVault."
                },
                "keyName": {
                  "type": "string",
                  "description": "The name of KeyVault key."
                },
                "keyVaultResourceId": {
                  "type": "string",
                  "description": "The resource ID of KeyVault.",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.KeyVault/vaults"
                      }
                    ]
                  }
                },
                "status": {
                  "type": "string",
                  "description": "Status of the KeyVault connection.",
                  "readOnly": true,
                  "enum": [
                    "Created",
                    "Updating",
                    "InUse",
                    "Deleted",
                    "Error"
                  ],
                  "x-ms-enum": {
                    "name": "KeyVaultStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Created",
                        "description": "KeyVault connection created but not in use"
                      },
                      {
                        "value": "InUse",
                        "description": "KeyVault connection in use by SMB Volume"
                      },
                      {
                        "value": "Deleted",
                        "description": "KeyVault connection Deleted"
                      },
                      {
                        "value": "Error",
                        "description": "Error with the KeyVault connection"
                      },
                      {
                        "value": "Updating",
                        "description": "KeyVault connection Updating"
                      }
                    ]
                  }
                }
              }
            },
            "identity": {
              "description": "Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.",
              "type": "object",
              "properties": {
                "principalId": {
                  "type": "string",
                  "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
                  "readOnly": true
                },
                "userAssignedIdentity": {
                  "type": "string",
                  "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
                },
                "federatedClientId": {
                  "type": "string",
                  "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults.",
                  "example": "87654321-1234-1234-1234-876543214321"
                }
              }
            }
          }
        },
        "disableShowmount": {
          "type": "boolean",
          "readOnly": true,
          "x-nullable": true,
          "description": "Shows the status of disableShowmount for all volumes under the subscription, null equals false"
        },
        "nfsV4IDDomain": {
          "type": "string",
          "description": "Domain for NFSv4 user ID mapping. This property will be set for all NetApp accounts in the subscription and region and only affect non ldap NFSv4 volumes.",
          "maxLength": 255,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.-]{0,253}[a-zA-Z0-9]$",
          "x-nullable": true,
          "example": "defaultv4iddomain.com"
        },
        "multiAdStatus": {
          "title": "multiAdStatus",
          "type": "string",
          "readOnly": true,
          "description": "MultiAD Status for the account",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "multiAdStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Disabled",
                "description": "Account is MultiAD disabled, Means its a SharedAD or SingleAD account."
              },
              {
                "value": "Enabled",
                "description": "Account is MultiAD enabled"
              }
            ]
          },
          "example": "Enabled"
        }
      }
    },
    "activeDirectory": {
      "description": "Active Directory",
      "type": "object",
      "properties": {
        "activeDirectoryId": {
          "type": "string",
          "x-nullable": true,
          "description": "Id of the Active Directory"
        },
        "username": {
          "type": "string",
          "description": "A domain user account with permission to create machine accounts"
        },
        "password": {
          "type": "string",
          "x-ms-secret": true,
          "maxLength": 64,
          "description": "Plain text password of Active Directory domain administrator, value is masked in the response"
        },
        "domain": {
          "type": "string",
          "description": "Name of the Active Directory domain"
        },
        "dns": {
          "type": "string",
          "description": "Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$",
          "example": "101.102.103.104,101.102.103.105"
        },
        "status": {
          "type": "string",
          "description": "Status of the Active Directory",
          "readOnly": true,
          "enum": [
            "Created",
            "Updating",
            "InUse",
            "Deleted",
            "Error"
          ],
          "x-ms-enum": {
            "name": "ActiveDirectoryStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Created",
                "description": "Active Directory created but not in use"
              },
              {
                "value": "InUse",
                "description": "Active Directory in use by SMB Volume"
              },
              {
                "value": "Deleted",
                "description": "Active Directory Deleted"
              },
              {
                "value": "Error",
                "description": "Error with the Active Directory"
              },
              {
                "value": "Updating",
                "description": "Active Directory Updating"
              }
            ]
          }
        },
        "statusDetails": {
          "type": "string",
          "description": "Any details in regards to the Status of the Active Directory",
          "readOnly": true
        },
        "smbServerName": {
          "type": "string",
          "description": "NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes"
        },
        "organizationalUnit": {
          "type": "string",
          "default": "CN=Computers",
          "description": "The Organizational Unit (OU) within the Windows Active Directory"
        },
        "site": {
          "type": "string",
          "description": "The Active Directory site the service will limit Domain Controller discovery to"
        },
        "backupOperators": {
          "description": "Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "example": [
            "user1",
            "user2"
          ]
        },
        "administrators": {
          "description": "Users to be added to the Built-in Administrators active directory group. A list of unique usernames without domain specifier",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "example": [
            "user1",
            "user2"
          ]
        },
        "kdcIP": {
          "type": "string",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
          "description": "kdc server IP address for the active directory machine. This optional parameter is used only while creating kerberos volume.",
          "example": "101.102.103.104"
        },
        "adName": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "Name of the active directory machine. This optional parameter is used only while creating kerberos volume",
          "example": "ADServerName"
        },
        "serverRootCACertificate": {
          "type": "string",
          "maxLength": 10240,
          "minLength": 1,
          "description": "When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.",
          "x-ms-secret": true,
          "example": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lRR3FXdnRxeHBvSTFJV3Z4VGdJbElWREFOQmdrcWhraUc5dzBCQVFzRkFEQlYKTVJNd0VRWUtDWkltaVpQeUxHUUJHUllEWTI5dE1SY3dGUVlLQ1pJbWlaUHlMR1FCR1JZSGFHRnlhV3R5WWpFbApNQ01HQTFVRUF4TWNhR0Z5YVd0eVlpMVhTVTR0TWtKUFZrRkZTMEkwTkVJdFEwRXRNakFlRncweU1EQTFNRFV3Ck56TTVORGxhRncweU1EQTFNRFl3TnpRNU5EaGFNRlV4RXpBUkJnb0praWFKay9Jc1pBRVpGZ05qYjIweEZ6QVYKQmdvSmtpYUprL0lzWkFFWkZnZG9ZWEpwYTNKaU1TVXdJd1lEVlFRREV4eG9ZWEpwYTNKaUxWZEpUaTB5UWs5VwpRVVZMUWpRMFFpMURRUzB5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFqMHByCnhaaXpNaDBqYnRwN1ZOc0JrRVJ2MVpZT0MzMEtqaGRWdEExRm1MeFM2cXlycmpMZUdXOXRSd2ZnUkR0eVBodTIKZVJTcVpTUjF6Z1hZR0s0Nys3Y3F0YnB2UElOektCb0dOWERIVTNxVWlleXJWSjFDVzRKNjJodUdrbUV1VVVkMApKMXBxNTVxbjk1SmRUbWh1dmZlTUxxeHB5c01nbGVnY281ZFhoN0hsQkhwaTNKMFN4ZnhVWmxKMVZiOFJZVEZhCkJiMGFlTVZaRzRKeVREaktiMlR1TmFXOG1aUE5vOFBMRDRocjdndFNZUEQvQ1dVVGV5QlpoZC9LTzNPczlWVEIKYmpLUGtWd0J2WEs2SlFMSGprNFBHS3VYZDhaWVFyajBtOWNIZDNmcWNYTXlQUnQ2TlJ4ak0yMTUxckFzSkVhNgpWZC9ta056akpXalBrT2VZUVFJREFRQUJvMmt3WnpBVEJna3JCZ0VFQVlJM0ZBSUVCaDRFQUVNQVFUQU9CZ05WCkhROEJBZjhFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVDVEc2ODJSay9kMysKWGtHa0VMakRFMjI4ZjNnd0VBWUpLd1lCQkFHQ054VUJCQU1DQVFBd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBR1RjTTNnWExIU05wS014RHEvUFpZbWZCMmNlN3VhMmxxbXpzZSt4QmthSTE0WXdzZE5ZQjZBVTNFWDM3QWpZCjd3bm9xQzY1N0U2RVhTODVDckoyNXJNTHo4OEtONGI3cUg5RUowSS9XVHg5YTdUT0ZENENWQThuL0xwNGh1Ym4KNlBFalY5NFlZWXBXTG1hTkkvbGFReWsxSHVJbDFSTCttVDFnSWQ4ZWZXZ1UvNmlVVEw3eGMrdjkyNHBuTHhISwpOSnNTV3c0NFk5a0R5SU9KOXFjWUlBN1lhTkxPZTRjSysvQlRvdDh0dVVKT1hHLzdBRmtxR2EyQVA4MmFZOStKCnkwSmU2OG5nTHJ1dVU4VHpneVpqdkFHcTRrVEVOdWFoaFdHVC9KWkEzOXhSNUV4MmNMUUplcE5NdnlZbUZ3Z1UKME8zYlA0OWNBVFVCMXoyQ3Y5aTRQbVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        },
        "aesEncryption": {
          "type": "boolean",
          "description": "If enabled, AES encryption will be enabled for SMB communication."
        },
        "ldapSigning": {
          "type": "boolean",
          "description": "Specifies whether or not the LDAP traffic needs to be signed."
        },
        "securityOperators": {
          "type": "array",
          "description": "Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier",
          "items": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "example": [
            "user1",
            "user2"
          ]
        },
        "ldapOverTLS": {
          "type": "boolean",
          "description": "Specifies whether or not the LDAP traffic needs to be secured via TLS."
        },
        "allowLocalNfsUsersWithLdap": {
          "type": "boolean",
          "description": " If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes."
        },
        "encryptDCConnections": {
          "type": "boolean",
          "description": "If enabled, Traffic between the SMB server to Domain Controller (DC) will be encrypted."
        },
        "ldapSearchScope": {
          "description": "LDAP Search scope options",
          "type": "object",
          "properties": {
            "userDN": {
              "type": "string",
              "description": "This specifies the user DN, which overrides the base DN for user lookups.",
              "maxLength": 255,
              "example": "OU=fin,OU=hr,dc=domain,dc=com"
            },
            "groupDN": {
              "type": "string",
              "description": "This specifies the group DN, which overrides the base DN for group lookups.",
              "maxLength": 255,
              "example": "OU=fin,OU=hr,dc=domain,dc=com"
            },
            "groupMembershipFilter": {
              "type": "string",
              "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
              "maxLength": 255,
              "example": "cn=*99"
            }
          }
        },
        "preferredServersForLdapClient": {
          "type": "string",
          "maxLength": 32,
          "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$",
          "description": "Comma separated list of IPv4 addresses of preferred servers for LDAP client. At most two comma separated IPv4 addresses can be passed.",
          "example": "101.102.103.104, 101.102.103.105"
        }
      }
    },
    "ldapSearchScopeOpt": {
      "type": "object",
      "description": "LDAP search scope ",
      "properties": {
        "userDN": {
          "type": "string",
          "description": "This specifies the user DN, which overrides the base DN for user lookups.",
          "maxLength": 255,
          "example": "OU=fin,OU=hr,dc=domain,dc=com"
        },
        "groupDN": {
          "type": "string",
          "description": "This specifies the group DN, which overrides the base DN for group lookups.",
          "maxLength": 255,
          "example": "OU=fin,OU=hr,dc=domain,dc=com"
        },
        "groupMembershipFilter": {
          "type": "string",
          "description": "This specifies the custom LDAP search filter to be used when looking up group membership from LDAP server.",
          "maxLength": 255,
          "example": "cn=*99"
        }
      }
    },
    "accountEncryption": {
      "type": "object",
      "description": "Encryption settings",
      "properties": {
        "keySource": {
          "type": "string",
          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.NetApp, Microsoft.KeyVault",
          "enum": [
            "Microsoft.NetApp",
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "KeySource",
            "modelAsString": true,
            "values": [
              {
                "value": "Microsoft.NetApp",
                "description": "Microsoft-managed key encryption"
              },
              {
                "value": "Microsoft.KeyVault",
                "description": "Customer-managed key encryption"
              }
            ]
          },
          "default": "Microsoft.NetApp"
        },
        "keyVaultProperties": {
          "description": "Properties provided by KeVault. Applicable if keySource is 'Microsoft.KeyVault'.",
          "type": "object",
          "required": [
            "keyVaultUri",
            "keyName"
          ],
          "properties": {
            "keyVaultId": {
              "type": "string",
              "description": "UUID v4 used to identify the Azure Key Vault configuration",
              "readOnly": true,
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "maxLength": 36,
              "minLength": 36,
              "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
            },
            "keyVaultUri": {
              "type": "string",
              "format": "uri",
              "description": "The Uri of KeyVault."
            },
            "keyName": {
              "type": "string",
              "description": "The name of KeyVault key."
            },
            "keyVaultResourceId": {
              "type": "string",
              "description": "The resource ID of KeyVault.",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.KeyVault/vaults"
                  }
                ]
              }
            },
            "status": {
              "type": "string",
              "description": "Status of the KeyVault connection.",
              "readOnly": true,
              "enum": [
                "Created",
                "Updating",
                "InUse",
                "Deleted",
                "Error"
              ],
              "x-ms-enum": {
                "name": "KeyVaultStatus",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Created",
                    "description": "KeyVault connection created but not in use"
                  },
                  {
                    "value": "InUse",
                    "description": "KeyVault connection in use by SMB Volume"
                  },
                  {
                    "value": "Deleted",
                    "description": "KeyVault connection Deleted"
                  },
                  {
                    "value": "Error",
                    "description": "Error with the KeyVault connection"
                  },
                  {
                    "value": "Updating",
                    "description": "KeyVault connection Updating"
                  }
                ]
              }
            }
          }
        },
        "identity": {
          "description": "Identity used to authenticate to KeyVault. Applicable if keySource is 'Microsoft.KeyVault'.",
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
              "readOnly": true
            },
            "userAssignedIdentity": {
              "type": "string",
              "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
            },
            "federatedClientId": {
              "type": "string",
              "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults.",
              "example": "87654321-1234-1234-1234-876543214321"
            }
          }
        }
      }
    },
    "KeyVaultProperties": {
      "description": "Properties of key vault.",
      "type": "object",
      "required": [
        "keyVaultUri",
        "keyName"
      ],
      "properties": {
        "keyVaultId": {
          "type": "string",
          "description": "UUID v4 used to identify the Azure Key Vault configuration",
          "readOnly": true,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
        },
        "keyVaultUri": {
          "type": "string",
          "format": "uri",
          "description": "The Uri of KeyVault."
        },
        "keyName": {
          "type": "string",
          "description": "The name of KeyVault key."
        },
        "keyVaultResourceId": {
          "type": "string",
          "description": "The resource ID of KeyVault.",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.KeyVault/vaults"
              }
            ]
          }
        },
        "status": {
          "type": "string",
          "description": "Status of the KeyVault connection.",
          "readOnly": true,
          "enum": [
            "Created",
            "Updating",
            "InUse",
            "Deleted",
            "Error"
          ],
          "x-ms-enum": {
            "name": "KeyVaultStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Created",
                "description": "KeyVault connection created but not in use"
              },
              {
                "value": "InUse",
                "description": "KeyVault connection in use by SMB Volume"
              },
              {
                "value": "Deleted",
                "description": "KeyVault connection Deleted"
              },
              {
                "value": "Error",
                "description": "Error with the KeyVault connection"
              },
              {
                "value": "Updating",
                "description": "KeyVault connection Updating"
              }
            ]
          }
        }
      }
    },
    "EncryptionIdentity": {
      "description": "Identity used to authenticate with key vault.",
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID (object ID) of the identity used to authenticate with key vault. Read-only.",
          "readOnly": true
        },
        "userAssignedIdentity": {
          "type": "string",
          "description": "The ARM resource identifier of the user assigned identity used to authenticate with key vault. Applicable if identity.type has 'UserAssigned'. It should match key of identity.userAssignedIdentities."
        },
        "federatedClientId": {
          "type": "string",
          "description": "ClientId of the multi-tenant AAD Application. Used to access cross-tenant keyvaults.",
          "example": "87654321-1234-1234-1234-876543214321"
        }
      }
    },
    "capacityPoolList": {
      "description": "List of capacity pool resources",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Capacity pools",
          "type": "array",
          "items": {
            "description": "Capacity pool resource",
            "type": "object",
            "required": [
              "location",
              "properties"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "etag": {
                "readOnly": true,
                "type": "string",
                "description": "A unique read-only string that changes whenever the resource is updated."
              },
              "properties": {
                "description": "Capacity pool properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "required": [
                  "size",
                  "serviceLevel"
                ],
                "properties": {
                  "poolId": {
                    "title": "poolId",
                    "type": "string",
                    "readOnly": true,
                    "description": "UUID v4 used to identify the Pool",
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                  },
                  "size": {
                    "title": "size",
                    "type": "integer",
                    "format": "int64",
                    "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).",
                    "default": 4398046511104
                  },
                  "serviceLevel": {
                    "title": "serviceLevel",
                    "type": "string",
                    "description": "The service level of the file system",
                    "enum": [
                      "Standard",
                      "Premium",
                      "Ultra",
                      "StandardZRS",
                      "Flexible"
                    ],
                    "default": "Premium",
                    "x-ms-enum": {
                      "name": "ServiceLevel",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Standard",
                          "description": "Standard service level"
                        },
                        {
                          "value": "Premium",
                          "description": "Premium service level"
                        },
                        {
                          "value": "Ultra",
                          "description": "Ultra service level"
                        },
                        {
                          "value": "StandardZRS",
                          "description": "Zone redundant storage service level. This will be deprecated soon."
                        },
                        {
                          "value": "Flexible",
                          "description": "Flexible service level"
                        }
                      ]
                    }
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Azure lifecycle management"
                  },
                  "totalThroughputMibps": {
                    "type": "number",
                    "description": "Total throughput of pool in MiB/s",
                    "example": 164.221,
                    "readOnly": true
                  },
                  "utilizedThroughputMibps": {
                    "type": "number",
                    "description": "Utilized throughput of pool in MiB/s",
                    "example": 164.221,
                    "readOnly": true
                  },
                  "customThroughputMibps": {
                    "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
                    "type": "number",
                    "x-nullable": true,
                    "example": 128
                  },
                  "qosType": {
                    "title": "qosType",
                    "type": "string",
                    "description": "The qos type of the pool",
                    "enum": [
                      "Auto",
                      "Manual"
                    ],
                    "x-ms-enum": {
                      "name": "qosType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Auto",
                          "description": "qos type Auto"
                        },
                        {
                          "value": "Manual",
                          "description": "qos type Manual"
                        }
                      ]
                    },
                    "example": "Manual",
                    "default": "Auto"
                  },
                  "coolAccess": {
                    "type": "boolean",
                    "default": false,
                    "example": false,
                    "description": "If enabled (true) the pool can contain cool Access enabled volumes."
                  },
                  "encryptionType": {
                    "title": "encryptionType",
                    "type": "string",
                    "x-nullable": true,
                    "description": "Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "enum": [
                      "Single",
                      "Double"
                    ],
                    "x-ms-enum": {
                      "name": "encryptionType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Single",
                          "description": "EncryptionType Single, volumes will use single encryption at rest"
                        },
                        {
                          "value": "Double",
                          "description": "EncryptionType Double, volumes will use double encryption at rest"
                        }
                      ]
                    },
                    "example": "Single",
                    "default": "Single"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      }
    },
    "capacityPool": {
      "description": "Capacity pool resource",
      "type": "object",
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "properties": {
          "description": "Capacity pool properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "required": [
            "size",
            "serviceLevel"
          ],
          "properties": {
            "poolId": {
              "title": "poolId",
              "type": "string",
              "readOnly": true,
              "description": "UUID v4 used to identify the Pool",
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "maxLength": 36,
              "minLength": 36,
              "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
            },
            "size": {
              "title": "size",
              "type": "integer",
              "format": "int64",
              "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).",
              "default": 4398046511104
            },
            "serviceLevel": {
              "title": "serviceLevel",
              "type": "string",
              "description": "The service level of the file system",
              "enum": [
                "Standard",
                "Premium",
                "Ultra",
                "StandardZRS",
                "Flexible"
              ],
              "default": "Premium",
              "x-ms-enum": {
                "name": "ServiceLevel",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Standard",
                    "description": "Standard service level"
                  },
                  {
                    "value": "Premium",
                    "description": "Premium service level"
                  },
                  {
                    "value": "Ultra",
                    "description": "Ultra service level"
                  },
                  {
                    "value": "StandardZRS",
                    "description": "Zone redundant storage service level. This will be deprecated soon."
                  },
                  {
                    "value": "Flexible",
                    "description": "Flexible service level"
                  }
                ]
              }
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Azure lifecycle management"
            },
            "totalThroughputMibps": {
              "type": "number",
              "description": "Total throughput of pool in MiB/s",
              "example": 164.221,
              "readOnly": true
            },
            "utilizedThroughputMibps": {
              "type": "number",
              "description": "Utilized throughput of pool in MiB/s",
              "example": 164.221,
              "readOnly": true
            },
            "customThroughputMibps": {
              "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
              "type": "number",
              "x-nullable": true,
              "example": 128
            },
            "qosType": {
              "title": "qosType",
              "type": "string",
              "description": "The qos type of the pool",
              "enum": [
                "Auto",
                "Manual"
              ],
              "x-ms-enum": {
                "name": "qosType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Auto",
                    "description": "qos type Auto"
                  },
                  {
                    "value": "Manual",
                    "description": "qos type Manual"
                  }
                ]
              },
              "example": "Manual",
              "default": "Auto"
            },
            "coolAccess": {
              "type": "boolean",
              "default": false,
              "example": false,
              "description": "If enabled (true) the pool can contain cool Access enabled volumes."
            },
            "encryptionType": {
              "title": "encryptionType",
              "type": "string",
              "x-nullable": true,
              "description": "Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "enum": [
                "Single",
                "Double"
              ],
              "x-ms-enum": {
                "name": "encryptionType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Single",
                    "description": "EncryptionType Single, volumes will use single encryption at rest"
                  },
                  {
                    "value": "Double",
                    "description": "EncryptionType Double, volumes will use double encryption at rest"
                  }
                ]
              },
              "example": "Single",
              "default": "Single"
            }
          }
        }
      }
    },
    "poolProperties": {
      "description": "Pool properties",
      "type": "object",
      "required": [
        "size",
        "serviceLevel"
      ],
      "properties": {
        "poolId": {
          "title": "poolId",
          "type": "string",
          "readOnly": true,
          "description": "UUID v4 used to identify the Pool",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
        },
        "size": {
          "title": "size",
          "type": "integer",
          "format": "int64",
          "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).",
          "default": 4398046511104
        },
        "serviceLevel": {
          "title": "serviceLevel",
          "type": "string",
          "description": "The service level of the file system",
          "enum": [
            "Standard",
            "Premium",
            "Ultra",
            "StandardZRS",
            "Flexible"
          ],
          "default": "Premium",
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard",
                "description": "Standard service level"
              },
              {
                "value": "Premium",
                "description": "Premium service level"
              },
              {
                "value": "Ultra",
                "description": "Ultra service level"
              },
              {
                "value": "StandardZRS",
                "description": "Zone redundant storage service level. This will be deprecated soon."
              },
              {
                "value": "Flexible",
                "description": "Flexible service level"
              }
            ]
          }
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        },
        "totalThroughputMibps": {
          "type": "number",
          "description": "Total throughput of pool in MiB/s",
          "example": 164.221,
          "readOnly": true
        },
        "utilizedThroughputMibps": {
          "type": "number",
          "description": "Utilized throughput of pool in MiB/s",
          "example": 164.221,
          "readOnly": true
        },
        "customThroughputMibps": {
          "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
          "type": "number",
          "x-nullable": true,
          "example": 128
        },
        "qosType": {
          "title": "qosType",
          "type": "string",
          "description": "The qos type of the pool",
          "enum": [
            "Auto",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "qosType",
            "modelAsString": true,
            "values": [
              {
                "value": "Auto",
                "description": "qos type Auto"
              },
              {
                "value": "Manual",
                "description": "qos type Manual"
              }
            ]
          },
          "example": "Manual",
          "default": "Auto"
        },
        "coolAccess": {
          "type": "boolean",
          "default": false,
          "example": false,
          "description": "If enabled (true) the pool can contain cool Access enabled volumes."
        },
        "encryptionType": {
          "title": "encryptionType",
          "type": "string",
          "x-nullable": true,
          "description": "Encryption type of the capacity pool, set encryption type for data at rest for this pool and all volumes in it. This value can only be set when creating new pool.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "enum": [
            "Single",
            "Double"
          ],
          "x-ms-enum": {
            "name": "encryptionType",
            "modelAsString": true,
            "values": [
              {
                "value": "Single",
                "description": "EncryptionType Single, volumes will use single encryption at rest"
              },
              {
                "value": "Double",
                "description": "EncryptionType Double, volumes will use double encryption at rest"
              }
            ]
          },
          "example": "Single",
          "default": "Single"
        }
      }
    },
    "capacityPoolPatch": {
      "description": "Capacity pool patch resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Capacity pool properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "size": {
              "title": "size",
              "type": "integer",
              "format": "int64",
              "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).",
              "default": 4398046511104
            },
            "qosType": {
              "title": "qosType",
              "type": "string",
              "description": "The qos type of the pool",
              "enum": [
                "Auto",
                "Manual"
              ],
              "x-ms-enum": {
                "name": "qosType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Auto",
                    "description": "qos type Auto"
                  },
                  {
                    "value": "Manual",
                    "description": "qos type Manual"
                  }
                ]
              },
              "example": "Manual",
              "default": "Auto"
            },
            "coolAccess": {
              "type": "boolean",
              "example": false,
              "description": "If enabled (true) the pool can contain cool Access enabled volumes."
            },
            "customThroughputMibps": {
              "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
              "type": "number",
              "x-nullable": true,
              "example": 128
            }
          }
        }
      }
    },
    "poolPatchProperties": {
      "description": "Patchable pool properties",
      "type": "object",
      "properties": {
        "size": {
          "title": "size",
          "type": "integer",
          "format": "int64",
          "description": "Provisioned size of the pool (in bytes). Allowed values are in 1TiB chunks (value must be multiple of 1099511627776).",
          "default": 4398046511104
        },
        "qosType": {
          "title": "qosType",
          "type": "string",
          "description": "The qos type of the pool",
          "enum": [
            "Auto",
            "Manual"
          ],
          "x-ms-enum": {
            "name": "qosType",
            "modelAsString": true,
            "values": [
              {
                "value": "Auto",
                "description": "qos type Auto"
              },
              {
                "value": "Manual",
                "description": "qos type Manual"
              }
            ]
          },
          "example": "Manual",
          "default": "Auto"
        },
        "coolAccess": {
          "type": "boolean",
          "example": false,
          "description": "If enabled (true) the pool can contain cool Access enabled volumes."
        },
        "customThroughputMibps": {
          "title": "Maximum throughput in MiB/s that can be achieved by this pool and this will be accepted as input only for manual qosType pool with Flexible service level",
          "type": "number",
          "x-nullable": true,
          "example": 128
        }
      }
    },
    "volumeList": {
      "description": "List of volume resources",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of volumes",
          "type": "array",
          "items": {
            "description": "Volume resource",
            "type": "object",
            "required": [
              "location",
              "properties"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "etag": {
                "readOnly": true,
                "type": "string",
                "description": "A unique read-only string that changes whenever the resource is updated."
              },
              "zones": {
                "type": "array",
                "description": "Availability Zone",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "items": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "example": "1"
                }
              },
              "properties": {
                "description": "Volume properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "required": [
                  "creationToken",
                  "usageThreshold",
                  "subnetId"
                ],
                "properties": {
                  "fileSystemId": {
                    "title": "FileSystem ID",
                    "type": "string",
                    "readOnly": true,
                    "description": "Unique FileSystem Identifier.",
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                  },
                  "creationToken": {
                    "title": "Creation Token or File Path",
                    "type": "string",
                    "description": "A unique file path for the volume. Used when creating mount targets",
                    "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                    "minLength": 1,
                    "maxLength": 80,
                    "example": "some-amazing-filepath",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "serviceLevel": {
                    "title": "serviceLevel",
                    "type": "string",
                    "description": "The service level of the file system",
                    "enum": [
                      "Standard",
                      "Premium",
                      "Ultra",
                      "StandardZRS",
                      "Flexible"
                    ],
                    "default": "Premium",
                    "x-ms-enum": {
                      "name": "ServiceLevel",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Standard",
                          "description": "Standard service level"
                        },
                        {
                          "value": "Premium",
                          "description": "Premium service level"
                        },
                        {
                          "value": "Ultra",
                          "description": "Ultra service level"
                        },
                        {
                          "value": "StandardZRS",
                          "description": "Zone redundant storage service level. This will be deprecated soon."
                        },
                        {
                          "value": "Flexible",
                          "description": "Flexible service level"
                        }
                      ]
                    }
                  },
                  "usageThreshold": {
                    "title": "usageThreshold",
                    "type": "integer",
                    "format": "int64",
                    "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                    "minimum": 53687091200,
                    "maximum": 2638827906662400,
                    "default": 107374182400,
                    "example": 107374182400
                  },
                  "exportPolicy": {
                    "title": "exportPolicy",
                    "description": "Set of export policy rules",
                    "properties": {
                      "rules": {
                        "title": "Export policy rule",
                        "description": "Export policy rule",
                        "type": "array",
                        "items": {
                          "description": "Volume Export Policy Rule",
                          "type": "object",
                          "properties": {
                            "ruleIndex": {
                              "type": "integer",
                              "description": "Order index",
                              "format": "int32"
                            },
                            "unixReadOnly": {
                              "type": "boolean",
                              "description": "Read only access"
                            },
                            "unixReadWrite": {
                              "type": "boolean",
                              "description": "Read and write access"
                            },
                            "kerberos5ReadOnly": {
                              "type": "boolean",
                              "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "kerberos5ReadWrite": {
                              "type": "boolean",
                              "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "kerberos5iReadOnly": {
                              "type": "boolean",
                              "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "kerberos5iReadWrite": {
                              "type": "boolean",
                              "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "kerberos5pReadOnly": {
                              "type": "boolean",
                              "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "kerberos5pReadWrite": {
                              "type": "boolean",
                              "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "cifs": {
                              "type": "boolean",
                              "description": "Allows CIFS protocol"
                            },
                            "nfsv3": {
                              "type": "boolean",
                              "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                            },
                            "nfsv41": {
                              "type": "boolean",
                              "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                            },
                            "allowedClients": {
                              "type": "string",
                              "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                            },
                            "hasRootAccess": {
                              "type": "boolean",
                              "description": "Has root access to volume",
                              "example": true,
                              "default": true
                            },
                            "chownMode": {
                              "type": "string",
                              "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                              "default": "Restricted",
                              "enum": [
                                "Restricted",
                                "Unrestricted"
                              ],
                              "x-ms-enum": {
                                "name": "ChownMode",
                                "modelAsString": true
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "ruleIndex"
                        ]
                      }
                    }
                  },
                  "protocolTypes": {
                    "title": "protocolTypes",
                    "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "NFSv4.1"
                    ]
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Azure lifecycle management"
                  },
                  "snapshotId": {
                    "title": "Snapshot ID",
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                        }
                      ]
                    },
                    "x-nullable": true,
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "Resource identifier used to identify the Snapshot.",
                    "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                  },
                  "deleteBaseSnapshot": {
                    "type": "boolean",
                    "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                  },
                  "backupId": {
                    "title": "Backup ID",
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                        }
                      ]
                    },
                    "x-nullable": true,
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "Resource identifier used to identify the Backup.",
                    "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                  },
                  "baremetalTenantId": {
                    "title": "Baremetal Tenant ID",
                    "type": "string",
                    "readOnly": true,
                    "description": "Unique Baremetal Tenant Identifier.",
                    "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                  },
                  "subnetId": {
                    "type": "string",
                    "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                  },
                  "networkFeatures": {
                    "title": "Network features",
                    "description": "Network features available to the volume, or current state of update.",
                    "type": "string",
                    "enum": [
                      "Basic",
                      "Standard",
                      "Basic_Standard",
                      "Standard_Basic"
                    ],
                    "x-ms-enum": {
                      "name": "NetworkFeatures",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Basic",
                          "description": "Basic network features."
                        },
                        {
                          "value": "Standard",
                          "description": "Standard network features."
                        },
                        {
                          "value": "Basic_Standard",
                          "description": "Updating from Basic to Standard network features."
                        },
                        {
                          "value": "Standard_Basic",
                          "description": "Updating from Standard to Basic network features."
                        }
                      ]
                    },
                    "example": "Standard",
                    "default": "Basic",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "effectiveNetworkFeatures": {
                    "title": "Network features",
                    "description": "Network features available to the volume, or current state of update.",
                    "type": "string",
                    "enum": [
                      "Basic",
                      "Standard",
                      "Basic_Standard",
                      "Standard_Basic"
                    ],
                    "x-ms-enum": {
                      "name": "NetworkFeatures",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Basic",
                          "description": "Basic network features."
                        },
                        {
                          "value": "Standard",
                          "description": "Standard network features."
                        },
                        {
                          "value": "Basic_Standard",
                          "description": "Updating from Basic to Standard network features."
                        },
                        {
                          "value": "Standard_Basic",
                          "description": "Updating from Standard to Basic network features."
                        }
                      ]
                    },
                    "example": "Standard",
                    "default": "Basic",
                    "readOnly": true
                  },
                  "networkSiblingSetId": {
                    "title": "Network Sibling Set ID",
                    "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                    "type": "string",
                    "readOnly": true,
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                  },
                  "storageToNetworkProximity": {
                    "title": "Storage to Network Proximity",
                    "description": "Provides storage to network proximity information for the volume.",
                    "type": "string",
                    "enum": [
                      "Default",
                      "T1",
                      "T2",
                      "AcrossT2"
                    ],
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "VolumeStorageToNetworkProximity",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Default",
                          "description": "Basic storage to network connectivity."
                        },
                        {
                          "value": "T1",
                          "description": "Standard T1 storage to network connectivity."
                        },
                        {
                          "value": "T2",
                          "description": "Standard T2 storage to network connectivity."
                        },
                        {
                          "value": "AcrossT2",
                          "description": "Standard AcrossT2 storage to network connectivity."
                        }
                      ]
                    },
                    "example": "T1"
                  },
                  "mountTargets": {
                    "title": "mountTargets",
                    "type": "array",
                    "readOnly": true,
                    "description": "List of mount targets",
                    "items": {
                      "description": "Mount target properties",
                      "type": "object",
                      "required": [
                        "fileSystemId"
                      ],
                      "properties": {
                        "mountTargetId": {
                          "title": "mountTargetId",
                          "type": "string",
                          "readOnly": true,
                          "description": "UUID v4 used to identify the MountTarget",
                          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                        },
                        "fileSystemId": {
                          "title": "fileSystemId",
                          "type": "string",
                          "description": "UUID v4 used to identify the MountTarget",
                          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                        },
                        "ipAddress": {
                          "title": "ipAddress",
                          "description": "The mount target's IPv4 address",
                          "type": "string",
                          "readOnly": true,
                          "example": "1.2.3.4"
                        },
                        "smbServerFqdn": {
                          "title": "smbServerFQDN",
                          "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                          "type": "string",
                          "example": "fullyqualified.domainname.com"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "fileSystemId"
                    ]
                  },
                  "volumeType": {
                    "type": "string",
                    "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                    "example": "DataProtection",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "dataProtection": {
                    "title": "DataProtection",
                    "description": "DataProtection type volumes include an object containing details of the replication",
                    "properties": {
                      "backup": {
                        "title": "Backup",
                        "description": "Backup Properties",
                        "type": "object",
                        "properties": {
                          "backupPolicyId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                }
                              ]
                            },
                            "description": "Backup Policy Resource ID"
                          },
                          "policyEnforced": {
                            "type": "boolean",
                            "description": "Policy Enforced"
                          },
                          "backupVaultId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                }
                              ]
                            },
                            "description": "Backup Vault Resource ID"
                          }
                        }
                      },
                      "replication": {
                        "title": "Replication",
                        "description": "Replication properties",
                        "type": "object",
                        "properties": {
                          "replicationId": {
                            "type": "string",
                            "description": "Id",
                            "readOnly": true
                          },
                          "endpointType": {
                            "type": "string",
                            "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                            "enum": [
                              "src",
                              "dst"
                            ],
                            "x-ms-enum": {
                              "name": "EndpointType",
                              "modelAsString": true
                            },
                            "readOnly": true
                          },
                          "replicationSchedule": {
                            "type": "string",
                            "description": "Schedule",
                            "enum": [
                              "_10minutely",
                              "hourly",
                              "daily"
                            ],
                            "x-ms-enum": {
                              "name": "ReplicationSchedule",
                              "modelAsString": true
                            }
                          },
                          "remoteVolumeResourceId": {
                            "type": "string",
                            "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                          },
                          "remotePath": {
                            "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                            "type": "object",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "required": [
                              "externalHostName",
                              "serverName",
                              "volumeName"
                            ],
                            "properties": {
                              "externalHostName": {
                                "type": "string",
                                "description": "The Path to a ONTAP Host"
                              },
                              "serverName": {
                                "type": "string",
                                "description": "The name of a server on the ONTAP Host"
                              },
                              "volumeName": {
                                "type": "string",
                                "description": "The name of a volume on the server"
                              }
                            }
                          },
                          "remoteVolumeRegion": {
                            "type": "string",
                            "description": "The remote region for the other end of the Volume Replication."
                          },
                          "destinationReplications": {
                            "description": "A list of destination replications",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "description": "Destination replication properties",
                              "type": "object",
                              "properties": {
                                "resourceId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                      }
                                    ]
                                  },
                                  "description": "The resource ID of the remote volume"
                                },
                                "replicationType": {
                                  "type": "string",
                                  "description": "Indicates whether the replication is cross zone or cross region.",
                                  "enum": [
                                    "CrossRegionReplication",
                                    "CrossZoneReplication"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ReplicationType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "CrossRegionReplication",
                                        "description": "Cross region replication"
                                      },
                                      {
                                        "value": "CrossZoneReplication",
                                        "description": "Cross zone replication"
                                      }
                                    ]
                                  }
                                },
                                "region": {
                                  "type": "string",
                                  "description": "The remote region for the destination volume."
                                },
                                "zone": {
                                  "type": "string",
                                  "description": "The remote zone for the destination volume."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "resourceId"
                            ]
                          }
                        }
                      },
                      "snapshot": {
                        "title": "Snapshot",
                        "description": "Snapshot properties.",
                        "type": "object",
                        "properties": {
                          "snapshotPolicyId": {
                            "type": "string",
                            "description": "Snapshot Policy ResourceId"
                          }
                        }
                      },
                      "volumeRelocation": {
                        "title": "VolumeRelocation",
                        "description": "VolumeRelocation properties",
                        "type": "object",
                        "properties": {
                          "relocationRequested": {
                            "type": "boolean",
                            "description": "Has relocation been requested for this volume"
                          },
                          "readyToBeFinalized": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Has relocation finished and is ready to be cleaned up"
                          }
                        }
                      }
                    }
                  },
                  "acceptGrowCapacityPoolForShortTermCloneSplit": {
                    "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                    "type": "string",
                    "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "enum": [
                      "Accepted",
                      "Declined"
                    ],
                    "x-ms-enum": {
                      "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Accepted",
                          "description": "Auto grow capacity pool for short term clone split is accepted."
                        },
                        {
                          "value": "Declined",
                          "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                        }
                      ]
                    },
                    "example": "Accepted"
                  },
                  "isRestoring": {
                    "type": "boolean",
                    "description": "Restoring",
                    "readOnly": true
                  },
                  "snapshotDirectoryVisible": {
                    "type": "boolean",
                    "default": true,
                    "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                  },
                  "kerberosEnabled": {
                    "type": "boolean",
                    "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "example": false,
                    "default": false
                  },
                  "securityStyle": {
                    "type": "string",
                    "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                    "default": "unix",
                    "enum": [
                      "ntfs",
                      "unix"
                    ],
                    "x-ms-enum": {
                      "name": "SecurityStyle",
                      "modelAsString": true
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "smbEncryption": {
                    "type": "boolean",
                    "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                    "example": false,
                    "default": false
                  },
                  "smbAccessBasedEnumeration": {
                    "title": "smbAccessBasedEnumeration",
                    "type": "string",
                    "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "x-ms-enum": {
                      "name": "smbAccessBasedEnumeration",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Disabled",
                          "description": "smbAccessBasedEnumeration share setting is disabled"
                        },
                        {
                          "value": "Enabled",
                          "description": "smbAccessBasedEnumeration share setting is enabled"
                        }
                      ]
                    },
                    "x-nullable": true,
                    "example": "Enabled"
                  },
                  "smbNonBrowsable": {
                    "title": "smbNonBrowsable",
                    "type": "string",
                    "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "x-ms-enum": {
                      "name": "smbNonBrowsable",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Disabled",
                          "description": "smbNonBrowsable share setting is disabled"
                        },
                        {
                          "value": "Enabled",
                          "description": "smbNonBrowsable share setting is enabled"
                        }
                      ]
                    },
                    "example": "Enabled"
                  },
                  "smbContinuouslyAvailable": {
                    "type": "boolean",
                    "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                    "example": false,
                    "default": false
                  },
                  "throughputMibps": {
                    "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                    "type": "number",
                    "x-nullable": true,
                    "example": 128.223
                  },
                  "actualThroughputMibps": {
                    "type": "number",
                    "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                    "example": 164.221,
                    "readOnly": true
                  },
                  "encryptionKeySource": {
                    "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                    "type": "string",
                    "enum": [
                      "Microsoft.NetApp",
                      "Microsoft.KeyVault"
                    ],
                    "x-ms-enum": {
                      "name": "EncryptionKeySource",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Microsoft.NetApp",
                          "description": "Microsoft-managed key encryption"
                        },
                        {
                          "value": "Microsoft.KeyVault",
                          "description": "Customer-managed key encryption"
                        }
                      ]
                    },
                    "default": "Microsoft.NetApp"
                  },
                  "keyVaultPrivateEndpointResourceId": {
                    "type": "string",
                    "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                  },
                  "ldapEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                    "example": false,
                    "default": false,
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "coolAccess": {
                    "type": "boolean",
                    "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                    "example": false,
                    "default": false
                  },
                  "coolnessPeriod": {
                    "type": "integer",
                    "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                    "example": 7,
                    "minimum": 2,
                    "maximum": 183,
                    "format": "int32"
                  },
                  "coolAccessRetrievalPolicy": {
                    "type": "string",
                    "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                    "enum": [
                      "Default",
                      "OnRead",
                      "Never"
                    ],
                    "x-ms-enum": {
                      "name": "coolAccessRetrievalPolicy",
                      "modelAsString": true
                    }
                  },
                  "coolAccessTieringPolicy": {
                    "type": "string",
                    "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                    "enum": [
                      "Auto",
                      "SnapshotOnly"
                    ],
                    "x-ms-enum": {
                      "name": "coolAccessTieringPolicy",
                      "modelAsString": true
                    }
                  },
                  "unixPermissions": {
                    "type": "string",
                    "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                    "minLength": 4,
                    "maxLength": 4,
                    "x-nullable": true,
                    "example": "0770"
                  },
                  "cloneProgress": {
                    "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                    "type": "integer",
                    "format": "int32",
                    "example": 10,
                    "x-nullable": true,
                    "readOnly": true
                  },
                  "fileAccessLogs": {
                    "type": "string",
                    "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                    "readOnly": true,
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "fileAccessLogs",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Enabled",
                          "description": "fileAccessLogs are enabled"
                        },
                        {
                          "value": "Disabled",
                          "description": "fileAccessLogs are not enabled"
                        }
                      ]
                    },
                    "example": "Disabled",
                    "default": "Disabled"
                  },
                  "avsDataStore": {
                    "title": "avsDataStore",
                    "type": "string",
                    "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "avsDataStore",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Enabled",
                          "description": "avsDataStore is enabled"
                        },
                        {
                          "value": "Disabled",
                          "description": "avsDataStore is disabled"
                        }
                      ]
                    },
                    "example": "Enabled",
                    "default": "Disabled",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "dataStoreResourceId": {
                    "title": "dataStoreResourceId",
                    "description": "Data store resource unique identifier",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "isDefaultQuotaEnabled": {
                    "type": "boolean",
                    "description": "Specifies if default quota is enabled for the volume.",
                    "example": false,
                    "default": false
                  },
                  "defaultUserQuotaInKiBs": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                    "example": 4,
                    "default": 0
                  },
                  "defaultGroupQuotaInKiBs": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                    "example": 4,
                    "default": 0
                  },
                  "maximumNumberOfFiles": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                    "example": 100000000
                  },
                  "volumeGroupName": {
                    "type": "string",
                    "description": "Volume Group Name",
                    "readOnly": true
                  },
                  "capacityPoolResourceId": {
                    "type": "string",
                    "description": "Pool Resource Id used in case of creating a volume through volume group"
                  },
                  "proximityPlacementGroup": {
                    "type": "string",
                    "description": "Proximity placement group associated with the volume",
                    "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                  },
                  "t2Network": {
                    "type": "string",
                    "description": "T2 network information",
                    "example": "Test-T2-Alias",
                    "readOnly": true
                  },
                  "volumeSpecName": {
                    "type": "string",
                    "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                    "example": "Data"
                  },
                  "encrypted": {
                    "type": "boolean",
                    "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                    "readOnly": true
                  },
                  "placementRules": {
                    "title": "Volume placement rules",
                    "description": "Application specific placement rules for the particular volume",
                    "type": "array",
                    "items": {
                      "description": "Application specific parameters for the placement of volumes in the volume group",
                      "type": "object",
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                          "example": "key1"
                        },
                        "value": {
                          "type": "string",
                          "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                          "example": "value1"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "key"
                    ]
                  },
                  "enableSubvolumes": {
                    "type": "string",
                    "description": "Flag indicating whether subvolume operations are enabled on the volume",
                    "example": "Enabled",
                    "default": "Disabled",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "enableSubvolumes",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Enabled",
                          "description": "subvolumes are enabled"
                        },
                        {
                          "value": "Disabled",
                          "description": "subvolumes are not enabled"
                        }
                      ]
                    }
                  },
                  "provisionedAvailabilityZone": {
                    "title": "Provisioned Availability Zone",
                    "type": "string",
                    "readOnly": true,
                    "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                    "example": "2",
                    "x-nullable": true
                  },
                  "isLargeVolume": {
                    "title": "Is Large Volume",
                    "type": "boolean",
                    "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                    "example": false,
                    "default": false,
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "originatingResourceId": {
                    "title": "Originating Resource Id",
                    "type": "string",
                    "description": "Id of the snapshot or backup that the volume is restored from.",
                    "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                    "readOnly": true,
                    "x-nullable": true
                  },
                  "inheritedSizeInBytes": {
                    "title": "inheritedSizeInBytes",
                    "type": "integer",
                    "format": "int64",
                    "description": "Space shared by short term clone volume with parent volume in bytes.",
                    "readOnly": true,
                    "x-nullable": true
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      }
    },
    "volume": {
      "description": "Volume resource",
      "type": "object",
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "zones": {
          "type": "array",
          "description": "Availability Zone",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "items": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "example": "1"
          }
        },
        "properties": {
          "description": "Volume properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "required": [
            "creationToken",
            "usageThreshold",
            "subnetId"
          ],
          "properties": {
            "fileSystemId": {
              "title": "FileSystem ID",
              "type": "string",
              "readOnly": true,
              "description": "Unique FileSystem Identifier.",
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "maxLength": 36,
              "minLength": 36,
              "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
            },
            "creationToken": {
              "title": "Creation Token or File Path",
              "type": "string",
              "description": "A unique file path for the volume. Used when creating mount targets",
              "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
              "minLength": 1,
              "maxLength": 80,
              "example": "some-amazing-filepath",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "serviceLevel": {
              "title": "serviceLevel",
              "type": "string",
              "description": "The service level of the file system",
              "enum": [
                "Standard",
                "Premium",
                "Ultra",
                "StandardZRS",
                "Flexible"
              ],
              "default": "Premium",
              "x-ms-enum": {
                "name": "ServiceLevel",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Standard",
                    "description": "Standard service level"
                  },
                  {
                    "value": "Premium",
                    "description": "Premium service level"
                  },
                  {
                    "value": "Ultra",
                    "description": "Ultra service level"
                  },
                  {
                    "value": "StandardZRS",
                    "description": "Zone redundant storage service level. This will be deprecated soon."
                  },
                  {
                    "value": "Flexible",
                    "description": "Flexible service level"
                  }
                ]
              }
            },
            "usageThreshold": {
              "title": "usageThreshold",
              "type": "integer",
              "format": "int64",
              "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
              "minimum": 53687091200,
              "maximum": 2638827906662400,
              "default": 107374182400,
              "example": 107374182400
            },
            "exportPolicy": {
              "title": "exportPolicy",
              "description": "Set of export policy rules",
              "properties": {
                "rules": {
                  "title": "Export policy rule",
                  "description": "Export policy rule",
                  "type": "array",
                  "items": {
                    "description": "Volume Export Policy Rule",
                    "type": "object",
                    "properties": {
                      "ruleIndex": {
                        "type": "integer",
                        "description": "Order index",
                        "format": "int32"
                      },
                      "unixReadOnly": {
                        "type": "boolean",
                        "description": "Read only access"
                      },
                      "unixReadWrite": {
                        "type": "boolean",
                        "description": "Read and write access"
                      },
                      "kerberos5ReadOnly": {
                        "type": "boolean",
                        "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "kerberos5ReadWrite": {
                        "type": "boolean",
                        "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "kerberos5iReadOnly": {
                        "type": "boolean",
                        "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "kerberos5iReadWrite": {
                        "type": "boolean",
                        "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "kerberos5pReadOnly": {
                        "type": "boolean",
                        "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "kerberos5pReadWrite": {
                        "type": "boolean",
                        "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "cifs": {
                        "type": "boolean",
                        "description": "Allows CIFS protocol"
                      },
                      "nfsv3": {
                        "type": "boolean",
                        "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                      },
                      "nfsv41": {
                        "type": "boolean",
                        "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                      },
                      "allowedClients": {
                        "type": "string",
                        "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                      },
                      "hasRootAccess": {
                        "type": "boolean",
                        "description": "Has root access to volume",
                        "example": true,
                        "default": true
                      },
                      "chownMode": {
                        "type": "string",
                        "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                        "default": "Restricted",
                        "enum": [
                          "Restricted",
                          "Unrestricted"
                        ],
                        "x-ms-enum": {
                          "name": "ChownMode",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "ruleIndex"
                  ]
                }
              }
            },
            "protocolTypes": {
              "title": "protocolTypes",
              "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "NFSv4.1"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Azure lifecycle management"
            },
            "snapshotId": {
              "title": "Snapshot ID",
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                  }
                ]
              },
              "x-nullable": true,
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "description": "Resource identifier used to identify the Snapshot.",
              "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
            },
            "deleteBaseSnapshot": {
              "type": "boolean",
              "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
            },
            "backupId": {
              "title": "Backup ID",
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                  }
                ]
              },
              "x-nullable": true,
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "description": "Resource identifier used to identify the Backup.",
              "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
            },
            "baremetalTenantId": {
              "title": "Baremetal Tenant ID",
              "type": "string",
              "readOnly": true,
              "description": "Unique Baremetal Tenant Identifier.",
              "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
            },
            "subnetId": {
              "type": "string",
              "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
            },
            "networkFeatures": {
              "title": "Network features",
              "description": "Network features available to the volume, or current state of update.",
              "type": "string",
              "enum": [
                "Basic",
                "Standard",
                "Basic_Standard",
                "Standard_Basic"
              ],
              "x-ms-enum": {
                "name": "NetworkFeatures",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Basic",
                    "description": "Basic network features."
                  },
                  {
                    "value": "Standard",
                    "description": "Standard network features."
                  },
                  {
                    "value": "Basic_Standard",
                    "description": "Updating from Basic to Standard network features."
                  },
                  {
                    "value": "Standard_Basic",
                    "description": "Updating from Standard to Basic network features."
                  }
                ]
              },
              "example": "Standard",
              "default": "Basic",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "effectiveNetworkFeatures": {
              "title": "Network features",
              "description": "Network features available to the volume, or current state of update.",
              "type": "string",
              "enum": [
                "Basic",
                "Standard",
                "Basic_Standard",
                "Standard_Basic"
              ],
              "x-ms-enum": {
                "name": "NetworkFeatures",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Basic",
                    "description": "Basic network features."
                  },
                  {
                    "value": "Standard",
                    "description": "Standard network features."
                  },
                  {
                    "value": "Basic_Standard",
                    "description": "Updating from Basic to Standard network features."
                  },
                  {
                    "value": "Standard_Basic",
                    "description": "Updating from Standard to Basic network features."
                  }
                ]
              },
              "example": "Standard",
              "default": "Basic",
              "readOnly": true
            },
            "networkSiblingSetId": {
              "title": "Network Sibling Set ID",
              "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
              "type": "string",
              "readOnly": true,
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "maxLength": 36,
              "minLength": 36,
              "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
            },
            "storageToNetworkProximity": {
              "title": "Storage to Network Proximity",
              "description": "Provides storage to network proximity information for the volume.",
              "type": "string",
              "enum": [
                "Default",
                "T1",
                "T2",
                "AcrossT2"
              ],
              "readOnly": true,
              "x-ms-enum": {
                "name": "VolumeStorageToNetworkProximity",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Default",
                    "description": "Basic storage to network connectivity."
                  },
                  {
                    "value": "T1",
                    "description": "Standard T1 storage to network connectivity."
                  },
                  {
                    "value": "T2",
                    "description": "Standard T2 storage to network connectivity."
                  },
                  {
                    "value": "AcrossT2",
                    "description": "Standard AcrossT2 storage to network connectivity."
                  }
                ]
              },
              "example": "T1"
            },
            "mountTargets": {
              "title": "mountTargets",
              "type": "array",
              "readOnly": true,
              "description": "List of mount targets",
              "items": {
                "description": "Mount target properties",
                "type": "object",
                "required": [
                  "fileSystemId"
                ],
                "properties": {
                  "mountTargetId": {
                    "title": "mountTargetId",
                    "type": "string",
                    "readOnly": true,
                    "description": "UUID v4 used to identify the MountTarget",
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                  },
                  "fileSystemId": {
                    "title": "fileSystemId",
                    "type": "string",
                    "description": "UUID v4 used to identify the MountTarget",
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                  },
                  "ipAddress": {
                    "title": "ipAddress",
                    "description": "The mount target's IPv4 address",
                    "type": "string",
                    "readOnly": true,
                    "example": "1.2.3.4"
                  },
                  "smbServerFqdn": {
                    "title": "smbServerFQDN",
                    "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                    "type": "string",
                    "example": "fullyqualified.domainname.com"
                  }
                }
              },
              "x-ms-identifiers": [
                "fileSystemId"
              ]
            },
            "volumeType": {
              "type": "string",
              "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
              "example": "DataProtection",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "dataProtection": {
              "title": "DataProtection",
              "description": "DataProtection type volumes include an object containing details of the replication",
              "properties": {
                "backup": {
                  "title": "Backup",
                  "description": "Backup Properties",
                  "type": "object",
                  "properties": {
                    "backupPolicyId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                          }
                        ]
                      },
                      "description": "Backup Policy Resource ID"
                    },
                    "policyEnforced": {
                      "type": "boolean",
                      "description": "Policy Enforced"
                    },
                    "backupVaultId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                          }
                        ]
                      },
                      "description": "Backup Vault Resource ID"
                    }
                  }
                },
                "replication": {
                  "title": "Replication",
                  "description": "Replication properties",
                  "type": "object",
                  "properties": {
                    "replicationId": {
                      "type": "string",
                      "description": "Id",
                      "readOnly": true
                    },
                    "endpointType": {
                      "type": "string",
                      "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                      "enum": [
                        "src",
                        "dst"
                      ],
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "replicationSchedule": {
                      "type": "string",
                      "description": "Schedule",
                      "enum": [
                        "_10minutely",
                        "hourly",
                        "daily"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationSchedule",
                        "modelAsString": true
                      }
                    },
                    "remoteVolumeResourceId": {
                      "type": "string",
                      "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                    },
                    "remotePath": {
                      "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "required": [
                        "externalHostName",
                        "serverName",
                        "volumeName"
                      ],
                      "properties": {
                        "externalHostName": {
                          "type": "string",
                          "description": "The Path to a ONTAP Host"
                        },
                        "serverName": {
                          "type": "string",
                          "description": "The name of a server on the ONTAP Host"
                        },
                        "volumeName": {
                          "type": "string",
                          "description": "The name of a volume on the server"
                        }
                      }
                    },
                    "remoteVolumeRegion": {
                      "type": "string",
                      "description": "The remote region for the other end of the Volume Replication."
                    },
                    "destinationReplications": {
                      "description": "A list of destination replications",
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "description": "Destination replication properties",
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                }
                              ]
                            },
                            "description": "The resource ID of the remote volume"
                          },
                          "replicationType": {
                            "type": "string",
                            "description": "Indicates whether the replication is cross zone or cross region.",
                            "enum": [
                              "CrossRegionReplication",
                              "CrossZoneReplication"
                            ],
                            "x-ms-enum": {
                              "name": "ReplicationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "CrossRegionReplication",
                                  "description": "Cross region replication"
                                },
                                {
                                  "value": "CrossZoneReplication",
                                  "description": "Cross zone replication"
                                }
                              ]
                            }
                          },
                          "region": {
                            "type": "string",
                            "description": "The remote region for the destination volume."
                          },
                          "zone": {
                            "type": "string",
                            "description": "The remote zone for the destination volume."
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "resourceId"
                      ]
                    }
                  }
                },
                "snapshot": {
                  "title": "Snapshot",
                  "description": "Snapshot properties.",
                  "type": "object",
                  "properties": {
                    "snapshotPolicyId": {
                      "type": "string",
                      "description": "Snapshot Policy ResourceId"
                    }
                  }
                },
                "volumeRelocation": {
                  "title": "VolumeRelocation",
                  "description": "VolumeRelocation properties",
                  "type": "object",
                  "properties": {
                    "relocationRequested": {
                      "type": "boolean",
                      "description": "Has relocation been requested for this volume"
                    },
                    "readyToBeFinalized": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Has relocation finished and is ready to be cleaned up"
                    }
                  }
                }
              }
            },
            "acceptGrowCapacityPoolForShortTermCloneSplit": {
              "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
              "type": "string",
              "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "enum": [
                "Accepted",
                "Declined"
              ],
              "x-ms-enum": {
                "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Accepted",
                    "description": "Auto grow capacity pool for short term clone split is accepted."
                  },
                  {
                    "value": "Declined",
                    "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                  }
                ]
              },
              "example": "Accepted"
            },
            "isRestoring": {
              "type": "boolean",
              "description": "Restoring",
              "readOnly": true
            },
            "snapshotDirectoryVisible": {
              "type": "boolean",
              "default": true,
              "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
            },
            "kerberosEnabled": {
              "type": "boolean",
              "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "example": false,
              "default": false
            },
            "securityStyle": {
              "type": "string",
              "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
              "default": "unix",
              "enum": [
                "ntfs",
                "unix"
              ],
              "x-ms-enum": {
                "name": "SecurityStyle",
                "modelAsString": true
              },
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "smbEncryption": {
              "type": "boolean",
              "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
              "example": false,
              "default": false
            },
            "smbAccessBasedEnumeration": {
              "title": "smbAccessBasedEnumeration",
              "type": "string",
              "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "smbAccessBasedEnumeration",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Disabled",
                    "description": "smbAccessBasedEnumeration share setting is disabled"
                  },
                  {
                    "value": "Enabled",
                    "description": "smbAccessBasedEnumeration share setting is enabled"
                  }
                ]
              },
              "x-nullable": true,
              "example": "Enabled"
            },
            "smbNonBrowsable": {
              "title": "smbNonBrowsable",
              "type": "string",
              "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "smbNonBrowsable",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Disabled",
                    "description": "smbNonBrowsable share setting is disabled"
                  },
                  {
                    "value": "Enabled",
                    "description": "smbNonBrowsable share setting is enabled"
                  }
                ]
              },
              "example": "Enabled"
            },
            "smbContinuouslyAvailable": {
              "type": "boolean",
              "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
              "example": false,
              "default": false
            },
            "throughputMibps": {
              "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
              "type": "number",
              "x-nullable": true,
              "example": 128.223
            },
            "actualThroughputMibps": {
              "type": "number",
              "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
              "example": 164.221,
              "readOnly": true
            },
            "encryptionKeySource": {
              "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
              "type": "string",
              "enum": [
                "Microsoft.NetApp",
                "Microsoft.KeyVault"
              ],
              "x-ms-enum": {
                "name": "EncryptionKeySource",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Microsoft.NetApp",
                    "description": "Microsoft-managed key encryption"
                  },
                  {
                    "value": "Microsoft.KeyVault",
                    "description": "Customer-managed key encryption"
                  }
                ]
              },
              "default": "Microsoft.NetApp"
            },
            "keyVaultPrivateEndpointResourceId": {
              "type": "string",
              "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
            },
            "ldapEnabled": {
              "type": "boolean",
              "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
              "example": false,
              "default": false,
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "coolAccess": {
              "type": "boolean",
              "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
              "example": false,
              "default": false
            },
            "coolnessPeriod": {
              "type": "integer",
              "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
              "example": 7,
              "minimum": 2,
              "maximum": 183,
              "format": "int32"
            },
            "coolAccessRetrievalPolicy": {
              "type": "string",
              "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
              "enum": [
                "Default",
                "OnRead",
                "Never"
              ],
              "x-ms-enum": {
                "name": "coolAccessRetrievalPolicy",
                "modelAsString": true
              }
            },
            "coolAccessTieringPolicy": {
              "type": "string",
              "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
              "enum": [
                "Auto",
                "SnapshotOnly"
              ],
              "x-ms-enum": {
                "name": "coolAccessTieringPolicy",
                "modelAsString": true
              }
            },
            "unixPermissions": {
              "type": "string",
              "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
              "minLength": 4,
              "maxLength": 4,
              "x-nullable": true,
              "example": "0770"
            },
            "cloneProgress": {
              "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
              "type": "integer",
              "format": "int32",
              "example": 10,
              "x-nullable": true,
              "readOnly": true
            },
            "fileAccessLogs": {
              "type": "string",
              "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
              "readOnly": true,
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "fileAccessLogs",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "fileAccessLogs are enabled"
                  },
                  {
                    "value": "Disabled",
                    "description": "fileAccessLogs are not enabled"
                  }
                ]
              },
              "example": "Disabled",
              "default": "Disabled"
            },
            "avsDataStore": {
              "title": "avsDataStore",
              "type": "string",
              "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "avsDataStore",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "avsDataStore is enabled"
                  },
                  {
                    "value": "Disabled",
                    "description": "avsDataStore is disabled"
                  }
                ]
              },
              "example": "Enabled",
              "default": "Disabled",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "dataStoreResourceId": {
              "title": "dataStoreResourceId",
              "description": "Data store resource unique identifier",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "isDefaultQuotaEnabled": {
              "type": "boolean",
              "description": "Specifies if default quota is enabled for the volume.",
              "example": false,
              "default": false
            },
            "defaultUserQuotaInKiBs": {
              "type": "integer",
              "format": "int64",
              "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
              "example": 4,
              "default": 0
            },
            "defaultGroupQuotaInKiBs": {
              "type": "integer",
              "format": "int64",
              "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
              "example": 4,
              "default": 0
            },
            "maximumNumberOfFiles": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
              "example": 100000000
            },
            "volumeGroupName": {
              "type": "string",
              "description": "Volume Group Name",
              "readOnly": true
            },
            "capacityPoolResourceId": {
              "type": "string",
              "description": "Pool Resource Id used in case of creating a volume through volume group"
            },
            "proximityPlacementGroup": {
              "type": "string",
              "description": "Proximity placement group associated with the volume",
              "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
            },
            "t2Network": {
              "type": "string",
              "description": "T2 network information",
              "example": "Test-T2-Alias",
              "readOnly": true
            },
            "volumeSpecName": {
              "type": "string",
              "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
              "example": "Data"
            },
            "encrypted": {
              "type": "boolean",
              "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
              "readOnly": true
            },
            "placementRules": {
              "title": "Volume placement rules",
              "description": "Application specific placement rules for the particular volume",
              "type": "array",
              "items": {
                "description": "Application specific parameters for the placement of volumes in the volume group",
                "type": "object",
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                    "example": "key1"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                    "example": "value1"
                  }
                }
              },
              "x-ms-identifiers": [
                "key"
              ]
            },
            "enableSubvolumes": {
              "type": "string",
              "description": "Flag indicating whether subvolume operations are enabled on the volume",
              "example": "Enabled",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "enableSubvolumes",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "subvolumes are enabled"
                  },
                  {
                    "value": "Disabled",
                    "description": "subvolumes are not enabled"
                  }
                ]
              }
            },
            "provisionedAvailabilityZone": {
              "title": "Provisioned Availability Zone",
              "type": "string",
              "readOnly": true,
              "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
              "example": "2",
              "x-nullable": true
            },
            "isLargeVolume": {
              "title": "Is Large Volume",
              "type": "boolean",
              "description": "Specifies whether volume is a Large Volume or Regular Volume.",
              "example": false,
              "default": false,
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "originatingResourceId": {
              "title": "Originating Resource Id",
              "type": "string",
              "description": "Id of the snapshot or backup that the volume is restored from.",
              "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
              "readOnly": true,
              "x-nullable": true
            },
            "inheritedSizeInBytes": {
              "title": "inheritedSizeInBytes",
              "type": "integer",
              "format": "int64",
              "description": "Space shared by short term clone volume with parent volume in bytes.",
              "readOnly": true,
              "x-nullable": true
            }
          }
        }
      }
    },
    "resourceIdentity": {
      "type": "object",
      "description": "Identity for the resource.",
      "properties": {
        "principalId": {
          "description": "Object id of the identity resource",
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "description": "The tenant id of the resource",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of Identity. Supported values are: 'None', 'SystemAssigned'",
          "type": "string"
        }
      }
    },
    "resourceTags": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "description": "Tags are a list of key-value pairs that describe the resource"
    },
    "volumeProperties": {
      "description": "Volume properties",
      "type": "object",
      "required": [
        "creationToken",
        "usageThreshold",
        "subnetId"
      ],
      "properties": {
        "fileSystemId": {
          "title": "FileSystem ID",
          "type": "string",
          "readOnly": true,
          "description": "Unique FileSystem Identifier.",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
        },
        "creationToken": {
          "title": "Creation Token or File Path",
          "type": "string",
          "description": "A unique file path for the volume. Used when creating mount targets",
          "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
          "minLength": 1,
          "maxLength": 80,
          "example": "some-amazing-filepath",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "serviceLevel": {
          "title": "serviceLevel",
          "type": "string",
          "description": "The service level of the file system",
          "enum": [
            "Standard",
            "Premium",
            "Ultra",
            "StandardZRS",
            "Flexible"
          ],
          "default": "Premium",
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard",
                "description": "Standard service level"
              },
              {
                "value": "Premium",
                "description": "Premium service level"
              },
              {
                "value": "Ultra",
                "description": "Ultra service level"
              },
              {
                "value": "StandardZRS",
                "description": "Zone redundant storage service level. This will be deprecated soon."
              },
              {
                "value": "Flexible",
                "description": "Flexible service level"
              }
            ]
          }
        },
        "usageThreshold": {
          "title": "usageThreshold",
          "type": "integer",
          "format": "int64",
          "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
          "minimum": 53687091200,
          "maximum": 2638827906662400,
          "default": 107374182400,
          "example": 107374182400
        },
        "exportPolicy": {
          "title": "exportPolicy",
          "description": "Set of export policy rules",
          "properties": {
            "rules": {
              "title": "Export policy rule",
              "description": "Export policy rule",
              "type": "array",
              "items": {
                "description": "Volume Export Policy Rule",
                "type": "object",
                "properties": {
                  "ruleIndex": {
                    "type": "integer",
                    "description": "Order index",
                    "format": "int32"
                  },
                  "unixReadOnly": {
                    "type": "boolean",
                    "description": "Read only access"
                  },
                  "unixReadWrite": {
                    "type": "boolean",
                    "description": "Read and write access"
                  },
                  "kerberos5ReadOnly": {
                    "type": "boolean",
                    "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                    "example": false,
                    "default": false
                  },
                  "kerberos5ReadWrite": {
                    "type": "boolean",
                    "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                    "example": false,
                    "default": false
                  },
                  "kerberos5iReadOnly": {
                    "type": "boolean",
                    "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                    "example": false,
                    "default": false
                  },
                  "kerberos5iReadWrite": {
                    "type": "boolean",
                    "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                    "example": false,
                    "default": false
                  },
                  "kerberos5pReadOnly": {
                    "type": "boolean",
                    "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                    "example": false,
                    "default": false
                  },
                  "kerberos5pReadWrite": {
                    "type": "boolean",
                    "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                    "example": false,
                    "default": false
                  },
                  "cifs": {
                    "type": "boolean",
                    "description": "Allows CIFS protocol"
                  },
                  "nfsv3": {
                    "type": "boolean",
                    "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                  },
                  "nfsv41": {
                    "type": "boolean",
                    "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                  },
                  "allowedClients": {
                    "type": "string",
                    "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                  },
                  "hasRootAccess": {
                    "type": "boolean",
                    "description": "Has root access to volume",
                    "example": true,
                    "default": true
                  },
                  "chownMode": {
                    "type": "string",
                    "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                    "default": "Restricted",
                    "enum": [
                      "Restricted",
                      "Unrestricted"
                    ],
                    "x-ms-enum": {
                      "name": "ChownMode",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "ruleIndex"
              ]
            }
          }
        },
        "protocolTypes": {
          "title": "protocolTypes",
          "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "NFSv4.1"
          ]
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        },
        "snapshotId": {
          "title": "Snapshot ID",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
              }
            ]
          },
          "x-nullable": true,
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Resource identifier used to identify the Snapshot.",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
        },
        "deleteBaseSnapshot": {
          "type": "boolean",
          "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
        },
        "backupId": {
          "title": "Backup ID",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
              }
            ]
          },
          "x-nullable": true,
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Resource identifier used to identify the Backup.",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
        },
        "baremetalTenantId": {
          "title": "Baremetal Tenant ID",
          "type": "string",
          "readOnly": true,
          "description": "Unique Baremetal Tenant Identifier.",
          "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
        },
        "subnetId": {
          "type": "string",
          "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
        },
        "networkFeatures": {
          "title": "Network features",
          "description": "Network features available to the volume, or current state of update.",
          "type": "string",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true,
            "values": [
              {
                "value": "Basic",
                "description": "Basic network features."
              },
              {
                "value": "Standard",
                "description": "Standard network features."
              },
              {
                "value": "Basic_Standard",
                "description": "Updating from Basic to Standard network features."
              },
              {
                "value": "Standard_Basic",
                "description": "Updating from Standard to Basic network features."
              }
            ]
          },
          "example": "Standard",
          "default": "Basic",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "effectiveNetworkFeatures": {
          "title": "Network features",
          "description": "Network features available to the volume, or current state of update.",
          "type": "string",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true,
            "values": [
              {
                "value": "Basic",
                "description": "Basic network features."
              },
              {
                "value": "Standard",
                "description": "Standard network features."
              },
              {
                "value": "Basic_Standard",
                "description": "Updating from Basic to Standard network features."
              },
              {
                "value": "Standard_Basic",
                "description": "Updating from Standard to Basic network features."
              }
            ]
          },
          "example": "Standard",
          "default": "Basic",
          "readOnly": true
        },
        "networkSiblingSetId": {
          "title": "Network Sibling Set ID",
          "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
          "type": "string",
          "readOnly": true,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "storageToNetworkProximity": {
          "title": "Storage to Network Proximity",
          "description": "Provides storage to network proximity information for the volume.",
          "type": "string",
          "enum": [
            "Default",
            "T1",
            "T2",
            "AcrossT2"
          ],
          "readOnly": true,
          "x-ms-enum": {
            "name": "VolumeStorageToNetworkProximity",
            "modelAsString": true,
            "values": [
              {
                "value": "Default",
                "description": "Basic storage to network connectivity."
              },
              {
                "value": "T1",
                "description": "Standard T1 storage to network connectivity."
              },
              {
                "value": "T2",
                "description": "Standard T2 storage to network connectivity."
              },
              {
                "value": "AcrossT2",
                "description": "Standard AcrossT2 storage to network connectivity."
              }
            ]
          },
          "example": "T1"
        },
        "mountTargets": {
          "title": "mountTargets",
          "type": "array",
          "readOnly": true,
          "description": "List of mount targets",
          "items": {
            "description": "Mount target properties",
            "type": "object",
            "required": [
              "fileSystemId"
            ],
            "properties": {
              "mountTargetId": {
                "title": "mountTargetId",
                "type": "string",
                "readOnly": true,
                "description": "UUID v4 used to identify the MountTarget",
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "maxLength": 36,
                "minLength": 36,
                "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
              },
              "fileSystemId": {
                "title": "fileSystemId",
                "type": "string",
                "description": "UUID v4 used to identify the MountTarget",
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "maxLength": 36,
                "minLength": 36,
                "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
              },
              "ipAddress": {
                "title": "ipAddress",
                "description": "The mount target's IPv4 address",
                "type": "string",
                "readOnly": true,
                "example": "1.2.3.4"
              },
              "smbServerFqdn": {
                "title": "smbServerFQDN",
                "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                "type": "string",
                "example": "fullyqualified.domainname.com"
              }
            }
          },
          "x-ms-identifiers": [
            "fileSystemId"
          ]
        },
        "volumeType": {
          "type": "string",
          "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
          "example": "DataProtection",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "dataProtection": {
          "title": "DataProtection",
          "description": "DataProtection type volumes include an object containing details of the replication",
          "properties": {
            "backup": {
              "title": "Backup",
              "description": "Backup Properties",
              "type": "object",
              "properties": {
                "backupPolicyId": {
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                      }
                    ]
                  },
                  "description": "Backup Policy Resource ID"
                },
                "policyEnforced": {
                  "type": "boolean",
                  "description": "Policy Enforced"
                },
                "backupVaultId": {
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                      }
                    ]
                  },
                  "description": "Backup Vault Resource ID"
                }
              }
            },
            "replication": {
              "title": "Replication",
              "description": "Replication properties",
              "type": "object",
              "properties": {
                "replicationId": {
                  "type": "string",
                  "description": "Id",
                  "readOnly": true
                },
                "endpointType": {
                  "type": "string",
                  "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                  "enum": [
                    "src",
                    "dst"
                  ],
                  "x-ms-enum": {
                    "name": "EndpointType",
                    "modelAsString": true
                  },
                  "readOnly": true
                },
                "replicationSchedule": {
                  "type": "string",
                  "description": "Schedule",
                  "enum": [
                    "_10minutely",
                    "hourly",
                    "daily"
                  ],
                  "x-ms-enum": {
                    "name": "ReplicationSchedule",
                    "modelAsString": true
                  }
                },
                "remoteVolumeResourceId": {
                  "type": "string",
                  "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                },
                "remotePath": {
                  "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "required": [
                    "externalHostName",
                    "serverName",
                    "volumeName"
                  ],
                  "properties": {
                    "externalHostName": {
                      "type": "string",
                      "description": "The Path to a ONTAP Host"
                    },
                    "serverName": {
                      "type": "string",
                      "description": "The name of a server on the ONTAP Host"
                    },
                    "volumeName": {
                      "type": "string",
                      "description": "The name of a volume on the server"
                    }
                  }
                },
                "remoteVolumeRegion": {
                  "type": "string",
                  "description": "The remote region for the other end of the Volume Replication."
                },
                "destinationReplications": {
                  "description": "A list of destination replications",
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "description": "Destination replication properties",
                    "type": "object",
                    "properties": {
                      "resourceId": {
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                            }
                          ]
                        },
                        "description": "The resource ID of the remote volume"
                      },
                      "replicationType": {
                        "type": "string",
                        "description": "Indicates whether the replication is cross zone or cross region.",
                        "enum": [
                          "CrossRegionReplication",
                          "CrossZoneReplication"
                        ],
                        "x-ms-enum": {
                          "name": "ReplicationType",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "CrossRegionReplication",
                              "description": "Cross region replication"
                            },
                            {
                              "value": "CrossZoneReplication",
                              "description": "Cross zone replication"
                            }
                          ]
                        }
                      },
                      "region": {
                        "type": "string",
                        "description": "The remote region for the destination volume."
                      },
                      "zone": {
                        "type": "string",
                        "description": "The remote zone for the destination volume."
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "resourceId"
                  ]
                }
              }
            },
            "snapshot": {
              "title": "Snapshot",
              "description": "Snapshot properties.",
              "type": "object",
              "properties": {
                "snapshotPolicyId": {
                  "type": "string",
                  "description": "Snapshot Policy ResourceId"
                }
              }
            },
            "volumeRelocation": {
              "title": "VolumeRelocation",
              "description": "VolumeRelocation properties",
              "type": "object",
              "properties": {
                "relocationRequested": {
                  "type": "boolean",
                  "description": "Has relocation been requested for this volume"
                },
                "readyToBeFinalized": {
                  "type": "boolean",
                  "readOnly": true,
                  "description": "Has relocation finished and is ready to be cleaned up"
                }
              }
            }
          }
        },
        "acceptGrowCapacityPoolForShortTermCloneSplit": {
          "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
          "type": "string",
          "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "enum": [
            "Accepted",
            "Declined"
          ],
          "x-ms-enum": {
            "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
            "modelAsString": true,
            "values": [
              {
                "value": "Accepted",
                "description": "Auto grow capacity pool for short term clone split is accepted."
              },
              {
                "value": "Declined",
                "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
              }
            ]
          },
          "example": "Accepted"
        },
        "isRestoring": {
          "type": "boolean",
          "description": "Restoring",
          "readOnly": true
        },
        "snapshotDirectoryVisible": {
          "type": "boolean",
          "default": true,
          "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
        },
        "kerberosEnabled": {
          "type": "boolean",
          "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "example": false,
          "default": false
        },
        "securityStyle": {
          "type": "string",
          "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
          "default": "unix",
          "enum": [
            "ntfs",
            "unix"
          ],
          "x-ms-enum": {
            "name": "SecurityStyle",
            "modelAsString": true
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "smbEncryption": {
          "type": "boolean",
          "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
          "example": false,
          "default": false
        },
        "smbAccessBasedEnumeration": {
          "title": "smbAccessBasedEnumeration",
          "type": "string",
          "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "smbAccessBasedEnumeration",
            "modelAsString": true,
            "values": [
              {
                "value": "Disabled",
                "description": "smbAccessBasedEnumeration share setting is disabled"
              },
              {
                "value": "Enabled",
                "description": "smbAccessBasedEnumeration share setting is enabled"
              }
            ]
          },
          "x-nullable": true,
          "example": "Enabled"
        },
        "smbNonBrowsable": {
          "title": "smbNonBrowsable",
          "type": "string",
          "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "smbNonBrowsable",
            "modelAsString": true,
            "values": [
              {
                "value": "Disabled",
                "description": "smbNonBrowsable share setting is disabled"
              },
              {
                "value": "Enabled",
                "description": "smbNonBrowsable share setting is enabled"
              }
            ]
          },
          "example": "Enabled"
        },
        "smbContinuouslyAvailable": {
          "type": "boolean",
          "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
          "example": false,
          "default": false
        },
        "throughputMibps": {
          "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
          "type": "number",
          "x-nullable": true,
          "example": 128.223
        },
        "actualThroughputMibps": {
          "type": "number",
          "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
          "example": 164.221,
          "readOnly": true
        },
        "encryptionKeySource": {
          "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
          "type": "string",
          "enum": [
            "Microsoft.NetApp",
            "Microsoft.KeyVault"
          ],
          "x-ms-enum": {
            "name": "EncryptionKeySource",
            "modelAsString": true,
            "values": [
              {
                "value": "Microsoft.NetApp",
                "description": "Microsoft-managed key encryption"
              },
              {
                "value": "Microsoft.KeyVault",
                "description": "Customer-managed key encryption"
              }
            ]
          },
          "default": "Microsoft.NetApp"
        },
        "keyVaultPrivateEndpointResourceId": {
          "type": "string",
          "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
        },
        "ldapEnabled": {
          "type": "boolean",
          "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
          "example": false,
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "coolAccess": {
          "type": "boolean",
          "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
          "example": false,
          "default": false
        },
        "coolnessPeriod": {
          "type": "integer",
          "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
          "example": 7,
          "minimum": 2,
          "maximum": 183,
          "format": "int32"
        },
        "coolAccessRetrievalPolicy": {
          "type": "string",
          "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
          "enum": [
            "Default",
            "OnRead",
            "Never"
          ],
          "x-ms-enum": {
            "name": "coolAccessRetrievalPolicy",
            "modelAsString": true
          }
        },
        "coolAccessTieringPolicy": {
          "type": "string",
          "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
          "enum": [
            "Auto",
            "SnapshotOnly"
          ],
          "x-ms-enum": {
            "name": "coolAccessTieringPolicy",
            "modelAsString": true
          }
        },
        "unixPermissions": {
          "type": "string",
          "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
          "minLength": 4,
          "maxLength": 4,
          "x-nullable": true,
          "example": "0770"
        },
        "cloneProgress": {
          "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
          "type": "integer",
          "format": "int32",
          "example": 10,
          "x-nullable": true,
          "readOnly": true
        },
        "fileAccessLogs": {
          "type": "string",
          "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "fileAccessLogs",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "fileAccessLogs are enabled"
              },
              {
                "value": "Disabled",
                "description": "fileAccessLogs are not enabled"
              }
            ]
          },
          "example": "Disabled",
          "default": "Disabled"
        },
        "avsDataStore": {
          "title": "avsDataStore",
          "type": "string",
          "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "avsDataStore",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "avsDataStore is enabled"
              },
              {
                "value": "Disabled",
                "description": "avsDataStore is disabled"
              }
            ]
          },
          "example": "Enabled",
          "default": "Disabled",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "dataStoreResourceId": {
          "title": "dataStoreResourceId",
          "description": "Data store resource unique identifier",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "isDefaultQuotaEnabled": {
          "type": "boolean",
          "description": "Specifies if default quota is enabled for the volume.",
          "example": false,
          "default": false
        },
        "defaultUserQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
          "example": 4,
          "default": 0
        },
        "defaultGroupQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
          "example": 4,
          "default": 0
        },
        "maximumNumberOfFiles": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
          "example": 100000000
        },
        "volumeGroupName": {
          "type": "string",
          "description": "Volume Group Name",
          "readOnly": true
        },
        "capacityPoolResourceId": {
          "type": "string",
          "description": "Pool Resource Id used in case of creating a volume through volume group"
        },
        "proximityPlacementGroup": {
          "type": "string",
          "description": "Proximity placement group associated with the volume",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
        },
        "t2Network": {
          "type": "string",
          "description": "T2 network information",
          "example": "Test-T2-Alias",
          "readOnly": true
        },
        "volumeSpecName": {
          "type": "string",
          "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
          "example": "Data"
        },
        "encrypted": {
          "type": "boolean",
          "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
          "readOnly": true
        },
        "placementRules": {
          "title": "Volume placement rules",
          "description": "Application specific placement rules for the particular volume",
          "type": "array",
          "items": {
            "description": "Application specific parameters for the placement of volumes in the volume group",
            "type": "object",
            "required": [
              "key",
              "value"
            ],
            "properties": {
              "key": {
                "type": "string",
                "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                "example": "key1"
              },
              "value": {
                "type": "string",
                "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                "example": "value1"
              }
            }
          },
          "x-ms-identifiers": [
            "key"
          ]
        },
        "enableSubvolumes": {
          "type": "string",
          "description": "Flag indicating whether subvolume operations are enabled on the volume",
          "example": "Enabled",
          "default": "Disabled",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "enableSubvolumes",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "subvolumes are enabled"
              },
              {
                "value": "Disabled",
                "description": "subvolumes are not enabled"
              }
            ]
          }
        },
        "provisionedAvailabilityZone": {
          "title": "Provisioned Availability Zone",
          "type": "string",
          "readOnly": true,
          "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
          "example": "2",
          "x-nullable": true
        },
        "isLargeVolume": {
          "title": "Is Large Volume",
          "type": "boolean",
          "description": "Specifies whether volume is a Large Volume or Regular Volume.",
          "example": false,
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "originatingResourceId": {
          "title": "Originating Resource Id",
          "type": "string",
          "description": "Id of the snapshot or backup that the volume is restored from.",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
          "readOnly": true,
          "x-nullable": true
        },
        "inheritedSizeInBytes": {
          "title": "inheritedSizeInBytes",
          "type": "integer",
          "format": "int64",
          "description": "Space shared by short term clone volume with parent volume in bytes.",
          "readOnly": true,
          "x-nullable": true
        }
      }
    },
    "exportPolicyRule": {
      "description": "Volume Export Policy Rule",
      "type": "object",
      "properties": {
        "ruleIndex": {
          "type": "integer",
          "description": "Order index",
          "format": "int32"
        },
        "unixReadOnly": {
          "type": "boolean",
          "description": "Read only access"
        },
        "unixReadWrite": {
          "type": "boolean",
          "description": "Read and write access"
        },
        "kerberos5ReadOnly": {
          "type": "boolean",
          "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
          "example": false,
          "default": false
        },
        "kerberos5ReadWrite": {
          "type": "boolean",
          "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
          "example": false,
          "default": false
        },
        "kerberos5iReadOnly": {
          "type": "boolean",
          "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
          "example": false,
          "default": false
        },
        "kerberos5iReadWrite": {
          "type": "boolean",
          "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
          "example": false,
          "default": false
        },
        "kerberos5pReadOnly": {
          "type": "boolean",
          "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
          "example": false,
          "default": false
        },
        "kerberos5pReadWrite": {
          "type": "boolean",
          "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
          "example": false,
          "default": false
        },
        "cifs": {
          "type": "boolean",
          "description": "Allows CIFS protocol"
        },
        "nfsv3": {
          "type": "boolean",
          "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
        },
        "nfsv41": {
          "type": "boolean",
          "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
        },
        "allowedClients": {
          "type": "string",
          "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
        },
        "hasRootAccess": {
          "type": "boolean",
          "description": "Has root access to volume",
          "example": true,
          "default": true
        },
        "chownMode": {
          "type": "string",
          "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
          "default": "Restricted",
          "enum": [
            "Restricted",
            "Unrestricted"
          ],
          "x-ms-enum": {
            "name": "ChownMode",
            "modelAsString": true
          }
        }
      }
    },
    "replicationObject": {
      "description": "Replication properties",
      "type": "object",
      "properties": {
        "replicationId": {
          "type": "string",
          "description": "Id",
          "readOnly": true
        },
        "endpointType": {
          "type": "string",
          "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
          "enum": [
            "src",
            "dst"
          ],
          "x-ms-enum": {
            "name": "EndpointType",
            "modelAsString": true
          },
          "readOnly": true
        },
        "replicationSchedule": {
          "type": "string",
          "description": "Schedule",
          "enum": [
            "_10minutely",
            "hourly",
            "daily"
          ],
          "x-ms-enum": {
            "name": "ReplicationSchedule",
            "modelAsString": true
          }
        },
        "remoteVolumeResourceId": {
          "type": "string",
          "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
        },
        "remotePath": {
          "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "required": [
            "externalHostName",
            "serverName",
            "volumeName"
          ],
          "properties": {
            "externalHostName": {
              "type": "string",
              "description": "The Path to a ONTAP Host"
            },
            "serverName": {
              "type": "string",
              "description": "The name of a server on the ONTAP Host"
            },
            "volumeName": {
              "type": "string",
              "description": "The name of a volume on the server"
            }
          }
        },
        "remoteVolumeRegion": {
          "type": "string",
          "description": "The remote region for the other end of the Volume Replication."
        },
        "destinationReplications": {
          "description": "A list of destination replications",
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "Destination replication properties",
            "type": "object",
            "properties": {
              "resourceId": {
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                    }
                  ]
                },
                "description": "The resource ID of the remote volume"
              },
              "replicationType": {
                "type": "string",
                "description": "Indicates whether the replication is cross zone or cross region.",
                "enum": [
                  "CrossRegionReplication",
                  "CrossZoneReplication"
                ],
                "x-ms-enum": {
                  "name": "ReplicationType",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "CrossRegionReplication",
                      "description": "Cross region replication"
                    },
                    {
                      "value": "CrossZoneReplication",
                      "description": "Cross zone replication"
                    }
                  ]
                }
              },
              "region": {
                "type": "string",
                "description": "The remote region for the destination volume."
              },
              "zone": {
                "type": "string",
                "description": "The remote zone for the destination volume."
              }
            }
          },
          "x-ms-identifiers": [
            "resourceId"
          ]
        }
      }
    },
    "remotePath": {
      "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
      "type": "object",
      "required": [
        "externalHostName",
        "serverName",
        "volumeName"
      ],
      "properties": {
        "externalHostName": {
          "type": "string",
          "description": "The Path to a ONTAP Host"
        },
        "serverName": {
          "type": "string",
          "description": "The name of a server on the ONTAP Host"
        },
        "volumeName": {
          "type": "string",
          "description": "The name of a volume on the server"
        }
      }
    },
    "replication": {
      "description": "Replication properties",
      "type": "object",
      "required": [
        "remoteVolumeResourceId"
      ],
      "properties": {
        "replicationId": {
          "type": "string",
          "readOnly": true,
          "description": "UUID v4 used to identify the replication.",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "5ee41ce4-8f44-4ecd-ad89-8c1e573fe3b8"
        },
        "endpointType": {
          "type": "string",
          "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
          "enum": [
            "src",
            "dst"
          ],
          "x-ms-enum": {
            "name": "EndpointType",
            "modelAsString": true
          }
        },
        "replicationSchedule": {
          "type": "string",
          "description": "Schedule",
          "enum": [
            "_10minutely",
            "hourly",
            "daily"
          ],
          "x-ms-enum": {
            "name": "ReplicationSchedule",
            "modelAsString": true
          }
        },
        "remoteVolumeResourceId": {
          "type": "string",
          "description": "The resource ID of the remote volume."
        },
        "remoteVolumeRegion": {
          "type": "string",
          "description": "The remote region for the other end of the Volume Replication."
        }
      }
    },
    "volumeRelocationProperties": {
      "description": "Volume relocation properties",
      "type": "object",
      "properties": {
        "relocationRequested": {
          "type": "boolean",
          "description": "Has relocation been requested for this volume"
        },
        "readyToBeFinalized": {
          "type": "boolean",
          "readOnly": true,
          "description": "Has relocation finished and is ready to be cleaned up"
        }
      }
    },
    "volumeSnapshotProperties": {
      "description": "Volume Snapshot Properties",
      "type": "object",
      "properties": {
        "snapshotPolicyId": {
          "type": "string",
          "description": "Snapshot Policy ResourceId"
        }
      }
    },
    "replicationStatus": {
      "description": "Replication status",
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean",
          "description": "Replication health check"
        },
        "relationshipStatus": {
          "type": "string",
          "description": "Status of the mirror relationship",
          "enum": [
            "Idle",
            "Transferring"
          ],
          "x-ms-enum": {
            "name": "RelationshipStatus",
            "modelAsString": true
          }
        },
        "mirrorState": {
          "type": "string",
          "description": "The status of the replication",
          "enum": [
            "Uninitialized",
            "Mirrored",
            "Broken"
          ],
          "x-ms-enum": {
            "name": "MirrorState",
            "modelAsString": true
          }
        },
        "totalProgress": {
          "type": "string",
          "description": "The progress of the replication"
        },
        "errorMessage": {
          "type": "string",
          "description": "Displays error message if the replication is in an error state"
        }
      }
    },
    "listReplications": {
      "description": "List Replications",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of replications",
          "type": "array",
          "items": {
            "description": "Replication properties",
            "type": "object",
            "required": [
              "remoteVolumeResourceId"
            ],
            "properties": {
              "replicationId": {
                "type": "string",
                "readOnly": true,
                "description": "UUID v4 used to identify the replication.",
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "maxLength": 36,
                "minLength": 36,
                "example": "5ee41ce4-8f44-4ecd-ad89-8c1e573fe3b8"
              },
              "endpointType": {
                "type": "string",
                "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                "enum": [
                  "src",
                  "dst"
                ],
                "x-ms-enum": {
                  "name": "EndpointType",
                  "modelAsString": true
                }
              },
              "replicationSchedule": {
                "type": "string",
                "description": "Schedule",
                "enum": [
                  "_10minutely",
                  "hourly",
                  "daily"
                ],
                "x-ms-enum": {
                  "name": "ReplicationSchedule",
                  "modelAsString": true
                }
              },
              "remoteVolumeResourceId": {
                "type": "string",
                "description": "The resource ID of the remote volume."
              },
              "remoteVolumeRegion": {
                "type": "string",
                "description": "The remote region for the other end of the Volume Replication."
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "destinationReplication": {
      "description": "Destination replication properties",
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
              }
            ]
          },
          "description": "The resource ID of the remote volume"
        },
        "replicationType": {
          "type": "string",
          "description": "Indicates whether the replication is cross zone or cross region.",
          "enum": [
            "CrossRegionReplication",
            "CrossZoneReplication"
          ],
          "x-ms-enum": {
            "name": "ReplicationType",
            "modelAsString": true,
            "values": [
              {
                "value": "CrossRegionReplication",
                "description": "Cross region replication"
              },
              {
                "value": "CrossZoneReplication",
                "description": "Cross zone replication"
              }
            ]
          }
        },
        "region": {
          "type": "string",
          "description": "The remote region for the destination volume."
        },
        "zone": {
          "type": "string",
          "description": "The remote zone for the destination volume."
        }
      }
    },
    "volumePatch": {
      "description": "Volume patch resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Patchable volume properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "serviceLevel": {
              "title": "serviceLevel",
              "type": "string",
              "description": "The service level of the file system",
              "enum": [
                "Standard",
                "Premium",
                "Ultra",
                "StandardZRS",
                "Flexible"
              ],
              "default": "Premium",
              "x-ms-enum": {
                "name": "ServiceLevel",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Standard",
                    "description": "Standard service level"
                  },
                  {
                    "value": "Premium",
                    "description": "Premium service level"
                  },
                  {
                    "value": "Ultra",
                    "description": "Ultra service level"
                  },
                  {
                    "value": "StandardZRS",
                    "description": "Zone redundant storage service level. This will be deprecated soon."
                  },
                  {
                    "value": "Flexible",
                    "description": "Flexible service level"
                  }
                ]
              }
            },
            "usageThreshold": {
              "title": "usageThreshold",
              "type": "integer",
              "format": "int64",
              "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
              "minimum": 53687091200,
              "maximum": 2638827906662400,
              "default": 107374182400,
              "example": 107374182400
            },
            "exportPolicy": {
              "title": "exportPolicy",
              "description": "Set of export policy rules",
              "properties": {
                "rules": {
                  "title": "Export policy rule",
                  "description": "Export policy rule",
                  "type": "array",
                  "items": {
                    "description": "Volume Export Policy Rule",
                    "type": "object",
                    "properties": {
                      "ruleIndex": {
                        "type": "integer",
                        "description": "Order index",
                        "format": "int32"
                      },
                      "unixReadOnly": {
                        "type": "boolean",
                        "description": "Read only access"
                      },
                      "unixReadWrite": {
                        "type": "boolean",
                        "description": "Read and write access"
                      },
                      "kerberos5ReadOnly": {
                        "type": "boolean",
                        "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "kerberos5ReadWrite": {
                        "type": "boolean",
                        "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "kerberos5iReadOnly": {
                        "type": "boolean",
                        "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "kerberos5iReadWrite": {
                        "type": "boolean",
                        "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "kerberos5pReadOnly": {
                        "type": "boolean",
                        "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "kerberos5pReadWrite": {
                        "type": "boolean",
                        "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "cifs": {
                        "type": "boolean",
                        "description": "Allows CIFS protocol"
                      },
                      "nfsv3": {
                        "type": "boolean",
                        "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                      },
                      "nfsv41": {
                        "type": "boolean",
                        "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                      },
                      "allowedClients": {
                        "type": "string",
                        "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                      },
                      "hasRootAccess": {
                        "type": "boolean",
                        "description": "Has root access to volume",
                        "example": true,
                        "default": true
                      },
                      "chownMode": {
                        "type": "string",
                        "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                        "default": "Restricted",
                        "enum": [
                          "Restricted",
                          "Unrestricted"
                        ],
                        "x-ms-enum": {
                          "name": "ChownMode",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "ruleIndex"
                  ]
                }
              }
            },
            "protocolTypes": {
              "title": "protocolTypes",
              "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "NFSv4.1"
              ]
            },
            "throughputMibps": {
              "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
              "type": "number",
              "example": 128.22
            },
            "dataProtection": {
              "title": "DataProtection",
              "description": "DataProtection type volumes include an object containing details of the replication",
              "properties": {
                "backup": {
                  "title": "Backup",
                  "description": "Backup Properties",
                  "type": "object",
                  "properties": {
                    "backupPolicyId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                          }
                        ]
                      },
                      "description": "Backup Policy Resource ID"
                    },
                    "policyEnforced": {
                      "type": "boolean",
                      "description": "Policy Enforced"
                    },
                    "backupVaultId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                          }
                        ]
                      },
                      "description": "Backup Vault Resource ID"
                    }
                  }
                },
                "snapshot": {
                  "title": "Snapshot",
                  "description": "Snapshot properties.",
                  "type": "object",
                  "properties": {
                    "snapshotPolicyId": {
                      "type": "string",
                      "description": "Snapshot Policy ResourceId"
                    }
                  }
                }
              }
            },
            "isDefaultQuotaEnabled": {
              "type": "boolean",
              "description": "Specifies if default quota is enabled for the volume.",
              "example": false,
              "default": false
            },
            "defaultUserQuotaInKiBs": {
              "type": "integer",
              "format": "int64",
              "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
              "example": 4,
              "default": 0
            },
            "defaultGroupQuotaInKiBs": {
              "type": "integer",
              "format": "int64",
              "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
              "example": 4,
              "default": 0
            },
            "unixPermissions": {
              "type": "string",
              "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
              "minLength": 4,
              "maxLength": 4,
              "x-nullable": true,
              "example": "0770"
            },
            "coolAccess": {
              "type": "boolean",
              "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
              "example": false
            },
            "coolnessPeriod": {
              "type": "integer",
              "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
              "example": 7,
              "minimum": 2,
              "maximum": 183,
              "format": "int32"
            },
            "coolAccessRetrievalPolicy": {
              "type": "string",
              "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
              "enum": [
                "Default",
                "OnRead",
                "Never"
              ],
              "x-ms-enum": {
                "name": "coolAccessRetrievalPolicy",
                "modelAsString": true
              }
            },
            "coolAccessTieringPolicy": {
              "type": "string",
              "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
              "enum": [
                "Auto",
                "SnapshotOnly"
              ],
              "x-ms-enum": {
                "name": "coolAccessTieringPolicy",
                "modelAsString": true
              }
            },
            "snapshotDirectoryVisible": {
              "type": "boolean",
              "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots."
            },
            "smbAccessBasedEnumeration": {
              "title": "smbAccessBasedEnumeration",
              "type": "string",
              "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "smbAccessBasedEnumeration",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Disabled",
                    "description": "smbAccessBasedEnumeration share setting is disabled"
                  },
                  {
                    "value": "Enabled",
                    "description": "smbAccessBasedEnumeration share setting is enabled"
                  }
                ]
              },
              "x-nullable": true,
              "example": "Enabled"
            },
            "smbNonBrowsable": {
              "title": "smbNonBrowsable",
              "type": "string",
              "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "smbNonBrowsable",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Disabled",
                    "description": "smbNonBrowsable share setting is disabled"
                  },
                  {
                    "value": "Enabled",
                    "description": "smbNonBrowsable share setting is enabled"
                  }
                ]
              },
              "example": "Enabled"
            }
          }
        }
      }
    },
    "volumePatchProperties": {
      "description": "Patchable volume properties",
      "type": "object",
      "properties": {
        "serviceLevel": {
          "title": "serviceLevel",
          "type": "string",
          "description": "The service level of the file system",
          "enum": [
            "Standard",
            "Premium",
            "Ultra",
            "StandardZRS",
            "Flexible"
          ],
          "default": "Premium",
          "x-ms-enum": {
            "name": "ServiceLevel",
            "modelAsString": true,
            "values": [
              {
                "value": "Standard",
                "description": "Standard service level"
              },
              {
                "value": "Premium",
                "description": "Premium service level"
              },
              {
                "value": "Ultra",
                "description": "Ultra service level"
              },
              {
                "value": "StandardZRS",
                "description": "Zone redundant storage service level. This will be deprecated soon."
              },
              {
                "value": "Flexible",
                "description": "Flexible service level"
              }
            ]
          }
        },
        "usageThreshold": {
          "title": "usageThreshold",
          "type": "integer",
          "format": "int64",
          "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
          "minimum": 53687091200,
          "maximum": 2638827906662400,
          "default": 107374182400,
          "example": 107374182400
        },
        "exportPolicy": {
          "title": "exportPolicy",
          "description": "Set of export policy rules",
          "properties": {
            "rules": {
              "title": "Export policy rule",
              "description": "Export policy rule",
              "type": "array",
              "items": {
                "description": "Volume Export Policy Rule",
                "type": "object",
                "properties": {
                  "ruleIndex": {
                    "type": "integer",
                    "description": "Order index",
                    "format": "int32"
                  },
                  "unixReadOnly": {
                    "type": "boolean",
                    "description": "Read only access"
                  },
                  "unixReadWrite": {
                    "type": "boolean",
                    "description": "Read and write access"
                  },
                  "kerberos5ReadOnly": {
                    "type": "boolean",
                    "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                    "example": false,
                    "default": false
                  },
                  "kerberos5ReadWrite": {
                    "type": "boolean",
                    "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                    "example": false,
                    "default": false
                  },
                  "kerberos5iReadOnly": {
                    "type": "boolean",
                    "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                    "example": false,
                    "default": false
                  },
                  "kerberos5iReadWrite": {
                    "type": "boolean",
                    "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                    "example": false,
                    "default": false
                  },
                  "kerberos5pReadOnly": {
                    "type": "boolean",
                    "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                    "example": false,
                    "default": false
                  },
                  "kerberos5pReadWrite": {
                    "type": "boolean",
                    "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                    "example": false,
                    "default": false
                  },
                  "cifs": {
                    "type": "boolean",
                    "description": "Allows CIFS protocol"
                  },
                  "nfsv3": {
                    "type": "boolean",
                    "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                  },
                  "nfsv41": {
                    "type": "boolean",
                    "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                  },
                  "allowedClients": {
                    "type": "string",
                    "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                  },
                  "hasRootAccess": {
                    "type": "boolean",
                    "description": "Has root access to volume",
                    "example": true,
                    "default": true
                  },
                  "chownMode": {
                    "type": "string",
                    "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                    "default": "Restricted",
                    "enum": [
                      "Restricted",
                      "Unrestricted"
                    ],
                    "x-ms-enum": {
                      "name": "ChownMode",
                      "modelAsString": true
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "ruleIndex"
              ]
            }
          }
        },
        "protocolTypes": {
          "title": "protocolTypes",
          "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "NFSv4.1"
          ]
        },
        "throughputMibps": {
          "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
          "type": "number",
          "example": 128.22
        },
        "dataProtection": {
          "title": "DataProtection",
          "description": "DataProtection type volumes include an object containing details of the replication",
          "properties": {
            "backup": {
              "title": "Backup",
              "description": "Backup Properties",
              "type": "object",
              "properties": {
                "backupPolicyId": {
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                      }
                    ]
                  },
                  "description": "Backup Policy Resource ID"
                },
                "policyEnforced": {
                  "type": "boolean",
                  "description": "Policy Enforced"
                },
                "backupVaultId": {
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                      }
                    ]
                  },
                  "description": "Backup Vault Resource ID"
                }
              }
            },
            "snapshot": {
              "title": "Snapshot",
              "description": "Snapshot properties.",
              "type": "object",
              "properties": {
                "snapshotPolicyId": {
                  "type": "string",
                  "description": "Snapshot Policy ResourceId"
                }
              }
            }
          }
        },
        "isDefaultQuotaEnabled": {
          "type": "boolean",
          "description": "Specifies if default quota is enabled for the volume.",
          "example": false,
          "default": false
        },
        "defaultUserQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
          "example": 4,
          "default": 0
        },
        "defaultGroupQuotaInKiBs": {
          "type": "integer",
          "format": "int64",
          "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
          "example": 4,
          "default": 0
        },
        "unixPermissions": {
          "type": "string",
          "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
          "minLength": 4,
          "maxLength": 4,
          "x-nullable": true,
          "example": "0770"
        },
        "coolAccess": {
          "type": "boolean",
          "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
          "example": false
        },
        "coolnessPeriod": {
          "type": "integer",
          "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
          "example": 7,
          "minimum": 2,
          "maximum": 183,
          "format": "int32"
        },
        "coolAccessRetrievalPolicy": {
          "type": "string",
          "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
          "enum": [
            "Default",
            "OnRead",
            "Never"
          ],
          "x-ms-enum": {
            "name": "coolAccessRetrievalPolicy",
            "modelAsString": true
          }
        },
        "coolAccessTieringPolicy": {
          "type": "string",
          "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
          "enum": [
            "Auto",
            "SnapshotOnly"
          ],
          "x-ms-enum": {
            "name": "coolAccessTieringPolicy",
            "modelAsString": true
          }
        },
        "snapshotDirectoryVisible": {
          "type": "boolean",
          "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots."
        },
        "smbAccessBasedEnumeration": {
          "title": "smbAccessBasedEnumeration",
          "type": "string",
          "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "smbAccessBasedEnumeration",
            "modelAsString": true,
            "values": [
              {
                "value": "Disabled",
                "description": "smbAccessBasedEnumeration share setting is disabled"
              },
              {
                "value": "Enabled",
                "description": "smbAccessBasedEnumeration share setting is enabled"
              }
            ]
          },
          "x-nullable": true,
          "example": "Enabled"
        },
        "smbNonBrowsable": {
          "title": "smbNonBrowsable",
          "type": "string",
          "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "smbNonBrowsable",
            "modelAsString": true,
            "values": [
              {
                "value": "Disabled",
                "description": "smbNonBrowsable share setting is disabled"
              },
              {
                "value": "Enabled",
                "description": "smbNonBrowsable share setting is enabled"
              }
            ]
          },
          "example": "Enabled"
        }
      }
    },
    "mountTarget": {
      "description": "Mount Target",
      "type": "object",
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "x-ms-client-flatten": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Mount target properties",
          "type": "object",
          "required": [
            "fileSystemId"
          ],
          "properties": {
            "mountTargetId": {
              "title": "mountTargetId",
              "type": "string",
              "readOnly": true,
              "description": "UUID v4 used to identify the MountTarget",
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "maxLength": 36,
              "minLength": 36,
              "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
            },
            "fileSystemId": {
              "title": "fileSystemId",
              "type": "string",
              "description": "UUID v4 used to identify the MountTarget",
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "maxLength": 36,
              "minLength": 36,
              "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
            },
            "ipAddress": {
              "title": "ipAddress",
              "description": "The mount target's IPv4 address",
              "type": "string",
              "readOnly": true,
              "example": "1.2.3.4"
            },
            "smbServerFqdn": {
              "title": "smbServerFQDN",
              "description": "The SMB server's Fully Qualified Domain Name, FQDN",
              "type": "string",
              "example": "fullyqualified.domainname.com"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "mountTargetProperties": {
      "description": "Mount target properties",
      "type": "object",
      "required": [
        "fileSystemId"
      ],
      "properties": {
        "mountTargetId": {
          "title": "mountTargetId",
          "type": "string",
          "readOnly": true,
          "description": "UUID v4 used to identify the MountTarget",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "fileSystemId": {
          "title": "fileSystemId",
          "type": "string",
          "description": "UUID v4 used to identify the MountTarget",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "ipAddress": {
          "title": "ipAddress",
          "description": "The mount target's IPv4 address",
          "type": "string",
          "readOnly": true,
          "example": "1.2.3.4"
        },
        "smbServerFqdn": {
          "title": "smbServerFQDN",
          "description": "The SMB server's Fully Qualified Domain Name, FQDN",
          "type": "string",
          "example": "fullyqualified.domainname.com"
        }
      }
    },
    "snapshotsList": {
      "description": "List of Snapshots",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of Snapshots",
          "type": "array",
          "items": {
            "description": "Snapshot of a Volume",
            "type": "object",
            "required": [
              "location"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "location": {
                "type": "string",
                "description": "Resource location",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "Snapshot Properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "snapshotId": {
                    "title": "snapshotId",
                    "type": "string",
                    "readOnly": true,
                    "description": "UUID v4 used to identify the Snapshot",
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                  },
                  "created": {
                    "title": "name",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The creation date of the snapshot",
                    "example": "2017-08-15 13:23:33"
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Azure lifecycle management"
                  }
                }
              }
            }
          }
        }
      }
    },
    "snapshot": {
      "description": "Snapshot of a Volume",
      "type": "object",
      "required": [
        "location"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "Snapshot Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "snapshotId": {
              "title": "snapshotId",
              "type": "string",
              "readOnly": true,
              "description": "UUID v4 used to identify the Snapshot",
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "maxLength": 36,
              "minLength": 36,
              "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
            },
            "created": {
              "title": "name",
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The creation date of the snapshot",
              "example": "2017-08-15 13:23:33"
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Azure lifecycle management"
            }
          }
        }
      }
    },
    "snapshotPatch": {
      "description": "Snapshot patch",
      "type": "object",
      "properties": {}
    },
    "snapshotProperties": {
      "description": "Snapshot properties",
      "type": "object",
      "properties": {
        "snapshotId": {
          "title": "snapshotId",
          "type": "string",
          "readOnly": true,
          "description": "UUID v4 used to identify the Snapshot",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "created": {
          "title": "name",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The creation date of the snapshot",
          "example": "2017-08-15 13:23:33"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        }
      }
    },
    "snapshotPolicyProperties": {
      "description": "Snapshot policy properties",
      "type": "object",
      "properties": {
        "hourlySchedule": {
          "title": "hourlySchedule",
          "description": "Schedule for hourly snapshots",
          "type": "object",
          "properties": {
            "snapshotsToKeep": {
              "type": "integer",
              "description": "Hourly snapshot count to keep",
              "format": "int32"
            },
            "minute": {
              "type": "integer",
              "description": "Indicates which minute snapshot should be taken",
              "example": 30,
              "format": "int32"
            },
            "usedBytes": {
              "type": "integer",
              "description": "Resource size in bytes, current storage usage for the volume in bytes",
              "format": "int64"
            }
          }
        },
        "dailySchedule": {
          "title": "dailySchedule",
          "description": "Schedule for daily snapshots",
          "type": "object",
          "properties": {
            "snapshotsToKeep": {
              "type": "integer",
              "description": "Daily snapshot count to keep",
              "format": "int32"
            },
            "hour": {
              "type": "integer",
              "description": "Indicates which hour in UTC timezone a snapshot should be taken",
              "example": 11,
              "format": "int32"
            },
            "minute": {
              "type": "integer",
              "description": "Indicates which minute snapshot should be taken",
              "example": 30,
              "format": "int32"
            },
            "usedBytes": {
              "type": "integer",
              "description": "Resource size in bytes, current storage usage for the volume in bytes",
              "format": "int64"
            }
          }
        },
        "weeklySchedule": {
          "title": "weeklySchedule",
          "description": "Schedule for weekly snapshots",
          "type": "object",
          "properties": {
            "snapshotsToKeep": {
              "type": "integer",
              "description": "Weekly snapshot count to keep",
              "format": "int32"
            },
            "day": {
              "type": "string",
              "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
              "example": "Sunday,Monday"
            },
            "hour": {
              "type": "integer",
              "description": "Indicates which hour in UTC timezone a snapshot should be taken",
              "example": 11,
              "format": "int32"
            },
            "minute": {
              "type": "integer",
              "description": "Indicates which minute snapshot should be taken",
              "example": 30,
              "format": "int32"
            },
            "usedBytes": {
              "type": "integer",
              "description": "Resource size in bytes, current storage usage for the volume in bytes",
              "format": "int64"
            }
          }
        },
        "monthlySchedule": {
          "title": "monthlySchedule",
          "description": "Schedule for monthly snapshots",
          "type": "object",
          "properties": {
            "snapshotsToKeep": {
              "type": "integer",
              "description": "Monthly snapshot count to keep",
              "format": "int32"
            },
            "daysOfMonth": {
              "type": "string",
              "description": "Indicates which days of the month snapshot should be taken. A comma delimited string.",
              "example": "1,11,21"
            },
            "hour": {
              "type": "integer",
              "description": "Indicates which hour in UTC timezone a snapshot should be taken",
              "example": 11,
              "format": "int32"
            },
            "minute": {
              "type": "integer",
              "description": "Indicates which minute snapshot should be taken",
              "example": 30,
              "format": "int32"
            },
            "usedBytes": {
              "type": "integer",
              "description": "Resource size in bytes, current storage usage for the volume in bytes",
              "format": "int64"
            }
          }
        },
        "enabled": {
          "type": "boolean",
          "description": "The property to decide policy is enabled or not"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        }
      }
    },
    "snapshotPolicy": {
      "description": "Snapshot policy information",
      "type": "object",
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "properties": {
          "description": "Snapshot policy Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "hourlySchedule": {
              "title": "hourlySchedule",
              "description": "Schedule for hourly snapshots",
              "type": "object",
              "properties": {
                "snapshotsToKeep": {
                  "type": "integer",
                  "description": "Hourly snapshot count to keep",
                  "format": "int32"
                },
                "minute": {
                  "type": "integer",
                  "description": "Indicates which minute snapshot should be taken",
                  "example": 30,
                  "format": "int32"
                },
                "usedBytes": {
                  "type": "integer",
                  "description": "Resource size in bytes, current storage usage for the volume in bytes",
                  "format": "int64"
                }
              }
            },
            "dailySchedule": {
              "title": "dailySchedule",
              "description": "Schedule for daily snapshots",
              "type": "object",
              "properties": {
                "snapshotsToKeep": {
                  "type": "integer",
                  "description": "Daily snapshot count to keep",
                  "format": "int32"
                },
                "hour": {
                  "type": "integer",
                  "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                  "example": 11,
                  "format": "int32"
                },
                "minute": {
                  "type": "integer",
                  "description": "Indicates which minute snapshot should be taken",
                  "example": 30,
                  "format": "int32"
                },
                "usedBytes": {
                  "type": "integer",
                  "description": "Resource size in bytes, current storage usage for the volume in bytes",
                  "format": "int64"
                }
              }
            },
            "weeklySchedule": {
              "title": "weeklySchedule",
              "description": "Schedule for weekly snapshots",
              "type": "object",
              "properties": {
                "snapshotsToKeep": {
                  "type": "integer",
                  "description": "Weekly snapshot count to keep",
                  "format": "int32"
                },
                "day": {
                  "type": "string",
                  "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
                  "example": "Sunday,Monday"
                },
                "hour": {
                  "type": "integer",
                  "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                  "example": 11,
                  "format": "int32"
                },
                "minute": {
                  "type": "integer",
                  "description": "Indicates which minute snapshot should be taken",
                  "example": 30,
                  "format": "int32"
                },
                "usedBytes": {
                  "type": "integer",
                  "description": "Resource size in bytes, current storage usage for the volume in bytes",
                  "format": "int64"
                }
              }
            },
            "monthlySchedule": {
              "title": "monthlySchedule",
              "description": "Schedule for monthly snapshots",
              "type": "object",
              "properties": {
                "snapshotsToKeep": {
                  "type": "integer",
                  "description": "Monthly snapshot count to keep",
                  "format": "int32"
                },
                "daysOfMonth": {
                  "type": "string",
                  "description": "Indicates which days of the month snapshot should be taken. A comma delimited string.",
                  "example": "1,11,21"
                },
                "hour": {
                  "type": "integer",
                  "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                  "example": 11,
                  "format": "int32"
                },
                "minute": {
                  "type": "integer",
                  "description": "Indicates which minute snapshot should be taken",
                  "example": 30,
                  "format": "int32"
                },
                "usedBytes": {
                  "type": "integer",
                  "description": "Resource size in bytes, current storage usage for the volume in bytes",
                  "format": "int64"
                }
              }
            },
            "enabled": {
              "type": "boolean",
              "description": "The property to decide policy is enabled or not"
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Azure lifecycle management"
            }
          }
        }
      }
    },
    "snapshotPoliciesList": {
      "description": "List of Snapshot Policies",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of snapshot policies",
          "type": "array",
          "items": {
            "description": "Snapshot policy information",
            "type": "object",
            "required": [
              "location",
              "properties"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "etag": {
                "readOnly": true,
                "type": "string",
                "description": "A unique read-only string that changes whenever the resource is updated."
              },
              "properties": {
                "description": "Snapshot policy Properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "hourlySchedule": {
                    "title": "hourlySchedule",
                    "description": "Schedule for hourly snapshots",
                    "type": "object",
                    "properties": {
                      "snapshotsToKeep": {
                        "type": "integer",
                        "description": "Hourly snapshot count to keep",
                        "format": "int32"
                      },
                      "minute": {
                        "type": "integer",
                        "description": "Indicates which minute snapshot should be taken",
                        "example": 30,
                        "format": "int32"
                      },
                      "usedBytes": {
                        "type": "integer",
                        "description": "Resource size in bytes, current storage usage for the volume in bytes",
                        "format": "int64"
                      }
                    }
                  },
                  "dailySchedule": {
                    "title": "dailySchedule",
                    "description": "Schedule for daily snapshots",
                    "type": "object",
                    "properties": {
                      "snapshotsToKeep": {
                        "type": "integer",
                        "description": "Daily snapshot count to keep",
                        "format": "int32"
                      },
                      "hour": {
                        "type": "integer",
                        "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                        "example": 11,
                        "format": "int32"
                      },
                      "minute": {
                        "type": "integer",
                        "description": "Indicates which minute snapshot should be taken",
                        "example": 30,
                        "format": "int32"
                      },
                      "usedBytes": {
                        "type": "integer",
                        "description": "Resource size in bytes, current storage usage for the volume in bytes",
                        "format": "int64"
                      }
                    }
                  },
                  "weeklySchedule": {
                    "title": "weeklySchedule",
                    "description": "Schedule for weekly snapshots",
                    "type": "object",
                    "properties": {
                      "snapshotsToKeep": {
                        "type": "integer",
                        "description": "Weekly snapshot count to keep",
                        "format": "int32"
                      },
                      "day": {
                        "type": "string",
                        "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
                        "example": "Sunday,Monday"
                      },
                      "hour": {
                        "type": "integer",
                        "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                        "example": 11,
                        "format": "int32"
                      },
                      "minute": {
                        "type": "integer",
                        "description": "Indicates which minute snapshot should be taken",
                        "example": 30,
                        "format": "int32"
                      },
                      "usedBytes": {
                        "type": "integer",
                        "description": "Resource size in bytes, current storage usage for the volume in bytes",
                        "format": "int64"
                      }
                    }
                  },
                  "monthlySchedule": {
                    "title": "monthlySchedule",
                    "description": "Schedule for monthly snapshots",
                    "type": "object",
                    "properties": {
                      "snapshotsToKeep": {
                        "type": "integer",
                        "description": "Monthly snapshot count to keep",
                        "format": "int32"
                      },
                      "daysOfMonth": {
                        "type": "string",
                        "description": "Indicates which days of the month snapshot should be taken. A comma delimited string.",
                        "example": "1,11,21"
                      },
                      "hour": {
                        "type": "integer",
                        "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                        "example": 11,
                        "format": "int32"
                      },
                      "minute": {
                        "type": "integer",
                        "description": "Indicates which minute snapshot should be taken",
                        "example": 30,
                        "format": "int32"
                      },
                      "usedBytes": {
                        "type": "integer",
                        "description": "Resource size in bytes, current storage usage for the volume in bytes",
                        "format": "int64"
                      }
                    }
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "The property to decide policy is enabled or not"
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Azure lifecycle management"
                  }
                }
              }
            }
          }
        }
      }
    },
    "snapshotPolicyDetails": {
      "description": "Snapshot policy properties",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Snapshot policy Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "hourlySchedule": {
              "title": "hourlySchedule",
              "description": "Schedule for hourly snapshots",
              "type": "object",
              "properties": {
                "snapshotsToKeep": {
                  "type": "integer",
                  "description": "Hourly snapshot count to keep",
                  "format": "int32"
                },
                "minute": {
                  "type": "integer",
                  "description": "Indicates which minute snapshot should be taken",
                  "example": 30,
                  "format": "int32"
                },
                "usedBytes": {
                  "type": "integer",
                  "description": "Resource size in bytes, current storage usage for the volume in bytes",
                  "format": "int64"
                }
              }
            },
            "dailySchedule": {
              "title": "dailySchedule",
              "description": "Schedule for daily snapshots",
              "type": "object",
              "properties": {
                "snapshotsToKeep": {
                  "type": "integer",
                  "description": "Daily snapshot count to keep",
                  "format": "int32"
                },
                "hour": {
                  "type": "integer",
                  "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                  "example": 11,
                  "format": "int32"
                },
                "minute": {
                  "type": "integer",
                  "description": "Indicates which minute snapshot should be taken",
                  "example": 30,
                  "format": "int32"
                },
                "usedBytes": {
                  "type": "integer",
                  "description": "Resource size in bytes, current storage usage for the volume in bytes",
                  "format": "int64"
                }
              }
            },
            "weeklySchedule": {
              "title": "weeklySchedule",
              "description": "Schedule for weekly snapshots",
              "type": "object",
              "properties": {
                "snapshotsToKeep": {
                  "type": "integer",
                  "description": "Weekly snapshot count to keep",
                  "format": "int32"
                },
                "day": {
                  "type": "string",
                  "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
                  "example": "Sunday,Monday"
                },
                "hour": {
                  "type": "integer",
                  "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                  "example": 11,
                  "format": "int32"
                },
                "minute": {
                  "type": "integer",
                  "description": "Indicates which minute snapshot should be taken",
                  "example": 30,
                  "format": "int32"
                },
                "usedBytes": {
                  "type": "integer",
                  "description": "Resource size in bytes, current storage usage for the volume in bytes",
                  "format": "int64"
                }
              }
            },
            "monthlySchedule": {
              "title": "monthlySchedule",
              "description": "Schedule for monthly snapshots",
              "type": "object",
              "properties": {
                "snapshotsToKeep": {
                  "type": "integer",
                  "description": "Monthly snapshot count to keep",
                  "format": "int32"
                },
                "daysOfMonth": {
                  "type": "string",
                  "description": "Indicates which days of the month snapshot should be taken. A comma delimited string.",
                  "example": "1,11,21"
                },
                "hour": {
                  "type": "integer",
                  "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                  "example": 11,
                  "format": "int32"
                },
                "minute": {
                  "type": "integer",
                  "description": "Indicates which minute snapshot should be taken",
                  "example": 30,
                  "format": "int32"
                },
                "usedBytes": {
                  "type": "integer",
                  "description": "Resource size in bytes, current storage usage for the volume in bytes",
                  "format": "int64"
                }
              }
            },
            "enabled": {
              "type": "boolean",
              "description": "The property to decide policy is enabled or not"
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Azure lifecycle management"
            }
          }
        }
      }
    },
    "snapshotPolicyPatch": {
      "description": "Snapshot policy Details for create and update",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Snapshot Policy properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "hourlySchedule": {
              "title": "hourlySchedule",
              "description": "Schedule for hourly snapshots",
              "type": "object",
              "properties": {
                "snapshotsToKeep": {
                  "type": "integer",
                  "description": "Hourly snapshot count to keep",
                  "format": "int32"
                },
                "minute": {
                  "type": "integer",
                  "description": "Indicates which minute snapshot should be taken",
                  "example": 30,
                  "format": "int32"
                },
                "usedBytes": {
                  "type": "integer",
                  "description": "Resource size in bytes, current storage usage for the volume in bytes",
                  "format": "int64"
                }
              }
            },
            "dailySchedule": {
              "title": "dailySchedule",
              "description": "Schedule for daily snapshots",
              "type": "object",
              "properties": {
                "snapshotsToKeep": {
                  "type": "integer",
                  "description": "Daily snapshot count to keep",
                  "format": "int32"
                },
                "hour": {
                  "type": "integer",
                  "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                  "example": 11,
                  "format": "int32"
                },
                "minute": {
                  "type": "integer",
                  "description": "Indicates which minute snapshot should be taken",
                  "example": 30,
                  "format": "int32"
                },
                "usedBytes": {
                  "type": "integer",
                  "description": "Resource size in bytes, current storage usage for the volume in bytes",
                  "format": "int64"
                }
              }
            },
            "weeklySchedule": {
              "title": "weeklySchedule",
              "description": "Schedule for weekly snapshots",
              "type": "object",
              "properties": {
                "snapshotsToKeep": {
                  "type": "integer",
                  "description": "Weekly snapshot count to keep",
                  "format": "int32"
                },
                "day": {
                  "type": "string",
                  "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
                  "example": "Sunday,Monday"
                },
                "hour": {
                  "type": "integer",
                  "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                  "example": 11,
                  "format": "int32"
                },
                "minute": {
                  "type": "integer",
                  "description": "Indicates which minute snapshot should be taken",
                  "example": 30,
                  "format": "int32"
                },
                "usedBytes": {
                  "type": "integer",
                  "description": "Resource size in bytes, current storage usage for the volume in bytes",
                  "format": "int64"
                }
              }
            },
            "monthlySchedule": {
              "title": "monthlySchedule",
              "description": "Schedule for monthly snapshots",
              "type": "object",
              "properties": {
                "snapshotsToKeep": {
                  "type": "integer",
                  "description": "Monthly snapshot count to keep",
                  "format": "int32"
                },
                "daysOfMonth": {
                  "type": "string",
                  "description": "Indicates which days of the month snapshot should be taken. A comma delimited string.",
                  "example": "1,11,21"
                },
                "hour": {
                  "type": "integer",
                  "description": "Indicates which hour in UTC timezone a snapshot should be taken",
                  "example": 11,
                  "format": "int32"
                },
                "minute": {
                  "type": "integer",
                  "description": "Indicates which minute snapshot should be taken",
                  "example": 30,
                  "format": "int32"
                },
                "usedBytes": {
                  "type": "integer",
                  "description": "Resource size in bytes, current storage usage for the volume in bytes",
                  "format": "int64"
                }
              }
            },
            "enabled": {
              "type": "boolean",
              "description": "The property to decide policy is enabled or not"
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Azure lifecycle management"
            }
          }
        }
      }
    },
    "snapshotPolicyVolumeList": {
      "description": "Volumes associated with snapshot policy",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of volumes",
          "type": "array",
          "items": {
            "description": "Volume resource",
            "type": "object",
            "required": [
              "location",
              "properties"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "etag": {
                "readOnly": true,
                "type": "string",
                "description": "A unique read-only string that changes whenever the resource is updated."
              },
              "zones": {
                "type": "array",
                "description": "Availability Zone",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "items": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "example": "1"
                }
              },
              "properties": {
                "description": "Volume properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "required": [
                  "creationToken",
                  "usageThreshold",
                  "subnetId"
                ],
                "properties": {
                  "fileSystemId": {
                    "title": "FileSystem ID",
                    "type": "string",
                    "readOnly": true,
                    "description": "Unique FileSystem Identifier.",
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                  },
                  "creationToken": {
                    "title": "Creation Token or File Path",
                    "type": "string",
                    "description": "A unique file path for the volume. Used when creating mount targets",
                    "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                    "minLength": 1,
                    "maxLength": 80,
                    "example": "some-amazing-filepath",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "serviceLevel": {
                    "title": "serviceLevel",
                    "type": "string",
                    "description": "The service level of the file system",
                    "enum": [
                      "Standard",
                      "Premium",
                      "Ultra",
                      "StandardZRS",
                      "Flexible"
                    ],
                    "default": "Premium",
                    "x-ms-enum": {
                      "name": "ServiceLevel",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Standard",
                          "description": "Standard service level"
                        },
                        {
                          "value": "Premium",
                          "description": "Premium service level"
                        },
                        {
                          "value": "Ultra",
                          "description": "Ultra service level"
                        },
                        {
                          "value": "StandardZRS",
                          "description": "Zone redundant storage service level. This will be deprecated soon."
                        },
                        {
                          "value": "Flexible",
                          "description": "Flexible service level"
                        }
                      ]
                    }
                  },
                  "usageThreshold": {
                    "title": "usageThreshold",
                    "type": "integer",
                    "format": "int64",
                    "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                    "minimum": 53687091200,
                    "maximum": 2638827906662400,
                    "default": 107374182400,
                    "example": 107374182400
                  },
                  "exportPolicy": {
                    "title": "exportPolicy",
                    "description": "Set of export policy rules",
                    "properties": {
                      "rules": {
                        "title": "Export policy rule",
                        "description": "Export policy rule",
                        "type": "array",
                        "items": {
                          "description": "Volume Export Policy Rule",
                          "type": "object",
                          "properties": {
                            "ruleIndex": {
                              "type": "integer",
                              "description": "Order index",
                              "format": "int32"
                            },
                            "unixReadOnly": {
                              "type": "boolean",
                              "description": "Read only access"
                            },
                            "unixReadWrite": {
                              "type": "boolean",
                              "description": "Read and write access"
                            },
                            "kerberos5ReadOnly": {
                              "type": "boolean",
                              "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "kerberos5ReadWrite": {
                              "type": "boolean",
                              "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "kerberos5iReadOnly": {
                              "type": "boolean",
                              "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "kerberos5iReadWrite": {
                              "type": "boolean",
                              "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "kerberos5pReadOnly": {
                              "type": "boolean",
                              "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "kerberos5pReadWrite": {
                              "type": "boolean",
                              "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "cifs": {
                              "type": "boolean",
                              "description": "Allows CIFS protocol"
                            },
                            "nfsv3": {
                              "type": "boolean",
                              "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                            },
                            "nfsv41": {
                              "type": "boolean",
                              "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                            },
                            "allowedClients": {
                              "type": "string",
                              "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                            },
                            "hasRootAccess": {
                              "type": "boolean",
                              "description": "Has root access to volume",
                              "example": true,
                              "default": true
                            },
                            "chownMode": {
                              "type": "string",
                              "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                              "default": "Restricted",
                              "enum": [
                                "Restricted",
                                "Unrestricted"
                              ],
                              "x-ms-enum": {
                                "name": "ChownMode",
                                "modelAsString": true
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "ruleIndex"
                        ]
                      }
                    }
                  },
                  "protocolTypes": {
                    "title": "protocolTypes",
                    "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "NFSv4.1"
                    ]
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Azure lifecycle management"
                  },
                  "snapshotId": {
                    "title": "Snapshot ID",
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                        }
                      ]
                    },
                    "x-nullable": true,
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "Resource identifier used to identify the Snapshot.",
                    "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                  },
                  "deleteBaseSnapshot": {
                    "type": "boolean",
                    "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                  },
                  "backupId": {
                    "title": "Backup ID",
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                        }
                      ]
                    },
                    "x-nullable": true,
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "Resource identifier used to identify the Backup.",
                    "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                  },
                  "baremetalTenantId": {
                    "title": "Baremetal Tenant ID",
                    "type": "string",
                    "readOnly": true,
                    "description": "Unique Baremetal Tenant Identifier.",
                    "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                  },
                  "subnetId": {
                    "type": "string",
                    "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                  },
                  "networkFeatures": {
                    "title": "Network features",
                    "description": "Network features available to the volume, or current state of update.",
                    "type": "string",
                    "enum": [
                      "Basic",
                      "Standard",
                      "Basic_Standard",
                      "Standard_Basic"
                    ],
                    "x-ms-enum": {
                      "name": "NetworkFeatures",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Basic",
                          "description": "Basic network features."
                        },
                        {
                          "value": "Standard",
                          "description": "Standard network features."
                        },
                        {
                          "value": "Basic_Standard",
                          "description": "Updating from Basic to Standard network features."
                        },
                        {
                          "value": "Standard_Basic",
                          "description": "Updating from Standard to Basic network features."
                        }
                      ]
                    },
                    "example": "Standard",
                    "default": "Basic",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "effectiveNetworkFeatures": {
                    "title": "Network features",
                    "description": "Network features available to the volume, or current state of update.",
                    "type": "string",
                    "enum": [
                      "Basic",
                      "Standard",
                      "Basic_Standard",
                      "Standard_Basic"
                    ],
                    "x-ms-enum": {
                      "name": "NetworkFeatures",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Basic",
                          "description": "Basic network features."
                        },
                        {
                          "value": "Standard",
                          "description": "Standard network features."
                        },
                        {
                          "value": "Basic_Standard",
                          "description": "Updating from Basic to Standard network features."
                        },
                        {
                          "value": "Standard_Basic",
                          "description": "Updating from Standard to Basic network features."
                        }
                      ]
                    },
                    "example": "Standard",
                    "default": "Basic",
                    "readOnly": true
                  },
                  "networkSiblingSetId": {
                    "title": "Network Sibling Set ID",
                    "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                    "type": "string",
                    "readOnly": true,
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                  },
                  "storageToNetworkProximity": {
                    "title": "Storage to Network Proximity",
                    "description": "Provides storage to network proximity information for the volume.",
                    "type": "string",
                    "enum": [
                      "Default",
                      "T1",
                      "T2",
                      "AcrossT2"
                    ],
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "VolumeStorageToNetworkProximity",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Default",
                          "description": "Basic storage to network connectivity."
                        },
                        {
                          "value": "T1",
                          "description": "Standard T1 storage to network connectivity."
                        },
                        {
                          "value": "T2",
                          "description": "Standard T2 storage to network connectivity."
                        },
                        {
                          "value": "AcrossT2",
                          "description": "Standard AcrossT2 storage to network connectivity."
                        }
                      ]
                    },
                    "example": "T1"
                  },
                  "mountTargets": {
                    "title": "mountTargets",
                    "type": "array",
                    "readOnly": true,
                    "description": "List of mount targets",
                    "items": {
                      "description": "Mount target properties",
                      "type": "object",
                      "required": [
                        "fileSystemId"
                      ],
                      "properties": {
                        "mountTargetId": {
                          "title": "mountTargetId",
                          "type": "string",
                          "readOnly": true,
                          "description": "UUID v4 used to identify the MountTarget",
                          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                        },
                        "fileSystemId": {
                          "title": "fileSystemId",
                          "type": "string",
                          "description": "UUID v4 used to identify the MountTarget",
                          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                        },
                        "ipAddress": {
                          "title": "ipAddress",
                          "description": "The mount target's IPv4 address",
                          "type": "string",
                          "readOnly": true,
                          "example": "1.2.3.4"
                        },
                        "smbServerFqdn": {
                          "title": "smbServerFQDN",
                          "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                          "type": "string",
                          "example": "fullyqualified.domainname.com"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "fileSystemId"
                    ]
                  },
                  "volumeType": {
                    "type": "string",
                    "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                    "example": "DataProtection",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "dataProtection": {
                    "title": "DataProtection",
                    "description": "DataProtection type volumes include an object containing details of the replication",
                    "properties": {
                      "backup": {
                        "title": "Backup",
                        "description": "Backup Properties",
                        "type": "object",
                        "properties": {
                          "backupPolicyId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                }
                              ]
                            },
                            "description": "Backup Policy Resource ID"
                          },
                          "policyEnforced": {
                            "type": "boolean",
                            "description": "Policy Enforced"
                          },
                          "backupVaultId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                }
                              ]
                            },
                            "description": "Backup Vault Resource ID"
                          }
                        }
                      },
                      "replication": {
                        "title": "Replication",
                        "description": "Replication properties",
                        "type": "object",
                        "properties": {
                          "replicationId": {
                            "type": "string",
                            "description": "Id",
                            "readOnly": true
                          },
                          "endpointType": {
                            "type": "string",
                            "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                            "enum": [
                              "src",
                              "dst"
                            ],
                            "x-ms-enum": {
                              "name": "EndpointType",
                              "modelAsString": true
                            },
                            "readOnly": true
                          },
                          "replicationSchedule": {
                            "type": "string",
                            "description": "Schedule",
                            "enum": [
                              "_10minutely",
                              "hourly",
                              "daily"
                            ],
                            "x-ms-enum": {
                              "name": "ReplicationSchedule",
                              "modelAsString": true
                            }
                          },
                          "remoteVolumeResourceId": {
                            "type": "string",
                            "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                          },
                          "remotePath": {
                            "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                            "type": "object",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "required": [
                              "externalHostName",
                              "serverName",
                              "volumeName"
                            ],
                            "properties": {
                              "externalHostName": {
                                "type": "string",
                                "description": "The Path to a ONTAP Host"
                              },
                              "serverName": {
                                "type": "string",
                                "description": "The name of a server on the ONTAP Host"
                              },
                              "volumeName": {
                                "type": "string",
                                "description": "The name of a volume on the server"
                              }
                            }
                          },
                          "remoteVolumeRegion": {
                            "type": "string",
                            "description": "The remote region for the other end of the Volume Replication."
                          },
                          "destinationReplications": {
                            "description": "A list of destination replications",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "description": "Destination replication properties",
                              "type": "object",
                              "properties": {
                                "resourceId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                      }
                                    ]
                                  },
                                  "description": "The resource ID of the remote volume"
                                },
                                "replicationType": {
                                  "type": "string",
                                  "description": "Indicates whether the replication is cross zone or cross region.",
                                  "enum": [
                                    "CrossRegionReplication",
                                    "CrossZoneReplication"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ReplicationType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "CrossRegionReplication",
                                        "description": "Cross region replication"
                                      },
                                      {
                                        "value": "CrossZoneReplication",
                                        "description": "Cross zone replication"
                                      }
                                    ]
                                  }
                                },
                                "region": {
                                  "type": "string",
                                  "description": "The remote region for the destination volume."
                                },
                                "zone": {
                                  "type": "string",
                                  "description": "The remote zone for the destination volume."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "resourceId"
                            ]
                          }
                        }
                      },
                      "snapshot": {
                        "title": "Snapshot",
                        "description": "Snapshot properties.",
                        "type": "object",
                        "properties": {
                          "snapshotPolicyId": {
                            "type": "string",
                            "description": "Snapshot Policy ResourceId"
                          }
                        }
                      },
                      "volumeRelocation": {
                        "title": "VolumeRelocation",
                        "description": "VolumeRelocation properties",
                        "type": "object",
                        "properties": {
                          "relocationRequested": {
                            "type": "boolean",
                            "description": "Has relocation been requested for this volume"
                          },
                          "readyToBeFinalized": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Has relocation finished and is ready to be cleaned up"
                          }
                        }
                      }
                    }
                  },
                  "acceptGrowCapacityPoolForShortTermCloneSplit": {
                    "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                    "type": "string",
                    "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "enum": [
                      "Accepted",
                      "Declined"
                    ],
                    "x-ms-enum": {
                      "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Accepted",
                          "description": "Auto grow capacity pool for short term clone split is accepted."
                        },
                        {
                          "value": "Declined",
                          "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                        }
                      ]
                    },
                    "example": "Accepted"
                  },
                  "isRestoring": {
                    "type": "boolean",
                    "description": "Restoring",
                    "readOnly": true
                  },
                  "snapshotDirectoryVisible": {
                    "type": "boolean",
                    "default": true,
                    "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                  },
                  "kerberosEnabled": {
                    "type": "boolean",
                    "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "example": false,
                    "default": false
                  },
                  "securityStyle": {
                    "type": "string",
                    "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                    "default": "unix",
                    "enum": [
                      "ntfs",
                      "unix"
                    ],
                    "x-ms-enum": {
                      "name": "SecurityStyle",
                      "modelAsString": true
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "smbEncryption": {
                    "type": "boolean",
                    "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                    "example": false,
                    "default": false
                  },
                  "smbAccessBasedEnumeration": {
                    "title": "smbAccessBasedEnumeration",
                    "type": "string",
                    "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "x-ms-enum": {
                      "name": "smbAccessBasedEnumeration",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Disabled",
                          "description": "smbAccessBasedEnumeration share setting is disabled"
                        },
                        {
                          "value": "Enabled",
                          "description": "smbAccessBasedEnumeration share setting is enabled"
                        }
                      ]
                    },
                    "x-nullable": true,
                    "example": "Enabled"
                  },
                  "smbNonBrowsable": {
                    "title": "smbNonBrowsable",
                    "type": "string",
                    "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "x-ms-enum": {
                      "name": "smbNonBrowsable",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Disabled",
                          "description": "smbNonBrowsable share setting is disabled"
                        },
                        {
                          "value": "Enabled",
                          "description": "smbNonBrowsable share setting is enabled"
                        }
                      ]
                    },
                    "example": "Enabled"
                  },
                  "smbContinuouslyAvailable": {
                    "type": "boolean",
                    "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                    "example": false,
                    "default": false
                  },
                  "throughputMibps": {
                    "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                    "type": "number",
                    "x-nullable": true,
                    "example": 128.223
                  },
                  "actualThroughputMibps": {
                    "type": "number",
                    "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                    "example": 164.221,
                    "readOnly": true
                  },
                  "encryptionKeySource": {
                    "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                    "type": "string",
                    "enum": [
                      "Microsoft.NetApp",
                      "Microsoft.KeyVault"
                    ],
                    "x-ms-enum": {
                      "name": "EncryptionKeySource",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Microsoft.NetApp",
                          "description": "Microsoft-managed key encryption"
                        },
                        {
                          "value": "Microsoft.KeyVault",
                          "description": "Customer-managed key encryption"
                        }
                      ]
                    },
                    "default": "Microsoft.NetApp"
                  },
                  "keyVaultPrivateEndpointResourceId": {
                    "type": "string",
                    "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                  },
                  "ldapEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                    "example": false,
                    "default": false,
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "coolAccess": {
                    "type": "boolean",
                    "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                    "example": false,
                    "default": false
                  },
                  "coolnessPeriod": {
                    "type": "integer",
                    "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                    "example": 7,
                    "minimum": 2,
                    "maximum": 183,
                    "format": "int32"
                  },
                  "coolAccessRetrievalPolicy": {
                    "type": "string",
                    "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                    "enum": [
                      "Default",
                      "OnRead",
                      "Never"
                    ],
                    "x-ms-enum": {
                      "name": "coolAccessRetrievalPolicy",
                      "modelAsString": true
                    }
                  },
                  "coolAccessTieringPolicy": {
                    "type": "string",
                    "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                    "enum": [
                      "Auto",
                      "SnapshotOnly"
                    ],
                    "x-ms-enum": {
                      "name": "coolAccessTieringPolicy",
                      "modelAsString": true
                    }
                  },
                  "unixPermissions": {
                    "type": "string",
                    "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                    "minLength": 4,
                    "maxLength": 4,
                    "x-nullable": true,
                    "example": "0770"
                  },
                  "cloneProgress": {
                    "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                    "type": "integer",
                    "format": "int32",
                    "example": 10,
                    "x-nullable": true,
                    "readOnly": true
                  },
                  "fileAccessLogs": {
                    "type": "string",
                    "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                    "readOnly": true,
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "fileAccessLogs",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Enabled",
                          "description": "fileAccessLogs are enabled"
                        },
                        {
                          "value": "Disabled",
                          "description": "fileAccessLogs are not enabled"
                        }
                      ]
                    },
                    "example": "Disabled",
                    "default": "Disabled"
                  },
                  "avsDataStore": {
                    "title": "avsDataStore",
                    "type": "string",
                    "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "avsDataStore",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Enabled",
                          "description": "avsDataStore is enabled"
                        },
                        {
                          "value": "Disabled",
                          "description": "avsDataStore is disabled"
                        }
                      ]
                    },
                    "example": "Enabled",
                    "default": "Disabled",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "dataStoreResourceId": {
                    "title": "dataStoreResourceId",
                    "description": "Data store resource unique identifier",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "isDefaultQuotaEnabled": {
                    "type": "boolean",
                    "description": "Specifies if default quota is enabled for the volume.",
                    "example": false,
                    "default": false
                  },
                  "defaultUserQuotaInKiBs": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                    "example": 4,
                    "default": 0
                  },
                  "defaultGroupQuotaInKiBs": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                    "example": 4,
                    "default": 0
                  },
                  "maximumNumberOfFiles": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                    "example": 100000000
                  },
                  "volumeGroupName": {
                    "type": "string",
                    "description": "Volume Group Name",
                    "readOnly": true
                  },
                  "capacityPoolResourceId": {
                    "type": "string",
                    "description": "Pool Resource Id used in case of creating a volume through volume group"
                  },
                  "proximityPlacementGroup": {
                    "type": "string",
                    "description": "Proximity placement group associated with the volume",
                    "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                  },
                  "t2Network": {
                    "type": "string",
                    "description": "T2 network information",
                    "example": "Test-T2-Alias",
                    "readOnly": true
                  },
                  "volumeSpecName": {
                    "type": "string",
                    "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                    "example": "Data"
                  },
                  "encrypted": {
                    "type": "boolean",
                    "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                    "readOnly": true
                  },
                  "placementRules": {
                    "title": "Volume placement rules",
                    "description": "Application specific placement rules for the particular volume",
                    "type": "array",
                    "items": {
                      "description": "Application specific parameters for the placement of volumes in the volume group",
                      "type": "object",
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                          "example": "key1"
                        },
                        "value": {
                          "type": "string",
                          "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                          "example": "value1"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "key"
                    ]
                  },
                  "enableSubvolumes": {
                    "type": "string",
                    "description": "Flag indicating whether subvolume operations are enabled on the volume",
                    "example": "Enabled",
                    "default": "Disabled",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "enableSubvolumes",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Enabled",
                          "description": "subvolumes are enabled"
                        },
                        {
                          "value": "Disabled",
                          "description": "subvolumes are not enabled"
                        }
                      ]
                    }
                  },
                  "provisionedAvailabilityZone": {
                    "title": "Provisioned Availability Zone",
                    "type": "string",
                    "readOnly": true,
                    "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                    "example": "2",
                    "x-nullable": true
                  },
                  "isLargeVolume": {
                    "title": "Is Large Volume",
                    "type": "boolean",
                    "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                    "example": false,
                    "default": false,
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "originatingResourceId": {
                    "title": "Originating Resource Id",
                    "type": "string",
                    "description": "Id of the snapshot or backup that the volume is restored from.",
                    "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                    "readOnly": true,
                    "x-nullable": true
                  },
                  "inheritedSizeInBytes": {
                    "title": "inheritedSizeInBytes",
                    "type": "integer",
                    "format": "int64",
                    "description": "Space shared by short term clone volume with parent volume in bytes.",
                    "readOnly": true,
                    "x-nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "hourlySchedule": {
      "description": "Hourly Schedule properties",
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "description": "Hourly snapshot count to keep",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "description": "Indicates which minute snapshot should be taken",
          "example": 30,
          "format": "int32"
        },
        "usedBytes": {
          "type": "integer",
          "description": "Resource size in bytes, current storage usage for the volume in bytes",
          "format": "int64"
        }
      }
    },
    "dailySchedule": {
      "description": "Daily Schedule properties",
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "description": "Daily snapshot count to keep",
          "format": "int32"
        },
        "hour": {
          "type": "integer",
          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
          "example": 11,
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "description": "Indicates which minute snapshot should be taken",
          "example": 30,
          "format": "int32"
        },
        "usedBytes": {
          "type": "integer",
          "description": "Resource size in bytes, current storage usage for the volume in bytes",
          "format": "int64"
        }
      }
    },
    "weeklySchedule": {
      "description": "Weekly Schedule properties, make a snapshot every week at a specific day or days",
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "description": "Weekly snapshot count to keep",
          "format": "int32"
        },
        "day": {
          "type": "string",
          "description": "Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english",
          "example": "Sunday,Monday"
        },
        "hour": {
          "type": "integer",
          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
          "example": 11,
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "description": "Indicates which minute snapshot should be taken",
          "example": 30,
          "format": "int32"
        },
        "usedBytes": {
          "type": "integer",
          "description": "Resource size in bytes, current storage usage for the volume in bytes",
          "format": "int64"
        }
      }
    },
    "monthlySchedule": {
      "description": "Monthly Schedule properties",
      "type": "object",
      "properties": {
        "snapshotsToKeep": {
          "type": "integer",
          "description": "Monthly snapshot count to keep",
          "format": "int32"
        },
        "daysOfMonth": {
          "type": "string",
          "description": "Indicates which days of the month snapshot should be taken. A comma delimited string.",
          "example": "1,11,21"
        },
        "hour": {
          "type": "integer",
          "description": "Indicates which hour in UTC timezone a snapshot should be taken",
          "example": 11,
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "description": "Indicates which minute snapshot should be taken",
          "example": 30,
          "format": "int32"
        },
        "usedBytes": {
          "type": "integer",
          "description": "Resource size in bytes, current storage usage for the volume in bytes",
          "format": "int64"
        }
      }
    },
    "volumeRevert": {
      "description": "revert a volume to the snapshot",
      "type": "object",
      "properties": {
        "snapshotId": {
          "type": "string",
          "description": "Resource id of the snapshot",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
              }
            ]
          }
        }
      }
    },
    "authorizeRequest": {
      "description": "Authorize request",
      "type": "object",
      "properties": {
        "remoteVolumeResourceId": {
          "type": "string",
          "description": "Resource id of the remote volume"
        }
      }
    },
    "breakReplicationRequest": {
      "description": "Break replication request",
      "type": "object",
      "properties": {
        "forceBreakReplication": {
          "type": "boolean",
          "description": "If replication is in status transferring and you want to force break the replication, set to true"
        }
      }
    },
    "reestablishReplicationRequest": {
      "description": "Re-establish request object supplied in the body of the operation.",
      "type": "object",
      "properties": {
        "sourceVolumeId": {
          "type": "string",
          "description": "Resource id of the source volume for the replication"
        }
      }
    },
    "relocateVolumeRequest": {
      "description": "Relocate volume request",
      "type": "object",
      "properties": {
        "creationToken": {
          "type": "string",
          "description": "New creation token for the volume that controls the mount point name"
        }
      }
    },
    "breakFileLocksRequest": {
      "description": "Break file locks request",
      "type": "object",
      "properties": {
        "clientIp": {
          "type": "string",
          "description": "To clear file locks on a volume for a particular client",
          "pattern": "^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
          "example": "101.102.103.104"
        },
        "confirmRunningDisruptiveOperation": {
          "type": "boolean",
          "description": "Break File locks could be a disruptive operation for application as locks on the volume will be broken, if want to process, set to true.",
          "default": false
        }
      }
    },
    "poolChangeRequest": {
      "description": "Pool change request",
      "type": "object",
      "required": [
        "newPoolResourceId"
      ],
      "properties": {
        "newPoolResourceId": {
          "type": "string",
          "description": "Resource id of the pool to move volume to"
        }
      }
    },
    "backupPolicyProperties": {
      "description": "Backup policy properties",
      "type": "object",
      "properties": {
        "backupPolicyId": {
          "type": "string",
          "readOnly": true,
          "description": "Backup Policy GUID ID"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        },
        "dailyBackupsToKeep": {
          "type": "integer",
          "description": "Daily backups count to keep",
          "format": "int32"
        },
        "weeklyBackupsToKeep": {
          "type": "integer",
          "description": "Weekly backups count to keep",
          "format": "int32"
        },
        "monthlyBackupsToKeep": {
          "type": "integer",
          "description": "Monthly backups count to keep",
          "format": "int32"
        },
        "volumesAssigned": {
          "type": "integer",
          "readOnly": true,
          "description": "Volumes using current backup policy",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean",
          "description": "The property to decide policy is enabled or not"
        },
        "volumeBackups": {
          "description": "A list of volumes assigned to this policy",
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "Volume details using the backup policy",
            "type": "object",
            "readOnly": true,
            "properties": {
              "volumeName": {
                "type": "string",
                "description": "Volume name"
              },
              "volumeResourceId": {
                "type": "string",
                "description": "ResourceId used to identify the Volume",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                    }
                  ]
                }
              },
              "backupsCount": {
                "type": "integer",
                "description": "Total count of backups for volume",
                "format": "int32"
              },
              "policyEnabled": {
                "type": "boolean",
                "description": "Policy enabled"
              }
            }
          },
          "x-ms-identifiers": [
            "volumeName"
          ]
        }
      }
    },
    "backupPolicy": {
      "description": "Backup policy information",
      "type": "object",
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "etag": {
          "readOnly": true,
          "type": "string",
          "description": "A unique read-only string that changes whenever the resource is updated."
        },
        "properties": {
          "description": "Backup policy Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "backupPolicyId": {
              "type": "string",
              "readOnly": true,
              "description": "Backup Policy GUID ID"
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Azure lifecycle management"
            },
            "dailyBackupsToKeep": {
              "type": "integer",
              "description": "Daily backups count to keep",
              "format": "int32"
            },
            "weeklyBackupsToKeep": {
              "type": "integer",
              "description": "Weekly backups count to keep",
              "format": "int32"
            },
            "monthlyBackupsToKeep": {
              "type": "integer",
              "description": "Monthly backups count to keep",
              "format": "int32"
            },
            "volumesAssigned": {
              "type": "integer",
              "readOnly": true,
              "description": "Volumes using current backup policy",
              "format": "int32"
            },
            "enabled": {
              "type": "boolean",
              "description": "The property to decide policy is enabled or not"
            },
            "volumeBackups": {
              "description": "A list of volumes assigned to this policy",
              "readOnly": true,
              "type": "array",
              "items": {
                "description": "Volume details using the backup policy",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "volumeName": {
                    "type": "string",
                    "description": "Volume name"
                  },
                  "volumeResourceId": {
                    "type": "string",
                    "description": "ResourceId used to identify the Volume",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                        }
                      ]
                    }
                  },
                  "backupsCount": {
                    "type": "integer",
                    "description": "Total count of backups for volume",
                    "format": "int32"
                  },
                  "policyEnabled": {
                    "type": "boolean",
                    "description": "Policy enabled"
                  }
                }
              },
              "x-ms-identifiers": [
                "volumeName"
              ]
            }
          }
        }
      }
    },
    "backupPoliciesList": {
      "description": "List of Backup Policies",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of backup policies",
          "type": "array",
          "items": {
            "description": "Backup policy information",
            "type": "object",
            "required": [
              "location",
              "properties"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "etag": {
                "readOnly": true,
                "type": "string",
                "description": "A unique read-only string that changes whenever the resource is updated."
              },
              "properties": {
                "description": "Backup policy Properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "backupPolicyId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Backup Policy GUID ID"
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Azure lifecycle management"
                  },
                  "dailyBackupsToKeep": {
                    "type": "integer",
                    "description": "Daily backups count to keep",
                    "format": "int32"
                  },
                  "weeklyBackupsToKeep": {
                    "type": "integer",
                    "description": "Weekly backups count to keep",
                    "format": "int32"
                  },
                  "monthlyBackupsToKeep": {
                    "type": "integer",
                    "description": "Monthly backups count to keep",
                    "format": "int32"
                  },
                  "volumesAssigned": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "Volumes using current backup policy",
                    "format": "int32"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "The property to decide policy is enabled or not"
                  },
                  "volumeBackups": {
                    "description": "A list of volumes assigned to this policy",
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "description": "Volume details using the backup policy",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "volumeName": {
                          "type": "string",
                          "description": "Volume name"
                        },
                        "volumeResourceId": {
                          "type": "string",
                          "description": "ResourceId used to identify the Volume",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                              }
                            ]
                          }
                        },
                        "backupsCount": {
                          "type": "integer",
                          "description": "Total count of backups for volume",
                          "format": "int32"
                        },
                        "policyEnabled": {
                          "type": "boolean",
                          "description": "Policy enabled"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "volumeName"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "backupPolicyPatch": {
      "description": "Backup policy Details for create and update",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Backup policy Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "backupPolicyId": {
              "type": "string",
              "readOnly": true,
              "description": "Backup Policy GUID ID"
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Azure lifecycle management"
            },
            "dailyBackupsToKeep": {
              "type": "integer",
              "description": "Daily backups count to keep",
              "format": "int32"
            },
            "weeklyBackupsToKeep": {
              "type": "integer",
              "description": "Weekly backups count to keep",
              "format": "int32"
            },
            "monthlyBackupsToKeep": {
              "type": "integer",
              "description": "Monthly backups count to keep",
              "format": "int32"
            },
            "volumesAssigned": {
              "type": "integer",
              "readOnly": true,
              "description": "Volumes using current backup policy",
              "format": "int32"
            },
            "enabled": {
              "type": "boolean",
              "description": "The property to decide policy is enabled or not"
            },
            "volumeBackups": {
              "description": "A list of volumes assigned to this policy",
              "readOnly": true,
              "type": "array",
              "items": {
                "description": "Volume details using the backup policy",
                "type": "object",
                "readOnly": true,
                "properties": {
                  "volumeName": {
                    "type": "string",
                    "description": "Volume name"
                  },
                  "volumeResourceId": {
                    "type": "string",
                    "description": "ResourceId used to identify the Volume",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                        }
                      ]
                    }
                  },
                  "backupsCount": {
                    "type": "integer",
                    "description": "Total count of backups for volume",
                    "format": "int32"
                  },
                  "policyEnabled": {
                    "type": "boolean",
                    "description": "Policy enabled"
                  }
                }
              },
              "x-ms-identifiers": [
                "volumeName"
              ]
            }
          }
        }
      }
    },
    "volumeBackups": {
      "description": "Volume details using the backup policy",
      "type": "object",
      "readOnly": true,
      "properties": {
        "volumeName": {
          "type": "string",
          "description": "Volume name"
        },
        "volumeResourceId": {
          "type": "string",
          "description": "ResourceId used to identify the Volume",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
              }
            ]
          }
        },
        "backupsCount": {
          "type": "integer",
          "description": "Total count of backups for volume",
          "format": "int32"
        },
        "policyEnabled": {
          "type": "boolean",
          "description": "Policy enabled"
        }
      }
    },
    "restoreStatus": {
      "description": "Restore status",
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean",
          "readOnly": true,
          "description": "Restore health status"
        },
        "relationshipStatus": {
          "type": "string",
          "readOnly": true,
          "description": "Status of the restore SnapMirror relationship",
          "enum": [
            "Idle",
            "Transferring",
            "Failed",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "RelationshipStatus",
            "modelAsString": true
          }
        },
        "mirrorState": {
          "type": "string",
          "readOnly": true,
          "description": "The status of the restore",
          "enum": [
            "Uninitialized",
            "Mirrored",
            "Broken"
          ],
          "x-ms-enum": {
            "name": "MirrorState",
            "modelAsString": true
          }
        },
        "unhealthyReason": {
          "type": "string",
          "readOnly": true,
          "description": "Reason for the unhealthy restore relationship"
        },
        "errorMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Displays error message if the restore is in an error state"
        },
        "totalTransferBytes": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Displays the total bytes transferred"
        }
      }
    },
    "getGroupIdListForLDAPUserRequest": {
      "description": "Get group Id list for LDAP User request",
      "type": "object",
      "required": [
        "username"
      ],
      "properties": {
        "username": {
          "type": "string",
          "description": "username is required to fetch the group to which user is part of",
          "maxLength": 255,
          "minLength": 1
        }
      }
    },
    "getGroupIdListForLDAPUserResponse": {
      "description": "Group Id list for Ldap user",
      "type": "object",
      "properties": {
        "groupIdsForLdapUser": {
          "description": "Group Id list",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "123",
            "224"
          ]
        }
      }
    },
    "cloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "description": "Cloud error body.",
          "x-ms-external": true,
          "properties": {
            "code": {
              "type": "string",
              "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
            },
            "message": {
              "type": "string",
              "description": "A message describing the error, intended to be suitable for display in a user interface."
            }
          }
        }
      },
      "description": "An error response from the service."
    },
    "cloudErrorBody": {
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        }
      },
      "description": "An error response from the service."
    },
    "serviceLevel": {
      "title": "serviceLevel",
      "type": "string",
      "description": "The service level of the file system",
      "enum": [
        "Standard",
        "Premium",
        "Ultra",
        "StandardZRS",
        "Flexible"
      ],
      "default": "Premium",
      "x-ms-enum": {
        "name": "ServiceLevel",
        "modelAsString": true,
        "values": [
          {
            "value": "Standard",
            "description": "Standard service level"
          },
          {
            "value": "Premium",
            "description": "Premium service level"
          },
          {
            "value": "Ultra",
            "description": "Ultra service level"
          },
          {
            "value": "StandardZRS",
            "description": "Zone redundant storage service level. This will be deprecated soon."
          },
          {
            "value": "Flexible",
            "description": "Flexible service level"
          }
        ]
      }
    },
    "volumeQuotaRulesList": {
      "description": "List of Volume Quota Rules",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of Volume Quota Rules",
          "type": "array",
          "items": {
            "description": "Quota Rule of a Volume",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "Volume Quota Rule Properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
                    "enum": [
                      "Accepted",
                      "Creating",
                      "Patching",
                      "Deleting",
                      "Moving",
                      "Failed",
                      "Succeeded"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": false
                    }
                  },
                  "quotaSizeInKiBs": {
                    "type": "integer",
                    "description": "Size of quota",
                    "format": "int64",
                    "example": "100006"
                  },
                  "quotaType": {
                    "title": "quotaType",
                    "type": "string",
                    "description": "Type of quota",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "enum": [
                      "DefaultUserQuota",
                      "DefaultGroupQuota",
                      "IndividualUserQuota",
                      "IndividualGroupQuota"
                    ],
                    "x-ms-enum": {
                      "name": "type",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "DefaultUserQuota",
                          "description": "Default user quota"
                        },
                        {
                          "value": "DefaultGroupQuota",
                          "description": "Default group quota"
                        },
                        {
                          "value": "IndividualUserQuota",
                          "description": "Individual user quota"
                        },
                        {
                          "value": "IndividualGroupQuota",
                          "description": "Individual group quota"
                        }
                      ]
                    },
                    "example": "DefaultUserQuota"
                  },
                  "quotaTarget": {
                    "type": "string",
                    "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "volumeQuotaRule": {
      "description": "Quota Rule of a Volume",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "Volume Quota Rule Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
              "enum": [
                "Accepted",
                "Creating",
                "Patching",
                "Deleting",
                "Moving",
                "Failed",
                "Succeeded"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": false
              }
            },
            "quotaSizeInKiBs": {
              "type": "integer",
              "description": "Size of quota",
              "format": "int64",
              "example": "100006"
            },
            "quotaType": {
              "title": "quotaType",
              "type": "string",
              "description": "Type of quota",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "enum": [
                "DefaultUserQuota",
                "DefaultGroupQuota",
                "IndividualUserQuota",
                "IndividualGroupQuota"
              ],
              "x-ms-enum": {
                "name": "type",
                "modelAsString": true,
                "values": [
                  {
                    "value": "DefaultUserQuota",
                    "description": "Default user quota"
                  },
                  {
                    "value": "DefaultGroupQuota",
                    "description": "Default group quota"
                  },
                  {
                    "value": "IndividualUserQuota",
                    "description": "Individual user quota"
                  },
                  {
                    "value": "IndividualGroupQuota",
                    "description": "Individual group quota"
                  }
                ]
              },
              "example": "DefaultUserQuota"
            },
            "quotaTarget": {
              "type": "string",
              "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          }
        }
      }
    },
    "volumeQuotaRulePatch": {
      "description": "Patchable Quota Rule of a Volume",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "Volume Quota Rule Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "readOnly": true,
              "type": "string",
              "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
              "enum": [
                "Accepted",
                "Creating",
                "Patching",
                "Deleting",
                "Moving",
                "Failed",
                "Succeeded"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": false
              }
            },
            "quotaSizeInKiBs": {
              "type": "integer",
              "description": "Size of quota",
              "format": "int64",
              "example": "100006"
            },
            "quotaType": {
              "title": "quotaType",
              "type": "string",
              "description": "Type of quota",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "enum": [
                "DefaultUserQuota",
                "DefaultGroupQuota",
                "IndividualUserQuota",
                "IndividualGroupQuota"
              ],
              "x-ms-enum": {
                "name": "type",
                "modelAsString": true,
                "values": [
                  {
                    "value": "DefaultUserQuota",
                    "description": "Default user quota"
                  },
                  {
                    "value": "DefaultGroupQuota",
                    "description": "Default group quota"
                  },
                  {
                    "value": "IndividualUserQuota",
                    "description": "Individual user quota"
                  },
                  {
                    "value": "IndividualGroupQuota",
                    "description": "Individual group quota"
                  }
                ]
              },
              "example": "DefaultUserQuota"
            },
            "quotaTarget": {
              "type": "string",
              "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            }
          }
        }
      }
    },
    "volumeQuotaRulesProperties": {
      "description": "Volume Quota Rule properties",
      "type": "object",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
          "enum": [
            "Accepted",
            "Creating",
            "Patching",
            "Deleting",
            "Moving",
            "Failed",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": false
          }
        },
        "quotaSizeInKiBs": {
          "type": "integer",
          "description": "Size of quota",
          "format": "int64",
          "example": "100006"
        },
        "quotaType": {
          "title": "quotaType",
          "type": "string",
          "description": "Type of quota",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "enum": [
            "DefaultUserQuota",
            "DefaultGroupQuota",
            "IndividualUserQuota",
            "IndividualGroupQuota"
          ],
          "x-ms-enum": {
            "name": "type",
            "modelAsString": true,
            "values": [
              {
                "value": "DefaultUserQuota",
                "description": "Default user quota"
              },
              {
                "value": "DefaultGroupQuota",
                "description": "Default group quota"
              },
              {
                "value": "IndividualUserQuota",
                "description": "Individual user quota"
              },
              {
                "value": "IndividualGroupQuota",
                "description": "Individual group quota"
              }
            ]
          },
          "example": "DefaultUserQuota"
        },
        "quotaTarget": {
          "type": "string",
          "description": "UserID/GroupID/SID based on the quota target type. UserID and groupID can be found by running ‘id’ or ‘getent’ command for the user or group and SID can be found by running <wmic useraccount where name='user-name' get sid>",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "volumeGroupList": {
      "description": "List of volume group resources",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of volume Groups",
          "type": "array",
          "items": {
            "description": "Volume group resource",
            "type": "object",
            "properties": {
              "location": {
                "type": "string",
                "description": "Resource location",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "id": {
                "type": "string",
                "readOnly": true,
                "description": "Resource Id"
              },
              "name": {
                "type": "string",
                "readOnly": true,
                "description": "Resource name"
              },
              "type": {
                "type": "string",
                "readOnly": true,
                "description": "Resource type"
              },
              "properties": {
                "description": "Volume group properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "type": "string",
                    "description": "Azure lifecycle management",
                    "example": "Available",
                    "readOnly": true
                  },
                  "groupMetaData": {
                    "title": "groupMetaData",
                    "description": "Volume group details",
                    "type": "object",
                    "properties": {
                      "groupDescription": {
                        "type": "string",
                        "description": "Group Description",
                        "example": "group description"
                      },
                      "applicationType": {
                        "type": "string",
                        "description": "Application Type",
                        "enum": [
                          "SAP-HANA",
                          "ORACLE"
                        ],
                        "x-ms-enum": {
                          "name": "ApplicationType",
                          "modelAsString": true
                        },
                        "example": "SAP-HANA"
                      },
                      "applicationIdentifier": {
                        "type": "string",
                        "description": "Application specific identifier",
                        "example": "SH1"
                      },
                      "globalPlacementRules": {
                        "title": "Global volume placement rules",
                        "description": "Application specific placement rules for the volume group",
                        "type": "array",
                        "items": {
                          "description": "Application specific parameters for the placement of volumes in the volume group",
                          "type": "object",
                          "required": [
                            "key",
                            "value"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                              "example": "key1"
                            },
                            "value": {
                              "type": "string",
                              "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                              "example": "value1"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "key"
                        ]
                      },
                      "volumesCount": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of volumes in volume group",
                        "example": 5,
                        "readOnly": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "volumeGroup": {
      "description": "Volume group resource",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "properties": {
          "description": "Volume group properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "type": "string",
              "description": "Azure lifecycle management",
              "example": "Available",
              "readOnly": true
            },
            "groupMetaData": {
              "title": "groupMetaData",
              "description": "Volume group details",
              "type": "object",
              "properties": {
                "groupDescription": {
                  "type": "string",
                  "description": "Group Description",
                  "example": "group description"
                },
                "applicationType": {
                  "type": "string",
                  "description": "Application Type",
                  "enum": [
                    "SAP-HANA",
                    "ORACLE"
                  ],
                  "x-ms-enum": {
                    "name": "ApplicationType",
                    "modelAsString": true
                  },
                  "example": "SAP-HANA"
                },
                "applicationIdentifier": {
                  "type": "string",
                  "description": "Application specific identifier",
                  "example": "SH1"
                },
                "globalPlacementRules": {
                  "title": "Global volume placement rules",
                  "description": "Application specific placement rules for the volume group",
                  "type": "array",
                  "items": {
                    "description": "Application specific parameters for the placement of volumes in the volume group",
                    "type": "object",
                    "required": [
                      "key",
                      "value"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                        "example": "key1"
                      },
                      "value": {
                        "type": "string",
                        "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                        "example": "value1"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "key"
                  ]
                },
                "volumesCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Number of volumes in volume group",
                  "example": 5,
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "volumeGroupDetails": {
      "description": "Volume group resource for create",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "properties": {
          "description": "Volume group properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "type": "string",
              "description": "Azure lifecycle management",
              "example": "Available",
              "readOnly": true
            },
            "groupMetaData": {
              "title": "groupMetaData",
              "description": "Volume group details",
              "type": "object",
              "properties": {
                "groupDescription": {
                  "type": "string",
                  "description": "Group Description",
                  "example": "group description"
                },
                "applicationType": {
                  "type": "string",
                  "description": "Application Type",
                  "enum": [
                    "SAP-HANA",
                    "ORACLE"
                  ],
                  "x-ms-enum": {
                    "name": "ApplicationType",
                    "modelAsString": true
                  },
                  "example": "SAP-HANA"
                },
                "applicationIdentifier": {
                  "type": "string",
                  "description": "Application specific identifier",
                  "example": "SH1"
                },
                "globalPlacementRules": {
                  "title": "Global volume placement rules",
                  "description": "Application specific placement rules for the volume group",
                  "type": "array",
                  "items": {
                    "description": "Application specific parameters for the placement of volumes in the volume group",
                    "type": "object",
                    "required": [
                      "key",
                      "value"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                        "example": "key1"
                      },
                      "value": {
                        "type": "string",
                        "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                        "example": "value1"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "key"
                  ]
                },
                "volumesCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Number of volumes in volume group",
                  "example": 5,
                  "readOnly": true
                }
              }
            },
            "volumes": {
              "description": "List of volumes from group",
              "type": "array",
              "items": {
                "description": "Volume resource",
                "type": "object",
                "x-ms-azure-resource": true,
                "required": [
                  "properties"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Resource Id"
                  },
                  "name": {
                    "type": "string",
                    "description": "Resource name"
                  },
                  "type": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Resource type"
                  },
                  "tags": {
                    "description": "Resource tags",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "zones": {
                    "type": "array",
                    "description": "Availability Zone",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "items": {
                      "type": "string",
                      "maxLength": 255,
                      "minLength": 1,
                      "example": "1"
                    }
                  },
                  "properties": {
                    "description": "Volume properties",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "required": [
                      "creationToken",
                      "usageThreshold",
                      "subnetId"
                    ],
                    "properties": {
                      "fileSystemId": {
                        "title": "FileSystem ID",
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique FileSystem Identifier.",
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                      },
                      "creationToken": {
                        "title": "Creation Token or File Path",
                        "type": "string",
                        "description": "A unique file path for the volume. Used when creating mount targets",
                        "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                        "minLength": 1,
                        "maxLength": 80,
                        "example": "some-amazing-filepath",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "serviceLevel": {
                        "title": "serviceLevel",
                        "type": "string",
                        "description": "The service level of the file system",
                        "enum": [
                          "Standard",
                          "Premium",
                          "Ultra",
                          "StandardZRS",
                          "Flexible"
                        ],
                        "default": "Premium",
                        "x-ms-enum": {
                          "name": "ServiceLevel",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Standard",
                              "description": "Standard service level"
                            },
                            {
                              "value": "Premium",
                              "description": "Premium service level"
                            },
                            {
                              "value": "Ultra",
                              "description": "Ultra service level"
                            },
                            {
                              "value": "StandardZRS",
                              "description": "Zone redundant storage service level. This will be deprecated soon."
                            },
                            {
                              "value": "Flexible",
                              "description": "Flexible service level"
                            }
                          ]
                        }
                      },
                      "usageThreshold": {
                        "title": "usageThreshold",
                        "type": "integer",
                        "format": "int64",
                        "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                        "minimum": 53687091200,
                        "maximum": 2638827906662400,
                        "default": 107374182400,
                        "example": 107374182400
                      },
                      "exportPolicy": {
                        "title": "exportPolicy",
                        "description": "Set of export policy rules",
                        "properties": {
                          "rules": {
                            "title": "Export policy rule",
                            "description": "Export policy rule",
                            "type": "array",
                            "items": {
                              "description": "Volume Export Policy Rule",
                              "type": "object",
                              "properties": {
                                "ruleIndex": {
                                  "type": "integer",
                                  "description": "Order index",
                                  "format": "int32"
                                },
                                "unixReadOnly": {
                                  "type": "boolean",
                                  "description": "Read only access"
                                },
                                "unixReadWrite": {
                                  "type": "boolean",
                                  "description": "Read and write access"
                                },
                                "kerberos5ReadOnly": {
                                  "type": "boolean",
                                  "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                                  "example": false,
                                  "default": false
                                },
                                "kerberos5ReadWrite": {
                                  "type": "boolean",
                                  "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                                  "example": false,
                                  "default": false
                                },
                                "kerberos5iReadOnly": {
                                  "type": "boolean",
                                  "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                                  "example": false,
                                  "default": false
                                },
                                "kerberos5iReadWrite": {
                                  "type": "boolean",
                                  "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                                  "example": false,
                                  "default": false
                                },
                                "kerberos5pReadOnly": {
                                  "type": "boolean",
                                  "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                                  "example": false,
                                  "default": false
                                },
                                "kerberos5pReadWrite": {
                                  "type": "boolean",
                                  "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                                  "example": false,
                                  "default": false
                                },
                                "cifs": {
                                  "type": "boolean",
                                  "description": "Allows CIFS protocol"
                                },
                                "nfsv3": {
                                  "type": "boolean",
                                  "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                                },
                                "nfsv41": {
                                  "type": "boolean",
                                  "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                                },
                                "allowedClients": {
                                  "type": "string",
                                  "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                                },
                                "hasRootAccess": {
                                  "type": "boolean",
                                  "description": "Has root access to volume",
                                  "example": true,
                                  "default": true
                                },
                                "chownMode": {
                                  "type": "string",
                                  "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                                  "default": "Restricted",
                                  "enum": [
                                    "Restricted",
                                    "Unrestricted"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ChownMode",
                                    "modelAsString": true
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "ruleIndex"
                            ]
                          }
                        }
                      },
                      "protocolTypes": {
                        "title": "protocolTypes",
                        "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "NFSv4.1"
                        ]
                      },
                      "provisioningState": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Azure lifecycle management"
                      },
                      "snapshotId": {
                        "title": "Snapshot ID",
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                            }
                          ]
                        },
                        "x-nullable": true,
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "Resource identifier used to identify the Snapshot.",
                        "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                      },
                      "deleteBaseSnapshot": {
                        "type": "boolean",
                        "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                      },
                      "backupId": {
                        "title": "Backup ID",
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                            }
                          ]
                        },
                        "x-nullable": true,
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "Resource identifier used to identify the Backup.",
                        "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                      },
                      "baremetalTenantId": {
                        "title": "Baremetal Tenant ID",
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique Baremetal Tenant Identifier.",
                        "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                      },
                      "subnetId": {
                        "type": "string",
                        "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                      },
                      "networkFeatures": {
                        "title": "Network features",
                        "description": "Network features available to the volume, or current state of update.",
                        "type": "string",
                        "enum": [
                          "Basic",
                          "Standard",
                          "Basic_Standard",
                          "Standard_Basic"
                        ],
                        "x-ms-enum": {
                          "name": "NetworkFeatures",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Basic",
                              "description": "Basic network features."
                            },
                            {
                              "value": "Standard",
                              "description": "Standard network features."
                            },
                            {
                              "value": "Basic_Standard",
                              "description": "Updating from Basic to Standard network features."
                            },
                            {
                              "value": "Standard_Basic",
                              "description": "Updating from Standard to Basic network features."
                            }
                          ]
                        },
                        "example": "Standard",
                        "default": "Basic",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "effectiveNetworkFeatures": {
                        "title": "Network features",
                        "description": "Network features available to the volume, or current state of update.",
                        "type": "string",
                        "enum": [
                          "Basic",
                          "Standard",
                          "Basic_Standard",
                          "Standard_Basic"
                        ],
                        "x-ms-enum": {
                          "name": "NetworkFeatures",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Basic",
                              "description": "Basic network features."
                            },
                            {
                              "value": "Standard",
                              "description": "Standard network features."
                            },
                            {
                              "value": "Basic_Standard",
                              "description": "Updating from Basic to Standard network features."
                            },
                            {
                              "value": "Standard_Basic",
                              "description": "Updating from Standard to Basic network features."
                            }
                          ]
                        },
                        "example": "Standard",
                        "default": "Basic",
                        "readOnly": true
                      },
                      "networkSiblingSetId": {
                        "title": "Network Sibling Set ID",
                        "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                        "type": "string",
                        "readOnly": true,
                        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                      },
                      "storageToNetworkProximity": {
                        "title": "Storage to Network Proximity",
                        "description": "Provides storage to network proximity information for the volume.",
                        "type": "string",
                        "enum": [
                          "Default",
                          "T1",
                          "T2",
                          "AcrossT2"
                        ],
                        "readOnly": true,
                        "x-ms-enum": {
                          "name": "VolumeStorageToNetworkProximity",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Default",
                              "description": "Basic storage to network connectivity."
                            },
                            {
                              "value": "T1",
                              "description": "Standard T1 storage to network connectivity."
                            },
                            {
                              "value": "T2",
                              "description": "Standard T2 storage to network connectivity."
                            },
                            {
                              "value": "AcrossT2",
                              "description": "Standard AcrossT2 storage to network connectivity."
                            }
                          ]
                        },
                        "example": "T1"
                      },
                      "mountTargets": {
                        "title": "mountTargets",
                        "type": "array",
                        "readOnly": true,
                        "description": "List of mount targets",
                        "items": {
                          "description": "Mount target properties",
                          "type": "object",
                          "required": [
                            "fileSystemId"
                          ],
                          "properties": {
                            "mountTargetId": {
                              "title": "mountTargetId",
                              "type": "string",
                              "readOnly": true,
                              "description": "UUID v4 used to identify the MountTarget",
                              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                            },
                            "fileSystemId": {
                              "title": "fileSystemId",
                              "type": "string",
                              "description": "UUID v4 used to identify the MountTarget",
                              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                            },
                            "ipAddress": {
                              "title": "ipAddress",
                              "description": "The mount target's IPv4 address",
                              "type": "string",
                              "readOnly": true,
                              "example": "1.2.3.4"
                            },
                            "smbServerFqdn": {
                              "title": "smbServerFQDN",
                              "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                              "type": "string",
                              "example": "fullyqualified.domainname.com"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "fileSystemId"
                        ]
                      },
                      "volumeType": {
                        "type": "string",
                        "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                        "example": "DataProtection",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "dataProtection": {
                        "title": "DataProtection",
                        "description": "DataProtection type volumes include an object containing details of the replication",
                        "properties": {
                          "backup": {
                            "title": "Backup",
                            "description": "Backup Properties",
                            "type": "object",
                            "properties": {
                              "backupPolicyId": {
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                    }
                                  ]
                                },
                                "description": "Backup Policy Resource ID"
                              },
                              "policyEnforced": {
                                "type": "boolean",
                                "description": "Policy Enforced"
                              },
                              "backupVaultId": {
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                    }
                                  ]
                                },
                                "description": "Backup Vault Resource ID"
                              }
                            }
                          },
                          "replication": {
                            "title": "Replication",
                            "description": "Replication properties",
                            "type": "object",
                            "properties": {
                              "replicationId": {
                                "type": "string",
                                "description": "Id",
                                "readOnly": true
                              },
                              "endpointType": {
                                "type": "string",
                                "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                                "enum": [
                                  "src",
                                  "dst"
                                ],
                                "x-ms-enum": {
                                  "name": "EndpointType",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              },
                              "replicationSchedule": {
                                "type": "string",
                                "description": "Schedule",
                                "enum": [
                                  "_10minutely",
                                  "hourly",
                                  "daily"
                                ],
                                "x-ms-enum": {
                                  "name": "ReplicationSchedule",
                                  "modelAsString": true
                                }
                              },
                              "remoteVolumeResourceId": {
                                "type": "string",
                                "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                              },
                              "remotePath": {
                                "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                                "type": "object",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "required": [
                                  "externalHostName",
                                  "serverName",
                                  "volumeName"
                                ],
                                "properties": {
                                  "externalHostName": {
                                    "type": "string",
                                    "description": "The Path to a ONTAP Host"
                                  },
                                  "serverName": {
                                    "type": "string",
                                    "description": "The name of a server on the ONTAP Host"
                                  },
                                  "volumeName": {
                                    "type": "string",
                                    "description": "The name of a volume on the server"
                                  }
                                }
                              },
                              "remoteVolumeRegion": {
                                "type": "string",
                                "description": "The remote region for the other end of the Volume Replication."
                              },
                              "destinationReplications": {
                                "description": "A list of destination replications",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "description": "Destination replication properties",
                                  "type": "object",
                                  "properties": {
                                    "resourceId": {
                                      "type": "string",
                                      "format": "arm-id",
                                      "x-ms-arm-id-details": {
                                        "allowedResources": [
                                          {
                                            "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                          }
                                        ]
                                      },
                                      "description": "The resource ID of the remote volume"
                                    },
                                    "replicationType": {
                                      "type": "string",
                                      "description": "Indicates whether the replication is cross zone or cross region.",
                                      "enum": [
                                        "CrossRegionReplication",
                                        "CrossZoneReplication"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ReplicationType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "CrossRegionReplication",
                                            "description": "Cross region replication"
                                          },
                                          {
                                            "value": "CrossZoneReplication",
                                            "description": "Cross zone replication"
                                          }
                                        ]
                                      }
                                    },
                                    "region": {
                                      "type": "string",
                                      "description": "The remote region for the destination volume."
                                    },
                                    "zone": {
                                      "type": "string",
                                      "description": "The remote zone for the destination volume."
                                    }
                                  }
                                },
                                "x-ms-identifiers": [
                                  "resourceId"
                                ]
                              }
                            }
                          },
                          "snapshot": {
                            "title": "Snapshot",
                            "description": "Snapshot properties.",
                            "type": "object",
                            "properties": {
                              "snapshotPolicyId": {
                                "type": "string",
                                "description": "Snapshot Policy ResourceId"
                              }
                            }
                          },
                          "volumeRelocation": {
                            "title": "VolumeRelocation",
                            "description": "VolumeRelocation properties",
                            "type": "object",
                            "properties": {
                              "relocationRequested": {
                                "type": "boolean",
                                "description": "Has relocation been requested for this volume"
                              },
                              "readyToBeFinalized": {
                                "type": "boolean",
                                "readOnly": true,
                                "description": "Has relocation finished and is ready to be cleaned up"
                              }
                            }
                          }
                        }
                      },
                      "acceptGrowCapacityPoolForShortTermCloneSplit": {
                        "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                        "type": "string",
                        "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "enum": [
                          "Accepted",
                          "Declined"
                        ],
                        "x-ms-enum": {
                          "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Accepted",
                              "description": "Auto grow capacity pool for short term clone split is accepted."
                            },
                            {
                              "value": "Declined",
                              "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                            }
                          ]
                        },
                        "example": "Accepted"
                      },
                      "isRestoring": {
                        "type": "boolean",
                        "description": "Restoring",
                        "readOnly": true
                      },
                      "snapshotDirectoryVisible": {
                        "type": "boolean",
                        "default": true,
                        "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                      },
                      "kerberosEnabled": {
                        "type": "boolean",
                        "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "example": false,
                        "default": false
                      },
                      "securityStyle": {
                        "type": "string",
                        "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                        "default": "unix",
                        "enum": [
                          "ntfs",
                          "unix"
                        ],
                        "x-ms-enum": {
                          "name": "SecurityStyle",
                          "modelAsString": true
                        },
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "smbEncryption": {
                        "type": "boolean",
                        "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                        "example": false,
                        "default": false
                      },
                      "smbAccessBasedEnumeration": {
                        "title": "smbAccessBasedEnumeration",
                        "type": "string",
                        "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                        "enum": [
                          "Disabled",
                          "Enabled"
                        ],
                        "x-ms-enum": {
                          "name": "smbAccessBasedEnumeration",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Disabled",
                              "description": "smbAccessBasedEnumeration share setting is disabled"
                            },
                            {
                              "value": "Enabled",
                              "description": "smbAccessBasedEnumeration share setting is enabled"
                            }
                          ]
                        },
                        "x-nullable": true,
                        "example": "Enabled"
                      },
                      "smbNonBrowsable": {
                        "title": "smbNonBrowsable",
                        "type": "string",
                        "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                        "enum": [
                          "Disabled",
                          "Enabled"
                        ],
                        "x-ms-enum": {
                          "name": "smbNonBrowsable",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Disabled",
                              "description": "smbNonBrowsable share setting is disabled"
                            },
                            {
                              "value": "Enabled",
                              "description": "smbNonBrowsable share setting is enabled"
                            }
                          ]
                        },
                        "example": "Enabled"
                      },
                      "smbContinuouslyAvailable": {
                        "type": "boolean",
                        "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                        "example": false,
                        "default": false
                      },
                      "throughputMibps": {
                        "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                        "type": "number",
                        "x-nullable": true,
                        "example": 128.223
                      },
                      "actualThroughputMibps": {
                        "type": "number",
                        "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                        "example": 164.221,
                        "readOnly": true
                      },
                      "encryptionKeySource": {
                        "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                        "type": "string",
                        "enum": [
                          "Microsoft.NetApp",
                          "Microsoft.KeyVault"
                        ],
                        "x-ms-enum": {
                          "name": "EncryptionKeySource",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Microsoft.NetApp",
                              "description": "Microsoft-managed key encryption"
                            },
                            {
                              "value": "Microsoft.KeyVault",
                              "description": "Customer-managed key encryption"
                            }
                          ]
                        },
                        "default": "Microsoft.NetApp"
                      },
                      "keyVaultPrivateEndpointResourceId": {
                        "type": "string",
                        "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                      },
                      "ldapEnabled": {
                        "type": "boolean",
                        "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                        "example": false,
                        "default": false,
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "coolAccess": {
                        "type": "boolean",
                        "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                        "example": false,
                        "default": false
                      },
                      "coolnessPeriod": {
                        "type": "integer",
                        "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                        "example": 7,
                        "minimum": 2,
                        "maximum": 183,
                        "format": "int32"
                      },
                      "coolAccessRetrievalPolicy": {
                        "type": "string",
                        "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                        "enum": [
                          "Default",
                          "OnRead",
                          "Never"
                        ],
                        "x-ms-enum": {
                          "name": "coolAccessRetrievalPolicy",
                          "modelAsString": true
                        }
                      },
                      "coolAccessTieringPolicy": {
                        "type": "string",
                        "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                        "enum": [
                          "Auto",
                          "SnapshotOnly"
                        ],
                        "x-ms-enum": {
                          "name": "coolAccessTieringPolicy",
                          "modelAsString": true
                        }
                      },
                      "unixPermissions": {
                        "type": "string",
                        "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                        "minLength": 4,
                        "maxLength": 4,
                        "x-nullable": true,
                        "example": "0770"
                      },
                      "cloneProgress": {
                        "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                        "type": "integer",
                        "format": "int32",
                        "example": 10,
                        "x-nullable": true,
                        "readOnly": true
                      },
                      "fileAccessLogs": {
                        "type": "string",
                        "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                        "readOnly": true,
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "fileAccessLogs",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "fileAccessLogs are enabled"
                            },
                            {
                              "value": "Disabled",
                              "description": "fileAccessLogs are not enabled"
                            }
                          ]
                        },
                        "example": "Disabled",
                        "default": "Disabled"
                      },
                      "avsDataStore": {
                        "title": "avsDataStore",
                        "type": "string",
                        "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "avsDataStore",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "avsDataStore is enabled"
                            },
                            {
                              "value": "Disabled",
                              "description": "avsDataStore is disabled"
                            }
                          ]
                        },
                        "example": "Enabled",
                        "default": "Disabled",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "dataStoreResourceId": {
                        "title": "dataStoreResourceId",
                        "description": "Data store resource unique identifier",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "isDefaultQuotaEnabled": {
                        "type": "boolean",
                        "description": "Specifies if default quota is enabled for the volume.",
                        "example": false,
                        "default": false
                      },
                      "defaultUserQuotaInKiBs": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                        "example": 4,
                        "default": 0
                      },
                      "defaultGroupQuotaInKiBs": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                        "example": 4,
                        "default": 0
                      },
                      "maximumNumberOfFiles": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                        "example": 100000000
                      },
                      "volumeGroupName": {
                        "type": "string",
                        "description": "Volume Group Name",
                        "readOnly": true
                      },
                      "capacityPoolResourceId": {
                        "type": "string",
                        "description": "Pool Resource Id used in case of creating a volume through volume group"
                      },
                      "proximityPlacementGroup": {
                        "type": "string",
                        "description": "Proximity placement group associated with the volume",
                        "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                      },
                      "t2Network": {
                        "type": "string",
                        "description": "T2 network information",
                        "example": "Test-T2-Alias",
                        "readOnly": true
                      },
                      "volumeSpecName": {
                        "type": "string",
                        "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                        "example": "Data"
                      },
                      "encrypted": {
                        "type": "boolean",
                        "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                        "readOnly": true
                      },
                      "placementRules": {
                        "title": "Volume placement rules",
                        "description": "Application specific placement rules for the particular volume",
                        "type": "array",
                        "items": {
                          "description": "Application specific parameters for the placement of volumes in the volume group",
                          "type": "object",
                          "required": [
                            "key",
                            "value"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                              "example": "key1"
                            },
                            "value": {
                              "type": "string",
                              "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                              "example": "value1"
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "key"
                        ]
                      },
                      "enableSubvolumes": {
                        "type": "string",
                        "description": "Flag indicating whether subvolume operations are enabled on the volume",
                        "example": "Enabled",
                        "default": "Disabled",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "enableSubvolumes",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "subvolumes are enabled"
                            },
                            {
                              "value": "Disabled",
                              "description": "subvolumes are not enabled"
                            }
                          ]
                        }
                      },
                      "provisionedAvailabilityZone": {
                        "title": "Provisioned Availability Zone",
                        "type": "string",
                        "readOnly": true,
                        "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                        "example": "2",
                        "x-nullable": true
                      },
                      "isLargeVolume": {
                        "title": "Is Large Volume",
                        "type": "boolean",
                        "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                        "example": false,
                        "default": false,
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "originatingResourceId": {
                        "title": "Originating Resource Id",
                        "type": "string",
                        "description": "Id of the snapshot or backup that the volume is restored from.",
                        "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                        "readOnly": true,
                        "x-nullable": true
                      },
                      "inheritedSizeInBytes": {
                        "title": "inheritedSizeInBytes",
                        "type": "integer",
                        "format": "int64",
                        "description": "Space shared by short term clone volume with parent volume in bytes.",
                        "readOnly": true,
                        "x-nullable": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "volumeGroupMetaData": {
      "description": "Volume group properties",
      "type": "object",
      "properties": {
        "groupDescription": {
          "type": "string",
          "description": "Group Description",
          "example": "group description"
        },
        "applicationType": {
          "type": "string",
          "description": "Application Type",
          "enum": [
            "SAP-HANA",
            "ORACLE"
          ],
          "x-ms-enum": {
            "name": "ApplicationType",
            "modelAsString": true
          },
          "example": "SAP-HANA"
        },
        "applicationIdentifier": {
          "type": "string",
          "description": "Application specific identifier",
          "example": "SH1"
        },
        "globalPlacementRules": {
          "title": "Global volume placement rules",
          "description": "Application specific placement rules for the volume group",
          "type": "array",
          "items": {
            "description": "Application specific parameters for the placement of volumes in the volume group",
            "type": "object",
            "required": [
              "key",
              "value"
            ],
            "properties": {
              "key": {
                "type": "string",
                "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                "example": "key1"
              },
              "value": {
                "type": "string",
                "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                "example": "value1"
              }
            }
          },
          "x-ms-identifiers": [
            "key"
          ]
        },
        "volumesCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of volumes in volume group",
          "example": 5,
          "readOnly": true
        }
      }
    },
    "volumeGroupProperties": {
      "description": "Volume group properties",
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management",
          "example": "Available",
          "readOnly": true
        },
        "groupMetaData": {
          "title": "groupMetaData",
          "description": "Volume group details",
          "type": "object",
          "properties": {
            "groupDescription": {
              "type": "string",
              "description": "Group Description",
              "example": "group description"
            },
            "applicationType": {
              "type": "string",
              "description": "Application Type",
              "enum": [
                "SAP-HANA",
                "ORACLE"
              ],
              "x-ms-enum": {
                "name": "ApplicationType",
                "modelAsString": true
              },
              "example": "SAP-HANA"
            },
            "applicationIdentifier": {
              "type": "string",
              "description": "Application specific identifier",
              "example": "SH1"
            },
            "globalPlacementRules": {
              "title": "Global volume placement rules",
              "description": "Application specific placement rules for the volume group",
              "type": "array",
              "items": {
                "description": "Application specific parameters for the placement of volumes in the volume group",
                "type": "object",
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                    "example": "key1"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                    "example": "value1"
                  }
                }
              },
              "x-ms-identifiers": [
                "key"
              ]
            },
            "volumesCount": {
              "type": "integer",
              "format": "int64",
              "description": "Number of volumes in volume group",
              "example": 5,
              "readOnly": true
            }
          }
        },
        "volumes": {
          "description": "List of volumes from group",
          "type": "array",
          "items": {
            "description": "Volume resource",
            "type": "object",
            "x-ms-azure-resource": true,
            "required": [
              "properties"
            ],
            "properties": {
              "id": {
                "type": "string",
                "readOnly": true,
                "description": "Resource Id"
              },
              "name": {
                "type": "string",
                "description": "Resource name"
              },
              "type": {
                "type": "string",
                "readOnly": true,
                "description": "Resource type"
              },
              "tags": {
                "description": "Resource tags",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "zones": {
                "type": "array",
                "description": "Availability Zone",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "items": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "example": "1"
                }
              },
              "properties": {
                "description": "Volume properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "required": [
                  "creationToken",
                  "usageThreshold",
                  "subnetId"
                ],
                "properties": {
                  "fileSystemId": {
                    "title": "FileSystem ID",
                    "type": "string",
                    "readOnly": true,
                    "description": "Unique FileSystem Identifier.",
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
                  },
                  "creationToken": {
                    "title": "Creation Token or File Path",
                    "type": "string",
                    "description": "A unique file path for the volume. Used when creating mount targets",
                    "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
                    "minLength": 1,
                    "maxLength": 80,
                    "example": "some-amazing-filepath",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "serviceLevel": {
                    "title": "serviceLevel",
                    "type": "string",
                    "description": "The service level of the file system",
                    "enum": [
                      "Standard",
                      "Premium",
                      "Ultra",
                      "StandardZRS",
                      "Flexible"
                    ],
                    "default": "Premium",
                    "x-ms-enum": {
                      "name": "ServiceLevel",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Standard",
                          "description": "Standard service level"
                        },
                        {
                          "value": "Premium",
                          "description": "Premium service level"
                        },
                        {
                          "value": "Ultra",
                          "description": "Ultra service level"
                        },
                        {
                          "value": "StandardZRS",
                          "description": "Zone redundant storage service level. This will be deprecated soon."
                        },
                        {
                          "value": "Flexible",
                          "description": "Flexible service level"
                        }
                      ]
                    }
                  },
                  "usageThreshold": {
                    "title": "usageThreshold",
                    "type": "integer",
                    "format": "int64",
                    "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
                    "minimum": 53687091200,
                    "maximum": 2638827906662400,
                    "default": 107374182400,
                    "example": 107374182400
                  },
                  "exportPolicy": {
                    "title": "exportPolicy",
                    "description": "Set of export policy rules",
                    "properties": {
                      "rules": {
                        "title": "Export policy rule",
                        "description": "Export policy rule",
                        "type": "array",
                        "items": {
                          "description": "Volume Export Policy Rule",
                          "type": "object",
                          "properties": {
                            "ruleIndex": {
                              "type": "integer",
                              "description": "Order index",
                              "format": "int32"
                            },
                            "unixReadOnly": {
                              "type": "boolean",
                              "description": "Read only access"
                            },
                            "unixReadWrite": {
                              "type": "boolean",
                              "description": "Read and write access"
                            },
                            "kerberos5ReadOnly": {
                              "type": "boolean",
                              "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "kerberos5ReadWrite": {
                              "type": "boolean",
                              "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "kerberos5iReadOnly": {
                              "type": "boolean",
                              "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "kerberos5iReadWrite": {
                              "type": "boolean",
                              "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "kerberos5pReadOnly": {
                              "type": "boolean",
                              "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "kerberos5pReadWrite": {
                              "type": "boolean",
                              "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                              "example": false,
                              "default": false
                            },
                            "cifs": {
                              "type": "boolean",
                              "description": "Allows CIFS protocol"
                            },
                            "nfsv3": {
                              "type": "boolean",
                              "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                            },
                            "nfsv41": {
                              "type": "boolean",
                              "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                            },
                            "allowedClients": {
                              "type": "string",
                              "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                            },
                            "hasRootAccess": {
                              "type": "boolean",
                              "description": "Has root access to volume",
                              "example": true,
                              "default": true
                            },
                            "chownMode": {
                              "type": "string",
                              "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                              "default": "Restricted",
                              "enum": [
                                "Restricted",
                                "Unrestricted"
                              ],
                              "x-ms-enum": {
                                "name": "ChownMode",
                                "modelAsString": true
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "ruleIndex"
                        ]
                      }
                    }
                  },
                  "protocolTypes": {
                    "title": "protocolTypes",
                    "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "NFSv4.1"
                    ]
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Azure lifecycle management"
                  },
                  "snapshotId": {
                    "title": "Snapshot ID",
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                        }
                      ]
                    },
                    "x-nullable": true,
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "Resource identifier used to identify the Snapshot.",
                    "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
                  },
                  "deleteBaseSnapshot": {
                    "type": "boolean",
                    "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
                  },
                  "backupId": {
                    "title": "Backup ID",
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                        }
                      ]
                    },
                    "x-nullable": true,
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "description": "Resource identifier used to identify the Backup.",
                    "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
                  },
                  "baremetalTenantId": {
                    "title": "Baremetal Tenant ID",
                    "type": "string",
                    "readOnly": true,
                    "description": "Unique Baremetal Tenant Identifier.",
                    "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
                  },
                  "subnetId": {
                    "type": "string",
                    "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
                  },
                  "networkFeatures": {
                    "title": "Network features",
                    "description": "Network features available to the volume, or current state of update.",
                    "type": "string",
                    "enum": [
                      "Basic",
                      "Standard",
                      "Basic_Standard",
                      "Standard_Basic"
                    ],
                    "x-ms-enum": {
                      "name": "NetworkFeatures",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Basic",
                          "description": "Basic network features."
                        },
                        {
                          "value": "Standard",
                          "description": "Standard network features."
                        },
                        {
                          "value": "Basic_Standard",
                          "description": "Updating from Basic to Standard network features."
                        },
                        {
                          "value": "Standard_Basic",
                          "description": "Updating from Standard to Basic network features."
                        }
                      ]
                    },
                    "example": "Standard",
                    "default": "Basic",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "effectiveNetworkFeatures": {
                    "title": "Network features",
                    "description": "Network features available to the volume, or current state of update.",
                    "type": "string",
                    "enum": [
                      "Basic",
                      "Standard",
                      "Basic_Standard",
                      "Standard_Basic"
                    ],
                    "x-ms-enum": {
                      "name": "NetworkFeatures",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Basic",
                          "description": "Basic network features."
                        },
                        {
                          "value": "Standard",
                          "description": "Standard network features."
                        },
                        {
                          "value": "Basic_Standard",
                          "description": "Updating from Basic to Standard network features."
                        },
                        {
                          "value": "Standard_Basic",
                          "description": "Updating from Standard to Basic network features."
                        }
                      ]
                    },
                    "example": "Standard",
                    "default": "Basic",
                    "readOnly": true
                  },
                  "networkSiblingSetId": {
                    "title": "Network Sibling Set ID",
                    "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
                    "type": "string",
                    "readOnly": true,
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                  },
                  "storageToNetworkProximity": {
                    "title": "Storage to Network Proximity",
                    "description": "Provides storage to network proximity information for the volume.",
                    "type": "string",
                    "enum": [
                      "Default",
                      "T1",
                      "T2",
                      "AcrossT2"
                    ],
                    "readOnly": true,
                    "x-ms-enum": {
                      "name": "VolumeStorageToNetworkProximity",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Default",
                          "description": "Basic storage to network connectivity."
                        },
                        {
                          "value": "T1",
                          "description": "Standard T1 storage to network connectivity."
                        },
                        {
                          "value": "T2",
                          "description": "Standard T2 storage to network connectivity."
                        },
                        {
                          "value": "AcrossT2",
                          "description": "Standard AcrossT2 storage to network connectivity."
                        }
                      ]
                    },
                    "example": "T1"
                  },
                  "mountTargets": {
                    "title": "mountTargets",
                    "type": "array",
                    "readOnly": true,
                    "description": "List of mount targets",
                    "items": {
                      "description": "Mount target properties",
                      "type": "object",
                      "required": [
                        "fileSystemId"
                      ],
                      "properties": {
                        "mountTargetId": {
                          "title": "mountTargetId",
                          "type": "string",
                          "readOnly": true,
                          "description": "UUID v4 used to identify the MountTarget",
                          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                        },
                        "fileSystemId": {
                          "title": "fileSystemId",
                          "type": "string",
                          "description": "UUID v4 used to identify the MountTarget",
                          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                        },
                        "ipAddress": {
                          "title": "ipAddress",
                          "description": "The mount target's IPv4 address",
                          "type": "string",
                          "readOnly": true,
                          "example": "1.2.3.4"
                        },
                        "smbServerFqdn": {
                          "title": "smbServerFQDN",
                          "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                          "type": "string",
                          "example": "fullyqualified.domainname.com"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "fileSystemId"
                    ]
                  },
                  "volumeType": {
                    "type": "string",
                    "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
                    "example": "DataProtection",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "dataProtection": {
                    "title": "DataProtection",
                    "description": "DataProtection type volumes include an object containing details of the replication",
                    "properties": {
                      "backup": {
                        "title": "Backup",
                        "description": "Backup Properties",
                        "type": "object",
                        "properties": {
                          "backupPolicyId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                                }
                              ]
                            },
                            "description": "Backup Policy Resource ID"
                          },
                          "policyEnforced": {
                            "type": "boolean",
                            "description": "Policy Enforced"
                          },
                          "backupVaultId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                                }
                              ]
                            },
                            "description": "Backup Vault Resource ID"
                          }
                        }
                      },
                      "replication": {
                        "title": "Replication",
                        "description": "Replication properties",
                        "type": "object",
                        "properties": {
                          "replicationId": {
                            "type": "string",
                            "description": "Id",
                            "readOnly": true
                          },
                          "endpointType": {
                            "type": "string",
                            "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                            "enum": [
                              "src",
                              "dst"
                            ],
                            "x-ms-enum": {
                              "name": "EndpointType",
                              "modelAsString": true
                            },
                            "readOnly": true
                          },
                          "replicationSchedule": {
                            "type": "string",
                            "description": "Schedule",
                            "enum": [
                              "_10minutely",
                              "hourly",
                              "daily"
                            ],
                            "x-ms-enum": {
                              "name": "ReplicationSchedule",
                              "modelAsString": true
                            }
                          },
                          "remoteVolumeResourceId": {
                            "type": "string",
                            "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                          },
                          "remotePath": {
                            "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                            "type": "object",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "required": [
                              "externalHostName",
                              "serverName",
                              "volumeName"
                            ],
                            "properties": {
                              "externalHostName": {
                                "type": "string",
                                "description": "The Path to a ONTAP Host"
                              },
                              "serverName": {
                                "type": "string",
                                "description": "The name of a server on the ONTAP Host"
                              },
                              "volumeName": {
                                "type": "string",
                                "description": "The name of a volume on the server"
                              }
                            }
                          },
                          "remoteVolumeRegion": {
                            "type": "string",
                            "description": "The remote region for the other end of the Volume Replication."
                          },
                          "destinationReplications": {
                            "description": "A list of destination replications",
                            "type": "array",
                            "readOnly": true,
                            "items": {
                              "description": "Destination replication properties",
                              "type": "object",
                              "properties": {
                                "resourceId": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                      }
                                    ]
                                  },
                                  "description": "The resource ID of the remote volume"
                                },
                                "replicationType": {
                                  "type": "string",
                                  "description": "Indicates whether the replication is cross zone or cross region.",
                                  "enum": [
                                    "CrossRegionReplication",
                                    "CrossZoneReplication"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ReplicationType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "CrossRegionReplication",
                                        "description": "Cross region replication"
                                      },
                                      {
                                        "value": "CrossZoneReplication",
                                        "description": "Cross zone replication"
                                      }
                                    ]
                                  }
                                },
                                "region": {
                                  "type": "string",
                                  "description": "The remote region for the destination volume."
                                },
                                "zone": {
                                  "type": "string",
                                  "description": "The remote zone for the destination volume."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "resourceId"
                            ]
                          }
                        }
                      },
                      "snapshot": {
                        "title": "Snapshot",
                        "description": "Snapshot properties.",
                        "type": "object",
                        "properties": {
                          "snapshotPolicyId": {
                            "type": "string",
                            "description": "Snapshot Policy ResourceId"
                          }
                        }
                      },
                      "volumeRelocation": {
                        "title": "VolumeRelocation",
                        "description": "VolumeRelocation properties",
                        "type": "object",
                        "properties": {
                          "relocationRequested": {
                            "type": "boolean",
                            "description": "Has relocation been requested for this volume"
                          },
                          "readyToBeFinalized": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Has relocation finished and is ready to be cleaned up"
                          }
                        }
                      }
                    }
                  },
                  "acceptGrowCapacityPoolForShortTermCloneSplit": {
                    "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
                    "type": "string",
                    "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "enum": [
                      "Accepted",
                      "Declined"
                    ],
                    "x-ms-enum": {
                      "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Accepted",
                          "description": "Auto grow capacity pool for short term clone split is accepted."
                        },
                        {
                          "value": "Declined",
                          "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                        }
                      ]
                    },
                    "example": "Accepted"
                  },
                  "isRestoring": {
                    "type": "boolean",
                    "description": "Restoring",
                    "readOnly": true
                  },
                  "snapshotDirectoryVisible": {
                    "type": "boolean",
                    "default": true,
                    "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
                  },
                  "kerberosEnabled": {
                    "type": "boolean",
                    "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "example": false,
                    "default": false
                  },
                  "securityStyle": {
                    "type": "string",
                    "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
                    "default": "unix",
                    "enum": [
                      "ntfs",
                      "unix"
                    ],
                    "x-ms-enum": {
                      "name": "SecurityStyle",
                      "modelAsString": true
                    },
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "smbEncryption": {
                    "type": "boolean",
                    "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
                    "example": false,
                    "default": false
                  },
                  "smbAccessBasedEnumeration": {
                    "title": "smbAccessBasedEnumeration",
                    "type": "string",
                    "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "x-ms-enum": {
                      "name": "smbAccessBasedEnumeration",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Disabled",
                          "description": "smbAccessBasedEnumeration share setting is disabled"
                        },
                        {
                          "value": "Enabled",
                          "description": "smbAccessBasedEnumeration share setting is enabled"
                        }
                      ]
                    },
                    "x-nullable": true,
                    "example": "Enabled"
                  },
                  "smbNonBrowsable": {
                    "title": "smbNonBrowsable",
                    "type": "string",
                    "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "x-ms-enum": {
                      "name": "smbNonBrowsable",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Disabled",
                          "description": "smbNonBrowsable share setting is disabled"
                        },
                        {
                          "value": "Enabled",
                          "description": "smbNonBrowsable share setting is enabled"
                        }
                      ]
                    },
                    "example": "Enabled"
                  },
                  "smbContinuouslyAvailable": {
                    "type": "boolean",
                    "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
                    "example": false,
                    "default": false
                  },
                  "throughputMibps": {
                    "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
                    "type": "number",
                    "x-nullable": true,
                    "example": 128.223
                  },
                  "actualThroughputMibps": {
                    "type": "number",
                    "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
                    "example": 164.221,
                    "readOnly": true
                  },
                  "encryptionKeySource": {
                    "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
                    "type": "string",
                    "enum": [
                      "Microsoft.NetApp",
                      "Microsoft.KeyVault"
                    ],
                    "x-ms-enum": {
                      "name": "EncryptionKeySource",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Microsoft.NetApp",
                          "description": "Microsoft-managed key encryption"
                        },
                        {
                          "value": "Microsoft.KeyVault",
                          "description": "Customer-managed key encryption"
                        }
                      ]
                    },
                    "default": "Microsoft.NetApp"
                  },
                  "keyVaultPrivateEndpointResourceId": {
                    "type": "string",
                    "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
                  },
                  "ldapEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
                    "example": false,
                    "default": false,
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "coolAccess": {
                    "type": "boolean",
                    "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
                    "example": false,
                    "default": false
                  },
                  "coolnessPeriod": {
                    "type": "integer",
                    "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
                    "example": 7,
                    "minimum": 2,
                    "maximum": 183,
                    "format": "int32"
                  },
                  "coolAccessRetrievalPolicy": {
                    "type": "string",
                    "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
                    "enum": [
                      "Default",
                      "OnRead",
                      "Never"
                    ],
                    "x-ms-enum": {
                      "name": "coolAccessRetrievalPolicy",
                      "modelAsString": true
                    }
                  },
                  "coolAccessTieringPolicy": {
                    "type": "string",
                    "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
                    "enum": [
                      "Auto",
                      "SnapshotOnly"
                    ],
                    "x-ms-enum": {
                      "name": "coolAccessTieringPolicy",
                      "modelAsString": true
                    }
                  },
                  "unixPermissions": {
                    "type": "string",
                    "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
                    "minLength": 4,
                    "maxLength": 4,
                    "x-nullable": true,
                    "example": "0770"
                  },
                  "cloneProgress": {
                    "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
                    "type": "integer",
                    "format": "int32",
                    "example": 10,
                    "x-nullable": true,
                    "readOnly": true
                  },
                  "fileAccessLogs": {
                    "type": "string",
                    "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
                    "readOnly": true,
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "fileAccessLogs",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Enabled",
                          "description": "fileAccessLogs are enabled"
                        },
                        {
                          "value": "Disabled",
                          "description": "fileAccessLogs are not enabled"
                        }
                      ]
                    },
                    "example": "Disabled",
                    "default": "Disabled"
                  },
                  "avsDataStore": {
                    "title": "avsDataStore",
                    "type": "string",
                    "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "avsDataStore",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Enabled",
                          "description": "avsDataStore is enabled"
                        },
                        {
                          "value": "Disabled",
                          "description": "avsDataStore is disabled"
                        }
                      ]
                    },
                    "example": "Enabled",
                    "default": "Disabled",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "dataStoreResourceId": {
                    "title": "dataStoreResourceId",
                    "description": "Data store resource unique identifier",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "isDefaultQuotaEnabled": {
                    "type": "boolean",
                    "description": "Specifies if default quota is enabled for the volume.",
                    "example": false,
                    "default": false
                  },
                  "defaultUserQuotaInKiBs": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
                    "example": 4,
                    "default": 0
                  },
                  "defaultGroupQuotaInKiBs": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
                    "example": 4,
                    "default": 0
                  },
                  "maximumNumberOfFiles": {
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true,
                    "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
                    "example": 100000000
                  },
                  "volumeGroupName": {
                    "type": "string",
                    "description": "Volume Group Name",
                    "readOnly": true
                  },
                  "capacityPoolResourceId": {
                    "type": "string",
                    "description": "Pool Resource Id used in case of creating a volume through volume group"
                  },
                  "proximityPlacementGroup": {
                    "type": "string",
                    "description": "Proximity placement group associated with the volume",
                    "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
                  },
                  "t2Network": {
                    "type": "string",
                    "description": "T2 network information",
                    "example": "Test-T2-Alias",
                    "readOnly": true
                  },
                  "volumeSpecName": {
                    "type": "string",
                    "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
                    "example": "Data"
                  },
                  "encrypted": {
                    "type": "boolean",
                    "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
                    "readOnly": true
                  },
                  "placementRules": {
                    "title": "Volume placement rules",
                    "description": "Application specific placement rules for the particular volume",
                    "type": "array",
                    "items": {
                      "description": "Application specific parameters for the placement of volumes in the volume group",
                      "type": "object",
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                          "example": "key1"
                        },
                        "value": {
                          "type": "string",
                          "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                          "example": "value1"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "key"
                    ]
                  },
                  "enableSubvolumes": {
                    "type": "string",
                    "description": "Flag indicating whether subvolume operations are enabled on the volume",
                    "example": "Enabled",
                    "default": "Disabled",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "x-ms-enum": {
                      "name": "enableSubvolumes",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Enabled",
                          "description": "subvolumes are enabled"
                        },
                        {
                          "value": "Disabled",
                          "description": "subvolumes are not enabled"
                        }
                      ]
                    }
                  },
                  "provisionedAvailabilityZone": {
                    "title": "Provisioned Availability Zone",
                    "type": "string",
                    "readOnly": true,
                    "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
                    "example": "2",
                    "x-nullable": true
                  },
                  "isLargeVolume": {
                    "title": "Is Large Volume",
                    "type": "boolean",
                    "description": "Specifies whether volume is a Large Volume or Regular Volume.",
                    "example": false,
                    "default": false,
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "originatingResourceId": {
                    "title": "Originating Resource Id",
                    "type": "string",
                    "description": "Id of the snapshot or backup that the volume is restored from.",
                    "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
                    "readOnly": true,
                    "x-nullable": true
                  },
                  "inheritedSizeInBytes": {
                    "title": "inheritedSizeInBytes",
                    "type": "integer",
                    "format": "int64",
                    "description": "Space shared by short term clone volume with parent volume in bytes.",
                    "readOnly": true,
                    "x-nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "volumeGroupListProperties": {
      "description": "Volume group properties",
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management",
          "example": "Available",
          "readOnly": true
        },
        "groupMetaData": {
          "title": "groupMetaData",
          "description": "Volume group details",
          "type": "object",
          "properties": {
            "groupDescription": {
              "type": "string",
              "description": "Group Description",
              "example": "group description"
            },
            "applicationType": {
              "type": "string",
              "description": "Application Type",
              "enum": [
                "SAP-HANA",
                "ORACLE"
              ],
              "x-ms-enum": {
                "name": "ApplicationType",
                "modelAsString": true
              },
              "example": "SAP-HANA"
            },
            "applicationIdentifier": {
              "type": "string",
              "description": "Application specific identifier",
              "example": "SH1"
            },
            "globalPlacementRules": {
              "title": "Global volume placement rules",
              "description": "Application specific placement rules for the volume group",
              "type": "array",
              "items": {
                "description": "Application specific parameters for the placement of volumes in the volume group",
                "type": "object",
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                    "example": "key1"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                    "example": "value1"
                  }
                }
              },
              "x-ms-identifiers": [
                "key"
              ]
            },
            "volumesCount": {
              "type": "integer",
              "format": "int64",
              "description": "Number of volumes in volume group",
              "example": 5,
              "readOnly": true
            }
          }
        }
      }
    },
    "volumeGroupVolumeProperties": {
      "description": "Volume resource",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "tags": {
          "description": "Resource tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "zones": {
          "type": "array",
          "description": "Availability Zone",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "items": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "example": "1"
          }
        },
        "properties": {
          "description": "Volume properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "required": [
            "creationToken",
            "usageThreshold",
            "subnetId"
          ],
          "properties": {
            "fileSystemId": {
              "title": "FileSystem ID",
              "type": "string",
              "readOnly": true,
              "description": "Unique FileSystem Identifier.",
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "maxLength": 36,
              "minLength": 36,
              "example": "9760acf5-4638-11e7-9bdb-020073ca7778"
            },
            "creationToken": {
              "title": "Creation Token or File Path",
              "type": "string",
              "description": "A unique file path for the volume. Used when creating mount targets",
              "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,79}$",
              "minLength": 1,
              "maxLength": 80,
              "example": "some-amazing-filepath",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "serviceLevel": {
              "title": "serviceLevel",
              "type": "string",
              "description": "The service level of the file system",
              "enum": [
                "Standard",
                "Premium",
                "Ultra",
                "StandardZRS",
                "Flexible"
              ],
              "default": "Premium",
              "x-ms-enum": {
                "name": "ServiceLevel",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Standard",
                    "description": "Standard service level"
                  },
                  {
                    "value": "Premium",
                    "description": "Premium service level"
                  },
                  {
                    "value": "Ultra",
                    "description": "Ultra service level"
                  },
                  {
                    "value": "StandardZRS",
                    "description": "Zone redundant storage service level. This will be deprecated soon."
                  },
                  {
                    "value": "Flexible",
                    "description": "Flexible service level"
                  }
                ]
              }
            },
            "usageThreshold": {
              "title": "usageThreshold",
              "type": "integer",
              "format": "int64",
              "description": "Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. For regular volumes, valid values are in the range 50GiB to 100TiB. For large volumes, valid values are in the range 100TiB to 500TiB, and on an exceptional basis, from to 2400GiB to 2400TiB. Values expressed in bytes as multiples of 1 GiB.",
              "minimum": 53687091200,
              "maximum": 2638827906662400,
              "default": 107374182400,
              "example": 107374182400
            },
            "exportPolicy": {
              "title": "exportPolicy",
              "description": "Set of export policy rules",
              "properties": {
                "rules": {
                  "title": "Export policy rule",
                  "description": "Export policy rule",
                  "type": "array",
                  "items": {
                    "description": "Volume Export Policy Rule",
                    "type": "object",
                    "properties": {
                      "ruleIndex": {
                        "type": "integer",
                        "description": "Order index",
                        "format": "int32"
                      },
                      "unixReadOnly": {
                        "type": "boolean",
                        "description": "Read only access"
                      },
                      "unixReadWrite": {
                        "type": "boolean",
                        "description": "Read and write access"
                      },
                      "kerberos5ReadOnly": {
                        "type": "boolean",
                        "description": "Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "kerberos5ReadWrite": {
                        "type": "boolean",
                        "description": "Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "kerberos5iReadOnly": {
                        "type": "boolean",
                        "description": "Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "kerberos5iReadWrite": {
                        "type": "boolean",
                        "description": "Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "kerberos5pReadOnly": {
                        "type": "boolean",
                        "description": "Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "kerberos5pReadWrite": {
                        "type": "boolean",
                        "description": "Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later",
                        "example": false,
                        "default": false
                      },
                      "cifs": {
                        "type": "boolean",
                        "description": "Allows CIFS protocol"
                      },
                      "nfsv3": {
                        "type": "boolean",
                        "description": "Allows NFSv3 protocol. Enable only for NFSv3 type volumes"
                      },
                      "nfsv41": {
                        "type": "boolean",
                        "description": "Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"
                      },
                      "allowedClients": {
                        "type": "string",
                        "description": "Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"
                      },
                      "hasRootAccess": {
                        "type": "boolean",
                        "description": "Has root access to volume",
                        "example": true,
                        "default": true
                      },
                      "chownMode": {
                        "type": "string",
                        "description": "This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own.",
                        "default": "Restricted",
                        "enum": [
                          "Restricted",
                          "Unrestricted"
                        ],
                        "x-ms-enum": {
                          "name": "ChownMode",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "ruleIndex"
                  ]
                }
              }
            },
            "protocolTypes": {
              "title": "protocolTypes",
              "description": "Set of protocol types, default NFSv3, CIFS for SMB protocol",
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "NFSv4.1"
              ]
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Azure lifecycle management"
            },
            "snapshotId": {
              "title": "Snapshot ID",
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots"
                  }
                ]
              },
              "x-nullable": true,
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "description": "Resource identifier used to identify the Snapshot.",
              "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1"
            },
            "deleteBaseSnapshot": {
              "type": "boolean",
              "description": "If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"
            },
            "backupId": {
              "title": "Backup ID",
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.NetApp/netAppAccounts/backupVaults/backups"
                  }
                ]
              },
              "x-nullable": true,
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "description": "Resource identifier used to identify the Backup.",
              "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1/backups/backup1"
            },
            "baremetalTenantId": {
              "title": "Baremetal Tenant ID",
              "type": "string",
              "readOnly": true,
              "description": "Unique Baremetal Tenant Identifier.",
              "example": "9560acf5-4e3a-12e7-9bdb-02007cca7779"
            },
            "subnetId": {
              "type": "string",
              "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"
            },
            "networkFeatures": {
              "title": "Network features",
              "description": "Network features available to the volume, or current state of update.",
              "type": "string",
              "enum": [
                "Basic",
                "Standard",
                "Basic_Standard",
                "Standard_Basic"
              ],
              "x-ms-enum": {
                "name": "NetworkFeatures",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Basic",
                    "description": "Basic network features."
                  },
                  {
                    "value": "Standard",
                    "description": "Standard network features."
                  },
                  {
                    "value": "Basic_Standard",
                    "description": "Updating from Basic to Standard network features."
                  },
                  {
                    "value": "Standard_Basic",
                    "description": "Updating from Standard to Basic network features."
                  }
                ]
              },
              "example": "Standard",
              "default": "Basic",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "effectiveNetworkFeatures": {
              "title": "Network features",
              "description": "Network features available to the volume, or current state of update.",
              "type": "string",
              "enum": [
                "Basic",
                "Standard",
                "Basic_Standard",
                "Standard_Basic"
              ],
              "x-ms-enum": {
                "name": "NetworkFeatures",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Basic",
                    "description": "Basic network features."
                  },
                  {
                    "value": "Standard",
                    "description": "Standard network features."
                  },
                  {
                    "value": "Basic_Standard",
                    "description": "Updating from Basic to Standard network features."
                  },
                  {
                    "value": "Standard_Basic",
                    "description": "Updating from Standard to Basic network features."
                  }
                ]
              },
              "example": "Standard",
              "default": "Basic",
              "readOnly": true
            },
            "networkSiblingSetId": {
              "title": "Network Sibling Set ID",
              "description": "Network Sibling Set ID for the the group of volumes sharing networking resources.",
              "type": "string",
              "readOnly": true,
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "maxLength": 36,
              "minLength": 36,
              "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
            },
            "storageToNetworkProximity": {
              "title": "Storage to Network Proximity",
              "description": "Provides storage to network proximity information for the volume.",
              "type": "string",
              "enum": [
                "Default",
                "T1",
                "T2",
                "AcrossT2"
              ],
              "readOnly": true,
              "x-ms-enum": {
                "name": "VolumeStorageToNetworkProximity",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Default",
                    "description": "Basic storage to network connectivity."
                  },
                  {
                    "value": "T1",
                    "description": "Standard T1 storage to network connectivity."
                  },
                  {
                    "value": "T2",
                    "description": "Standard T2 storage to network connectivity."
                  },
                  {
                    "value": "AcrossT2",
                    "description": "Standard AcrossT2 storage to network connectivity."
                  }
                ]
              },
              "example": "T1"
            },
            "mountTargets": {
              "title": "mountTargets",
              "type": "array",
              "readOnly": true,
              "description": "List of mount targets",
              "items": {
                "description": "Mount target properties",
                "type": "object",
                "required": [
                  "fileSystemId"
                ],
                "properties": {
                  "mountTargetId": {
                    "title": "mountTargetId",
                    "type": "string",
                    "readOnly": true,
                    "description": "UUID v4 used to identify the MountTarget",
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                  },
                  "fileSystemId": {
                    "title": "fileSystemId",
                    "type": "string",
                    "description": "UUID v4 used to identify the MountTarget",
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                  },
                  "ipAddress": {
                    "title": "ipAddress",
                    "description": "The mount target's IPv4 address",
                    "type": "string",
                    "readOnly": true,
                    "example": "1.2.3.4"
                  },
                  "smbServerFqdn": {
                    "title": "smbServerFQDN",
                    "description": "The SMB server's Fully Qualified Domain Name, FQDN",
                    "type": "string",
                    "example": "fullyqualified.domainname.com"
                  }
                }
              },
              "x-ms-identifiers": [
                "fileSystemId"
              ]
            },
            "volumeType": {
              "type": "string",
              "description": "What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection. For creating clone volume, set type to ShortTermClone",
              "example": "DataProtection",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "dataProtection": {
              "title": "DataProtection",
              "description": "DataProtection type volumes include an object containing details of the replication",
              "properties": {
                "backup": {
                  "title": "Backup",
                  "description": "Backup Properties",
                  "type": "object",
                  "properties": {
                    "backupPolicyId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                          }
                        ]
                      },
                      "description": "Backup Policy Resource ID"
                    },
                    "policyEnforced": {
                      "type": "boolean",
                      "description": "Policy Enforced"
                    },
                    "backupVaultId": {
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
                          }
                        ]
                      },
                      "description": "Backup Vault Resource ID"
                    }
                  }
                },
                "replication": {
                  "title": "Replication",
                  "description": "Replication properties",
                  "type": "object",
                  "properties": {
                    "replicationId": {
                      "type": "string",
                      "description": "Id",
                      "readOnly": true
                    },
                    "endpointType": {
                      "type": "string",
                      "description": "Indicates whether the local volume is the source or destination for the Volume Replication",
                      "enum": [
                        "src",
                        "dst"
                      ],
                      "x-ms-enum": {
                        "name": "EndpointType",
                        "modelAsString": true
                      },
                      "readOnly": true
                    },
                    "replicationSchedule": {
                      "type": "string",
                      "description": "Schedule",
                      "enum": [
                        "_10minutely",
                        "hourly",
                        "daily"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationSchedule",
                        "modelAsString": true
                      }
                    },
                    "remoteVolumeResourceId": {
                      "type": "string",
                      "description": "The resource ID of the remote volume. Required for cross region and cross zone replication"
                    },
                    "remotePath": {
                      "description": "The full path to a volume that is to be migrated into ANF. Required for Migration volumes",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "required": [
                        "externalHostName",
                        "serverName",
                        "volumeName"
                      ],
                      "properties": {
                        "externalHostName": {
                          "type": "string",
                          "description": "The Path to a ONTAP Host"
                        },
                        "serverName": {
                          "type": "string",
                          "description": "The name of a server on the ONTAP Host"
                        },
                        "volumeName": {
                          "type": "string",
                          "description": "The name of a volume on the server"
                        }
                      }
                    },
                    "remoteVolumeRegion": {
                      "type": "string",
                      "description": "The remote region for the other end of the Volume Replication."
                    },
                    "destinationReplications": {
                      "description": "A list of destination replications",
                      "type": "array",
                      "readOnly": true,
                      "items": {
                        "description": "Destination replication properties",
                        "type": "object",
                        "properties": {
                          "resourceId": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                                }
                              ]
                            },
                            "description": "The resource ID of the remote volume"
                          },
                          "replicationType": {
                            "type": "string",
                            "description": "Indicates whether the replication is cross zone or cross region.",
                            "enum": [
                              "CrossRegionReplication",
                              "CrossZoneReplication"
                            ],
                            "x-ms-enum": {
                              "name": "ReplicationType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "CrossRegionReplication",
                                  "description": "Cross region replication"
                                },
                                {
                                  "value": "CrossZoneReplication",
                                  "description": "Cross zone replication"
                                }
                              ]
                            }
                          },
                          "region": {
                            "type": "string",
                            "description": "The remote region for the destination volume."
                          },
                          "zone": {
                            "type": "string",
                            "description": "The remote zone for the destination volume."
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "resourceId"
                      ]
                    }
                  }
                },
                "snapshot": {
                  "title": "Snapshot",
                  "description": "Snapshot properties.",
                  "type": "object",
                  "properties": {
                    "snapshotPolicyId": {
                      "type": "string",
                      "description": "Snapshot Policy ResourceId"
                    }
                  }
                },
                "volumeRelocation": {
                  "title": "VolumeRelocation",
                  "description": "VolumeRelocation properties",
                  "type": "object",
                  "properties": {
                    "relocationRequested": {
                      "type": "boolean",
                      "description": "Has relocation been requested for this volume"
                    },
                    "readyToBeFinalized": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Has relocation finished and is ready to be cleaned up"
                    }
                  }
                }
              }
            },
            "acceptGrowCapacityPoolForShortTermCloneSplit": {
              "title": "acceptGrowCapacityPoolForShortTermCloneSplit",
              "type": "string",
              "description": "While auto splitting the short term clone volume, if the parent pool does not have enough space to accommodate the volume after split, it will be automatically resized, which will lead to increased billing. To accept capacity pool size auto grow and create a short term clone volume, set the property as accepted.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "enum": [
                "Accepted",
                "Declined"
              ],
              "x-ms-enum": {
                "name": "acceptGrowCapacityPoolForShortTermCloneSplit",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Accepted",
                    "description": "Auto grow capacity pool for short term clone split is accepted."
                  },
                  {
                    "value": "Declined",
                    "description": "Auto grow capacity pool for short term clone split is declined. Short term clone volume creation will not be allowed, to create short term clone volume accept auto grow capacity pool."
                  }
                ]
              },
              "example": "Accepted"
            },
            "isRestoring": {
              "type": "boolean",
              "description": "Restoring",
              "readOnly": true
            },
            "snapshotDirectoryVisible": {
              "type": "boolean",
              "default": true,
              "description": "If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."
            },
            "kerberosEnabled": {
              "type": "boolean",
              "description": "Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "example": false,
              "default": false
            },
            "securityStyle": {
              "type": "string",
              "description": "The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol",
              "default": "unix",
              "enum": [
                "ntfs",
                "unix"
              ],
              "x-ms-enum": {
                "name": "SecurityStyle",
                "modelAsString": true
              },
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "smbEncryption": {
              "type": "boolean",
              "description": "Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later",
              "example": false,
              "default": false
            },
            "smbAccessBasedEnumeration": {
              "title": "smbAccessBasedEnumeration",
              "type": "string",
              "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "smbAccessBasedEnumeration",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Disabled",
                    "description": "smbAccessBasedEnumeration share setting is disabled"
                  },
                  {
                    "value": "Enabled",
                    "description": "smbAccessBasedEnumeration share setting is enabled"
                  }
                ]
              },
              "x-nullable": true,
              "example": "Enabled"
            },
            "smbNonBrowsable": {
              "title": "smbNonBrowsable",
              "type": "string",
              "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "smbNonBrowsable",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Disabled",
                    "description": "smbNonBrowsable share setting is disabled"
                  },
                  {
                    "value": "Enabled",
                    "description": "smbNonBrowsable share setting is enabled"
                  }
                ]
              },
              "example": "Enabled"
            },
            "smbContinuouslyAvailable": {
              "type": "boolean",
              "description": "Enables continuously available share property for smb volume. Only applicable for SMB volume",
              "example": false,
              "default": false
            },
            "throughputMibps": {
              "title": "Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume",
              "type": "number",
              "x-nullable": true,
              "example": 128.223
            },
            "actualThroughputMibps": {
              "type": "number",
              "description": "Actual throughput in MiB/s for auto qosType volumes calculated based on size and serviceLevel",
              "example": 164.221,
              "readOnly": true
            },
            "encryptionKeySource": {
              "description": "Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'",
              "type": "string",
              "enum": [
                "Microsoft.NetApp",
                "Microsoft.KeyVault"
              ],
              "x-ms-enum": {
                "name": "EncryptionKeySource",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Microsoft.NetApp",
                    "description": "Microsoft-managed key encryption"
                  },
                  {
                    "value": "Microsoft.KeyVault",
                    "description": "Customer-managed key encryption"
                  }
                ]
              },
              "default": "Microsoft.NetApp"
            },
            "keyVaultPrivateEndpointResourceId": {
              "type": "string",
              "description": "The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."
            },
            "ldapEnabled": {
              "type": "boolean",
              "description": "Specifies whether LDAP is enabled or not for a given NFS volume.",
              "example": false,
              "default": false,
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "coolAccess": {
              "type": "boolean",
              "description": "Specifies whether Cool Access(tiering) is enabled for the volume.",
              "example": false,
              "default": false
            },
            "coolnessPeriod": {
              "type": "integer",
              "description": "Specifies the number of days after which data that is not accessed by clients will be tiered.",
              "example": 7,
              "minimum": 2,
              "maximum": 183,
              "format": "int32"
            },
            "coolAccessRetrievalPolicy": {
              "type": "string",
              "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
              "enum": [
                "Default",
                "OnRead",
                "Never"
              ],
              "x-ms-enum": {
                "name": "coolAccessRetrievalPolicy",
                "modelAsString": true
              }
            },
            "coolAccessTieringPolicy": {
              "type": "string",
              "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
              "enum": [
                "Auto",
                "SnapshotOnly"
              ],
              "x-ms-enum": {
                "name": "coolAccessTieringPolicy",
                "modelAsString": true
              }
            },
            "unixPermissions": {
              "type": "string",
              "description": "UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users.",
              "minLength": 4,
              "maxLength": 4,
              "x-nullable": true,
              "example": "0770"
            },
            "cloneProgress": {
              "description": "When a volume is being restored from another volume's snapshot, will show the percentage completion of this cloning process. When this value is empty/null there is no cloning process currently happening on this volume. This value will update every 5 minutes during cloning.",
              "type": "integer",
              "format": "int32",
              "example": 10,
              "x-nullable": true,
              "readOnly": true
            },
            "fileAccessLogs": {
              "type": "string",
              "description": "Flag indicating whether file access logs are enabled for the volume, based on active diagnostic settings present on the volume.",
              "readOnly": true,
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "fileAccessLogs",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "fileAccessLogs are enabled"
                  },
                  {
                    "value": "Disabled",
                    "description": "fileAccessLogs are not enabled"
                  }
                ]
              },
              "example": "Disabled",
              "default": "Disabled"
            },
            "avsDataStore": {
              "title": "avsDataStore",
              "type": "string",
              "description": "Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "avsDataStore",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "avsDataStore is enabled"
                  },
                  {
                    "value": "Disabled",
                    "description": "avsDataStore is disabled"
                  }
                ]
              },
              "example": "Enabled",
              "default": "Disabled",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "dataStoreResourceId": {
              "title": "dataStoreResourceId",
              "description": "Data store resource unique identifier",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "isDefaultQuotaEnabled": {
              "type": "boolean",
              "description": "Specifies if default quota is enabled for the volume.",
              "example": false,
              "default": false
            },
            "defaultUserQuotaInKiBs": {
              "type": "integer",
              "format": "int64",
              "description": "Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies .",
              "example": 4,
              "default": 0
            },
            "defaultGroupQuotaInKiBs": {
              "type": "integer",
              "format": "int64",
              "description": "Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies.",
              "example": 4,
              "default": 0
            },
            "maximumNumberOfFiles": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "description": "Maximum number of files allowed. Needs a service request in order to be changed. Only allowed to be changed if volume quota is more than 4TiB.",
              "example": 100000000
            },
            "volumeGroupName": {
              "type": "string",
              "description": "Volume Group Name",
              "readOnly": true
            },
            "capacityPoolResourceId": {
              "type": "string",
              "description": "Pool Resource Id used in case of creating a volume through volume group"
            },
            "proximityPlacementGroup": {
              "type": "string",
              "description": "Proximity placement group associated with the volume",
              "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.Compute/proximityPlacementGroups/testppg"
            },
            "t2Network": {
              "type": "string",
              "description": "T2 network information",
              "example": "Test-T2-Alias",
              "readOnly": true
            },
            "volumeSpecName": {
              "type": "string",
              "description": "Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log",
              "example": "Data"
            },
            "encrypted": {
              "type": "boolean",
              "description": "Specifies if the volume is encrypted or not. Only available on volumes created or updated after 2022-01-01.",
              "readOnly": true
            },
            "placementRules": {
              "title": "Volume placement rules",
              "description": "Application specific placement rules for the particular volume",
              "type": "array",
              "items": {
                "description": "Application specific parameters for the placement of volumes in the volume group",
                "type": "object",
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "Key for an application specific parameter for the placement of volumes in the volume group",
                    "example": "key1"
                  },
                  "value": {
                    "type": "string",
                    "description": "Value for an application specific parameter for the placement of volumes in the volume group",
                    "example": "value1"
                  }
                }
              },
              "x-ms-identifiers": [
                "key"
              ]
            },
            "enableSubvolumes": {
              "type": "string",
              "description": "Flag indicating whether subvolume operations are enabled on the volume",
              "example": "Enabled",
              "default": "Disabled",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "enableSubvolumes",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "subvolumes are enabled"
                  },
                  {
                    "value": "Disabled",
                    "description": "subvolumes are not enabled"
                  }
                ]
              }
            },
            "provisionedAvailabilityZone": {
              "title": "Provisioned Availability Zone",
              "type": "string",
              "readOnly": true,
              "description": "The availability zone where the volume is provisioned. This refers to the logical availability zone where the volume resides.",
              "example": "2",
              "x-nullable": true
            },
            "isLargeVolume": {
              "title": "Is Large Volume",
              "type": "boolean",
              "description": "Specifies whether volume is a Large Volume or Regular Volume.",
              "example": false,
              "default": false,
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "originatingResourceId": {
              "title": "Originating Resource Id",
              "type": "string",
              "description": "Id of the snapshot or backup that the volume is restored from.",
              "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testGroup/providers/Microsoft.NetApp/netAppAccounts/accountOriginatingResourceId/capacityPools/originatingResourceIdPool/volumes/theOriginalVolume/snapshots/theSnapshot",
              "readOnly": true,
              "x-nullable": true
            },
            "inheritedSizeInBytes": {
              "title": "inheritedSizeInBytes",
              "type": "integer",
              "format": "int64",
              "description": "Space shared by short term clone volume with parent volume in bytes.",
              "readOnly": true,
              "x-nullable": true
            }
          }
        }
      }
    },
    "placementKeyValuePairs": {
      "description": "Application specific parameters for the placement of volumes in the volume group",
      "type": "object",
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string",
          "description": "Key for an application specific parameter for the placement of volumes in the volume group",
          "example": "key1"
        },
        "value": {
          "type": "string",
          "description": "Value for an application specific parameter for the placement of volumes in the volume group",
          "example": "value1"
        }
      }
    },
    "networkSiblingSet": {
      "title": "Network sibling set",
      "description": "Describes the contents of a network sibling set.",
      "type": "object",
      "properties": {
        "networkSiblingSetId": {
          "title": "Network Sibling Set ID",
          "description": "Network Sibling Set ID for a group of volumes sharing networking resources in a subnet.",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "subnetId": {
          "title": "Subnet resource Id",
          "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes. Example /subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/Microsoft.Network/virtualNetworks/testVnet/subnets/{mySubnet}",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "networkSiblingSetStateId": {
          "title": "Network sibling set state Id",
          "description": "Network sibling set state Id identifying the current state of the sibling set.",
          "type": "string",
          "example": "12345_44420.8001578125"
        },
        "networkFeatures": {
          "title": "Network features",
          "description": "Network features available to the volume, or current state of update.",
          "type": "string",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true,
            "values": [
              {
                "value": "Basic",
                "description": "Basic network features."
              },
              {
                "value": "Standard",
                "description": "Standard network features."
              },
              {
                "value": "Basic_Standard",
                "description": "Updating from Basic to Standard network features."
              },
              {
                "value": "Standard_Basic",
                "description": "Updating from Standard to Basic network features."
              }
            ]
          },
          "example": "Standard",
          "default": "Basic"
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the status of the NetworkSiblingSet at the time the operation was called.",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Updating"
          ],
          "x-ms-enum": {
            "name": "NetworkSiblingSetProvisioningState",
            "modelAsString": true
          }
        },
        "nicInfoList": {
          "type": "array",
          "x-ms-identifiers": [],
          "description": "List of NIC information",
          "items": {
            "title": "NIC information",
            "description": "NIC information and list of volumes for which the NIC has the primary mount ip address.",
            "type": "object",
            "properties": {
              "ipAddress": {
                "title": "ipAddress",
                "type": "string",
                "readOnly": true,
                "example": "1.2.3.4"
              },
              "volumeResourceIds": {
                "title": "Volume resource Ids",
                "type": "array",
                "items": {
                  "title": "Resource Id of volume",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "QueryNetworkSiblingSetRequest": {
      "title": "QueryNetworkSiblingSetRequest",
      "description": "Network sibling set query.",
      "type": "object",
      "required": [
        "networkSiblingSetId",
        "subnetId"
      ],
      "properties": {
        "networkSiblingSetId": {
          "title": "Network Sibling Set ID",
          "description": "Network Sibling Set ID for a group of volumes sharing networking resources in a subnet.",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "subnetId": {
          "title": "Subnet resource Id",
          "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes. Example /subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/Microsoft.Network/virtualNetworks/testVnet/subnets/{mySubnet}",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "UpdateNetworkSiblingSetRequest": {
      "title": "UpdateNetworkSiblingSetRequest",
      "description": "Network sibling set update.",
      "type": "object",
      "required": [
        "networkSiblingSetId",
        "subnetId",
        "networkSiblingSetStateId",
        "networkFeatures"
      ],
      "properties": {
        "networkSiblingSetId": {
          "title": "Network Sibling Set ID",
          "description": "Network Sibling Set ID for a group of volumes sharing networking resources in a subnet.",
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "subnetId": {
          "title": "Subnet resource Id",
          "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes. Example /subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/Microsoft.Network/virtualNetworks/testVnet/subnets/{mySubnet}",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          },
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "networkSiblingSetStateId": {
          "title": "Network sibling set state Id",
          "description": "Network sibling set state Id identifying the current state of the sibling set.",
          "type": "string",
          "example": "12345_44420.8001578125"
        },
        "networkFeatures": {
          "title": "Network features",
          "description": "Network features available to the volume, or current state of update.",
          "type": "string",
          "enum": [
            "Basic",
            "Standard",
            "Basic_Standard",
            "Standard_Basic"
          ],
          "x-ms-enum": {
            "name": "NetworkFeatures",
            "modelAsString": true,
            "values": [
              {
                "value": "Basic",
                "description": "Basic network features."
              },
              {
                "value": "Standard",
                "description": "Standard network features."
              },
              {
                "value": "Basic_Standard",
                "description": "Updating from Basic to Standard network features."
              },
              {
                "value": "Standard_Basic",
                "description": "Updating from Standard to Basic network features."
              }
            ]
          },
          "example": "Standard",
          "default": "Basic"
        }
      }
    },
    "networkFeatures": {
      "title": "Network features",
      "description": "Network features available to the volume, or current state of update.",
      "type": "string",
      "enum": [
        "Basic",
        "Standard",
        "Basic_Standard",
        "Standard_Basic"
      ],
      "x-ms-enum": {
        "name": "NetworkFeatures",
        "modelAsString": true,
        "values": [
          {
            "value": "Basic",
            "description": "Basic network features."
          },
          {
            "value": "Standard",
            "description": "Standard network features."
          },
          {
            "value": "Basic_Standard",
            "description": "Updating from Basic to Standard network features."
          },
          {
            "value": "Standard_Basic",
            "description": "Updating from Standard to Basic network features."
          }
        ]
      },
      "example": "Standard",
      "default": "Basic"
    },
    "networkSiblingSetProvisioningState": {
      "readOnly": true,
      "type": "string",
      "description": "Gets the status of the NetworkSiblingSet at the time the operation was called.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "NetworkSiblingSetProvisioningState",
        "modelAsString": true
      }
    },
    "networkSiblingSetId": {
      "title": "Network Sibling Set ID",
      "description": "Network Sibling Set ID for a group of volumes sharing networking resources in a subnet.",
      "type": "string",
      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
      "maxLength": 36,
      "minLength": 36,
      "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
    },
    "networkSiblingSetStateId": {
      "title": "Network sibling set state Id",
      "description": "Network sibling set state Id identifying the current state of the sibling set.",
      "type": "string",
      "example": "12345_44420.8001578125"
    },
    "nicInfo": {
      "title": "NIC information",
      "description": "NIC information and list of volumes for which the NIC has the primary mount ip address.",
      "type": "object",
      "properties": {
        "ipAddress": {
          "title": "ipAddress",
          "type": "string",
          "readOnly": true,
          "example": "1.2.3.4"
        },
        "volumeResourceIds": {
          "title": "Volume resource Ids",
          "type": "array",
          "items": {
            "title": "Resource Id of volume",
            "type": "string",
            "format": "arm-id",
            "x-ms-arm-id-details": {
              "allowedResources": [
                {
                  "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                }
              ]
            }
          }
        }
      }
    },
    "ipAddress": {
      "title": "ipAddress",
      "type": "string",
      "readOnly": true,
      "example": "1.2.3.4"
    },
    "volumeResourceIds": {
      "title": "Volume resource Ids",
      "type": "array",
      "items": {
        "title": "Resource Id of volume",
        "type": "string",
        "format": "arm-id",
        "x-ms-arm-id-details": {
          "allowedResources": [
            {
              "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
            }
          ]
        }
      }
    },
    "subnetId": {
      "title": "Subnet resource Id",
      "description": "The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes. Example /subscriptions/subscriptionId/resourceGroups/resourceGroup/providers/Microsoft.Network/virtualNetworks/testVnet/subnets/{mySubnet}",
      "type": "string",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ]
      },
      "x-ms-mutability": [
        "read",
        "create"
      ]
    },
    "snapshotRestoreFiles": {
      "description": "Restore payload for Single File Snapshot Restore",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "filePaths"
      ],
      "properties": {
        "filePaths": {
          "description": "List of files to be restored",
          "type": "array",
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1
          },
          "example": [
            "/dir1/customer1.db",
            "/dir1/customer2.db"
          ]
        },
        "destinationPath": {
          "description": "Destination folder where the files will be restored",
          "type": "string",
          "example": "/AVSdataStore"
        }
      }
    },
    "subvolumesList": {
      "description": "List of Subvolumes",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of Subvolumes",
          "type": "array",
          "items": {
            "description": "Subvolume Information properties",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Subvolume Properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "path": {
                    "title": "path",
                    "type": "string",
                    "description": "Path to the subvolume",
                    "example": "/subvolume1"
                  },
                  "size": {
                    "title": "size",
                    "type": "integer",
                    "x-nullable": true,
                    "format": "int64",
                    "description": "Truncate subvolume to the provided size in bytes",
                    "example": 5
                  },
                  "parentPath": {
                    "title": "name",
                    "x-nullable": true,
                    "type": "string",
                    "description": "parent path to the subvolume",
                    "example": "/parentPath"
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "Azure lifecycle management",
                    "readOnly": true,
                    "example": "Available"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      }
    },
    "subvolumeInfo": {
      "description": "Subvolume Information properties",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Subvolume Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "path": {
              "title": "path",
              "type": "string",
              "description": "Path to the subvolume",
              "example": "/subvolume1"
            },
            "size": {
              "title": "size",
              "type": "integer",
              "x-nullable": true,
              "format": "int64",
              "description": "Truncate subvolume to the provided size in bytes",
              "example": 5
            },
            "parentPath": {
              "title": "name",
              "x-nullable": true,
              "type": "string",
              "description": "parent path to the subvolume",
              "example": "/parentPath"
            },
            "provisioningState": {
              "type": "string",
              "description": "Azure lifecycle management",
              "readOnly": true,
              "example": "Available"
            }
          }
        }
      }
    },
    "subvolumePatchRequest": {
      "description": "Subvolume Patch Request properties",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "description": "Subvolume Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "size": {
              "title": "size",
              "type": "integer",
              "x-nullable": true,
              "format": "int64",
              "description": "Truncate subvolume to the provided size in bytes",
              "example": 5
            },
            "path": {
              "title": "path",
              "type": "string",
              "description": "path to the subvolume",
              "example": "/pathToSubvolume"
            }
          }
        }
      }
    },
    "subvolumePatchParams": {
      "description": "Parameters with which a subvolume can be updated",
      "type": "object",
      "properties": {
        "size": {
          "title": "size",
          "type": "integer",
          "x-nullable": true,
          "format": "int64",
          "description": "Truncate subvolume to the provided size in bytes",
          "example": 5
        },
        "path": {
          "title": "path",
          "type": "string",
          "description": "path to the subvolume",
          "example": "/pathToSubvolume"
        }
      }
    },
    "subvolumeProperties": {
      "description": "This represents path associated with the subvolume",
      "type": "object",
      "properties": {
        "path": {
          "title": "path",
          "type": "string",
          "description": "Path to the subvolume",
          "example": "/subvolume1"
        },
        "size": {
          "title": "size",
          "type": "integer",
          "x-nullable": true,
          "format": "int64",
          "description": "Truncate subvolume to the provided size in bytes",
          "example": 5
        },
        "parentPath": {
          "title": "name",
          "x-nullable": true,
          "type": "string",
          "description": "parent path to the subvolume",
          "example": "/parentPath"
        },
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management",
          "readOnly": true,
          "example": "Available"
        }
      }
    },
    "subvolumeModel": {
      "description": "Result of the post subvolume and action is to get metadata of the subvolume.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource type"
        },
        "properties": {
          "description": "It represents the minimal properties of the subvolume.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "path": {
              "title": "path",
              "type": "string",
              "description": "Path to the subvolume",
              "example": "/subvolume1"
            },
            "parentPath": {
              "title": "parentpath",
              "type": "string",
              "description": "Path to the parent subvolume",
              "example": "/parentPath"
            },
            "size": {
              "title": "size",
              "type": "integer",
              "format": "int64",
              "description": "Size of subvolume",
              "example": 5
            },
            "bytesUsed": {
              "title": "bytesUsed",
              "type": "integer",
              "format": "int64",
              "description": "Bytes used",
              "example": 5
            },
            "permissions": {
              "title": "permissions",
              "type": "string",
              "description": "Permissions of the subvolume",
              "example": "777"
            },
            "creationTimeStamp": {
              "title": "creationTimeStamp",
              "type": "string",
              "format": "date-time",
              "description": "Creation time and date",
              "example": "2017-08-15T13:23:33Z"
            },
            "accessedTimeStamp": {
              "title": "accessedTimeStamp",
              "type": "string",
              "format": "date-time",
              "description": "Most recent access time and date",
              "example": "2017-08-15T13:23:33Z"
            },
            "modifiedTimeStamp": {
              "title": "modifiedTimeStamp",
              "type": "string",
              "format": "date-time",
              "description": "Most recent modification time and date",
              "example": "2017-08-15T13:23:33Z"
            },
            "changedTimeStamp": {
              "title": "changedTimeStamp",
              "type": "string",
              "format": "date-time",
              "description": "Most recent change time and date",
              "example": "2017-08-15T13:23:33Z"
            },
            "provisioningState": {
              "type": "string",
              "description": "Azure lifecycle management",
              "example": "Available"
            }
          }
        }
      }
    },
    "subvolumeModelProperties": {
      "description": "Properties which represents actual subvolume model which is stored as a file in the system.",
      "type": "object",
      "properties": {
        "path": {
          "title": "path",
          "type": "string",
          "description": "Path to the subvolume",
          "example": "/subvolume1"
        },
        "parentPath": {
          "title": "parentpath",
          "type": "string",
          "description": "Path to the parent subvolume",
          "example": "/parentPath"
        },
        "size": {
          "title": "size",
          "type": "integer",
          "format": "int64",
          "description": "Size of subvolume",
          "example": 5
        },
        "bytesUsed": {
          "title": "bytesUsed",
          "type": "integer",
          "format": "int64",
          "description": "Bytes used",
          "example": 5
        },
        "permissions": {
          "title": "permissions",
          "type": "string",
          "description": "Permissions of the subvolume",
          "example": "777"
        },
        "creationTimeStamp": {
          "title": "creationTimeStamp",
          "type": "string",
          "format": "date-time",
          "description": "Creation time and date",
          "example": "2017-08-15T13:23:33Z"
        },
        "accessedTimeStamp": {
          "title": "accessedTimeStamp",
          "type": "string",
          "format": "date-time",
          "description": "Most recent access time and date",
          "example": "2017-08-15T13:23:33Z"
        },
        "modifiedTimeStamp": {
          "title": "modifiedTimeStamp",
          "type": "string",
          "format": "date-time",
          "description": "Most recent modification time and date",
          "example": "2017-08-15T13:23:33Z"
        },
        "changedTimeStamp": {
          "title": "changedTimeStamp",
          "type": "string",
          "format": "date-time",
          "description": "Most recent change time and date",
          "example": "2017-08-15T13:23:33Z"
        },
        "provisioningState": {
          "type": "string",
          "description": "Azure lifecycle management",
          "example": "Available"
        }
      }
    },
    "netappProvisioningState": {
      "readOnly": true,
      "type": "string",
      "description": "Gets the status of the VolumeQuotaRule at the time the operation was called.",
      "enum": [
        "Accepted",
        "Creating",
        "Patching",
        "Deleting",
        "Moving",
        "Failed",
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": false
      }
    },
    "encryptionTransitionRequest": {
      "description": "Encryption transition request",
      "type": "object",
      "required": [
        "virtualNetworkId",
        "privateEndpointId"
      ],
      "properties": {
        "virtualNetworkId": {
          "title": "virtualNetworkId",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks"
              }
            ]
          },
          "description": "Identifier for the virtual network",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/virtualNetworks/vnet1"
        },
        "privateEndpointId": {
          "title": "privateEndpointId",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/privateEndpoints"
              }
            ]
          },
          "description": "Identifier of the private endpoint to reach the Azure Key Vault",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/privateEndpoints/privateIP1"
        }
      }
    },
    "coolAccessRetrievalPolicy": {
      "type": "string",
      "description": "coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are: \n Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.\n OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.\n Never - No client-driven data is pulled from cool tier to standard storage.",
      "enum": [
        "Default",
        "OnRead",
        "Never"
      ],
      "x-ms-enum": {
        "name": "coolAccessRetrievalPolicy",
        "modelAsString": true
      }
    },
    "coolAccessTieringPolicy": {
      "type": "string",
      "description": "coolAccessTieringPolicy determines which cold data blocks are moved to cool tier. The possible values for this field are: Auto - Moves cold user data blocks in both the Snapshot copies and the active file system to the cool tier tier. This policy is the default. SnapshotOnly - Moves user data blocks of the Volume Snapshot copies that are not associated with the active file system to the cool tier.",
      "enum": [
        "Auto",
        "SnapshotOnly"
      ],
      "x-ms-enum": {
        "name": "coolAccessTieringPolicy",
        "modelAsString": true
      }
    },
    "clusterPeerCommandResponse": {
      "description": "Information about cluster peering process",
      "type": "object",
      "properties": {
        "peerAcceptCommand": {
          "description": "A command that needs to be run on the external ONTAP to accept cluster peering.  Will only be present if <code>clusterPeeringStatus</code> is <code>pending</code>",
          "type": "string"
        }
      }
    },
    "svmPeerCommandResponse": {
      "description": "Information about svm peering process",
      "type": "object",
      "properties": {
        "svmPeeringCommand": {
          "description": "A command that needs to be run on the external ONTAP to accept svm peering.  Will only be present if <code>svmPeeringStatus</code> is <code>pending</code>",
          "type": "string"
        }
      }
    },
    "peerClusterForVolumeMigrationRequest": {
      "description": "Source Cluster properties for a cluster peer request",
      "type": "object",
      "required": [
        "peerIpAddresses"
      ],
      "properties": {
        "peerIpAddresses": {
          "type": "array",
          "minItems": 1,
          "description": "A list of IC-LIF IPs that can be used to connect to the On-prem cluster",
          "example": [
            "0.0.0.1",
            "0.0.0.2",
            "0.0.0.3",
            "0.0.0.4",
            "0.0.0.5",
            "0.0.0.6"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "smbAccessBasedEnumeration": {
      "title": "smbAccessBasedEnumeration",
      "type": "string",
      "description": "Enables access-based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "smbAccessBasedEnumeration",
        "modelAsString": true,
        "values": [
          {
            "value": "Disabled",
            "description": "smbAccessBasedEnumeration share setting is disabled"
          },
          {
            "value": "Enabled",
            "description": "smbAccessBasedEnumeration share setting is enabled"
          }
        ]
      },
      "x-nullable": true,
      "example": "Enabled"
    },
    "smbNonBrowsable": {
      "title": "smbNonBrowsable",
      "type": "string",
      "description": "Enables non-browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "smbNonBrowsable",
        "modelAsString": true,
        "values": [
          {
            "value": "Disabled",
            "description": "smbNonBrowsable share setting is disabled"
          },
          {
            "value": "Enabled",
            "description": "smbNonBrowsable share setting is enabled"
          }
        ]
      },
      "example": "Enabled"
    },
    "multiAdStatus": {
      "title": "multiAdStatus",
      "type": "string",
      "readOnly": true,
      "description": "MultiAD Status for the account",
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "x-ms-enum": {
        "name": "multiAdStatus",
        "modelAsString": true,
        "values": [
          {
            "value": "Disabled",
            "description": "Account is MultiAD disabled, Means its a SharedAD or SingleAD account."
          },
          {
            "value": "Enabled",
            "description": "Account is MultiAD enabled"
          }
        ]
      },
      "example": "Enabled"
    },
    "backupRestoreFiles": {
      "description": "Restore payload for Single File Backup Restore",
      "type": "object",
      "required": [
        "fileList",
        "destinationVolumeId"
      ],
      "properties": {
        "fileList": {
          "description": "List of files to be restored",
          "type": "array",
          "minItems": 1,
          "maxItems": 8,
          "items": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1
          },
          "example": [
            "/dir1/customer1.db",
            "/dir1/customer2.db"
          ]
        },
        "restoreFilePath": {
          "description": "Destination folder where the files will be restored. The path name should start with a forward slash. If it is omitted from request then restore is done at the root folder of the destination volume by default",
          "type": "string",
          "pattern": "^\\/.*$",
          "example": "/AVSdataStore"
        },
        "destinationVolumeId": {
          "description": "Resource Id of the destination volume on which the files need to be restored",
          "type": "string",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1"
        }
      }
    },
    "volumeBackupProperties": {
      "description": "Volume Backup Properties",
      "type": "object",
      "properties": {
        "backupPolicyId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
              }
            ]
          },
          "description": "Backup Policy Resource ID"
        },
        "policyEnforced": {
          "type": "boolean",
          "description": "Policy Enforced"
        },
        "backupVaultId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
              }
            ]
          },
          "description": "Backup Vault Resource ID"
        }
      }
    },
    "backupsList": {
      "description": "List of Backups",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of Backups",
          "type": "array",
          "items": {
            "description": "Backup under a Backup Vault",
            "type": "object",
            "required": [
              "properties"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Backup Properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "required": [
                  "volumeResourceId"
                ],
                "properties": {
                  "backupId": {
                    "title": "backupId",
                    "type": "string",
                    "readOnly": true,
                    "description": "UUID v4 used to identify the Backup",
                    "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
                  },
                  "creationDate": {
                    "title": "creationDate",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The creation date of the backup",
                    "example": "2017-08-15 13:23:33"
                  },
                  "snapshotCreationDate": {
                    "title": "snapshotCreationDate",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "description": "The snapshot creation date of the backup",
                    "example": "2018-11-29T20:32:50.459Z",
                    "x-nullable": true
                  },
                  "completionDate": {
                    "title": "completionDate",
                    "type": "string",
                    "format": "date-time",
                    "description": "The completion date of the backup",
                    "example": "2018-11-29T20:32:50.459Z",
                    "readOnly": true,
                    "x-nullable": true
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Azure lifecycle management"
                  },
                  "size": {
                    "type": "integer",
                    "readOnly": true,
                    "description": "Size of backup in bytes",
                    "format": "int64"
                  },
                  "label": {
                    "type": "string",
                    "description": "Label for backup"
                  },
                  "backupType": {
                    "title": "backupType",
                    "type": "string",
                    "readOnly": true,
                    "description": "Type of backup Manual or Scheduled",
                    "enum": [
                      "Manual",
                      "Scheduled"
                    ],
                    "x-ms-enum": {
                      "name": "backupType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Manual",
                          "description": "Manual backup"
                        },
                        {
                          "value": "Scheduled",
                          "description": "Scheduled backup"
                        }
                      ]
                    },
                    "example": "Manual"
                  },
                  "failureReason": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Failure reason"
                  },
                  "volumeResourceId": {
                    "type": "string",
                    "description": "ResourceId used to identify the Volume",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                        }
                      ]
                    }
                  },
                  "useExistingSnapshot": {
                    "type": "boolean",
                    "description": "Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups",
                    "example": true,
                    "default": false,
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "snapshotName": {
                    "type": "string",
                    "description": "The name of the snapshot",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ]
                  },
                  "backupPolicyResourceId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "ResourceId used to identify the backup policy",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                        }
                      ]
                    }
                  },
                  "isLargeVolume": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Specifies if the backup is for a large volume.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      }
    },
    "backup": {
      "description": "Backup under a Backup Vault",
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Backup Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "required": [
            "volumeResourceId"
          ],
          "properties": {
            "backupId": {
              "title": "backupId",
              "type": "string",
              "readOnly": true,
              "description": "UUID v4 used to identify the Backup",
              "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
              "maxLength": 36,
              "minLength": 36,
              "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
            },
            "creationDate": {
              "title": "creationDate",
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The creation date of the backup",
              "example": "2017-08-15 13:23:33"
            },
            "snapshotCreationDate": {
              "title": "snapshotCreationDate",
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "description": "The snapshot creation date of the backup",
              "example": "2018-11-29T20:32:50.459Z",
              "x-nullable": true
            },
            "completionDate": {
              "title": "completionDate",
              "type": "string",
              "format": "date-time",
              "description": "The completion date of the backup",
              "example": "2018-11-29T20:32:50.459Z",
              "readOnly": true,
              "x-nullable": true
            },
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Azure lifecycle management"
            },
            "size": {
              "type": "integer",
              "readOnly": true,
              "description": "Size of backup in bytes",
              "format": "int64"
            },
            "label": {
              "type": "string",
              "description": "Label for backup"
            },
            "backupType": {
              "title": "backupType",
              "type": "string",
              "readOnly": true,
              "description": "Type of backup Manual or Scheduled",
              "enum": [
                "Manual",
                "Scheduled"
              ],
              "x-ms-enum": {
                "name": "backupType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Manual",
                    "description": "Manual backup"
                  },
                  {
                    "value": "Scheduled",
                    "description": "Scheduled backup"
                  }
                ]
              },
              "example": "Manual"
            },
            "failureReason": {
              "type": "string",
              "readOnly": true,
              "description": "Failure reason"
            },
            "volumeResourceId": {
              "type": "string",
              "description": "ResourceId used to identify the Volume",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
                  }
                ]
              }
            },
            "useExistingSnapshot": {
              "type": "boolean",
              "description": "Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups",
              "example": true,
              "default": false,
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "snapshotName": {
              "type": "string",
              "description": "The name of the snapshot",
              "x-ms-mutability": [
                "read",
                "create"
              ]
            },
            "backupPolicyResourceId": {
              "type": "string",
              "readOnly": true,
              "description": "ResourceId used to identify the backup policy",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
                  }
                ]
              }
            },
            "isLargeVolume": {
              "type": "boolean",
              "readOnly": true,
              "description": "Specifies if the backup is for a large volume.",
              "example": false
            }
          }
        }
      }
    },
    "backupPatch": {
      "description": "Backup patch",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Backup Patch Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "label": {
              "type": "string",
              "description": "Label for backup"
            }
          }
        }
      }
    },
    "backupProperties": {
      "description": "Backup properties",
      "type": "object",
      "required": [
        "volumeResourceId"
      ],
      "properties": {
        "backupId": {
          "title": "backupId",
          "type": "string",
          "readOnly": true,
          "description": "UUID v4 used to identify the Backup",
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "minLength": 36,
          "example": "9760acf5-4638-11e7-9bdb-020073ca3333"
        },
        "creationDate": {
          "title": "creationDate",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The creation date of the backup",
          "example": "2017-08-15 13:23:33"
        },
        "snapshotCreationDate": {
          "title": "snapshotCreationDate",
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The snapshot creation date of the backup",
          "example": "2018-11-29T20:32:50.459Z",
          "x-nullable": true
        },
        "completionDate": {
          "title": "completionDate",
          "type": "string",
          "format": "date-time",
          "description": "The completion date of the backup",
          "example": "2018-11-29T20:32:50.459Z",
          "readOnly": true,
          "x-nullable": true
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        },
        "size": {
          "type": "integer",
          "readOnly": true,
          "description": "Size of backup in bytes",
          "format": "int64"
        },
        "label": {
          "type": "string",
          "description": "Label for backup"
        },
        "backupType": {
          "title": "backupType",
          "type": "string",
          "readOnly": true,
          "description": "Type of backup Manual or Scheduled",
          "enum": [
            "Manual",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "backupType",
            "modelAsString": true,
            "values": [
              {
                "value": "Manual",
                "description": "Manual backup"
              },
              {
                "value": "Scheduled",
                "description": "Scheduled backup"
              }
            ]
          },
          "example": "Manual"
        },
        "failureReason": {
          "type": "string",
          "readOnly": true,
          "description": "Failure reason"
        },
        "volumeResourceId": {
          "type": "string",
          "description": "ResourceId used to identify the Volume",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/capacityPools/volumes"
              }
            ]
          }
        },
        "useExistingSnapshot": {
          "type": "boolean",
          "description": "Manual backup an already existing snapshot. This will always be false for scheduled backups and true/false for manual backups",
          "example": true,
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "snapshotName": {
          "type": "string",
          "description": "The name of the snapshot",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "backupPolicyResourceId": {
          "type": "string",
          "readOnly": true,
          "description": "ResourceId used to identify the backup policy",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupPolicies"
              }
            ]
          }
        },
        "isLargeVolume": {
          "type": "boolean",
          "readOnly": true,
          "description": "Specifies if the backup is for a large volume.",
          "example": false
        }
      }
    },
    "backupPatchProperties": {
      "description": "Backup patch properties",
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label for backup"
        }
      }
    },
    "backupStatus": {
      "description": "Backup status",
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean",
          "readOnly": true,
          "description": "Backup health status"
        },
        "relationshipStatus": {
          "type": "string",
          "readOnly": true,
          "description": "Status of the backup mirror relationship",
          "enum": [
            "Idle",
            "Transferring",
            "Failed",
            "Unknown"
          ],
          "x-ms-enum": {
            "name": "RelationshipStatus",
            "modelAsString": true
          }
        },
        "mirrorState": {
          "type": "string",
          "readOnly": true,
          "description": "The status of the backup",
          "enum": [
            "Uninitialized",
            "Mirrored",
            "Broken"
          ],
          "x-ms-enum": {
            "name": "MirrorState",
            "modelAsString": true
          }
        },
        "unhealthyReason": {
          "type": "string",
          "readOnly": true,
          "description": "Reason for the unhealthy backup relationship"
        },
        "errorMessage": {
          "type": "string",
          "readOnly": true,
          "description": "Displays error message if the backup is in an error state"
        },
        "lastTransferSize": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Displays the last transfer size"
        },
        "lastTransferType": {
          "type": "string",
          "readOnly": true,
          "description": "Displays the last transfer type"
        },
        "totalTransferBytes": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Displays the total bytes transferred"
        },
        "transferProgressBytes": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Displays the total number of bytes transferred for the ongoing operation"
        }
      }
    },
    "backupVaultsList": {
      "description": "List of Backup Vaults",
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of Backup Vaults",
          "type": "array",
          "items": {
            "description": "Backup Vault information",
            "type": "object",
            "x-ms-azure-resource": true,
            "required": [
              "location"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "Backup Vault Properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Azure lifecycle management"
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of results."
        }
      }
    },
    "backupVault": {
      "description": "Backup Vault information",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "location"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "Backup Vault Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "Azure lifecycle management"
            }
          }
        }
      }
    },
    "backupVaultPatch": {
      "description": "Backup Vault information",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "tags": {
          "description": "Resource tags",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "backupVaultProperties": {
      "description": "Backup Vault properties",
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Azure lifecycle management"
        }
      }
    },
    "backupsMigrationRequest": {
      "description": "Migrate Backups Request",
      "type": "object",
      "x-ms-azure-resource": true,
      "required": [
        "backupVaultId"
      ],
      "properties": {
        "backupVaultId": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.NetApp/netAppAccounts/backupVaults"
              }
            ]
          },
          "description": "The ResourceId of the Backup Vault",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.NetApp/netAppAccounts/account1/backupVaults/backupVault1"
        }
      }
    },
    "changeKeyVault": {
      "description": "Change key vault request",
      "type": "object",
      "required": [
        "keyVaultUri",
        "keyName",
        "keyVaultPrivateEndpoints"
      ],
      "properties": {
        "keyVaultUri": {
          "title": "keyVaultUri",
          "format": "uri",
          "description": "The URI of the key vault/managed HSM that should be used for encryption.",
          "type": "string",
          "example": "https://my-key-vault.managedhsm.azure.net"
        },
        "keyName": {
          "title": "keyName",
          "description": "The name of the key that should be used for encryption.",
          "type": "string",
          "example": "rsaKeyName"
        },
        "keyVaultResourceId": {
          "title": "keyVaultResourceId",
          "description": "Azure resource ID of the key vault/managed HSM that should be used for encryption.",
          "type": "string",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.KeyVault/managedHSMs/my-hsm",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.KeyVault/vaults"
              }
            ]
          }
        },
        "keyVaultPrivateEndpoints": {
          "title": "keyVaultPrivateEndpoints",
          "description": "Pairs of virtual network ID and private endpoint ID. Every virtual network that has volumes encrypted with customer-managed keys needs its own key vault private endpoint.",
          "type": "array",
          "items": {
            "title": "keyVaultPrivateEndpoint",
            "description": "Pairs of virtual network ID and private endpoint ID. Every virtual network that has volumes encrypted with customer-managed keys needs its own key vault private endpoint.",
            "type": "object",
            "properties": {
              "virtualNetworkId": {
                "title": "virtualNetworkId",
                "type": "string",
                "description": "Identifier for the virtual network id",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks"
                    }
                  ]
                },
                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/virtualNetworks/vnet1"
              },
              "privateEndpointId": {
                "title": "privateEndpointId",
                "type": "string",
                "description": "Identifier of the private endpoint to reach the Azure Key Vault",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints"
                    }
                  ]
                },
                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/privateEndpoints/privateIP1"
              }
            }
          },
          "x-ms-identifiers": [
            "virtualNetworkId"
          ]
        }
      }
    },
    "getKeyVaultStatusResponse": {
      "description": "Result of getKeyVaultStatus with information about how volumes under NetApp account are encrypted.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Represents the properties of the getKeyVaultStatus.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "keyVaultUri": {
              "title": "keyVaultUri",
              "description": "The URI of the key vault/managed HSM that should be used for encryption.",
              "format": "uri",
              "type": "string",
              "example": "https://my-key-vault.managedhsm.azure.net"
            },
            "keyName": {
              "title": "keyName",
              "description": "The name of the key that should be used for encryption.",
              "type": "string",
              "example": "rsaKeyName"
            },
            "keyVaultResourceId": {
              "title": "keyVaultResourceId",
              "description": "Azure resource ID of the key vault/managed HSM that should be used for encryption.",
              "type": "string",
              "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.KeyVault/managedHSMs/my-hsm",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.KeyVault/vaults"
                  }
                ]
              }
            },
            "keyVaultPrivateEndpoints": {
              "title": "keyVaultPrivateEndpoints",
              "description": "Pairs of virtual network ID and private endpoint ID. Every virtual network that has volumes encrypted with customer-managed keys needs its own key vault private endpoint.",
              "type": "array",
              "items": {
                "title": "keyVaultPrivateEndpoint",
                "description": "Pairs of virtual network ID and private endpoint ID. Every virtual network that has volumes encrypted with customer-managed keys needs its own key vault private endpoint.",
                "type": "object",
                "properties": {
                  "virtualNetworkId": {
                    "title": "virtualNetworkId",
                    "type": "string",
                    "description": "Identifier for the virtual network id",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/virtualNetworks"
                        }
                      ]
                    },
                    "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/virtualNetworks/vnet1"
                  },
                  "privateEndpointId": {
                    "title": "privateEndpointId",
                    "type": "string",
                    "description": "Identifier of the private endpoint to reach the Azure Key Vault",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/privateEndpoints"
                        }
                      ]
                    },
                    "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/privateEndpoints/privateIP1"
                  }
                }
              },
              "x-ms-identifiers": [
                "virtualNetworkId"
              ]
            }
          }
        }
      }
    },
    "getKeyVaultStatusResponseProperties": {
      "description": "Properties which represents Change key vault status.",
      "type": "object",
      "properties": {
        "keyVaultUri": {
          "title": "keyVaultUri",
          "description": "The URI of the key vault/managed HSM that should be used for encryption.",
          "format": "uri",
          "type": "string",
          "example": "https://my-key-vault.managedhsm.azure.net"
        },
        "keyName": {
          "title": "keyName",
          "description": "The name of the key that should be used for encryption.",
          "type": "string",
          "example": "rsaKeyName"
        },
        "keyVaultResourceId": {
          "title": "keyVaultResourceId",
          "description": "Azure resource ID of the key vault/managed HSM that should be used for encryption.",
          "type": "string",
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.KeyVault/managedHSMs/my-hsm",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.KeyVault/vaults"
              }
            ]
          }
        },
        "keyVaultPrivateEndpoints": {
          "title": "keyVaultPrivateEndpoints",
          "description": "Pairs of virtual network ID and private endpoint ID. Every virtual network that has volumes encrypted with customer-managed keys needs its own key vault private endpoint.",
          "type": "array",
          "items": {
            "title": "keyVaultPrivateEndpoint",
            "description": "Pairs of virtual network ID and private endpoint ID. Every virtual network that has volumes encrypted with customer-managed keys needs its own key vault private endpoint.",
            "type": "object",
            "properties": {
              "virtualNetworkId": {
                "title": "virtualNetworkId",
                "type": "string",
                "description": "Identifier for the virtual network id",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks"
                    }
                  ]
                },
                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/virtualNetworks/vnet1"
              },
              "privateEndpointId": {
                "title": "privateEndpointId",
                "type": "string",
                "description": "Identifier of the private endpoint to reach the Azure Key Vault",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Network/privateEndpoints"
                    }
                  ]
                },
                "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/privateEndpoints/privateIP1"
              }
            }
          },
          "x-ms-identifiers": [
            "virtualNetworkId"
          ]
        }
      }
    },
    "keyVaultPrivateEndpoint": {
      "title": "keyVaultPrivateEndpoint",
      "description": "Pairs of virtual network ID and private endpoint ID. Every virtual network that has volumes encrypted with customer-managed keys needs its own key vault private endpoint.",
      "type": "object",
      "properties": {
        "virtualNetworkId": {
          "title": "virtualNetworkId",
          "type": "string",
          "description": "Identifier for the virtual network id",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks"
              }
            ]
          },
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/virtualNetworks/vnet1"
        },
        "privateEndpointId": {
          "title": "privateEndpointId",
          "type": "string",
          "description": "Identifier of the private endpoint to reach the Azure Key Vault",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/privateEndpoints"
              }
            ]
          },
          "example": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myRG/providers/Microsoft.Network/privateEndpoints/privateIP1"
        }
      }
    }
  },
  "parameters": {
    "AccountName": {
      "name": "accountName",
      "type": "string",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,127}$",
      "in": "path",
      "required": true,
      "description": "The name of the NetApp account",
      "x-ms-parameter-location": "method"
    },
    "PoolName": {
      "name": "poolName",
      "type": "string",
      "in": "path",
      "required": true,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
      "minLength": 1,
      "maxLength": 64,
      "description": "The name of the capacity pool",
      "x-ms-parameter-location": "method"
    },
    "VolumeName": {
      "name": "volumeName",
      "type": "string",
      "in": "path",
      "required": true,
      "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
      "minLength": 1,
      "maxLength": 64,
      "description": "The name of the volume",
      "x-ms-parameter-location": "method"
    },
    "MountTargetName": {
      "name": "mountTargetName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "The name of the mount target",
      "x-ms-parameter-location": "method"
    },
    "SnapshotName": {
      "name": "snapshotName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "The name of the snapshot",
      "x-ms-parameter-location": "method"
    },
    "SnapshotPolicyName": {
      "name": "snapshotPolicyName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "The name of the snapshot policy",
      "x-ms-parameter-location": "method"
    },
    "BackupPolicyName": {
      "name": "backupPolicyName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Backup policy Name which uniquely identify backup policy.",
      "x-ms-parameter-location": "method"
    },
    "QuotaLimitName": {
      "name": "quotaLimitName",
      "type": "string",
      "in": "path",
      "required": true,
      "pattern": "^[a-zA-Z][a-zA-Z0-9\\-]{0,62}$",
      "description": "The name of the Quota Limit",
      "x-ms-parameter-location": "method"
    },
    "UsageType": {
      "name": "usageType",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "The type of usage",
      "x-ms-parameter-location": "method"
    },
    "VolumeGroupName": {
      "name": "volumeGroupName",
      "type": "string",
      "in": "path",
      "required": true,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
      "minLength": 1,
      "maxLength": 64,
      "description": "The name of the volumeGroup",
      "x-ms-parameter-location": "method"
    },
    "SubvolumeName": {
      "name": "subvolumeName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the subvolume.",
      "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_]{0,63}$",
      "minLength": 1,
      "maxLength": 64,
      "x-ms-parameter-location": "method"
    },
    "VolumeQuotaRuleName": {
      "name": "volumeQuotaRuleName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "The name of volume quota rule",
      "x-ms-parameter-location": "method"
    },
    "BackupName": {
      "name": "backupName",
      "type": "string",
      "in": "path",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_.]{0,255}$",
      "required": true,
      "description": "The name of the backup",
      "x-ms-parameter-location": "method"
    },
    "BackupVaultName": {
      "name": "backupVaultName",
      "in": "path",
      "required": true,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,63}$",
      "type": "string",
      "description": "The name of the Backup Vault",
      "x-ms-parameter-location": "method"
    }
  }
}